// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;

namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2375___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2375___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2375___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2375___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2375___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2375___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2376___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2376___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2376___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2376___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2376___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2376___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeName(Dafny.ISequence<Dafny.Rune> n) {
      return DCOMP.__default.escapeIdent((n));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2377_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2377_r);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> AddAssignedPrefix(Dafny.ISequence<Dafny.Rune> rustName) {
      if (((new BigInteger((rustName).Count)) >= (new BigInteger(2))) && (((rustName).Subsequence(BigInteger.Zero, new BigInteger(2))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#")))) {
        return Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, (rustName).Drop(new BigInteger(2)));
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_")), rustName);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static Dafny.ISequence<Dafny.Rune> ASSIGNED__PREFIX { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_set");
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
    public static DAST._IAttribute AttributeOwned { get {
      return DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("owned"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipOwnedBox { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipOwnedBox() {
      return new Ownership_OwnershipOwnedBox();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipOwnedBox { get { return this is Ownership_OwnershipOwnedBox; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipOwnedBox();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipOwnedBox : Ownership {
    public Ownership_OwnershipOwnedBox() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwnedBox();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwnedBox;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwnedBox";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool CanReadWithoutClone(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
    DCOMP._IEnvironment RemoveAssigned(Dafny.ISequence<Dafny.Rune> name);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _i_names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _i_types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._i_names = names;
      this._i_types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_i_names, _i_types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._i_names, oth._i_names) && object.Equals(this._i_types, oth._i_types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._i_names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._i_types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._i_names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._i_types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool CanReadWithoutClone(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).CanReadWithoutClone());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).CanReadWithoutClone(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
    public DCOMP._IEnvironment RemoveAssigned(Dafny.ISequence<Dafny.Rune> name) {
      BigInteger _2378_indexInEnv = Std.Collections.Seq.__default.IndexOf<Dafny.ISequence<Dafny.Rune>>((this).dtor_names, name);
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(((this).dtor_names).Subsequence(BigInteger.Zero, _2378_indexInEnv), ((this).dtor_names).Drop((_2378_indexInEnv) + (BigInteger.One))), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Subtract((this).dtor_types, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(name)));
    }
  }

  public interface _IObjectType {
    bool is_RawPointers { get; }
    bool is_RcMut { get; }
    _IObjectType DowncastClone();
  }
  public abstract class ObjectType : _IObjectType {
    public ObjectType() {
    }
    private static readonly DCOMP._IObjectType theDefault = create_RawPointers();
    public static DCOMP._IObjectType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IObjectType> _TYPE = new Dafny.TypeDescriptor<DCOMP._IObjectType>(DCOMP.ObjectType.Default());
    public static Dafny.TypeDescriptor<DCOMP._IObjectType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IObjectType create_RawPointers() {
      return new ObjectType_RawPointers();
    }
    public static _IObjectType create_RcMut() {
      return new ObjectType_RcMut();
    }
    public bool is_RawPointers { get { return this is ObjectType_RawPointers; } }
    public bool is_RcMut { get { return this is ObjectType_RcMut; } }
    public static System.Collections.Generic.IEnumerable<_IObjectType> AllSingletonConstructors {
      get {
        yield return ObjectType.create_RawPointers();
        yield return ObjectType.create_RcMut();
      }
    }
    public abstract _IObjectType DowncastClone();
  }
  public class ObjectType_RawPointers : ObjectType {
    public ObjectType_RawPointers() : base() {
    }
    public override _IObjectType DowncastClone() {
      if (this is _IObjectType dt) { return dt; }
      return new ObjectType_RawPointers();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.ObjectType_RawPointers;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.ObjectType.RawPointers";
      return s;
    }
  }
  public class ObjectType_RcMut : ObjectType {
    public ObjectType_RcMut() : base() {
    }
    public override _IObjectType DowncastClone() {
      if (this is _IObjectType dt) { return dt; }
      return new ObjectType_RcMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.ObjectType_RcMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.ObjectType.RcMut";
      return s;
    }
  }

  public partial class COMP {
    public COMP() {
      this.error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.Default();
      this._i_UnicodeChars = false;
      this._i_ObjectType = DCOMP.ObjectType.Default();
    }
    public RAST._IType Object(RAST._IType underlying) {
      if (((this).ObjectType).is_RawPointers) {
        return RAST.Type.create_PointerMut(underlying);
      } else {
        return RAST.__default.ObjectType(underlying);
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> error {get; set;}
    public void __ctor(bool unicodeChars, DCOMP._IObjectType objectType)
    {
      (this)._i_UnicodeChars = unicodeChars;
      (this)._i_ObjectType = objectType;
      (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
    }
    public RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<Dafny.Rune> _2379_modName;
      _2379_modName = DCOMP.__default.escapeName((mod).dtor_name);
      if (((mod).dtor_body).is_None) {
        s = RAST.Mod.create_ExternMod(_2379_modName);
      } else {
        Dafny.ISequence<RAST._IModDecl> _2380_body;
        Dafny.ISequence<RAST._IModDecl> _out15;
        _out15 = (this).GenModuleBody(((mod).dtor_body).dtor_value, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
        _2380_body = _out15;
        s = RAST.Mod.create_Mod(_2379_modName, _2380_body);
      }
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      BigInteger _hi5 = new BigInteger((body).Count);
      for (BigInteger _2381_i = BigInteger.Zero; _2381_i < _hi5; _2381_i++) {
        Dafny.ISequence<RAST._IModDecl> _2382_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source78 = (body).Select(_2381_i);
        if (_source78.is_Module) {
          DAST._IModule _2383___mcc_h0 = _source78.dtor_Module_i_a0;
          DAST._IModule _2384_m = _2383___mcc_h0;
          RAST._IMod _2385_mm;
          RAST._IMod _out16;
          _out16 = (this).GenModule(_2384_m, containingPath);
          _2385_mm = _out16;
          _2382_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2385_mm));
        } else if (_source78.is_Class) {
          DAST._IClass _2386___mcc_h1 = _source78.dtor_Class_i_a0;
          DAST._IClass _2387_c = _2386___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = (this).GenClass(_2387_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2387_c).dtor_name)));
          _2382_generated = _out17;
        } else if (_source78.is_Trait) {
          DAST._ITrait _2388___mcc_h2 = _source78.dtor_Trait_i_a0;
          DAST._ITrait _2389_t = _2388___mcc_h2;
          Dafny.ISequence<Dafny.Rune> _2390_tt;
          Dafny.ISequence<Dafny.Rune> _out18;
          _out18 = (this).GenTrait(_2389_t, containingPath);
          _2390_tt = _out18;
          _2382_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_RawDecl(_2390_tt));
        } else if (_source78.is_Newtype) {
          DAST._INewtype _2391___mcc_h3 = _source78.dtor_Newtype_i_a0;
          DAST._INewtype _2392_n = _2391___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = (this).GenNewtype(_2392_n);
          _2382_generated = _out19;
        } else if (_source78.is_SynonymType) {
          DAST._ISynonymType _2393___mcc_h4 = _source78.dtor_SynonymType_i_a0;
          DAST._ISynonymType _2394_s = _2393___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = (this).GenSynonymType(_2394_s);
          _2382_generated = _out20;
        } else {
          DAST._IDatatype _2395___mcc_h5 = _source78.dtor_Datatype_i_a0;
          DAST._IDatatype _2396_d = _2395___mcc_h5;
          Dafny.ISequence<RAST._IModDecl> _out21;
          _out21 = (this).GenDatatype(_2396_d);
          _2382_generated = _out21;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2382_generated);
      }
      return s;
    }
    public void GenTypeParam(DAST._ITypeArgDecl tp, out DAST._IType typeArg, out RAST._ITypeParamDecl typeParam)
    {
      typeArg = DAST.Type.Default();
      typeParam = RAST.TypeParamDecl.Default();
      typeArg = DAST.Type.create_TypeArg((tp).dtor_name);
      Dafny.ISequence<RAST._IType> _2397_genTpConstraint;
      _2397_genTpConstraint = ((((tp).dtor_bounds).Contains(DAST.TypeArgBound.create_SupportsEquality())) ? (Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DafnyTypeEq)) : (Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DafnyType)));
      if (((tp).dtor_bounds).Contains(DAST.TypeArgBound.create_SupportsDefault())) {
        _2397_genTpConstraint = Dafny.Sequence<RAST._IType>.Concat(_2397_genTpConstraint, Dafny.Sequence<RAST._IType>.FromElements(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))));
      }
      typeParam = RAST.TypeParamDecl.create(DCOMP.__default.escapeName(((tp).dtor_name)), _2397_genTpConstraint);
    }
    public void GenTypeParameters(Dafny.ISequence<DAST._ITypeArgDecl> @params, out Dafny.ISet<DAST._IType> typeParamsSet, out Dafny.ISequence<RAST._IType> typeParams, out Dafny.ISequence<RAST._ITypeParamDecl> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSet = Dafny.Set<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._IType>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      if ((new BigInteger((@params).Count)).Sign == 1) {
        BigInteger _hi6 = new BigInteger((@params).Count);
        for (BigInteger _2398_tpI = BigInteger.Zero; _2398_tpI < _hi6; _2398_tpI++) {
          DAST._ITypeArgDecl _2399_tp;
          _2399_tp = (@params).Select(_2398_tpI);
          DAST._IType _2400_typeArg;
          RAST._ITypeParamDecl _2401_typeParam;
          DAST._IType _out22;
          RAST._ITypeParamDecl _out23;
          (this).GenTypeParam(_2399_tp, out _out22, out _out23);
          _2400_typeArg = _out22;
          _2401_typeParam = _out23;
          RAST._IType _2402_rType;
          RAST._IType _out24;
          _out24 = (this).GenType(_2400_typeArg, false, false);
          _2402_rType = _out24;
          typeParamsSet = Dafny.Set<DAST._IType>.Union(typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2400_typeArg));
          typeParams = Dafny.Sequence<RAST._IType>.Concat(typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2402_rType));
          constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(constrainedTypeParams, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2401_typeParam));
        }
      }
    }
    public Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2403_typeParamsSet;
      Dafny.ISequence<RAST._IType> _2404_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2405_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2406_whereConstraints;
      Dafny.ISet<DAST._IType> _out25;
      Dafny.ISequence<RAST._IType> _out26;
      Dafny.ISequence<RAST._ITypeParamDecl> _out27;
      Dafny.ISequence<Dafny.Rune> _out28;
      (this).GenTypeParameters((c).dtor_typeParams, out _out25, out _out26, out _out27, out _out28);
      _2403_typeParamsSet = _out25;
      _2404_rTypeParams = _out26;
      _2405_rTypeParamsDecls = _out27;
      _2406_whereConstraints = _out28;
      Dafny.ISequence<Dafny.Rune> _2407_constrainedTypeParams;
      _2407_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2405_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _2408_fields;
      _2408_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2409_fieldInits;
      _2409_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _hi7 = new BigInteger(((c).dtor_fields).Count);
      for (BigInteger _2410_fieldI = BigInteger.Zero; _2410_fieldI < _hi7; _2410_fieldI++) {
        DAST._IField _2411_field;
        _2411_field = ((c).dtor_fields).Select(_2410_fieldI);
        RAST._IType _2412_fieldType;
        RAST._IType _out29;
        _out29 = (this).GenType(((_2411_field).dtor_formal).dtor_typ, false, false);
        _2412_fieldType = _out29;
        Dafny.ISequence<Dafny.Rune> _2413_fieldRustName;
        _2413_fieldRustName = DCOMP.__default.escapeName(((_2411_field).dtor_formal).dtor_name);
        _2408_fields = Dafny.Sequence<RAST._IField>.Concat(_2408_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_2413_fieldRustName, _2412_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source79 = (_2411_field).dtor_defaultValue;
        if (_source79.is_None) {
          {
            RAST._IExpr _2414_default;
            _2414_default = RAST.__default.std__Default__default;
            if ((_2412_fieldType).IsObjectOrPointer()) {
              _2414_default = (_2412_fieldType).ToNullExpr();
            }
            _2409_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2409_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2413_fieldRustName, _2414_default)));
          }
        } else {
          DAST._IExpression _2415___mcc_h0 = _source79.dtor_value;
          DAST._IExpression _2416_e = _2415___mcc_h0;
          {
            RAST._IExpr _2417_expr;
            DCOMP._IOwnership _2418___v41;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2419___v42;
            RAST._IExpr _out30;
            DCOMP._IOwnership _out31;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out32;
            (this).GenExpr(_2416_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out30, out _out31, out _out32);
            _2417_expr = _out30;
            _2418___v41 = _out31;
            _2419___v42 = _out32;
            _2409_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2409_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2413_fieldRustName, _2417_expr)));
          }
        }
      }
      BigInteger _hi8 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _2420_typeParamI = BigInteger.Zero; _2420_typeParamI < _hi8; _2420_typeParamI++) {
        DAST._IType _2421_typeArg;
        RAST._ITypeParamDecl _2422_typeParam;
        DAST._IType _out33;
        RAST._ITypeParamDecl _out34;
        (this).GenTypeParam(((c).dtor_typeParams).Select(_2420_typeParamI), out _out33, out _out34);
        _2421_typeArg = _out33;
        _2422_typeParam = _out34;
        RAST._IType _2423_rTypeArg;
        RAST._IType _out35;
        _out35 = (this).GenType(_2421_typeArg, false, false);
        _2423_rTypeArg = _out35;
        _2408_fields = Dafny.Sequence<RAST._IField>.Concat(_2408_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2420_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2423_rTypeArg))))));
        _2409_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2409_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2420_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _2424_datatypeName;
      _2424_datatypeName = DCOMP.__default.escapeName((c).dtor_name);
      RAST._IStruct _2425_struct;
      _2425_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2424_datatypeName, _2405_rTypeParamsDecls, RAST.Fields.create_NamedFields(_2408_fields));
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2425_struct));
      DAST._IType _2426_underlyingDatatype;
      _2426_underlyingDatatype = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(path, (c).dtor_attributes)));
      Dafny.ISequence<RAST._IImplMember> _2427_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2428_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out36;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out37;
      (this).GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_AllocatedDatatype(DAST.DatatypeType.create(path, (c).dtor_attributes))), _2403_typeParamsSet, out _out36, out _out37);
      _2427_implBodyRaw = _out36;
      _2428_traitBodies = _out37;
      Dafny.ISequence<RAST._IImplMember> _2429_implBody;
      _2429_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create((this).allocate__fn, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some((this).Object(RAST.Type.create_SelfOwned())), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel((this).allocate)).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))))), _2427_implBodyRaw);
      RAST._IImpl _2430_i;
      _2430_i = RAST.Impl.create_Impl(_2405_rTypeParamsDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2424_datatypeName), _2404_rTypeParams), _2406_whereConstraints, _2429_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2430_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2431_i;
        _2431_i = BigInteger.Zero;
        while ((_2431_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2432_superClass;
          _2432_superClass = ((c).dtor_superClasses).Select(_2431_i);
          DAST._IType _source80 = _2432_superClass;
          if (_source80.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2433___mcc_h1 = _source80.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _2434___mcc_h2 = _source80.dtor_typeArgs;
            DAST._IResolvedType _2435___mcc_h3 = _source80.dtor_resolved;
            DAST._IResolvedType _source81 = _2435___mcc_h3;
            if (_source81.is_AllocatedDatatype) {
              DAST._IDatatypeType _2436___mcc_h7 = _source81.dtor_datatypeType;
            } else if (_source81.is_Datatype) {
              DAST._IDatatypeType _2437___mcc_h9 = _source81.dtor_datatypeType;
            } else if (_source81.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2438___mcc_h11 = _source81.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _2439___mcc_h12 = _source81.dtor_attributes;
              Dafny.ISequence<DAST._IType> _2440_typeArgs = _2434___mcc_h2;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2441_traitPath = _2433___mcc_h1;
              {
                RAST._IType _2442_pathStr;
                RAST._IType _out38;
                _out38 = DCOMP.COMP.GenPath(_2441_traitPath);
                _2442_pathStr = _out38;
                Dafny.ISequence<RAST._IType> _2443_typeArgs;
                Dafny.ISequence<RAST._IType> _out39;
                _out39 = (this).GenTypeArgs(_2440_typeArgs, false, false);
                _2443_typeArgs = _out39;
                Dafny.ISequence<RAST._IImplMember> _2444_body;
                _2444_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2428_traitBodies).Contains(_2441_traitPath)) {
                  _2444_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2428_traitBodies,_2441_traitPath);
                }
                RAST._IType _2445_genSelfPath;
                RAST._IType _out40;
                _out40 = DCOMP.COMP.GenPath(path);
                _2445_genSelfPath = _out40;
                RAST._IModDecl _2446_x;
                _2446_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2405_rTypeParamsDecls, RAST.Type.create_TypeApp(_2442_pathStr, _2443_typeArgs), RAST.Type.create_TypeApp(_2445_genSelfPath, _2404_rTypeParams), _2406_whereConstraints, _2444_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2446_x));
              }
            } else {
              DAST._IType _2447___mcc_h15 = _source81.dtor_baseType;
              DAST._INewtypeRange _2448___mcc_h16 = _source81.dtor_range;
              bool _2449___mcc_h17 = _source81.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _2450___mcc_h18 = _source81.dtor_attributes;
            }
          } else if (_source80.is_Nullable) {
            DAST._IType _2451___mcc_h23 = _source80.dtor_Nullable_i_a0;
          } else if (_source80.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2452___mcc_h25 = _source80.dtor_Tuple_i_a0;
          } else if (_source80.is_Array) {
            DAST._IType _2453___mcc_h27 = _source80.dtor_element;
            BigInteger _2454___mcc_h28 = _source80.dtor_dims;
          } else if (_source80.is_Seq) {
            DAST._IType _2455___mcc_h31 = _source80.dtor_element;
          } else if (_source80.is_Set) {
            DAST._IType _2456___mcc_h33 = _source80.dtor_element;
          } else if (_source80.is_Multiset) {
            DAST._IType _2457___mcc_h35 = _source80.dtor_element;
          } else if (_source80.is_Map) {
            DAST._IType _2458___mcc_h37 = _source80.dtor_key;
            DAST._IType _2459___mcc_h38 = _source80.dtor_value;
          } else if (_source80.is_SetBuilder) {
            DAST._IType _2460___mcc_h41 = _source80.dtor_element;
          } else if (_source80.is_MapBuilder) {
            DAST._IType _2461___mcc_h43 = _source80.dtor_key;
            DAST._IType _2462___mcc_h44 = _source80.dtor_value;
          } else if (_source80.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2463___mcc_h47 = _source80.dtor_args;
            DAST._IType _2464___mcc_h48 = _source80.dtor_result;
          } else if (_source80.is_Primitive) {
            DAST._IPrimitive _2465___mcc_h51 = _source80.dtor_Primitive_i_a0;
          } else if (_source80.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2466___mcc_h53 = _source80.dtor_Passthrough_i_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _2467___mcc_h55 = _source80.dtor_TypeArg_i_a0;
          }
          _2431_i = (_2431_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public Dafny.ISequence<Dafny.Rune> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      Dafny.ISet<DAST._IType> _2468_typeParamsSet;
      _2468_typeParamsSet = Dafny.Set<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._ITypeParamDecl> _2469_typeParamDecls;
      _2469_typeParamDecls = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      Dafny.ISequence<RAST._IType> _2470_typeParams;
      _2470_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2471_tpI;
      _2471_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2471_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._ITypeArgDecl _2472_tp;
          _2472_tp = ((t).dtor_typeParams).Select(_2471_tpI);
          DAST._IType _2473_typeArg;
          RAST._ITypeParamDecl _2474_typeParamDecl;
          DAST._IType _out41;
          RAST._ITypeParamDecl _out42;
          (this).GenTypeParam(_2472_tp, out _out41, out _out42);
          _2473_typeArg = _out41;
          _2474_typeParamDecl = _out42;
          _2468_typeParamsSet = Dafny.Set<DAST._IType>.Union(_2468_typeParamsSet, Dafny.Set<DAST._IType>.FromElements(_2473_typeArg));
          _2469_typeParamDecls = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(_2469_typeParamDecls, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2474_typeParamDecl));
          RAST._IType _2475_typeParam;
          RAST._IType _out43;
          _out43 = (this).GenType(_2473_typeArg, false, false);
          _2475_typeParam = _out43;
          _2470_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2470_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2475_typeParam));
          _2471_tpI = (_2471_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2476_fullPath;
      _2476_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2477_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2478___v46;
      Dafny.ISequence<RAST._IImplMember> _out44;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out45;
      (this).GenClassImplBody((t).dtor_body, true, DAST.Type.create_Path(_2476_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Trait(_2476_fullPath, (t).dtor_attributes)), _2468_typeParamsSet, out _out44, out _out45);
      _2477_implBody = _out44;
      _2478___v46 = _out45;
      s = (RAST.ModDecl.create_TraitDecl(RAST.Trait.create(_2469_typeParamDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeName((t).dtor_name)), _2470_typeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2477_implBody)))._ToString(DCOMP.__default.IND);
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2479_typeParamsSet;
      Dafny.ISequence<RAST._IType> _2480_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2481_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2482_whereConstraints;
      Dafny.ISet<DAST._IType> _out46;
      Dafny.ISequence<RAST._IType> _out47;
      Dafny.ISequence<RAST._ITypeParamDecl> _out48;
      Dafny.ISequence<Dafny.Rune> _out49;
      (this).GenTypeParameters((c).dtor_typeParams, out _out46, out _out47, out _out48, out _out49);
      _2479_typeParamsSet = _out46;
      _2480_rTypeParams = _out47;
      _2481_rTypeParamsDecls = _out48;
      _2482_whereConstraints = _out49;
      Dafny.ISequence<Dafny.Rune> _2483_constrainedTypeParams;
      _2483_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2481_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2484_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source82 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source82.is_None) {
        RAST._IType _out50;
        _out50 = (this).GenType((c).dtor_base, false, false);
        _2484_underlyingType = _out50;
      } else {
        RAST._IType _2485___mcc_h0 = _source82.dtor_value;
        RAST._IType _2486_v = _2485___mcc_h0;
        _2484_underlyingType = _2486_v;
      }
      DAST._IType _2487_resultingType;
      _2487_resultingType = DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Newtype((c).dtor_base, (c).dtor_range, false, (c).dtor_attributes));
      Dafny.ISequence<Dafny.Rune> _2488_datatypeName;
      _2488_datatypeName = DCOMP.__default.escapeName((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2488_datatypeName, _2481_rTypeParamsDecls, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _2484_underlyingType))))));
      RAST._IExpr _2489_fnBody;
      _2489_fnBody = RAST.Expr.create_Identifier(_2488_datatypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source83 = (c).dtor_witnessExpr;
      if (_source83.is_None) {
        {
          _2489_fnBody = (_2489_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2490___mcc_h1 = _source83.dtor_value;
        DAST._IExpression _2491_e = _2490___mcc_h1;
        {
          DAST._IExpression _2492_e;
          _2492_e = ((object.Equals((c).dtor_base, _2487_resultingType)) ? (_2491_e) : (DAST.Expression.create_Convert(_2491_e, (c).dtor_base, _2487_resultingType)));
          RAST._IExpr _2493_eStr;
          DCOMP._IOwnership _2494___v47;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2495___v48;
          RAST._IExpr _out51;
          DCOMP._IOwnership _out52;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out53;
          (this).GenExpr(_2492_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out51, out _out52, out _out53);
          _2493_eStr = _out51;
          _2494___v47 = _out52;
          _2495___v48 = _out53;
          _2489_fnBody = (_2489_fnBody).Apply1(_2493_eStr);
        }
      }
      RAST._IImplMember _2496_body;
      _2496_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2489_fnBody)));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2481_rTypeParamsDecls, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2488_datatypeName), _2480_rTypeParams), _2482_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2496_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2481_rTypeParamsDecls, RAST.__default.DafnyPrint, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2488_datatypeName), _2480_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2481_rTypeParamsDecls, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2488_datatypeName), _2480_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2484_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenSynonymType(DAST._ISynonymType c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2497_typeParamsSet;
      Dafny.ISequence<RAST._IType> _2498_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2499_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2500_whereConstraints;
      Dafny.ISet<DAST._IType> _out54;
      Dafny.ISequence<RAST._IType> _out55;
      Dafny.ISequence<RAST._ITypeParamDecl> _out56;
      Dafny.ISequence<Dafny.Rune> _out57;
      (this).GenTypeParameters((c).dtor_typeParams, out _out54, out _out55, out _out56, out _out57);
      _2497_typeParamsSet = _out54;
      _2498_rTypeParams = _out55;
      _2499_rTypeParamsDecls = _out56;
      _2500_whereConstraints = _out57;
      Dafny.ISequence<Dafny.Rune> _2501_constrainedTypeParams;
      _2501_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2499_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2502_synonymTypeName;
      _2502_synonymTypeName = DCOMP.__default.escapeName((c).dtor_name);
      RAST._IType _2503_resultingType;
      RAST._IType _out58;
      _out58 = (this).GenType((c).dtor_base, false, false);
      _2503_resultingType = _out58;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TypeDecl(RAST.TypeSynonym.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2502_synonymTypeName, _2499_rTypeParamsDecls, _2503_resultingType)));
      Std.Wrappers._IOption<DAST._IExpression> _source84 = (c).dtor_witnessExpr;
      if (_source84.is_None) {
      } else {
        DAST._IExpression _2504___mcc_h0 = _source84.dtor_value;
        DAST._IExpression _2505_e = _2504___mcc_h0;
        {
          RAST._IExpr _2506_rStmts;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2507___v49;
          DCOMP._IEnvironment _2508_newEnv;
          RAST._IExpr _out59;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out60;
          DCOMP._IEnvironment _out61;
          (this).GenStmts((c).dtor_witnessStmts, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), false, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out59, out _out60, out _out61);
          _2506_rStmts = _out59;
          _2507___v49 = _out60;
          _2508_newEnv = _out61;
          RAST._IExpr _2509_rExpr;
          DCOMP._IOwnership _2510___v50;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2511___v51;
          RAST._IExpr _out62;
          DCOMP._IOwnership _out63;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out64;
          (this).GenExpr(_2505_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), _2508_newEnv, DCOMP.Ownership.create_OwnershipOwned(), out _out62, out _out63, out _out64);
          _2509_rExpr = _out62;
          _2510___v50 = _out63;
          _2511___v51 = _out64;
          Dafny.ISequence<Dafny.Rune> _2512_constantName;
          _2512_constantName = DCOMP.__default.escapeName(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_init_"), ((c).dtor_name)));
          s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TopFnDecl(RAST.TopFnDecl.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), RAST.Visibility.create_PUB(), RAST.Fn.create(_2512_constantName, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2503_resultingType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((_2506_rStmts).Then(_2509_rExpr)))))));
        }
      }
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISet<DAST._IType> _2513_typeParamsSet;
      Dafny.ISequence<RAST._IType> _2514_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2515_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2516_whereConstraints;
      Dafny.ISet<DAST._IType> _out65;
      Dafny.ISequence<RAST._IType> _out66;
      Dafny.ISequence<RAST._ITypeParamDecl> _out67;
      Dafny.ISequence<Dafny.Rune> _out68;
      (this).GenTypeParameters((c).dtor_typeParams, out _out65, out _out66, out _out67, out _out68);
      _2513_typeParamsSet = _out65;
      _2514_rTypeParams = _out66;
      _2515_rTypeParamsDecls = _out67;
      _2516_whereConstraints = _out68;
      Dafny.ISequence<Dafny.Rune> _2517_datatypeName;
      _2517_datatypeName = DCOMP.__default.escapeName((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2518_ctors;
      _2518_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _hi9 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2519_i = BigInteger.Zero; _2519_i < _hi9; _2519_i++) {
        DAST._IDatatypeCtor _2520_ctor;
        _2520_ctor = ((c).dtor_ctors).Select(_2519_i);
        Dafny.ISequence<RAST._IField> _2521_ctorArgs;
        _2521_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _hi10 = new BigInteger(((_2520_ctor).dtor_args).Count);
        for (BigInteger _2522_j = BigInteger.Zero; _2522_j < _hi10; _2522_j++) {
          DAST._IFormal _2523_formal;
          _2523_formal = ((_2520_ctor).dtor_args).Select(_2522_j);
          RAST._IType _2524_formalType;
          RAST._IType _out69;
          _out69 = (this).GenType((_2523_formal).dtor_typ, false, false);
          _2524_formalType = _out69;
          if ((c).dtor_isCo) {
            _2521_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2521_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeName((_2523_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2524_formalType))))));
          } else {
            _2521_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2521_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeName((_2523_formal).dtor_name), _2524_formalType))));
          }
        }
        _2518_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2518_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeName((_2520_ctor).dtor_name), RAST.Fields.create_NamedFields(_2521_ctorArgs))));
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2525_selfPath;
      _2525_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2526_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2527_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out70;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out71;
      (this).GenClassImplBody((c).dtor_body, false, DAST.Type.create_Path(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedType.create_Datatype(DAST.DatatypeType.create(_2525_selfPath, (c).dtor_attributes))), _2513_typeParamsSet, out _out70, out _out71);
      _2526_implBodyRaw = _out70;
      _2527_traitBodies = _out71;
      Dafny.ISequence<RAST._IImplMember> _2528_implBody;
      _2528_implBody = _2526_implBodyRaw;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2529_emittedFields;
      _2529_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _hi11 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2530_i = BigInteger.Zero; _2530_i < _hi11; _2530_i++) {
        DAST._IDatatypeCtor _2531_ctor;
        _2531_ctor = ((c).dtor_ctors).Select(_2530_i);
        BigInteger _hi12 = new BigInteger(((_2531_ctor).dtor_args).Count);
        for (BigInteger _2532_j = BigInteger.Zero; _2532_j < _hi12; _2532_j++) {
          DAST._IFormal _2533_formal;
          _2533_formal = ((_2531_ctor).dtor_args).Select(_2532_j);
          if (!((_2529_emittedFields).Contains((_2533_formal).dtor_name))) {
            _2529_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2529_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2533_formal).dtor_name));
            RAST._IType _2534_formalType;
            RAST._IType _out72;
            _out72 = (this).GenType((_2533_formal).dtor_typ, false, false);
            _2534_formalType = _out72;
            Dafny.ISequence<RAST._IMatchCase> _2535_cases;
            _2535_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _hi13 = new BigInteger(((c).dtor_ctors).Count);
            for (BigInteger _2536_k = BigInteger.Zero; _2536_k < _hi13; _2536_k++) {
              DAST._IDatatypeCtor _2537_ctor2;
              _2537_ctor2 = ((c).dtor_ctors).Select(_2536_k);
              Dafny.ISequence<Dafny.Rune> _2538_pattern;
              _2538_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeName((_2537_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2539_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              bool _2540_hasMatchingField;
              _2540_hasMatchingField = false;
              BigInteger _hi14 = new BigInteger(((_2537_ctor2).dtor_args).Count);
              for (BigInteger _2541_l = BigInteger.Zero; _2541_l < _hi14; _2541_l++) {
                DAST._IFormal _2542_formal2;
                _2542_formal2 = ((_2537_ctor2).dtor_args).Select(_2541_l);
                if (object.Equals((_2533_formal).dtor_name, (_2542_formal2).dtor_name)) {
                  _2540_hasMatchingField = true;
                }
                _2538_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2538_pattern, DCOMP.__default.escapeName((_2542_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _2538_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2538_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2540_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2539_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeName((_2533_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2539_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName((_2533_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2539_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2543_ctorMatch;
              _2543_ctorMatch = RAST.MatchCase.create(_2538_pattern, RAST.Expr.create_RawExpr(_2539_rhs));
              _2535_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2535_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2543_ctorMatch));
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2535_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2535_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2544_methodBody;
            _2544_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2535_cases);
            _2528_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2528_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeName((_2533_formal).dtor_name), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2534_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2544_methodBody)))));
          }
        }
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        Dafny.ISequence<RAST._IType> _2545_types;
        _2545_types = Dafny.Sequence<RAST._IType>.FromElements();
        BigInteger _hi15 = new BigInteger(((c).dtor_typeParams).Count);
        for (BigInteger _2546_typeI = BigInteger.Zero; _2546_typeI < _hi15; _2546_typeI++) {
          DAST._IType _2547_typeArg;
          RAST._ITypeParamDecl _2548_rTypeParamDecl;
          DAST._IType _out73;
          RAST._ITypeParamDecl _out74;
          (this).GenTypeParam(((c).dtor_typeParams).Select(_2546_typeI), out _out73, out _out74);
          _2547_typeArg = _out73;
          _2548_rTypeParamDecl = _out74;
          RAST._IType _2549_rTypeArg;
          RAST._IType _out75;
          _out75 = (this).GenType(_2547_typeArg, false, false);
          _2549_rTypeArg = _out75;
          _2545_types = Dafny.Sequence<RAST._IType>.Concat(_2545_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2549_rTypeArg))));
        }
        _2518_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2518_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_2550_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _2550_tpe);
})), _2545_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2551_enumBody;
      _2551_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2517_datatypeName, _2515_rTypeParamsDecls, _2518_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2515_rTypeParamsDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams), _2516_whereConstraints, _2528_implBody)));
      Dafny.ISequence<RAST._IMatchCase> _2552_printImplBodyCases;
      _2552_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      Dafny.ISequence<RAST._IMatchCase> _2553_hashImplBodyCases;
      _2553_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      BigInteger _hi16 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2554_i = BigInteger.Zero; _2554_i < _hi16; _2554_i++) {
        DAST._IDatatypeCtor _2555_ctor;
        _2555_ctor = ((c).dtor_ctors).Select(_2554_i);
        Dafny.ISequence<Dafny.Rune> _2556_ctorMatch;
        _2556_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName((_2555_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2557_modulePrefix;
        _2557_modulePrefix = ((((((c).dtor_enclosingModule))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName(((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2558_printRhs;
        _2558_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2557_modulePrefix), DCOMP.__default.escapeName((c).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeName((_2555_ctor).dtor_name)), (((_2555_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        RAST._IExpr _2559_hashRhs;
        _2559_hashRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        BigInteger _hi17 = new BigInteger(((_2555_ctor).dtor_args).Count);
        for (BigInteger _2560_j = BigInteger.Zero; _2560_j < _hi17; _2560_j++) {
          DAST._IFormal _2561_formal;
          _2561_formal = ((_2555_ctor).dtor_args).Select(_2560_j);
          Dafny.ISequence<Dafny.Rune> _2562_formalName;
          _2562_formalName = DCOMP.__default.escapeName((_2561_formal).dtor_name);
          _2556_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2556_ctorMatch, _2562_formalName), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          _2559_hashRhs = (_2559_hashRhs).Then(((RAST.Expr.create_Identifier(_2562_formalName)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"))).Apply1(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_state"))));
          if ((_2560_j).Sign == 1) {
            _2558_printRhs = (_2558_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2558_printRhs = (_2558_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeName((_2561_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
        }
        _2556_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2556_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2555_ctor).dtor_hasAnyArgs) {
          _2558_printRhs = (_2558_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2558_printRhs = (_2558_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2552_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2552_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2556_ctorMatch), RAST.Expr.create_Block(_2558_printRhs))));
        _2553_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2553_hashImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2556_ctorMatch), RAST.Expr.create_Block(_2559_hashRhs))));
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2552_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2552_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
        _2553_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2553_hashImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2517_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      Dafny.ISequence<RAST._ITypeParamDecl> _2563_defaultConstrainedTypeParams;
      _2563_defaultConstrainedTypeParams = RAST.TypeParamDecl.AddConstraintsMultiple(_2515_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
      Dafny.ISequence<RAST._ITypeParamDecl> _2564_rTypeParamsDeclsWithEq;
      _2564_rTypeParamsDeclsWithEq = RAST.TypeParamDecl.AddConstraintsMultiple(_2515_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.Eq));
      Dafny.ISequence<RAST._ITypeParamDecl> _2565_rTypeParamsDeclsWithHash;
      _2565_rTypeParamsDeclsWithHash = RAST.TypeParamDecl.AddConstraintsMultiple(_2515_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.Hash));
      RAST._IExpr _2566_printImplBody;
      _2566_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2552_printImplBodyCases);
      RAST._IExpr _2567_hashImplBody;
      _2567_hashImplBody = RAST.Expr.create_Match(RAST.__default.self, _2553_hashImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2568_printImpl;
      _2568_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2515_rTypeParamsDecls, ((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Debug")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("f"), RAST.Type.create_BorrowedMut(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Formatter"))))), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrint"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.__default.self, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("f")), RAST.Expr.create_LiteralBool(true))))))))), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2515_rTypeParamsDecls, RAST.__default.DafnyPrint, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.Type.create_BorrowedMut(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Formatter")))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2566_printImplBody)))))), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2564_rTypeParamsDeclsWithEq, RAST.__default.Eq, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements())), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2565_rTypeParamsDeclsWithHash, RAST.__default.Hash, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(RAST.TypeParamDecl.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_H"), Dafny.Sequence<RAST._IType>.FromElements(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Hasher"))))), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_state"), RAST.Type.create_BorrowedMut(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_H"))))), Std.Wrappers.Option<RAST._IType>.create_None(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2567_hashImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2569_defaultImpl;
      _2569_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2570_asRefImpl;
      _2570_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        RAST._IExpr _2571_structName;
        _2571_structName = (RAST.Expr.create_Identifier(_2517_datatypeName)).MSel(DCOMP.__default.escapeName((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2572_structAssignments;
        _2572_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        BigInteger _hi18 = new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count);
        for (BigInteger _2573_i = BigInteger.Zero; _2573_i < _hi18; _2573_i++) {
          DAST._IFormal _2574_formal;
          _2574_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2573_i);
          _2572_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2572_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeName((_2574_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
        }
        Dafny.ISequence<RAST._ITypeParamDecl> _2575_defaultConstrainedTypeParams;
        _2575_defaultConstrainedTypeParams = RAST.TypeParamDecl.AddConstraintsMultiple(_2515_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2576_fullType;
        _2576_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2517_datatypeName), _2514_rTypeParams);
        _2569_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2575_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2576_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2576_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2571_structName, _2572_structAssignments))))))));
        _2570_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2515_rTypeParamsDecls, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2576_fullType), RAST.Type.create_Borrowed(_2576_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2551_enumBody, _2568_printImpl), _2569_defaultImpl), _2570_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = ((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"))) ? (RAST.__default.dafny__runtime__type) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))))));
        BigInteger _hi19 = new BigInteger((p).Count);
        for (BigInteger _2577_i = BigInteger.Zero; _2577_i < _hi19; _2577_i++) {
          r = (r).MSel(DCOMP.__default.escapeName(((p).Select(_2577_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = ((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"))) ? (RAST.__default.dafny__runtime) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))))));
        BigInteger _hi20 = new BigInteger((p).Count);
        for (BigInteger _2578_i = BigInteger.Zero; _2578_i < _hi20; _2578_i++) {
          r = (r).MSel(DCOMP.__default.escapeName(((p).Select(_2578_i))));
        }
      }
      return r;
    }
    public Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, bool inBinding, bool inFn)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2579_i;
        _2579_i = BigInteger.Zero;
        while ((_2579_i) < (new BigInteger((args).Count))) {
          RAST._IType _2580_genTp;
          RAST._IType _out76;
          _out76 = (this).GenType((args).Select(_2579_i), inBinding, inFn);
          _2580_genTp = _out76;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2580_genTp));
          _2579_i = (_2579_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public RAST._IType GenType(DAST._IType c, bool inBinding, bool inFn)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source85 = c;
      if (_source85.is_Path) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2581___mcc_h0 = _source85.dtor_Path_i_a0;
        Dafny.ISequence<DAST._IType> _2582___mcc_h1 = _source85.dtor_typeArgs;
        DAST._IResolvedType _2583___mcc_h2 = _source85.dtor_resolved;
        DAST._IResolvedType _2584_resolved = _2583___mcc_h2;
        Dafny.ISequence<DAST._IType> _2585_args = _2582___mcc_h1;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2586_p = _2581___mcc_h0;
        {
          RAST._IType _2587_t;
          RAST._IType _out77;
          _out77 = DCOMP.COMP.GenPath(_2586_p);
          _2587_t = _out77;
          Dafny.ISequence<RAST._IType> _2588_typeArgs;
          Dafny.ISequence<RAST._IType> _out78;
          _out78 = (this).GenTypeArgs(_2585_args, inBinding, inFn);
          _2588_typeArgs = _out78;
          s = RAST.Type.create_TypeApp(_2587_t, _2588_typeArgs);
          DAST._IResolvedType _source86 = _2584_resolved;
          if (_source86.is_AllocatedDatatype) {
            DAST._IDatatypeType _2589___mcc_h21 = _source86.dtor_datatypeType;
            DAST._IDatatypeType _source87 = _2589___mcc_h21;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2590___mcc_h22 = _source87.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2591___mcc_h23 = _source87.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2592_attributes = _2591___mcc_h23;
            {
              s = (this).Object(s);
            }
          } else if (_source86.is_Datatype) {
            DAST._IDatatypeType _2593___mcc_h24 = _source86.dtor_datatypeType;
            DAST._IDatatypeType _source88 = _2593___mcc_h24;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2594___mcc_h25 = _source88.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2595___mcc_h26 = _source88.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2596_attributes = _2595___mcc_h26;
            {
              if ((this).IsRcWrapped(_2596_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source86.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2597___mcc_h27 = _source86.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _2598___mcc_h28 = _source86.dtor_attributes;
            {
              if ((_2586_p).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = ((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("any"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Any"));
              }
              s = (this).Object(RAST.Type.create_DynType(s));
            }
          } else {
            DAST._IType _2599___mcc_h29 = _source86.dtor_baseType;
            DAST._INewtypeRange _2600___mcc_h30 = _source86.dtor_range;
            bool _2601___mcc_h31 = _source86.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _2602___mcc_h32 = _source86.dtor_attributes;
            Dafny.ISequence<DAST._IAttribute> _2603_attributes = _2602___mcc_h32;
            bool _2604_erased = _2601___mcc_h31;
            DAST._INewtypeRange _2605_range = _2600___mcc_h30;
            DAST._IType _2606_t = _2599___mcc_h29;
            {
              if (_2604_erased) {
                Std.Wrappers._IOption<RAST._IType> _source89 = DCOMP.COMP.NewtypeToRustType(_2606_t, _2605_range);
                if (_source89.is_None) {
                } else {
                  RAST._IType _2607___mcc_h33 = _source89.dtor_value;
                  RAST._IType _2608_v = _2607___mcc_h33;
                  s = _2608_v;
                }
              }
            }
          }
        }
      } else if (_source85.is_Nullable) {
        DAST._IType _2609___mcc_h3 = _source85.dtor_Nullable_i_a0;
        DAST._IType _2610_inner = _2609___mcc_h3;
        {
          RAST._IType _2611_innerExpr;
          RAST._IType _out79;
          _out79 = (this).GenType(_2610_inner, inBinding, inFn);
          _2611_innerExpr = _out79;
          s = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::option::Option")), Dafny.Sequence<RAST._IType>.FromElements(_2611_innerExpr));
        }
      } else if (_source85.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2612___mcc_h4 = _source85.dtor_Tuple_i_a0;
        Dafny.ISequence<DAST._IType> _2613_types = _2612___mcc_h4;
        {
          Dafny.ISequence<RAST._IType> _2614_args;
          _2614_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2615_i;
          _2615_i = BigInteger.Zero;
          while ((_2615_i) < (new BigInteger((_2613_types).Count))) {
            RAST._IType _2616_generated;
            RAST._IType _out80;
            _out80 = (this).GenType((_2613_types).Select(_2615_i), inBinding, inFn);
            _2616_generated = _out80;
            _2614_args = Dafny.Sequence<RAST._IType>.Concat(_2614_args, Dafny.Sequence<RAST._IType>.FromElements(_2616_generated));
            _2615_i = (_2615_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2614_args);
        }
      } else if (_source85.is_Array) {
        DAST._IType _2617___mcc_h5 = _source85.dtor_element;
        BigInteger _2618___mcc_h6 = _source85.dtor_dims;
        BigInteger _2619_dims = _2618___mcc_h6;
        DAST._IType _2620_element = _2617___mcc_h5;
        {
          if ((_2619_dims) > (new BigInteger(16))) {
            s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<i>Array of dimensions greater than 16</i>"));
          } else {
            RAST._IType _2621_elem;
            RAST._IType _out81;
            _out81 = (this).GenType(_2620_element, inBinding, inFn);
            _2621_elem = _out81;
            if ((_2619_dims) == (BigInteger.One)) {
              s = RAST.Type.create_Array(_2621_elem, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
              s = (this).Object(s);
            } else {
              Dafny.ISequence<Dafny.Rune> _2622_n;
              _2622_n = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array"), Std.Strings.__default.OfNat(_2619_dims));
              s = ((RAST.__default.dafny__runtime__type).MSel(_2622_n)).Apply(Dafny.Sequence<RAST._IType>.FromElements(_2621_elem));
              s = (this).Object(s);
            }
          }
        }
      } else if (_source85.is_Seq) {
        DAST._IType _2623___mcc_h7 = _source85.dtor_element;
        DAST._IType _2624_element = _2623___mcc_h7;
        {
          RAST._IType _2625_elem;
          RAST._IType _out82;
          _out82 = (this).GenType(_2624_element, inBinding, inFn);
          _2625_elem = _out82;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2625_elem));
        }
      } else if (_source85.is_Set) {
        DAST._IType _2626___mcc_h8 = _source85.dtor_element;
        DAST._IType _2627_element = _2626___mcc_h8;
        {
          RAST._IType _2628_elem;
          RAST._IType _out83;
          _out83 = (this).GenType(_2627_element, inBinding, inFn);
          _2628_elem = _out83;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2628_elem));
        }
      } else if (_source85.is_Multiset) {
        DAST._IType _2629___mcc_h9 = _source85.dtor_element;
        DAST._IType _2630_element = _2629___mcc_h9;
        {
          RAST._IType _2631_elem;
          RAST._IType _out84;
          _out84 = (this).GenType(_2630_element, inBinding, inFn);
          _2631_elem = _out84;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2631_elem));
        }
      } else if (_source85.is_Map) {
        DAST._IType _2632___mcc_h10 = _source85.dtor_key;
        DAST._IType _2633___mcc_h11 = _source85.dtor_value;
        DAST._IType _2634_value = _2633___mcc_h11;
        DAST._IType _2635_key = _2632___mcc_h10;
        {
          RAST._IType _2636_keyType;
          RAST._IType _out85;
          _out85 = (this).GenType(_2635_key, inBinding, inFn);
          _2636_keyType = _out85;
          RAST._IType _2637_valueType;
          RAST._IType _out86;
          _out86 = (this).GenType(_2634_value, inBinding, inFn);
          _2637_valueType = _out86;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2636_keyType, _2637_valueType));
        }
      } else if (_source85.is_SetBuilder) {
        DAST._IType _2638___mcc_h12 = _source85.dtor_element;
        DAST._IType _2639_elem = _2638___mcc_h12;
        {
          RAST._IType _2640_elemType;
          RAST._IType _out87;
          _out87 = (this).GenType(_2639_elem, inBinding, inFn);
          _2640_elemType = _out87;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2640_elemType));
        }
      } else if (_source85.is_MapBuilder) {
        DAST._IType _2641___mcc_h13 = _source85.dtor_key;
        DAST._IType _2642___mcc_h14 = _source85.dtor_value;
        DAST._IType _2643_value = _2642___mcc_h14;
        DAST._IType _2644_key = _2641___mcc_h13;
        {
          RAST._IType _2645_keyType;
          RAST._IType _out88;
          _out88 = (this).GenType(_2644_key, inBinding, inFn);
          _2645_keyType = _out88;
          RAST._IType _2646_valueType;
          RAST._IType _out89;
          _out89 = (this).GenType(_2643_value, inBinding, inFn);
          _2646_valueType = _out89;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2645_keyType, _2646_valueType));
        }
      } else if (_source85.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2647___mcc_h15 = _source85.dtor_args;
        DAST._IType _2648___mcc_h16 = _source85.dtor_result;
        DAST._IType _2649_result = _2648___mcc_h16;
        Dafny.ISequence<DAST._IType> _2650_args = _2647___mcc_h15;
        {
          Dafny.ISequence<RAST._IType> _2651_argTypes;
          _2651_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2652_i;
          _2652_i = BigInteger.Zero;
          while ((_2652_i) < (new BigInteger((_2650_args).Count))) {
            RAST._IType _2653_generated;
            RAST._IType _out90;
            _out90 = (this).GenType((_2650_args).Select(_2652_i), inBinding, true);
            _2653_generated = _out90;
            _2651_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2651_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2653_generated)));
            _2652_i = (_2652_i) + (BigInteger.One);
          }
          RAST._IType _2654_resultType;
          RAST._IType _out91;
          _out91 = (this).GenType(_2649_result, inBinding, (inFn) || (inBinding));
          _2654_resultType = _out91;
          s = RAST.__default.Rc(RAST.Type.create_DynType(RAST.Type.create_FnType(_2651_argTypes, _2654_resultType)));
        }
      } else if (_source85.is_Primitive) {
        DAST._IPrimitive _2655___mcc_h17 = _source85.dtor_Primitive_i_a0;
        DAST._IPrimitive _2656_p = _2655___mcc_h17;
        {
          DAST._IPrimitive _source90 = _2656_p;
          if (_source90.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source90.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source90.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel((this).DafnyChar)));
          } else if (_source90.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel((this).DafnyChar);
          }
        }
      } else if (_source85.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2657___mcc_h18 = _source85.dtor_Passthrough_i_a0;
        Dafny.ISequence<Dafny.Rune> _2658_v = _2657___mcc_h18;
        s = RAST.__default.RawType(_2658_v);
      } else {
        Dafny.ISequence<Dafny.Rune> _2659___mcc_h19 = _source85.dtor_TypeArg_i_a0;
        Dafny.ISequence<Dafny.Rune> _source91 = _2659___mcc_h19;
        Dafny.ISequence<Dafny.Rune> _2660___mcc_h20 = _source91;
        Dafny.ISequence<Dafny.Rune> _2661_name = _2660___mcc_h20;
        s = RAST.Type.create_TIdentifier(DCOMP.__default.escapeName(_2661_name));
      }
      return s;
    }
    public void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _hi21 = new BigInteger((body).Count);
      for (BigInteger _2662_i = BigInteger.Zero; _2662_i < _hi21; _2662_i++) {
        DAST._IMethod _source92 = (body).Select(_2662_i);
        DAST._IMethod _2663___mcc_h0 = _source92;
        DAST._IMethod _2664_m = _2663___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source93 = (_2664_m).dtor_overridingPath;
          if (_source93.is_None) {
            {
              RAST._IImplMember _2665_generated;
              RAST._IImplMember _out92;
              _out92 = (this).GenMethod(_2664_m, forTrait, enclosingType, enclosingTypeParams);
              _2665_generated = _out92;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2665_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2666___mcc_h1 = _source93.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2667_p = _2666___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2668_existing;
              _2668_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2667_p)) {
                _2668_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2667_p);
              }
              RAST._IImplMember _2669_genMethod;
              RAST._IImplMember _out93;
              _out93 = (this).GenMethod(_2664_m, true, enclosingType, enclosingTypeParams);
              _2669_genMethod = _out93;
              _2668_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2668_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2669_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2667_p, _2668_existing)));
            }
          }
        }
      }
    }
    public Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _hi22 = new BigInteger((@params).Count);
      for (BigInteger _2670_i = BigInteger.Zero; _2670_i < _hi22; _2670_i++) {
        DAST._IFormal _2671_param;
        _2671_param = (@params).Select(_2670_i);
        RAST._IType _2672_paramType;
        RAST._IType _out94;
        _out94 = (this).GenType((_2671_param).dtor_typ, false, false);
        _2672_paramType = _out94;
        if ((!((_2672_paramType).CanReadWithoutClone())) && (!((_2671_param).dtor_attributes).Contains(DCOMP.__default.AttributeOwned))) {
          _2672_paramType = RAST.Type.create_Borrowed(_2672_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeName((_2671_param).dtor_name), _2672_paramType)));
      }
      return s;
    }
    public RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISet<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2673_params;
      Dafny.ISequence<RAST._IFormal> _out95;
      _out95 = (this).GenParams((m).dtor_params);
      _2673_params = _out95;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2674_paramNames;
      _2674_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2675_paramTypes;
      _2675_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi23 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2676_paramI = BigInteger.Zero; _2676_paramI < _hi23; _2676_paramI++) {
        DAST._IFormal _2677_dafny__formal;
        _2677_dafny__formal = ((m).dtor_params).Select(_2676_paramI);
        RAST._IFormal _2678_formal;
        _2678_formal = (_2673_params).Select(_2676_paramI);
        Dafny.ISequence<Dafny.Rune> _2679_name;
        _2679_name = (_2678_formal).dtor_name;
        _2674_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2674_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2679_name));
        _2675_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2675_paramTypes, _2679_name, (_2678_formal).dtor_tpe);
      }
      Dafny.ISequence<Dafny.Rune> _2680_fnName;
      _2680_fnName = DCOMP.__default.escapeName((m).dtor_name);
      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2681_selfIdentifier;
      _2681_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      if (!((m).dtor_isStatic)) {
        Dafny.ISequence<Dafny.Rune> _2682_selfId;
        _2682_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self");
        if ((_2680_fnName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ctor"))) {
          _2682_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this");
        }
        if (forTrait) {
          RAST._IFormal _2683_selfFormal;
          _2683_selfFormal = (((m).dtor_wasFunction) ? (RAST.Formal.selfBorrowed) : (RAST.Formal.selfBorrowedMut));
          _2673_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(_2683_selfFormal), _2673_params);
        } else {
          RAST._IType _2684_tpe;
          RAST._IType _out96;
          _out96 = (this).GenType(enclosingType, false, false);
          _2684_tpe = _out96;
          if (((_2682_selfId).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && ((_2684_tpe).IsObjectOrPointer())) {
            if ((m).dtor_wasFunction) {
              _2684_tpe = RAST.__default.SelfBorrowed;
            } else {
              _2684_tpe = RAST.__default.SelfBorrowedMut;
            }
          } else {
            if (!((_2684_tpe).CanReadWithoutClone())) {
              _2684_tpe = RAST.Type.create_Borrowed(_2684_tpe);
            }
          }
          _2673_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(_2682_selfId, _2684_tpe)), _2673_params);
        }
        _2681_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2682_selfId);
      }
      Dafny.ISequence<RAST._IType> _2685_retTypeArgs;
      _2685_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2686_typeI;
      _2686_typeI = BigInteger.Zero;
      while ((_2686_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2687_typeExpr;
        RAST._IType _out97;
        _out97 = (this).GenType(((m).dtor_outTypes).Select(_2686_typeI), false, false);
        _2687_typeExpr = _out97;
        _2685_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2685_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2687_typeExpr));
        _2686_typeI = (_2686_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2688_visibility;
      _2688_visibility = ((forTrait) ? (RAST.Visibility.create_PRIV()) : (RAST.Visibility.create_PUB()));
      Dafny.ISequence<DAST._ITypeArgDecl> _2689_typeParamsFiltered;
      _2689_typeParamsFiltered = Dafny.Sequence<DAST._ITypeArgDecl>.FromElements();
      BigInteger _hi24 = new BigInteger(((m).dtor_typeParams).Count);
      for (BigInteger _2690_typeParamI = BigInteger.Zero; _2690_typeParamI < _hi24; _2690_typeParamI++) {
        DAST._ITypeArgDecl _2691_typeParam;
        _2691_typeParam = ((m).dtor_typeParams).Select(_2690_typeParamI);
        if (!((enclosingTypeParams).Contains(DAST.Type.create_TypeArg((_2691_typeParam).dtor_name)))) {
          _2689_typeParamsFiltered = Dafny.Sequence<DAST._ITypeArgDecl>.Concat(_2689_typeParamsFiltered, Dafny.Sequence<DAST._ITypeArgDecl>.FromElements(_2691_typeParam));
        }
      }
      Dafny.ISequence<RAST._ITypeParamDecl> _2692_typeParams;
      _2692_typeParams = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      if ((new BigInteger((_2689_typeParamsFiltered).Count)).Sign == 1) {
        BigInteger _hi25 = new BigInteger((_2689_typeParamsFiltered).Count);
        for (BigInteger _2693_i = BigInteger.Zero; _2693_i < _hi25; _2693_i++) {
          DAST._IType _2694_typeArg;
          RAST._ITypeParamDecl _2695_rTypeParamDecl;
          DAST._IType _out98;
          RAST._ITypeParamDecl _out99;
          (this).GenTypeParam((_2689_typeParamsFiltered).Select(_2693_i), out _out98, out _out99);
          _2694_typeArg = _out98;
          _2695_rTypeParamDecl = _out99;
          _2692_typeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(_2692_typeParams, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2695_rTypeParamDecl));
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2696_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2697_env = DCOMP.Environment.Default();
      RAST._IExpr _2698_preBody;
      _2698_preBody = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2699_preAssignNames;
      _2699_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2700_preAssignTypes;
      _2700_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2701_earlyReturn;
        _2701_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source94 = (m).dtor_outVars;
        if (_source94.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2702___mcc_h0 = _source94.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2703_outVars = _2702___mcc_h0;
          {
            if ((m).dtor_outVarsAreUninitFieldsToAssign) {
              _2701_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(Dafny.Sequence<RAST._IExpr>.FromElements())));
              BigInteger _hi26 = new BigInteger((_2703_outVars).Count);
              for (BigInteger _2704_outI = BigInteger.Zero; _2704_outI < _hi26; _2704_outI++) {
                Dafny.ISequence<Dafny.Rune> _2705_outVar;
                _2705_outVar = (_2703_outVars).Select(_2704_outI);
                Dafny.ISequence<Dafny.Rune> _2706_outName;
                _2706_outName = DCOMP.__default.escapeName((_2705_outVar));
                Dafny.ISequence<Dafny.Rune> _2707_tracker__name;
                _2707_tracker__name = DCOMP.__default.AddAssignedPrefix(_2706_outName);
                _2699_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2699_preAssignNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2707_tracker__name));
                _2700_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2700_preAssignTypes, _2707_tracker__name, RAST.Type.create_Bool());
                _2698_preBody = (_2698_preBody).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2707_tracker__name, Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_LiteralBool(false))));
              }
            } else {
              Dafny.ISequence<RAST._IExpr> _2708_tupleArgs;
              _2708_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
              BigInteger _hi27 = new BigInteger((_2703_outVars).Count);
              for (BigInteger _2709_outI = BigInteger.Zero; _2709_outI < _hi27; _2709_outI++) {
                Dafny.ISequence<Dafny.Rune> _2710_outVar;
                _2710_outVar = (_2703_outVars).Select(_2709_outI);
                RAST._IType _2711_outType;
                RAST._IType _out100;
                _out100 = (this).GenType(((m).dtor_outTypes).Select(_2709_outI), false, false);
                _2711_outType = _out100;
                Dafny.ISequence<Dafny.Rune> _2712_outName;
                _2712_outName = DCOMP.__default.escapeName((_2710_outVar));
                _2674_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2674_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2712_outName));
                RAST._IType _2713_outMaybeType;
                _2713_outMaybeType = (((_2711_outType).CanReadWithoutClone()) ? (_2711_outType) : (RAST.__default.MaybePlaceboType(_2711_outType)));
                _2675_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2675_paramTypes, _2712_outName, _2713_outMaybeType);
                RAST._IExpr _2714_outVarReturn;
                DCOMP._IOwnership _2715___v56;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2716___v57;
                RAST._IExpr _out101;
                DCOMP._IOwnership _out102;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out103;
                (this).GenExpr(DAST.Expression.create_Ident((_2710_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2712_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2712_outName, _2713_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out101, out _out102, out _out103);
                _2714_outVarReturn = _out101;
                _2715___v56 = _out102;
                _2716___v57 = _out103;
                _2708_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2708_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2714_outVarReturn));
              }
              if ((new BigInteger((_2708_tupleArgs).Count)) == (BigInteger.One)) {
                _2701_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2708_tupleArgs).Select(BigInteger.Zero)));
              } else {
                _2701_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2708_tupleArgs)));
              }
            }
          }
        }
        _2697_env = DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2699_preAssignNames, _2674_paramNames), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Merge(_2700_preAssignTypes, _2675_paramTypes));
        RAST._IExpr _2717_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2718___v58;
        DCOMP._IEnvironment _2719___v59;
        RAST._IExpr _out104;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out105;
        DCOMP._IEnvironment _out106;
        (this).GenStmts((m).dtor_body, _2681_selfIdentifier, _2697_env, true, _2701_earlyReturn, out _out104, out _out105, out _out106);
        _2717_body = _out104;
        _2718___v58 = _out105;
        _2719___v59 = _out106;
        _2696_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some((_2698_preBody).Then(_2717_body));
      } else {
        _2697_env = DCOMP.Environment.create(_2674_paramNames, _2675_paramTypes);
        _2696_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2688_visibility, RAST.Fn.create(_2680_fnName, _2692_typeParams, _2673_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2685_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2685_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2685_retTypeArgs)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2696_fBody));
      return s;
    }
    public void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2720_declarations;
      _2720_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2721_i;
      _2721_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _2722_stmts;
      _2722_stmts = stmts;
      while ((_2721_i) < (new BigInteger((_2722_stmts).Count))) {
        DAST._IStatement _2723_stmt;
        _2723_stmt = (_2722_stmts).Select(_2721_i);
        DAST._IStatement _source95 = _2723_stmt;
        if (_source95.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2724___mcc_h0 = _source95.dtor_name;
          DAST._IType _2725___mcc_h1 = _source95.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2726___mcc_h2 = _source95.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source96 = _2726___mcc_h2;
          if (_source96.is_None) {
            DAST._IType _2727_optType = _2725___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _2728_name = _2724___mcc_h0;
            if (((_2721_i) + (BigInteger.One)) < (new BigInteger((_2722_stmts).Count))) {
              DAST._IStatement _source97 = (_2722_stmts).Select((_2721_i) + (BigInteger.One));
              if (_source97.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _2729___mcc_h54 = _source97.dtor_name;
                DAST._IType _2730___mcc_h55 = _source97.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _2731___mcc_h56 = _source97.dtor_maybeValue;
              } else if (_source97.is_Assign) {
                DAST._IAssignLhs _2732___mcc_h60 = _source97.dtor_lhs;
                DAST._IExpression _2733___mcc_h61 = _source97.dtor_value;
                DAST._IAssignLhs _source98 = _2732___mcc_h60;
                if (_source98.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _2734___mcc_h64 = _source98.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source99 = _2734___mcc_h64;
                  Dafny.ISequence<Dafny.Rune> _2735___mcc_h66 = _source99;
                  DAST._IExpression _2736_rhs = _2733___mcc_h61;
                  Dafny.ISequence<Dafny.Rune> _2737_name2 = _2735___mcc_h66;
                  if (object.Equals(_2737_name2, _2728_name)) {
                    _2722_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_2722_stmts).Subsequence(BigInteger.Zero, _2721_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_2728_name, _2727_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_2736_rhs)))), (_2722_stmts).Drop((_2721_i) + (BigInteger.One)));
                    _2723_stmt = (_2722_stmts).Select(_2721_i);
                  }
                } else if (_source98.is_Select) {
                  DAST._IExpression _2738___mcc_h68 = _source98.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _2739___mcc_h69 = _source98.dtor_field;
                } else {
                  DAST._IExpression _2740___mcc_h72 = _source98.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _2741___mcc_h73 = _source98.dtor_indices;
                }
              } else if (_source97.is_If) {
                DAST._IExpression _2742___mcc_h76 = _source97.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2743___mcc_h77 = _source97.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _2744___mcc_h78 = _source97.dtor_els;
              } else if (_source97.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _2745___mcc_h82 = _source97.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _2746___mcc_h83 = _source97.dtor_body;
              } else if (_source97.is_While) {
                DAST._IExpression _2747___mcc_h86 = _source97.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2748___mcc_h87 = _source97.dtor_body;
              } else if (_source97.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _2749___mcc_h90 = _source97.dtor_boundName;
                DAST._IType _2750___mcc_h91 = _source97.dtor_boundType;
                DAST._IExpression _2751___mcc_h92 = _source97.dtor_over;
                Dafny.ISequence<DAST._IStatement> _2752___mcc_h93 = _source97.dtor_body;
              } else if (_source97.is_Call) {
                DAST._IExpression _2753___mcc_h98 = _source97.dtor_on;
                DAST._ICallName _2754___mcc_h99 = _source97.dtor_callName;
                Dafny.ISequence<DAST._IType> _2755___mcc_h100 = _source97.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _2756___mcc_h101 = _source97.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2757___mcc_h102 = _source97.dtor_outs;
              } else if (_source97.is_Return) {
                DAST._IExpression _2758___mcc_h108 = _source97.dtor_expr;
              } else if (_source97.is_EarlyReturn) {
              } else if (_source97.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2759___mcc_h110 = _source97.dtor_toLabel;
              } else if (_source97.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _2760___mcc_h112 = _source97.dtor_body;
              } else if (_source97.is_JumpTailCallStart) {
              } else if (_source97.is_Halt) {
              } else if (_source97.is_Print) {
                DAST._IExpression _2761___mcc_h114 = _source97.dtor_Print_i_a0;
              } else {
                Dafny.ISequence<DAST._IFormal> _2762___mcc_h116 = _source97.dtor_fields;
              }
            }
          } else {
            DAST._IExpression _2763___mcc_h6 = _source96.dtor_value;
          }
        } else if (_source95.is_Assign) {
          DAST._IAssignLhs _2764___mcc_h8 = _source95.dtor_lhs;
          DAST._IExpression _2765___mcc_h9 = _source95.dtor_value;
        } else if (_source95.is_If) {
          DAST._IExpression _2766___mcc_h12 = _source95.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2767___mcc_h13 = _source95.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2768___mcc_h14 = _source95.dtor_els;
        } else if (_source95.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2769___mcc_h18 = _source95.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2770___mcc_h19 = _source95.dtor_body;
        } else if (_source95.is_While) {
          DAST._IExpression _2771___mcc_h22 = _source95.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2772___mcc_h23 = _source95.dtor_body;
        } else if (_source95.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2773___mcc_h26 = _source95.dtor_boundName;
          DAST._IType _2774___mcc_h27 = _source95.dtor_boundType;
          DAST._IExpression _2775___mcc_h28 = _source95.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2776___mcc_h29 = _source95.dtor_body;
        } else if (_source95.is_Call) {
          DAST._IExpression _2777___mcc_h34 = _source95.dtor_on;
          DAST._ICallName _2778___mcc_h35 = _source95.dtor_callName;
          Dafny.ISequence<DAST._IType> _2779___mcc_h36 = _source95.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2780___mcc_h37 = _source95.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2781___mcc_h38 = _source95.dtor_outs;
        } else if (_source95.is_Return) {
          DAST._IExpression _2782___mcc_h44 = _source95.dtor_expr;
        } else if (_source95.is_EarlyReturn) {
        } else if (_source95.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2783___mcc_h46 = _source95.dtor_toLabel;
        } else if (_source95.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2784___mcc_h48 = _source95.dtor_body;
        } else if (_source95.is_JumpTailCallStart) {
        } else if (_source95.is_Halt) {
        } else if (_source95.is_Print) {
          DAST._IExpression _2785___mcc_h50 = _source95.dtor_Print_i_a0;
        } else {
          Dafny.ISequence<DAST._IFormal> _2786___mcc_h52 = _source95.dtor_fields;
        }
        RAST._IExpr _2787_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2788_recIdents;
        DCOMP._IEnvironment _2789_newEnv2;
        RAST._IExpr _out107;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out108;
        DCOMP._IEnvironment _out109;
        (this).GenStmt(_2723_stmt, selfIdent, newEnv, (isLast) && ((_2721_i) == ((new BigInteger((_2722_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out107, out _out108, out _out109);
        _2787_stmtExpr = _out107;
        _2788_recIdents = _out108;
        _2789_newEnv2 = _out109;
        newEnv = _2789_newEnv2;
        DAST._IStatement _source100 = _2723_stmt;
        if (_source100.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2790___mcc_h118 = _source100.dtor_name;
          DAST._IType _2791___mcc_h119 = _source100.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2792___mcc_h120 = _source100.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2793_name = _2790___mcc_h118;
          {
            _2720_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2720_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(DCOMP.__default.escapeName(_2793_name)));
          }
        } else if (_source100.is_Assign) {
          DAST._IAssignLhs _2794___mcc_h124 = _source100.dtor_lhs;
          DAST._IExpression _2795___mcc_h125 = _source100.dtor_value;
        } else if (_source100.is_If) {
          DAST._IExpression _2796___mcc_h128 = _source100.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2797___mcc_h129 = _source100.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2798___mcc_h130 = _source100.dtor_els;
        } else if (_source100.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2799___mcc_h134 = _source100.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2800___mcc_h135 = _source100.dtor_body;
        } else if (_source100.is_While) {
          DAST._IExpression _2801___mcc_h138 = _source100.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2802___mcc_h139 = _source100.dtor_body;
        } else if (_source100.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2803___mcc_h142 = _source100.dtor_boundName;
          DAST._IType _2804___mcc_h143 = _source100.dtor_boundType;
          DAST._IExpression _2805___mcc_h144 = _source100.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2806___mcc_h145 = _source100.dtor_body;
        } else if (_source100.is_Call) {
          DAST._IExpression _2807___mcc_h150 = _source100.dtor_on;
          DAST._ICallName _2808___mcc_h151 = _source100.dtor_callName;
          Dafny.ISequence<DAST._IType> _2809___mcc_h152 = _source100.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2810___mcc_h153 = _source100.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2811___mcc_h154 = _source100.dtor_outs;
        } else if (_source100.is_Return) {
          DAST._IExpression _2812___mcc_h160 = _source100.dtor_expr;
        } else if (_source100.is_EarlyReturn) {
        } else if (_source100.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2813___mcc_h162 = _source100.dtor_toLabel;
        } else if (_source100.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2814___mcc_h164 = _source100.dtor_body;
        } else if (_source100.is_JumpTailCallStart) {
        } else if (_source100.is_Halt) {
        } else if (_source100.is_Print) {
          DAST._IExpression _2815___mcc_h166 = _source100.dtor_Print_i_a0;
        } else {
          Dafny.ISequence<DAST._IFormal> _2816___mcc_h168 = _source100.dtor_fields;
        }
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2788_recIdents, _2720_declarations));
        generated = (generated).Then(_2787_stmtExpr);
        _2721_i = (_2721_i) + (BigInteger.One);
      }
    }
    public void GenAssignLhs(DAST._IAssignLhs lhs, RAST._IExpr rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out RAST._IExpr generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      newEnv = env;
      DAST._IAssignLhs _source101 = lhs;
      if (_source101.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2817___mcc_h0 = _source101.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source102 = _2817___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2818___mcc_h1 = _source102;
        Dafny.ISequence<Dafny.Rune> _2819_id = _2818___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _2820_idRust;
          _2820_idRust = DCOMP.__default.escapeName(_2819_id);
          if (((env).IsBorrowed(_2820_idRust)) || ((env).IsBorrowedMut(_2820_idRust))) {
            generated = RAST.__default.AssignVar(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), _2820_idRust), rhs);
          } else {
            generated = RAST.__default.AssignVar(_2820_idRust, rhs);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2820_idRust);
          needsIIFE = false;
        }
      } else if (_source101.is_Select) {
        DAST._IExpression _2821___mcc_h2 = _source101.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2822___mcc_h3 = _source101.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2823_field = _2822___mcc_h3;
        DAST._IExpression _2824_on = _2821___mcc_h2;
        {
          Dafny.ISequence<Dafny.Rune> _2825_fieldName;
          _2825_fieldName = DCOMP.__default.escapeName(_2823_field);
          RAST._IExpr _2826_onExpr;
          DCOMP._IOwnership _2827_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2828_recIdents;
          RAST._IExpr _out110;
          DCOMP._IOwnership _out111;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out112;
          (this).GenExpr(_2824_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowedMut(), out _out110, out _out111, out _out112);
          _2826_onExpr = _out110;
          _2827_onOwned = _out111;
          _2828_recIdents = _out112;
          generated = RAST.__default.AssignMember(_2826_onExpr, _2825_fieldName, rhs);
          RAST._IExpr _source103 = _2826_onExpr;
          if (_source103.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2829___mcc_h6 = _source103.dtor_content;
          } else if (_source103.is_ExprFromType) {
            RAST._IType _2830___mcc_h8 = _source103.dtor_tpe;
          } else if (_source103.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2831___mcc_h10 = _source103.dtor_name;
            if (object.Equals(_2831___mcc_h10, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
              Dafny.ISequence<Dafny.Rune> _2832_isAssignedVar;
              _2832_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_2825_fieldName);
              if (((newEnv).dtor_names).Contains(_2832_isAssignedVar)) {
                generated = ((RAST.__default.dafny__runtime).MSel((this).update__field__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements((this).thisInConstructor, RAST.Expr.create_Identifier(_2825_fieldName), RAST.Expr.create_Identifier(_2832_isAssignedVar), rhs));
                newEnv = (newEnv).RemoveAssigned(_2832_isAssignedVar);
              }
            } else {
            }
          } else if (_source103.is_Match) {
            RAST._IExpr _2833___mcc_h12 = _source103.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2834___mcc_h13 = _source103.dtor_cases;
          } else if (_source103.is_StmtExpr) {
            RAST._IExpr _2835___mcc_h16 = _source103.dtor_stmt;
            RAST._IExpr _2836___mcc_h17 = _source103.dtor_rhs;
          } else if (_source103.is_Block) {
            RAST._IExpr _2837___mcc_h20 = _source103.dtor_underlying;
          } else if (_source103.is_StructBuild) {
            RAST._IExpr _2838___mcc_h22 = _source103.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2839___mcc_h23 = _source103.dtor_assignments;
          } else if (_source103.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2840___mcc_h26 = _source103.dtor_arguments;
          } else if (_source103.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2841___mcc_h28 = _source103.dtor_op1;
            RAST._IExpr _2842___mcc_h29 = _source103.dtor_underlying;
            DAST.Format._IUnaryOpFormat _2843___mcc_h30 = _source103.dtor_format;
            if (object.Equals(_2841___mcc_h28, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut"))) {
              RAST._IExpr _source104 = _2842___mcc_h29;
              if (_source104.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _2844___mcc_h34 = _source104.dtor_content;
              } else if (_source104.is_ExprFromType) {
                RAST._IType _2845___mcc_h36 = _source104.dtor_tpe;
              } else if (_source104.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _2846___mcc_h38 = _source104.dtor_name;
                if (object.Equals(_2846___mcc_h38, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                  Dafny.ISequence<Dafny.Rune> _2847_isAssignedVar;
                  _2847_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_2825_fieldName);
                  if (((newEnv).dtor_names).Contains(_2847_isAssignedVar)) {
                    generated = ((RAST.__default.dafny__runtime).MSel((this).update__field__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements((this).thisInConstructor, RAST.Expr.create_Identifier(_2825_fieldName), RAST.Expr.create_Identifier(_2847_isAssignedVar), rhs));
                    newEnv = (newEnv).RemoveAssigned(_2847_isAssignedVar);
                  }
                } else {
                }
              } else if (_source104.is_Match) {
                RAST._IExpr _2848___mcc_h40 = _source104.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _2849___mcc_h41 = _source104.dtor_cases;
              } else if (_source104.is_StmtExpr) {
                RAST._IExpr _2850___mcc_h44 = _source104.dtor_stmt;
                RAST._IExpr _2851___mcc_h45 = _source104.dtor_rhs;
              } else if (_source104.is_Block) {
                RAST._IExpr _2852___mcc_h48 = _source104.dtor_underlying;
              } else if (_source104.is_StructBuild) {
                RAST._IExpr _2853___mcc_h50 = _source104.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _2854___mcc_h51 = _source104.dtor_assignments;
              } else if (_source104.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _2855___mcc_h54 = _source104.dtor_arguments;
              } else if (_source104.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _2856___mcc_h56 = _source104.dtor_op1;
                RAST._IExpr _2857___mcc_h57 = _source104.dtor_underlying;
                DAST.Format._IUnaryOpFormat _2858___mcc_h58 = _source104.dtor_format;
              } else if (_source104.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _2859___mcc_h62 = _source104.dtor_op2;
                RAST._IExpr _2860___mcc_h63 = _source104.dtor_left;
                RAST._IExpr _2861___mcc_h64 = _source104.dtor_right;
                DAST.Format._IBinaryOpFormat _2862___mcc_h65 = _source104.dtor_format2;
              } else if (_source104.is_TypeAscription) {
                RAST._IExpr _2863___mcc_h70 = _source104.dtor_left;
                RAST._IType _2864___mcc_h71 = _source104.dtor_tpe;
              } else if (_source104.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _2865___mcc_h74 = _source104.dtor_value;
              } else if (_source104.is_LiteralBool) {
                bool _2866___mcc_h76 = _source104.dtor_bvalue;
              } else if (_source104.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _2867___mcc_h78 = _source104.dtor_value;
                bool _2868___mcc_h79 = _source104.dtor_binary;
              } else if (_source104.is_DeclareVar) {
                RAST._IDeclareType _2869___mcc_h82 = _source104.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _2870___mcc_h83 = _source104.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _2871___mcc_h84 = _source104.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _2872___mcc_h85 = _source104.dtor_optRhs;
              } else if (_source104.is_Assign) {
                Std.Wrappers._IOption<RAST._IAssignLhs> _2873___mcc_h90 = _source104.dtor_names;
                RAST._IExpr _2874___mcc_h91 = _source104.dtor_rhs;
              } else if (_source104.is_IfExpr) {
                RAST._IExpr _2875___mcc_h94 = _source104.dtor_cond;
                RAST._IExpr _2876___mcc_h95 = _source104.dtor_thn;
                RAST._IExpr _2877___mcc_h96 = _source104.dtor_els;
              } else if (_source104.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _2878___mcc_h100 = _source104.dtor_optCond;
                RAST._IExpr _2879___mcc_h101 = _source104.dtor_underlying;
              } else if (_source104.is_For) {
                Dafny.ISequence<Dafny.Rune> _2880___mcc_h104 = _source104.dtor_name;
                RAST._IExpr _2881___mcc_h105 = _source104.dtor_range;
                RAST._IExpr _2882___mcc_h106 = _source104.dtor_body;
              } else if (_source104.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _2883___mcc_h110 = _source104.dtor_lbl;
                RAST._IExpr _2884___mcc_h111 = _source104.dtor_underlying;
              } else if (_source104.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2885___mcc_h114 = _source104.dtor_optLbl;
              } else if (_source104.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2886___mcc_h116 = _source104.dtor_optLbl;
              } else if (_source104.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _2887___mcc_h118 = _source104.dtor_optExpr;
              } else if (_source104.is_CallType) {
                RAST._IExpr _2888___mcc_h120 = _source104.dtor_obj;
                Dafny.ISequence<RAST._IType> _2889___mcc_h121 = _source104.dtor_typeParameters;
              } else if (_source104.is_Call) {
                RAST._IExpr _2890___mcc_h124 = _source104.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _2891___mcc_h125 = _source104.dtor_arguments;
              } else if (_source104.is_Select) {
                RAST._IExpr _2892___mcc_h128 = _source104.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _2893___mcc_h129 = _source104.dtor_name;
              } else if (_source104.is_MemberSelect) {
                RAST._IExpr _2894___mcc_h132 = _source104.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _2895___mcc_h133 = _source104.dtor_name;
              } else {
                Dafny.ISequence<RAST._IFormal> _2896___mcc_h136 = _source104.dtor_params;
                Std.Wrappers._IOption<RAST._IType> _2897___mcc_h137 = _source104.dtor_retType;
                RAST._IExpr _2898___mcc_h138 = _source104.dtor_body;
              }
            } else {
            }
          } else if (_source103.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2899___mcc_h142 = _source103.dtor_op2;
            RAST._IExpr _2900___mcc_h143 = _source103.dtor_left;
            RAST._IExpr _2901___mcc_h144 = _source103.dtor_right;
            DAST.Format._IBinaryOpFormat _2902___mcc_h145 = _source103.dtor_format2;
          } else if (_source103.is_TypeAscription) {
            RAST._IExpr _2903___mcc_h150 = _source103.dtor_left;
            RAST._IType _2904___mcc_h151 = _source103.dtor_tpe;
          } else if (_source103.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2905___mcc_h154 = _source103.dtor_value;
          } else if (_source103.is_LiteralBool) {
            bool _2906___mcc_h156 = _source103.dtor_bvalue;
          } else if (_source103.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2907___mcc_h158 = _source103.dtor_value;
            bool _2908___mcc_h159 = _source103.dtor_binary;
          } else if (_source103.is_DeclareVar) {
            RAST._IDeclareType _2909___mcc_h162 = _source103.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2910___mcc_h163 = _source103.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2911___mcc_h164 = _source103.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2912___mcc_h165 = _source103.dtor_optRhs;
          } else if (_source103.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _2913___mcc_h170 = _source103.dtor_names;
            RAST._IExpr _2914___mcc_h171 = _source103.dtor_rhs;
          } else if (_source103.is_IfExpr) {
            RAST._IExpr _2915___mcc_h174 = _source103.dtor_cond;
            RAST._IExpr _2916___mcc_h175 = _source103.dtor_thn;
            RAST._IExpr _2917___mcc_h176 = _source103.dtor_els;
          } else if (_source103.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2918___mcc_h180 = _source103.dtor_optCond;
            RAST._IExpr _2919___mcc_h181 = _source103.dtor_underlying;
          } else if (_source103.is_For) {
            Dafny.ISequence<Dafny.Rune> _2920___mcc_h184 = _source103.dtor_name;
            RAST._IExpr _2921___mcc_h185 = _source103.dtor_range;
            RAST._IExpr _2922___mcc_h186 = _source103.dtor_body;
          } else if (_source103.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2923___mcc_h190 = _source103.dtor_lbl;
            RAST._IExpr _2924___mcc_h191 = _source103.dtor_underlying;
          } else if (_source103.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2925___mcc_h194 = _source103.dtor_optLbl;
          } else if (_source103.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2926___mcc_h196 = _source103.dtor_optLbl;
          } else if (_source103.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2927___mcc_h198 = _source103.dtor_optExpr;
          } else if (_source103.is_CallType) {
            RAST._IExpr _2928___mcc_h200 = _source103.dtor_obj;
            Dafny.ISequence<RAST._IType> _2929___mcc_h201 = _source103.dtor_typeParameters;
          } else if (_source103.is_Call) {
            RAST._IExpr _2930___mcc_h204 = _source103.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2931___mcc_h205 = _source103.dtor_arguments;
          } else if (_source103.is_Select) {
            RAST._IExpr _2932___mcc_h208 = _source103.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2933___mcc_h209 = _source103.dtor_name;
          } else if (_source103.is_MemberSelect) {
            RAST._IExpr _2934___mcc_h212 = _source103.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _2935___mcc_h213 = _source103.dtor_name;
          } else {
            Dafny.ISequence<RAST._IFormal> _2936___mcc_h216 = _source103.dtor_params;
            Std.Wrappers._IOption<RAST._IType> _2937___mcc_h217 = _source103.dtor_retType;
            RAST._IExpr _2938___mcc_h218 = _source103.dtor_body;
          }
          readIdents = _2828_recIdents;
          needsIIFE = false;
        }
      } else {
        DAST._IExpression _2939___mcc_h4 = _source101.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _2940___mcc_h5 = _source101.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _2941_indices = _2940___mcc_h5;
        DAST._IExpression _2942_on = _2939___mcc_h4;
        {
          RAST._IExpr _2943_onExpr;
          DCOMP._IOwnership _2944_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2945_recIdents;
          RAST._IExpr _out113;
          DCOMP._IOwnership _out114;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out115;
          (this).GenExpr(_2942_on, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out113, out _out114, out _out115);
          _2943_onExpr = _out113;
          _2944_onOwned = _out114;
          _2945_recIdents = _out115;
          readIdents = _2945_recIdents;
          _2943_onExpr = ((this).modify__macro).Apply1(_2943_onExpr);
          RAST._IExpr _2946_r;
          _2946_r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          Dafny.ISequence<RAST._IExpr> _2947_indicesExpr;
          _2947_indicesExpr = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi28 = new BigInteger((_2941_indices).Count);
          for (BigInteger _2948_i = BigInteger.Zero; _2948_i < _hi28; _2948_i++) {
            RAST._IExpr _2949_idx;
            DCOMP._IOwnership _2950___v67;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2951_recIdentsIdx;
            RAST._IExpr _out116;
            DCOMP._IOwnership _out117;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out118;
            (this).GenExpr((_2941_indices).Select(_2948_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out116, out _out117, out _out118);
            _2949_idx = _out116;
            _2950___v67 = _out117;
            _2951_recIdentsIdx = _out118;
            Dafny.ISequence<Dafny.Rune> _2952_varName;
            _2952_varName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__idx"), Std.Strings.__default.OfNat(_2948_i));
            _2947_indicesExpr = Dafny.Sequence<RAST._IExpr>.Concat(_2947_indicesExpr, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(_2952_varName)));
            _2946_r = (_2946_r).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _2952_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<usize as ::dafny_runtime::NumCast>::from("), (_2949_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()"))))));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2951_recIdentsIdx);
          }
          if ((new BigInteger((_2941_indices).Count)) > (BigInteger.One)) {
            _2943_onExpr = (_2943_onExpr).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("data"));
          }
          RAST._IExpr _2953_rhs;
          _2953_rhs = rhs;
          var _pat_let_tv12 = env;
          if (((_2943_onExpr).IsLhsIdentifier()) && (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, bool>((_2943_onExpr).LhsIdentifierName(), _pat_let10_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, bool>(_pat_let10_0, _2954_name => (true) && (Dafny.Helpers.Let<Std.Wrappers._IOption<RAST._IType>, bool>((_pat_let_tv12).GetType(_2954_name), _pat_let11_0 => Dafny.Helpers.Let<Std.Wrappers._IOption<RAST._IType>, bool>(_pat_let11_0, _2955_tpe => ((_2955_tpe).is_Some) && (((_2955_tpe).dtor_value).IsUninitArray())))))))) {
            _2953_rhs = RAST.__default.MaybeUninitNew(_2953_rhs);
          }
          generated = (_2946_r).Then(RAST.Expr.create_Assign(Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_Index(_2943_onExpr, _2947_indicesExpr)), _2953_rhs));
          needsIIFE = true;
        }
      }
    }
    public void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source105 = stmt;
      if (_source105.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _2956___mcc_h0 = _source105.dtor_name;
        DAST._IType _2957___mcc_h1 = _source105.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _2958___mcc_h2 = _source105.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source106 = _2958___mcc_h2;
        if (_source106.is_None) {
          DAST._IType _2959_typ = _2957___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2960_name = _2956___mcc_h0;
          {
            DAST._IStatement _2961_newStmt;
            _2961_newStmt = DAST.Statement.create_DeclareVar(_2960_name, _2959_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_2959_typ)));
            RAST._IExpr _out119;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out120;
            DCOMP._IEnvironment _out121;
            (this).GenStmt(_2961_newStmt, selfIdent, env, isLast, earlyReturn, out _out119, out _out120, out _out121);
            generated = _out119;
            readIdents = _out120;
            newEnv = _out121;
          }
        } else {
          DAST._IExpression _2962___mcc_h3 = _source106.dtor_value;
          DAST._IExpression _2963_expression = _2962___mcc_h3;
          DAST._IType _2964_typ = _2957___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _2965_name = _2956___mcc_h0;
          {
            RAST._IType _2966_tpe;
            RAST._IType _out122;
            _out122 = (this).GenType(_2964_typ, true, false);
            _2966_tpe = _out122;
            Dafny.ISequence<Dafny.Rune> _2967_varName;
            _2967_varName = DCOMP.__default.escapeName(_2965_name);
            bool _2968_hasCopySemantics;
            _2968_hasCopySemantics = (_2966_tpe).CanReadWithoutClone();
            if (((_2963_expression).is_InitializationValue) && (!(_2968_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2967_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_2966_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_2967_varName, RAST.__default.MaybePlaceboType(_2966_tpe));
            } else {
              RAST._IExpr _2969_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2970_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_2963_expression).is_InitializationValue) && ((_2966_tpe).IsObjectOrPointer())) {
                _2969_expr = (_2966_tpe).ToNullExpr();
                _2970_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMP._IOwnership _2971_exprOwnership = DCOMP.Ownership.Default();
                RAST._IExpr _out123;
                DCOMP._IOwnership _out124;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out125;
                (this).GenExpr(_2963_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out123, out _out124, out _out125);
                _2969_expr = _out123;
                _2971_exprOwnership = _out124;
                _2970_recIdents = _out125;
              }
              readIdents = _2970_recIdents;
              _2966_tpe = (((_2963_expression).is_NewUninitArray) ? ((_2966_tpe).TypeAtInitialization()) : (_2966_tpe));
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeName(_2965_name), Std.Wrappers.Option<RAST._IType>.create_Some(_2966_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2969_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeName(_2965_name), _2966_tpe);
            }
          }
        }
      } else if (_source105.is_Assign) {
        DAST._IAssignLhs _2972___mcc_h4 = _source105.dtor_lhs;
        DAST._IExpression _2973___mcc_h5 = _source105.dtor_value;
        DAST._IExpression _2974_expression = _2973___mcc_h5;
        DAST._IAssignLhs _2975_lhs = _2972___mcc_h4;
        {
          RAST._IExpr _2976_exprGen;
          DCOMP._IOwnership _2977___v70;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2978_exprIdents;
          RAST._IExpr _out126;
          DCOMP._IOwnership _out127;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out128;
          (this).GenExpr(_2974_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out126, out _out127, out _out128);
          _2976_exprGen = _out126;
          _2977___v70 = _out127;
          _2978_exprIdents = _out128;
          if ((_2975_lhs).is_Ident) {
            Dafny.ISequence<Dafny.Rune> _2979_rustId;
            _2979_rustId = DCOMP.__default.escapeName(((_2975_lhs).dtor_ident));
            Std.Wrappers._IOption<RAST._IType> _2980_tpe;
            _2980_tpe = (env).GetType(_2979_rustId);
            if (((_2980_tpe).is_Some) && ((((_2980_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
              _2976_exprGen = RAST.__default.MaybePlacebo(_2976_exprGen);
            }
          }
          RAST._IExpr _2981_lhsGen;
          bool _2982_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2983_recIdents;
          DCOMP._IEnvironment _2984_resEnv;
          RAST._IExpr _out129;
          bool _out130;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out131;
          DCOMP._IEnvironment _out132;
          (this).GenAssignLhs(_2975_lhs, _2976_exprGen, selfIdent, env, out _out129, out _out130, out _out131, out _out132);
          _2981_lhsGen = _out129;
          _2982_needsIIFE = _out130;
          _2983_recIdents = _out131;
          _2984_resEnv = _out132;
          generated = _2981_lhsGen;
          newEnv = _2984_resEnv;
          if (_2982_needsIIFE) {
            generated = RAST.Expr.create_Block(generated);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2983_recIdents, _2978_exprIdents);
        }
      } else if (_source105.is_If) {
        DAST._IExpression _2985___mcc_h6 = _source105.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _2986___mcc_h7 = _source105.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _2987___mcc_h8 = _source105.dtor_els;
        Dafny.ISequence<DAST._IStatement> _2988_elsDafny = _2987___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _2989_thnDafny = _2986___mcc_h7;
        DAST._IExpression _2990_cond = _2985___mcc_h6;
        {
          RAST._IExpr _2991_cond;
          DCOMP._IOwnership _2992___v71;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2993_recIdents;
          RAST._IExpr _out133;
          DCOMP._IOwnership _out134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out135;
          (this).GenExpr(_2990_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out133, out _out134, out _out135);
          _2991_cond = _out133;
          _2992___v71 = _out134;
          _2993_recIdents = _out135;
          Dafny.ISequence<Dafny.Rune> _2994_condString;
          _2994_condString = (_2991_cond)._ToString(DCOMP.__default.IND);
          readIdents = _2993_recIdents;
          RAST._IExpr _2995_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2996_thnIdents;
          DCOMP._IEnvironment _2997_thnEnv;
          RAST._IExpr _out136;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out137;
          DCOMP._IEnvironment _out138;
          (this).GenStmts(_2989_thnDafny, selfIdent, env, isLast, earlyReturn, out _out136, out _out137, out _out138);
          _2995_thn = _out136;
          _2996_thnIdents = _out137;
          _2997_thnEnv = _out138;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2996_thnIdents);
          RAST._IExpr _2998_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2999_elsIdents;
          DCOMP._IEnvironment _3000_elsEnv;
          RAST._IExpr _out139;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out140;
          DCOMP._IEnvironment _out141;
          (this).GenStmts(_2988_elsDafny, selfIdent, env, isLast, earlyReturn, out _out139, out _out140, out _out141);
          _2998_els = _out139;
          _2999_elsIdents = _out140;
          _3000_elsEnv = _out141;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _2999_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_2991_cond, _2995_thn, _2998_els);
        }
      } else if (_source105.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _3001___mcc_h9 = _source105.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _3002___mcc_h10 = _source105.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3003_body = _3002___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _3004_lbl = _3001___mcc_h9;
        {
          RAST._IExpr _3005_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3006_bodyIdents;
          DCOMP._IEnvironment _3007_env2;
          RAST._IExpr _out142;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out143;
          DCOMP._IEnvironment _out144;
          (this).GenStmts(_3003_body, selfIdent, env, isLast, earlyReturn, out _out142, out _out143, out _out144);
          _3005_body = _out142;
          _3006_bodyIdents = _out143;
          _3007_env2 = _out144;
          readIdents = _3006_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3004_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_3005_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source105.is_While) {
        DAST._IExpression _3008___mcc_h11 = _source105.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3009___mcc_h12 = _source105.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3010_body = _3009___mcc_h12;
        DAST._IExpression _3011_cond = _3008___mcc_h11;
        {
          RAST._IExpr _3012_cond;
          DCOMP._IOwnership _3013___v72;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3014_recIdents;
          RAST._IExpr _out145;
          DCOMP._IOwnership _out146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out147;
          (this).GenExpr(_3011_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out145, out _out146, out _out147);
          _3012_cond = _out145;
          _3013___v72 = _out146;
          _3014_recIdents = _out147;
          readIdents = _3014_recIdents;
          RAST._IExpr _3015_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3016_bodyIdents;
          DCOMP._IEnvironment _3017_bodyEnv;
          RAST._IExpr _out148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out149;
          DCOMP._IEnvironment _out150;
          (this).GenStmts(_3010_body, selfIdent, env, false, earlyReturn, out _out148, out _out149, out _out150);
          _3015_bodyExpr = _out148;
          _3016_bodyIdents = _out149;
          _3017_bodyEnv = _out150;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3016_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3012_cond), _3015_bodyExpr);
        }
      } else if (_source105.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _3018___mcc_h13 = _source105.dtor_boundName;
        DAST._IType _3019___mcc_h14 = _source105.dtor_boundType;
        DAST._IExpression _3020___mcc_h15 = _source105.dtor_over;
        Dafny.ISequence<DAST._IStatement> _3021___mcc_h16 = _source105.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3022_body = _3021___mcc_h16;
        DAST._IExpression _3023_over = _3020___mcc_h15;
        DAST._IType _3024_boundType = _3019___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _3025_boundName = _3018___mcc_h13;
        {
          RAST._IExpr _3026_over;
          DCOMP._IOwnership _3027___v73;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3028_recIdents;
          RAST._IExpr _out151;
          DCOMP._IOwnership _out152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out153;
          (this).GenExpr(_3023_over, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out151, out _out152, out _out153);
          _3026_over = _out151;
          _3027___v73 = _out152;
          _3028_recIdents = _out153;
          RAST._IType _3029_boundTpe;
          RAST._IType _out154;
          _out154 = (this).GenType(_3024_boundType, false, false);
          _3029_boundTpe = _out154;
          readIdents = _3028_recIdents;
          Dafny.ISequence<Dafny.Rune> _3030_boundRName;
          _3030_boundRName = DCOMP.__default.escapeName(_3025_boundName);
          RAST._IExpr _3031_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3032_bodyIdents;
          DCOMP._IEnvironment _3033_bodyEnv;
          RAST._IExpr _out155;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out156;
          DCOMP._IEnvironment _out157;
          (this).GenStmts(_3022_body, selfIdent, (env).AddAssigned(_3030_boundRName, _3029_boundTpe), false, earlyReturn, out _out155, out _out156, out _out157);
          _3031_bodyExpr = _out155;
          _3032_bodyIdents = _out156;
          _3033_bodyEnv = _out157;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3032_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3030_boundRName));
          newEnv = env;
          generated = RAST.Expr.create_For(_3030_boundRName, _3026_over, _3031_bodyExpr);
        }
      } else if (_source105.is_Call) {
        DAST._IExpression _3034___mcc_h17 = _source105.dtor_on;
        DAST._ICallName _3035___mcc_h18 = _source105.dtor_callName;
        Dafny.ISequence<DAST._IType> _3036___mcc_h19 = _source105.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _3037___mcc_h20 = _source105.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3038___mcc_h21 = _source105.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3039_maybeOutVars = _3038___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _3040_args = _3037___mcc_h20;
        Dafny.ISequence<DAST._IType> _3041_typeArgs = _3036___mcc_h19;
        DAST._ICallName _3042_name = _3035___mcc_h18;
        DAST._IExpression _3043_on = _3034___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _3044_onExpr;
          DCOMP._IOwnership _3045___v76;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3046_enclosingIdents;
          RAST._IExpr _out158;
          DCOMP._IOwnership _out159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out160;
          (this).GenExpr(_3043_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out158, out _out159, out _out160);
          _3044_onExpr = _out158;
          _3045___v76 = _out159;
          _3046_enclosingIdents = _out160;
          Dafny.ISequence<RAST._IType> _3047_typeExprs;
          _3047_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_3041_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _3048_typeI;
            _3048_typeI = BigInteger.Zero;
            Dafny.ISequence<RAST._IType> _3049_typeArgsR;
            _3049_typeArgsR = Dafny.Sequence<RAST._IType>.FromElements();
            while ((_3048_typeI) < (new BigInteger((_3041_typeArgs).Count))) {
              RAST._IType _3050_tpe;
              RAST._IType _out161;
              _out161 = (this).GenType((_3041_typeArgs).Select(_3048_typeI), false, false);
              _3050_tpe = _out161;
              _3049_typeArgsR = Dafny.Sequence<RAST._IType>.Concat(_3049_typeArgsR, Dafny.Sequence<RAST._IType>.FromElements(_3050_tpe));
              _3048_typeI = (_3048_typeI) + (BigInteger.One);
            }
          }
          Dafny.ISequence<RAST._IExpr> _3051_argExprs;
          _3051_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi29 = new BigInteger((_3040_args).Count);
          for (BigInteger _3052_i = BigInteger.Zero; _3052_i < _hi29; _3052_i++) {
            DCOMP._IOwnership _3053_argOwnership;
            _3053_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_3042_name).is_CallName) && ((_3052_i) < (new BigInteger((((_3042_name).dtor_signature)).Count)))) {
              RAST._IType _3054_tpe;
              RAST._IType _out162;
              _out162 = (this).GenType(((((_3042_name).dtor_signature)).Select(_3052_i)).dtor_typ, false, false);
              _3054_tpe = _out162;
              if ((_3054_tpe).CanReadWithoutClone()) {
                _3053_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3055_argExpr;
            DCOMP._IOwnership _3056_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3057_argIdents;
            RAST._IExpr _out163;
            DCOMP._IOwnership _out164;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out165;
            (this).GenExpr((_3040_args).Select(_3052_i), selfIdent, env, _3053_argOwnership, out _out163, out _out164, out _out165);
            _3055_argExpr = _out163;
            _3056_ownership = _out164;
            _3057_argIdents = _out165;
            _3051_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3051_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3055_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3057_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3046_enclosingIdents);
          Dafny.ISequence<Dafny.Rune> _3058_renderedName;
          _3058_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source107) => {
            if (_source107.is_CallName) {
              Dafny.ISequence<Dafny.Rune> _3059___mcc_h27 = _source107.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _3060___mcc_h28 = _source107.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _3061___mcc_h29 = _source107.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _3062_name = _3059___mcc_h27;
              return DCOMP.__default.escapeName(_3062_name);
            } else if (_source107.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source107.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source107.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_3042_name);
          DAST._IExpression _source108 = _3043_on;
          if (_source108.is_Literal) {
            DAST._ILiteral _3063___mcc_h30 = _source108.dtor_Literal_i_a0;
            {
              DAST._ICallName _source109 = _3042_name;
              if (_source109.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3064___mcc_h240 = _source109.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3065___mcc_h241 = _source109.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3066___mcc_h242 = _source109.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source110 = _3065___mcc_h241;
                if (_source110.is_None) {
                } else {
                  DAST._IType _3067___mcc_h246 = _source110.dtor_value;
                  DAST._IType _3068_tpe = _3067___mcc_h246;
                  RAST._IType _3069_typ;
                  RAST._IType _out166;
                  _out166 = (this).GenType(_3068_tpe, false, false);
                  _3069_typ = _out166;
                  if ((_3069_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source109.is_MapBuilderAdd) {
              } else if (_source109.is_MapBuilderBuild) {
              } else if (_source109.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3070___mcc_h32 = _source108.dtor_Ident_i_a0;
            {
              DAST._ICallName _source111 = _3042_name;
              if (_source111.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3071___mcc_h248 = _source111.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3072___mcc_h249 = _source111.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3073___mcc_h250 = _source111.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source112 = _3072___mcc_h249;
                if (_source112.is_None) {
                } else {
                  DAST._IType _3074___mcc_h254 = _source112.dtor_value;
                  DAST._IType _3075_tpe = _3074___mcc_h254;
                  RAST._IType _3076_typ;
                  RAST._IType _out167;
                  _out167 = (this).GenType(_3075_tpe, false, false);
                  _3076_typ = _out167;
                  if ((_3076_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source111.is_MapBuilderAdd) {
              } else if (_source111.is_MapBuilderBuild) {
              } else if (_source111.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3077___mcc_h34 = _source108.dtor_Companion_i_a0;
            {
              _3044_onExpr = (_3044_onExpr).MSel(_3058_renderedName);
            }
          } else if (_source108.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _3078___mcc_h36 = _source108.dtor_Tuple_i_a0;
            {
              DAST._ICallName _source113 = _3042_name;
              if (_source113.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3079___mcc_h256 = _source113.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3080___mcc_h257 = _source113.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3081___mcc_h258 = _source113.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source114 = _3080___mcc_h257;
                if (_source114.is_None) {
                } else {
                  DAST._IType _3082___mcc_h262 = _source114.dtor_value;
                  DAST._IType _3083_tpe = _3082___mcc_h262;
                  RAST._IType _3084_typ;
                  RAST._IType _out168;
                  _out168 = (this).GenType(_3083_tpe, false, false);
                  _3084_typ = _out168;
                  if ((_3084_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source113.is_MapBuilderAdd) {
              } else if (_source113.is_MapBuilderBuild) {
              } else if (_source113.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3085___mcc_h38 = _source108.dtor_path;
            Dafny.ISequence<DAST._IType> _3086___mcc_h39 = _source108.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3087___mcc_h40 = _source108.dtor_args;
            {
              DAST._ICallName _source115 = _3042_name;
              if (_source115.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3088___mcc_h264 = _source115.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3089___mcc_h265 = _source115.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3090___mcc_h266 = _source115.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source116 = _3089___mcc_h265;
                if (_source116.is_None) {
                } else {
                  DAST._IType _3091___mcc_h270 = _source116.dtor_value;
                  DAST._IType _3092_tpe = _3091___mcc_h270;
                  RAST._IType _3093_typ;
                  RAST._IType _out169;
                  _out169 = (this).GenType(_3092_tpe, false, false);
                  _3093_typ = _out169;
                  if ((_3093_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source115.is_MapBuilderAdd) {
              } else if (_source115.is_MapBuilderBuild) {
              } else if (_source115.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_NewUninitArray) {
            Dafny.ISequence<DAST._IExpression> _3094___mcc_h44 = _source108.dtor_dims;
            DAST._IType _3095___mcc_h45 = _source108.dtor_typ;
            {
              DAST._ICallName _source117 = _3042_name;
              if (_source117.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3096___mcc_h272 = _source117.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3097___mcc_h273 = _source117.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3098___mcc_h274 = _source117.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source118 = _3097___mcc_h273;
                if (_source118.is_None) {
                } else {
                  DAST._IType _3099___mcc_h278 = _source118.dtor_value;
                  DAST._IType _3100_tpe = _3099___mcc_h278;
                  RAST._IType _3101_typ;
                  RAST._IType _out170;
                  _out170 = (this).GenType(_3100_tpe, false, false);
                  _3101_typ = _out170;
                  if ((_3101_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source117.is_MapBuilderAdd) {
              } else if (_source117.is_MapBuilderBuild) {
              } else if (_source117.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_ArrayIndexToInt) {
            DAST._IExpression _3102___mcc_h48 = _source108.dtor_value;
            {
              DAST._ICallName _source119 = _3042_name;
              if (_source119.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3103___mcc_h280 = _source119.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3104___mcc_h281 = _source119.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3105___mcc_h282 = _source119.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source120 = _3104___mcc_h281;
                if (_source120.is_None) {
                } else {
                  DAST._IType _3106___mcc_h286 = _source120.dtor_value;
                  DAST._IType _3107_tpe = _3106___mcc_h286;
                  RAST._IType _3108_typ;
                  RAST._IType _out171;
                  _out171 = (this).GenType(_3107_tpe, false, false);
                  _3108_typ = _out171;
                  if ((_3108_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source119.is_MapBuilderAdd) {
              } else if (_source119.is_MapBuilderBuild) {
              } else if (_source119.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_FinalizeNewArray) {
            DAST._IExpression _3109___mcc_h50 = _source108.dtor_value;
            DAST._IType _3110___mcc_h51 = _source108.dtor_typ;
            {
              DAST._ICallName _source121 = _3042_name;
              if (_source121.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3111___mcc_h288 = _source121.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3112___mcc_h289 = _source121.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3113___mcc_h290 = _source121.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source122 = _3112___mcc_h289;
                if (_source122.is_None) {
                } else {
                  DAST._IType _3114___mcc_h294 = _source122.dtor_value;
                  DAST._IType _3115_tpe = _3114___mcc_h294;
                  RAST._IType _3116_typ;
                  RAST._IType _out172;
                  _out172 = (this).GenType(_3115_tpe, false, false);
                  _3116_typ = _out172;
                  if ((_3116_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source121.is_MapBuilderAdd) {
              } else if (_source121.is_MapBuilderBuild) {
              } else if (_source121.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_DatatypeValue) {
            DAST._IDatatypeType _3117___mcc_h54 = _source108.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _3118___mcc_h55 = _source108.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _3119___mcc_h56 = _source108.dtor_variant;
            bool _3120___mcc_h57 = _source108.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3121___mcc_h58 = _source108.dtor_contents;
            {
              DAST._ICallName _source123 = _3042_name;
              if (_source123.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3122___mcc_h296 = _source123.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3123___mcc_h297 = _source123.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3124___mcc_h298 = _source123.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source124 = _3123___mcc_h297;
                if (_source124.is_None) {
                } else {
                  DAST._IType _3125___mcc_h302 = _source124.dtor_value;
                  DAST._IType _3126_tpe = _3125___mcc_h302;
                  RAST._IType _3127_typ;
                  RAST._IType _out173;
                  _out173 = (this).GenType(_3126_tpe, false, false);
                  _3127_typ = _out173;
                  if ((_3127_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source123.is_MapBuilderAdd) {
              } else if (_source123.is_MapBuilderBuild) {
              } else if (_source123.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Convert) {
            DAST._IExpression _3128___mcc_h64 = _source108.dtor_value;
            DAST._IType _3129___mcc_h65 = _source108.dtor_from;
            DAST._IType _3130___mcc_h66 = _source108.dtor_typ;
            {
              DAST._ICallName _source125 = _3042_name;
              if (_source125.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3131___mcc_h304 = _source125.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3132___mcc_h305 = _source125.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3133___mcc_h306 = _source125.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source126 = _3132___mcc_h305;
                if (_source126.is_None) {
                } else {
                  DAST._IType _3134___mcc_h310 = _source126.dtor_value;
                  DAST._IType _3135_tpe = _3134___mcc_h310;
                  RAST._IType _3136_typ;
                  RAST._IType _out174;
                  _out174 = (this).GenType(_3135_tpe, false, false);
                  _3136_typ = _out174;
                  if ((_3136_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source125.is_MapBuilderAdd) {
              } else if (_source125.is_MapBuilderBuild) {
              } else if (_source125.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SeqConstruct) {
            DAST._IExpression _3137___mcc_h70 = _source108.dtor_length;
            DAST._IExpression _3138___mcc_h71 = _source108.dtor_elem;
            {
              DAST._ICallName _source127 = _3042_name;
              if (_source127.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3139___mcc_h312 = _source127.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3140___mcc_h313 = _source127.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3141___mcc_h314 = _source127.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source128 = _3140___mcc_h313;
                if (_source128.is_None) {
                } else {
                  DAST._IType _3142___mcc_h318 = _source128.dtor_value;
                  DAST._IType _3143_tpe = _3142___mcc_h318;
                  RAST._IType _3144_typ;
                  RAST._IType _out175;
                  _out175 = (this).GenType(_3143_tpe, false, false);
                  _3144_typ = _out175;
                  if ((_3144_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source127.is_MapBuilderAdd) {
              } else if (_source127.is_MapBuilderBuild) {
              } else if (_source127.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _3145___mcc_h74 = _source108.dtor_elements;
            DAST._IType _3146___mcc_h75 = _source108.dtor_typ;
            {
              DAST._ICallName _source129 = _3042_name;
              if (_source129.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3147___mcc_h320 = _source129.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3148___mcc_h321 = _source129.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3149___mcc_h322 = _source129.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source130 = _3148___mcc_h321;
                if (_source130.is_None) {
                } else {
                  DAST._IType _3150___mcc_h326 = _source130.dtor_value;
                  DAST._IType _3151_tpe = _3150___mcc_h326;
                  RAST._IType _3152_typ;
                  RAST._IType _out176;
                  _out176 = (this).GenType(_3151_tpe, false, false);
                  _3152_typ = _out176;
                  if ((_3152_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source129.is_MapBuilderAdd) {
              } else if (_source129.is_MapBuilderBuild) {
              } else if (_source129.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _3153___mcc_h78 = _source108.dtor_elements;
            {
              DAST._ICallName _source131 = _3042_name;
              if (_source131.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3154___mcc_h328 = _source131.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3155___mcc_h329 = _source131.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3156___mcc_h330 = _source131.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source132 = _3155___mcc_h329;
                if (_source132.is_None) {
                } else {
                  DAST._IType _3157___mcc_h334 = _source132.dtor_value;
                  DAST._IType _3158_tpe = _3157___mcc_h334;
                  RAST._IType _3159_typ;
                  RAST._IType _out177;
                  _out177 = (this).GenType(_3158_tpe, false, false);
                  _3159_typ = _out177;
                  if ((_3159_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source131.is_MapBuilderAdd) {
              } else if (_source131.is_MapBuilderBuild) {
              } else if (_source131.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _3160___mcc_h80 = _source108.dtor_elements;
            {
              DAST._ICallName _source133 = _3042_name;
              if (_source133.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3161___mcc_h336 = _source133.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3162___mcc_h337 = _source133.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3163___mcc_h338 = _source133.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source134 = _3162___mcc_h337;
                if (_source134.is_None) {
                } else {
                  DAST._IType _3164___mcc_h342 = _source134.dtor_value;
                  DAST._IType _3165_tpe = _3164___mcc_h342;
                  RAST._IType _3166_typ;
                  RAST._IType _out178;
                  _out178 = (this).GenType(_3165_tpe, false, false);
                  _3166_typ = _out178;
                  if ((_3166_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source133.is_MapBuilderAdd) {
              } else if (_source133.is_MapBuilderBuild) {
              } else if (_source133.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3167___mcc_h82 = _source108.dtor_mapElems;
            {
              DAST._ICallName _source135 = _3042_name;
              if (_source135.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3168___mcc_h344 = _source135.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3169___mcc_h345 = _source135.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3170___mcc_h346 = _source135.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source136 = _3169___mcc_h345;
                if (_source136.is_None) {
                } else {
                  DAST._IType _3171___mcc_h350 = _source136.dtor_value;
                  DAST._IType _3172_tpe = _3171___mcc_h350;
                  RAST._IType _3173_typ;
                  RAST._IType _out179;
                  _out179 = (this).GenType(_3172_tpe, false, false);
                  _3173_typ = _out179;
                  if ((_3173_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source135.is_MapBuilderAdd) {
              } else if (_source135.is_MapBuilderBuild) {
              } else if (_source135.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MapBuilder) {
            DAST._IType _3174___mcc_h84 = _source108.dtor_keyType;
            DAST._IType _3175___mcc_h85 = _source108.dtor_valueType;
            {
              DAST._ICallName _source137 = _3042_name;
              if (_source137.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3176___mcc_h352 = _source137.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3177___mcc_h353 = _source137.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3178___mcc_h354 = _source137.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source138 = _3177___mcc_h353;
                if (_source138.is_None) {
                } else {
                  DAST._IType _3179___mcc_h358 = _source138.dtor_value;
                  DAST._IType _3180_tpe = _3179___mcc_h358;
                  RAST._IType _3181_typ;
                  RAST._IType _out180;
                  _out180 = (this).GenType(_3180_tpe, false, false);
                  _3181_typ = _out180;
                  if ((_3181_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source137.is_MapBuilderAdd) {
              } else if (_source137.is_MapBuilderBuild) {
              } else if (_source137.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SeqUpdate) {
            DAST._IExpression _3182___mcc_h88 = _source108.dtor_expr;
            DAST._IExpression _3183___mcc_h89 = _source108.dtor_indexExpr;
            DAST._IExpression _3184___mcc_h90 = _source108.dtor_value;
            {
              DAST._ICallName _source139 = _3042_name;
              if (_source139.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3185___mcc_h360 = _source139.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3186___mcc_h361 = _source139.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3187___mcc_h362 = _source139.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source140 = _3186___mcc_h361;
                if (_source140.is_None) {
                } else {
                  DAST._IType _3188___mcc_h366 = _source140.dtor_value;
                  DAST._IType _3189_tpe = _3188___mcc_h366;
                  RAST._IType _3190_typ;
                  RAST._IType _out181;
                  _out181 = (this).GenType(_3189_tpe, false, false);
                  _3190_typ = _out181;
                  if ((_3190_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source139.is_MapBuilderAdd) {
              } else if (_source139.is_MapBuilderBuild) {
              } else if (_source139.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MapUpdate) {
            DAST._IExpression _3191___mcc_h94 = _source108.dtor_expr;
            DAST._IExpression _3192___mcc_h95 = _source108.dtor_indexExpr;
            DAST._IExpression _3193___mcc_h96 = _source108.dtor_value;
            {
              DAST._ICallName _source141 = _3042_name;
              if (_source141.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3194___mcc_h368 = _source141.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3195___mcc_h369 = _source141.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3196___mcc_h370 = _source141.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source142 = _3195___mcc_h369;
                if (_source142.is_None) {
                } else {
                  DAST._IType _3197___mcc_h374 = _source142.dtor_value;
                  DAST._IType _3198_tpe = _3197___mcc_h374;
                  RAST._IType _3199_typ;
                  RAST._IType _out182;
                  _out182 = (this).GenType(_3198_tpe, false, false);
                  _3199_typ = _out182;
                  if ((_3199_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source141.is_MapBuilderAdd) {
              } else if (_source141.is_MapBuilderBuild) {
              } else if (_source141.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SetBuilder) {
            DAST._IType _3200___mcc_h100 = _source108.dtor_elemType;
            {
              DAST._ICallName _source143 = _3042_name;
              if (_source143.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3201___mcc_h376 = _source143.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3202___mcc_h377 = _source143.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3203___mcc_h378 = _source143.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source144 = _3202___mcc_h377;
                if (_source144.is_None) {
                } else {
                  DAST._IType _3204___mcc_h382 = _source144.dtor_value;
                  DAST._IType _3205_tpe = _3204___mcc_h382;
                  RAST._IType _3206_typ;
                  RAST._IType _out183;
                  _out183 = (this).GenType(_3205_tpe, false, false);
                  _3206_typ = _out183;
                  if ((_3206_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source143.is_MapBuilderAdd) {
              } else if (_source143.is_MapBuilderBuild) {
              } else if (_source143.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_ToMultiset) {
            DAST._IExpression _3207___mcc_h102 = _source108.dtor_ToMultiset_i_a0;
            {
              DAST._ICallName _source145 = _3042_name;
              if (_source145.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3208___mcc_h384 = _source145.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3209___mcc_h385 = _source145.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3210___mcc_h386 = _source145.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source146 = _3209___mcc_h385;
                if (_source146.is_None) {
                } else {
                  DAST._IType _3211___mcc_h390 = _source146.dtor_value;
                  DAST._IType _3212_tpe = _3211___mcc_h390;
                  RAST._IType _3213_typ;
                  RAST._IType _out184;
                  _out184 = (this).GenType(_3212_tpe, false, false);
                  _3213_typ = _out184;
                  if ((_3213_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source145.is_MapBuilderAdd) {
              } else if (_source145.is_MapBuilderBuild) {
              } else if (_source145.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_This) {
            {
              DAST._ICallName _source147 = _3042_name;
              if (_source147.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3214___mcc_h392 = _source147.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3215___mcc_h393 = _source147.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3216___mcc_h394 = _source147.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source148 = _3215___mcc_h393;
                if (_source148.is_None) {
                } else {
                  DAST._IType _3217___mcc_h398 = _source148.dtor_value;
                  DAST._IType _3218_tpe = _3217___mcc_h398;
                  RAST._IType _3219_typ;
                  RAST._IType _out185;
                  _out185 = (this).GenType(_3218_tpe, false, false);
                  _3219_typ = _out185;
                  if ((_3219_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source147.is_MapBuilderAdd) {
              } else if (_source147.is_MapBuilderBuild) {
              } else if (_source147.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Ite) {
            DAST._IExpression _3220___mcc_h104 = _source108.dtor_cond;
            DAST._IExpression _3221___mcc_h105 = _source108.dtor_thn;
            DAST._IExpression _3222___mcc_h106 = _source108.dtor_els;
            {
              DAST._ICallName _source149 = _3042_name;
              if (_source149.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3223___mcc_h400 = _source149.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3224___mcc_h401 = _source149.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3225___mcc_h402 = _source149.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source150 = _3224___mcc_h401;
                if (_source150.is_None) {
                } else {
                  DAST._IType _3226___mcc_h406 = _source150.dtor_value;
                  DAST._IType _3227_tpe = _3226___mcc_h406;
                  RAST._IType _3228_typ;
                  RAST._IType _out186;
                  _out186 = (this).GenType(_3227_tpe, false, false);
                  _3228_typ = _out186;
                  if ((_3228_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source149.is_MapBuilderAdd) {
              } else if (_source149.is_MapBuilderBuild) {
              } else if (_source149.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_UnOp) {
            DAST._IUnaryOp _3229___mcc_h110 = _source108.dtor_unOp;
            DAST._IExpression _3230___mcc_h111 = _source108.dtor_expr;
            DAST.Format._IUnaryOpFormat _3231___mcc_h112 = _source108.dtor_format1;
            {
              DAST._ICallName _source151 = _3042_name;
              if (_source151.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3232___mcc_h408 = _source151.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3233___mcc_h409 = _source151.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3234___mcc_h410 = _source151.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source152 = _3233___mcc_h409;
                if (_source152.is_None) {
                } else {
                  DAST._IType _3235___mcc_h414 = _source152.dtor_value;
                  DAST._IType _3236_tpe = _3235___mcc_h414;
                  RAST._IType _3237_typ;
                  RAST._IType _out187;
                  _out187 = (this).GenType(_3236_tpe, false, false);
                  _3237_typ = _out187;
                  if ((_3237_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source151.is_MapBuilderAdd) {
              } else if (_source151.is_MapBuilderBuild) {
              } else if (_source151.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_BinOp) {
            DAST._IBinOp _3238___mcc_h116 = _source108.dtor_op;
            DAST._IExpression _3239___mcc_h117 = _source108.dtor_left;
            DAST._IExpression _3240___mcc_h118 = _source108.dtor_right;
            DAST.Format._IBinaryOpFormat _3241___mcc_h119 = _source108.dtor_format2;
            {
              DAST._ICallName _source153 = _3042_name;
              if (_source153.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3242___mcc_h416 = _source153.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3243___mcc_h417 = _source153.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3244___mcc_h418 = _source153.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source154 = _3243___mcc_h417;
                if (_source154.is_None) {
                } else {
                  DAST._IType _3245___mcc_h422 = _source154.dtor_value;
                  DAST._IType _3246_tpe = _3245___mcc_h422;
                  RAST._IType _3247_typ;
                  RAST._IType _out188;
                  _out188 = (this).GenType(_3246_tpe, false, false);
                  _3247_typ = _out188;
                  if ((_3247_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source153.is_MapBuilderAdd) {
              } else if (_source153.is_MapBuilderBuild) {
              } else if (_source153.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_ArrayLen) {
            DAST._IExpression _3248___mcc_h124 = _source108.dtor_expr;
            DAST._IType _3249___mcc_h125 = _source108.dtor_exprType;
            BigInteger _3250___mcc_h126 = _source108.dtor_dim;
            bool _3251___mcc_h127 = _source108.dtor_native;
            {
              DAST._ICallName _source155 = _3042_name;
              if (_source155.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3252___mcc_h424 = _source155.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3253___mcc_h425 = _source155.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3254___mcc_h426 = _source155.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source156 = _3253___mcc_h425;
                if (_source156.is_None) {
                } else {
                  DAST._IType _3255___mcc_h430 = _source156.dtor_value;
                  DAST._IType _3256_tpe = _3255___mcc_h430;
                  RAST._IType _3257_typ;
                  RAST._IType _out189;
                  _out189 = (this).GenType(_3256_tpe, false, false);
                  _3257_typ = _out189;
                  if ((_3257_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source155.is_MapBuilderAdd) {
              } else if (_source155.is_MapBuilderBuild) {
              } else if (_source155.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MapKeys) {
            DAST._IExpression _3258___mcc_h132 = _source108.dtor_expr;
            {
              DAST._ICallName _source157 = _3042_name;
              if (_source157.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3259___mcc_h432 = _source157.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3260___mcc_h433 = _source157.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3261___mcc_h434 = _source157.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source158 = _3260___mcc_h433;
                if (_source158.is_None) {
                } else {
                  DAST._IType _3262___mcc_h438 = _source158.dtor_value;
                  DAST._IType _3263_tpe = _3262___mcc_h438;
                  RAST._IType _3264_typ;
                  RAST._IType _out190;
                  _out190 = (this).GenType(_3263_tpe, false, false);
                  _3264_typ = _out190;
                  if ((_3264_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source157.is_MapBuilderAdd) {
              } else if (_source157.is_MapBuilderBuild) {
              } else if (_source157.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_MapValues) {
            DAST._IExpression _3265___mcc_h134 = _source108.dtor_expr;
            {
              DAST._ICallName _source159 = _3042_name;
              if (_source159.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3266___mcc_h440 = _source159.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3267___mcc_h441 = _source159.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3268___mcc_h442 = _source159.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source160 = _3267___mcc_h441;
                if (_source160.is_None) {
                } else {
                  DAST._IType _3269___mcc_h446 = _source160.dtor_value;
                  DAST._IType _3270_tpe = _3269___mcc_h446;
                  RAST._IType _3271_typ;
                  RAST._IType _out191;
                  _out191 = (this).GenType(_3270_tpe, false, false);
                  _3271_typ = _out191;
                  if ((_3271_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source159.is_MapBuilderAdd) {
              } else if (_source159.is_MapBuilderBuild) {
              } else if (_source159.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Select) {
            DAST._IExpression _3272___mcc_h136 = _source108.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3273___mcc_h137 = _source108.dtor_field;
            bool _3274___mcc_h138 = _source108.dtor_isConstant;
            bool _3275___mcc_h139 = _source108.dtor_onDatatype;
            DAST._IType _3276___mcc_h140 = _source108.dtor_fieldType;
            {
              DAST._ICallName _source161 = _3042_name;
              if (_source161.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3277___mcc_h448 = _source161.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3278___mcc_h449 = _source161.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3279___mcc_h450 = _source161.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source162 = _3278___mcc_h449;
                if (_source162.is_None) {
                } else {
                  DAST._IType _3280___mcc_h454 = _source162.dtor_value;
                  DAST._IType _3281_tpe = _3280___mcc_h454;
                  RAST._IType _3282_typ;
                  RAST._IType _out192;
                  _out192 = (this).GenType(_3281_tpe, false, false);
                  _3282_typ = _out192;
                  if ((_3282_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source161.is_MapBuilderAdd) {
              } else if (_source161.is_MapBuilderBuild) {
              } else if (_source161.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SelectFn) {
            DAST._IExpression _3283___mcc_h146 = _source108.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _3284___mcc_h147 = _source108.dtor_field;
            bool _3285___mcc_h148 = _source108.dtor_onDatatype;
            bool _3286___mcc_h149 = _source108.dtor_isStatic;
            BigInteger _3287___mcc_h150 = _source108.dtor_arity;
            {
              DAST._ICallName _source163 = _3042_name;
              if (_source163.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3288___mcc_h456 = _source163.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3289___mcc_h457 = _source163.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3290___mcc_h458 = _source163.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source164 = _3289___mcc_h457;
                if (_source164.is_None) {
                } else {
                  DAST._IType _3291___mcc_h462 = _source164.dtor_value;
                  DAST._IType _3292_tpe = _3291___mcc_h462;
                  RAST._IType _3293_typ;
                  RAST._IType _out193;
                  _out193 = (this).GenType(_3292_tpe, false, false);
                  _3293_typ = _out193;
                  if ((_3293_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source163.is_MapBuilderAdd) {
              } else if (_source163.is_MapBuilderBuild) {
              } else if (_source163.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Index) {
            DAST._IExpression _3294___mcc_h156 = _source108.dtor_expr;
            DAST._ICollKind _3295___mcc_h157 = _source108.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _3296___mcc_h158 = _source108.dtor_indices;
            {
              DAST._ICallName _source165 = _3042_name;
              if (_source165.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3297___mcc_h464 = _source165.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3298___mcc_h465 = _source165.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3299___mcc_h466 = _source165.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source166 = _3298___mcc_h465;
                if (_source166.is_None) {
                } else {
                  DAST._IType _3300___mcc_h470 = _source166.dtor_value;
                  DAST._IType _3301_tpe = _3300___mcc_h470;
                  RAST._IType _3302_typ;
                  RAST._IType _out194;
                  _out194 = (this).GenType(_3301_tpe, false, false);
                  _3302_typ = _out194;
                  if ((_3302_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source165.is_MapBuilderAdd) {
              } else if (_source165.is_MapBuilderBuild) {
              } else if (_source165.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_IndexRange) {
            DAST._IExpression _3303___mcc_h162 = _source108.dtor_expr;
            bool _3304___mcc_h163 = _source108.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _3305___mcc_h164 = _source108.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _3306___mcc_h165 = _source108.dtor_high;
            {
              DAST._ICallName _source167 = _3042_name;
              if (_source167.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3307___mcc_h472 = _source167.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3308___mcc_h473 = _source167.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3309___mcc_h474 = _source167.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source168 = _3308___mcc_h473;
                if (_source168.is_None) {
                } else {
                  DAST._IType _3310___mcc_h478 = _source168.dtor_value;
                  DAST._IType _3311_tpe = _3310___mcc_h478;
                  RAST._IType _3312_typ;
                  RAST._IType _out195;
                  _out195 = (this).GenType(_3311_tpe, false, false);
                  _3312_typ = _out195;
                  if ((_3312_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source167.is_MapBuilderAdd) {
              } else if (_source167.is_MapBuilderBuild) {
              } else if (_source167.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_TupleSelect) {
            DAST._IExpression _3313___mcc_h170 = _source108.dtor_expr;
            BigInteger _3314___mcc_h171 = _source108.dtor_index;
            DAST._IType _3315___mcc_h172 = _source108.dtor_fieldType;
            {
              DAST._ICallName _source169 = _3042_name;
              if (_source169.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3316___mcc_h480 = _source169.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3317___mcc_h481 = _source169.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3318___mcc_h482 = _source169.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source170 = _3317___mcc_h481;
                if (_source170.is_None) {
                } else {
                  DAST._IType _3319___mcc_h486 = _source170.dtor_value;
                  DAST._IType _3320_tpe = _3319___mcc_h486;
                  RAST._IType _3321_typ;
                  RAST._IType _out196;
                  _out196 = (this).GenType(_3320_tpe, false, false);
                  _3321_typ = _out196;
                  if ((_3321_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source169.is_MapBuilderAdd) {
              } else if (_source169.is_MapBuilderBuild) {
              } else if (_source169.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Call) {
            DAST._IExpression _3322___mcc_h176 = _source108.dtor_on;
            DAST._ICallName _3323___mcc_h177 = _source108.dtor_callName;
            Dafny.ISequence<DAST._IType> _3324___mcc_h178 = _source108.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _3325___mcc_h179 = _source108.dtor_args;
            {
              DAST._ICallName _source171 = _3042_name;
              if (_source171.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3326___mcc_h488 = _source171.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3327___mcc_h489 = _source171.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3328___mcc_h490 = _source171.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source172 = _3327___mcc_h489;
                if (_source172.is_None) {
                } else {
                  DAST._IType _3329___mcc_h494 = _source172.dtor_value;
                  DAST._IType _3330_tpe = _3329___mcc_h494;
                  RAST._IType _3331_typ;
                  RAST._IType _out197;
                  _out197 = (this).GenType(_3330_tpe, false, false);
                  _3331_typ = _out197;
                  if ((_3331_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source171.is_MapBuilderAdd) {
              } else if (_source171.is_MapBuilderBuild) {
              } else if (_source171.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _3332___mcc_h184 = _source108.dtor_params;
            DAST._IType _3333___mcc_h185 = _source108.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _3334___mcc_h186 = _source108.dtor_body;
            {
              DAST._ICallName _source173 = _3042_name;
              if (_source173.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3335___mcc_h496 = _source173.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3336___mcc_h497 = _source173.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3337___mcc_h498 = _source173.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source174 = _3336___mcc_h497;
                if (_source174.is_None) {
                } else {
                  DAST._IType _3338___mcc_h502 = _source174.dtor_value;
                  DAST._IType _3339_tpe = _3338___mcc_h502;
                  RAST._IType _3340_typ;
                  RAST._IType _out198;
                  _out198 = (this).GenType(_3339_tpe, false, false);
                  _3340_typ = _out198;
                  if ((_3340_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source173.is_MapBuilderAdd) {
              } else if (_source173.is_MapBuilderBuild) {
              } else if (_source173.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3341___mcc_h190 = _source108.dtor_values;
            DAST._IType _3342___mcc_h191 = _source108.dtor_retType;
            DAST._IExpression _3343___mcc_h192 = _source108.dtor_expr;
            {
              DAST._ICallName _source175 = _3042_name;
              if (_source175.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3344___mcc_h504 = _source175.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3345___mcc_h505 = _source175.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3346___mcc_h506 = _source175.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source176 = _3345___mcc_h505;
                if (_source176.is_None) {
                } else {
                  DAST._IType _3347___mcc_h510 = _source176.dtor_value;
                  DAST._IType _3348_tpe = _3347___mcc_h510;
                  RAST._IType _3349_typ;
                  RAST._IType _out199;
                  _out199 = (this).GenType(_3348_tpe, false, false);
                  _3349_typ = _out199;
                  if ((_3349_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source175.is_MapBuilderAdd) {
              } else if (_source175.is_MapBuilderBuild) {
              } else if (_source175.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _3350___mcc_h196 = _source108.dtor_name;
            DAST._IType _3351___mcc_h197 = _source108.dtor_typ;
            DAST._IExpression _3352___mcc_h198 = _source108.dtor_value;
            DAST._IExpression _3353___mcc_h199 = _source108.dtor_iifeBody;
            {
              DAST._ICallName _source177 = _3042_name;
              if (_source177.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3354___mcc_h512 = _source177.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3355___mcc_h513 = _source177.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3356___mcc_h514 = _source177.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source178 = _3355___mcc_h513;
                if (_source178.is_None) {
                } else {
                  DAST._IType _3357___mcc_h518 = _source178.dtor_value;
                  DAST._IType _3358_tpe = _3357___mcc_h518;
                  RAST._IType _3359_typ;
                  RAST._IType _out200;
                  _out200 = (this).GenType(_3358_tpe, false, false);
                  _3359_typ = _out200;
                  if ((_3359_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source177.is_MapBuilderAdd) {
              } else if (_source177.is_MapBuilderBuild) {
              } else if (_source177.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_Apply) {
            DAST._IExpression _3360___mcc_h204 = _source108.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _3361___mcc_h205 = _source108.dtor_args;
            {
              DAST._ICallName _source179 = _3042_name;
              if (_source179.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3362___mcc_h520 = _source179.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3363___mcc_h521 = _source179.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3364___mcc_h522 = _source179.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source180 = _3363___mcc_h521;
                if (_source180.is_None) {
                } else {
                  DAST._IType _3365___mcc_h526 = _source180.dtor_value;
                  DAST._IType _3366_tpe = _3365___mcc_h526;
                  RAST._IType _3367_typ;
                  RAST._IType _out201;
                  _out201 = (this).GenType(_3366_tpe, false, false);
                  _3367_typ = _out201;
                  if ((_3367_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source179.is_MapBuilderAdd) {
              } else if (_source179.is_MapBuilderBuild) {
              } else if (_source179.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_TypeTest) {
            DAST._IExpression _3368___mcc_h208 = _source108.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3369___mcc_h209 = _source108.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _3370___mcc_h210 = _source108.dtor_variant;
            {
              DAST._ICallName _source181 = _3042_name;
              if (_source181.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3371___mcc_h528 = _source181.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3372___mcc_h529 = _source181.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3373___mcc_h530 = _source181.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source182 = _3372___mcc_h529;
                if (_source182.is_None) {
                } else {
                  DAST._IType _3374___mcc_h534 = _source182.dtor_value;
                  DAST._IType _3375_tpe = _3374___mcc_h534;
                  RAST._IType _3376_typ;
                  RAST._IType _out202;
                  _out202 = (this).GenType(_3375_tpe, false, false);
                  _3376_typ = _out202;
                  if ((_3376_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source181.is_MapBuilderAdd) {
              } else if (_source181.is_MapBuilderBuild) {
              } else if (_source181.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_InitializationValue) {
            DAST._IType _3377___mcc_h214 = _source108.dtor_typ;
            {
              DAST._ICallName _source183 = _3042_name;
              if (_source183.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3378___mcc_h536 = _source183.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3379___mcc_h537 = _source183.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3380___mcc_h538 = _source183.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source184 = _3379___mcc_h537;
                if (_source184.is_None) {
                } else {
                  DAST._IType _3381___mcc_h542 = _source184.dtor_value;
                  DAST._IType _3382_tpe = _3381___mcc_h542;
                  RAST._IType _3383_typ;
                  RAST._IType _out203;
                  _out203 = (this).GenType(_3382_tpe, false, false);
                  _3383_typ = _out203;
                  if ((_3383_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source183.is_MapBuilderAdd) {
              } else if (_source183.is_MapBuilderBuild) {
              } else if (_source183.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_BoolBoundedPool) {
            {
              DAST._ICallName _source185 = _3042_name;
              if (_source185.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3384___mcc_h544 = _source185.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3385___mcc_h545 = _source185.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3386___mcc_h546 = _source185.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source186 = _3385___mcc_h545;
                if (_source186.is_None) {
                } else {
                  DAST._IType _3387___mcc_h550 = _source186.dtor_value;
                  DAST._IType _3388_tpe = _3387___mcc_h550;
                  RAST._IType _3389_typ;
                  RAST._IType _out204;
                  _out204 = (this).GenType(_3388_tpe, false, false);
                  _3389_typ = _out204;
                  if ((_3389_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source185.is_MapBuilderAdd) {
              } else if (_source185.is_MapBuilderBuild) {
              } else if (_source185.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SetBoundedPool) {
            DAST._IExpression _3390___mcc_h216 = _source108.dtor_of;
            {
              DAST._ICallName _source187 = _3042_name;
              if (_source187.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3391___mcc_h552 = _source187.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3392___mcc_h553 = _source187.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3393___mcc_h554 = _source187.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source188 = _3392___mcc_h553;
                if (_source188.is_None) {
                } else {
                  DAST._IType _3394___mcc_h558 = _source188.dtor_value;
                  DAST._IType _3395_tpe = _3394___mcc_h558;
                  RAST._IType _3396_typ;
                  RAST._IType _out205;
                  _out205 = (this).GenType(_3395_tpe, false, false);
                  _3396_typ = _out205;
                  if ((_3396_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source187.is_MapBuilderAdd) {
              } else if (_source187.is_MapBuilderBuild) {
              } else if (_source187.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_SeqBoundedPool) {
            DAST._IExpression _3397___mcc_h218 = _source108.dtor_of;
            bool _3398___mcc_h219 = _source108.dtor_includeDuplicates;
            {
              DAST._ICallName _source189 = _3042_name;
              if (_source189.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3399___mcc_h560 = _source189.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3400___mcc_h561 = _source189.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3401___mcc_h562 = _source189.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source190 = _3400___mcc_h561;
                if (_source190.is_None) {
                } else {
                  DAST._IType _3402___mcc_h566 = _source190.dtor_value;
                  DAST._IType _3403_tpe = _3402___mcc_h566;
                  RAST._IType _3404_typ;
                  RAST._IType _out206;
                  _out206 = (this).GenType(_3403_tpe, false, false);
                  _3404_typ = _out206;
                  if ((_3404_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source189.is_MapBuilderAdd) {
              } else if (_source189.is_MapBuilderBuild) {
              } else if (_source189.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_IntRange) {
            DAST._IExpression _3405___mcc_h222 = _source108.dtor_lo;
            DAST._IExpression _3406___mcc_h223 = _source108.dtor_hi;
            bool _3407___mcc_h224 = _source108.dtor_up;
            {
              DAST._ICallName _source191 = _3042_name;
              if (_source191.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3408___mcc_h568 = _source191.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3409___mcc_h569 = _source191.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3410___mcc_h570 = _source191.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source192 = _3409___mcc_h569;
                if (_source192.is_None) {
                } else {
                  DAST._IType _3411___mcc_h574 = _source192.dtor_value;
                  DAST._IType _3412_tpe = _3411___mcc_h574;
                  RAST._IType _3413_typ;
                  RAST._IType _out207;
                  _out207 = (this).GenType(_3412_tpe, false, false);
                  _3413_typ = _out207;
                  if ((_3413_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source191.is_MapBuilderAdd) {
              } else if (_source191.is_MapBuilderBuild) {
              } else if (_source191.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else if (_source108.is_UnboundedIntRange) {
            DAST._IExpression _3414___mcc_h228 = _source108.dtor_start;
            bool _3415___mcc_h229 = _source108.dtor_up;
            {
              DAST._ICallName _source193 = _3042_name;
              if (_source193.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3416___mcc_h576 = _source193.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3417___mcc_h577 = _source193.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3418___mcc_h578 = _source193.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source194 = _3417___mcc_h577;
                if (_source194.is_None) {
                } else {
                  DAST._IType _3419___mcc_h582 = _source194.dtor_value;
                  DAST._IType _3420_tpe = _3419___mcc_h582;
                  RAST._IType _3421_typ;
                  RAST._IType _out208;
                  _out208 = (this).GenType(_3420_tpe, false, false);
                  _3421_typ = _out208;
                  if ((_3421_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source193.is_MapBuilderAdd) {
              } else if (_source193.is_MapBuilderBuild) {
              } else if (_source193.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          } else {
            DAST._IType _3422___mcc_h232 = _source108.dtor_elemType;
            DAST._IExpression _3423___mcc_h233 = _source108.dtor_collection;
            bool _3424___mcc_h234 = _source108.dtor_is__forall;
            DAST._IExpression _3425___mcc_h235 = _source108.dtor_lambda;
            {
              DAST._ICallName _source195 = _3042_name;
              if (_source195.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3426___mcc_h584 = _source195.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3427___mcc_h585 = _source195.dtor_onType;
                Dafny.ISequence<DAST._IFormal> _3428___mcc_h586 = _source195.dtor_signature;
                Std.Wrappers._IOption<DAST._IType> _source196 = _3427___mcc_h585;
                if (_source196.is_None) {
                } else {
                  DAST._IType _3429___mcc_h590 = _source196.dtor_value;
                  DAST._IType _3430_tpe = _3429___mcc_h590;
                  RAST._IType _3431_typ;
                  RAST._IType _out209;
                  _out209 = (this).GenType(_3430_tpe, false, false);
                  _3431_typ = _out209;
                  if ((_3431_typ).IsObjectOrPointer()) {
                    _3044_onExpr = ((this).modify__macro).Apply1(_3044_onExpr);
                  }
                }
              } else if (_source195.is_MapBuilderAdd) {
              } else if (_source195.is_MapBuilderBuild) {
              } else if (_source195.is_SetBuilderAdd) {
              } else {
              }
              _3044_onExpr = (_3044_onExpr).Sel(_3058_renderedName);
            }
          }
          generated = _3044_onExpr;
          if ((new BigInteger((_3047_typeExprs).Count)).Sign == 1) {
            generated = (generated).ApplyType(_3047_typeExprs);
          }
          generated = (generated).Apply(_3051_argExprs);
          if (((_3039_maybeOutVars).is_Some) && ((new BigInteger(((_3039_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3432_outVar;
            _3432_outVar = DCOMP.__default.escapeName((((_3039_maybeOutVars).dtor_value).Select(BigInteger.Zero)));
            if (!((env).CanReadWithoutClone(_3432_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3432_outVar, generated);
          } else if (((_3039_maybeOutVars).is_None) || ((new BigInteger(((_3039_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3433_tmpVar;
            _3433_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3434_tmpId;
            _3434_tmpId = RAST.Expr.create_Identifier(_3433_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3433_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3435_outVars;
            _3435_outVars = (_3039_maybeOutVars).dtor_value;
            BigInteger _hi30 = new BigInteger((_3435_outVars).Count);
            for (BigInteger _3436_outI = BigInteger.Zero; _3436_outI < _hi30; _3436_outI++) {
              Dafny.ISequence<Dafny.Rune> _3437_outVar;
              _3437_outVar = DCOMP.__default.escapeName(((_3435_outVars).Select(_3436_outI)));
              RAST._IExpr _3438_rhs;
              _3438_rhs = (_3434_tmpId).Sel(Std.Strings.__default.OfNat(_3436_outI));
              if (!((env).CanReadWithoutClone(_3437_outVar))) {
                _3438_rhs = RAST.__default.MaybePlacebo(_3438_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3437_outVar, _3438_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source105.is_Return) {
        DAST._IExpression _3439___mcc_h22 = _source105.dtor_expr;
        DAST._IExpression _3440_exprDafny = _3439___mcc_h22;
        {
          RAST._IExpr _3441_expr;
          DCOMP._IOwnership _3442___v84;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3443_recIdents;
          RAST._IExpr _out210;
          DCOMP._IOwnership _out211;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out212;
          (this).GenExpr(_3440_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out210, out _out211, out _out212);
          _3441_expr = _out210;
          _3442___v84 = _out211;
          _3443_recIdents = _out212;
          readIdents = _3443_recIdents;
          if (isLast) {
            generated = _3441_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3441_expr));
          }
          newEnv = env;
        }
      } else if (_source105.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source105.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3444___mcc_h23 = _source105.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3445_toLabel = _3444___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source197 = _3445_toLabel;
          if (_source197.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3446___mcc_h592 = _source197.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3447_lbl = _3446___mcc_h592;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3447_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source105.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3448___mcc_h24 = _source105.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3449_body = _3448___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          newEnv = env;
          BigInteger _hi31 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3450_paramI = BigInteger.Zero; _3450_paramI < _hi31; _3450_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3451_param;
            _3451_param = ((env).dtor_names).Select(_3450_paramI);
            RAST._IExpr _3452_paramInit;
            DCOMP._IOwnership _3453___v74;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3454___v75;
            RAST._IExpr _out213;
            DCOMP._IOwnership _out214;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out215;
            (this).GenIdent(_3451_param, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out213, out _out214, out _out215);
            _3452_paramInit = _out213;
            _3453___v74 = _out214;
            _3454___v75 = _out215;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _3451_param, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3452_paramInit)));
            if (((env).dtor_types).Contains(_3451_param)) {
              RAST._IType _3455_declaredType;
              _3455_declaredType = (Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((env).dtor_types,_3451_param)).ToOwned();
              newEnv = (newEnv).AddAssigned(_3451_param, _3455_declaredType);
            }
          }
          RAST._IExpr _3456_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3457_bodyIdents;
          DCOMP._IEnvironment _3458_bodyEnv;
          RAST._IExpr _out216;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out217;
          DCOMP._IEnvironment _out218;
          (this).GenStmts(_3449_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), newEnv, false, earlyReturn, out _out216, out _out217, out _out218);
          _3456_bodyExpr = _out216;
          _3457_bodyIdents = _out217;
          _3458_bodyEnv = _out218;
          readIdents = _3457_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3456_bodyExpr)));
        }
      } else if (_source105.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source105.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source105.is_Print) {
        DAST._IExpression _3459___mcc_h25 = _source105.dtor_Print_i_a0;
        DAST._IExpression _3460_e = _3459___mcc_h25;
        {
          RAST._IExpr _3461_printedExpr;
          DCOMP._IOwnership _3462_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3463_recIdents;
          RAST._IExpr _out219;
          DCOMP._IOwnership _out220;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out221;
          (this).GenExpr(_3460_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out219, out _out220, out _out221);
          _3461_printedExpr = _out219;
          _3462_recOwnership = _out220;
          _3463_recIdents = _out221;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3461_printedExpr)));
          readIdents = _3463_recIdents;
          newEnv = env;
        }
      } else {
        Dafny.ISequence<DAST._IFormal> _3464___mcc_h26 = _source105.dtor_fields;
        Dafny.ISequence<DAST._IFormal> _3465_fields = _3464___mcc_h26;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
          BigInteger _hi32 = new BigInteger((_3465_fields).Count);
          for (BigInteger _3466_i = BigInteger.Zero; _3466_i < _hi32; _3466_i++) {
            DAST._IFormal _3467_field;
            _3467_field = (_3465_fields).Select(_3466_i);
            Dafny.ISequence<Dafny.Rune> _3468_fieldName;
            _3468_fieldName = DCOMP.__default.escapeName((_3467_field).dtor_name);
            RAST._IType _3469_fieldTyp;
            RAST._IType _out222;
            _out222 = (this).GenType((_3467_field).dtor_typ, false, false);
            _3469_fieldTyp = _out222;
            Dafny.ISequence<Dafny.Rune> _3470_isAssignedVar;
            _3470_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_3468_fieldName);
            if (((newEnv).dtor_names).Contains(_3470_isAssignedVar)) {
              RAST._IExpr _3471_rhs;
              DCOMP._IOwnership _3472___v68;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3473___v69;
              RAST._IExpr _out223;
              DCOMP._IOwnership _out224;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out225;
              (this).GenExpr(DAST.Expression.create_InitializationValue((_3467_field).dtor_typ), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out223, out _out224, out _out225);
              _3471_rhs = _out223;
              _3472___v68 = _out224;
              _3473___v69 = _out225;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3470_isAssignedVar));
              generated = (generated).Then(((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_if_uninit!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this")), RAST.Expr.create_Identifier(_3468_fieldName), RAST.Expr.create_Identifier(_3470_isAssignedVar), _3471_rhs)));
              newEnv = (newEnv).RemoveAssigned(_3470_isAssignedVar);
            }
          }
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source198 = range;
      if (_source198.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source198.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source198.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source198.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source198.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source198.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source198.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source198.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source198.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source198.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source198.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public static void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        @out = RAST.__default.BoxNew(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
      } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = RAST.__default.BorrowMut(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public static void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, expectedOwnership)) {
        @out = r;
        resultingOwnership = expectedOwnership;
        return ;
      }
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out226;
        DCOMP._IOwnership _out227;
        DCOMP.COMP.FromOwned(r, expectedOwnership, out _out226, out _out227);
        @out = _out226;
        resultingOwnership = _out227;
        return ;
      } else if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        RAST._IExpr _out228;
        DCOMP._IOwnership _out229;
        DCOMP.COMP.FromOwned(RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), r, DAST.Format.UnaryOpFormat.create_NoFormat()), expectedOwnership, out _out228, out _out229);
        @out = _out228;
        resultingOwnership = _out229;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = RAST.__default.Clone(r);
        } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
          @out = RAST.__default.BoxNew(RAST.__default.Clone(r));
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source199 = e;
      DAST._ILiteral _3474___mcc_h0 = _source199.dtor_Literal_i_a0;
      DAST._ILiteral _source200 = _3474___mcc_h0;
      if (_source200.is_BoolLiteral) {
        bool _3475___mcc_h1 = _source200.dtor_BoolLiteral_i_a0;
        bool _3476_b = _3475___mcc_h1;
        {
          RAST._IExpr _out230;
          DCOMP._IOwnership _out231;
          DCOMP.COMP.FromOwned(RAST.Expr.create_LiteralBool(_3476_b), expectedOwnership, out _out230, out _out231);
          r = _out230;
          resultingOwnership = _out231;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source200.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3477___mcc_h2 = _source200.dtor_IntLiteral_i_a0;
        DAST._IType _3478___mcc_h3 = _source200.dtor_IntLiteral_i_a1;
        DAST._IType _3479_t = _3478___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3480_i = _3477___mcc_h2;
        {
          DAST._IType _source201 = _3479_t;
          if (_source201.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3481___mcc_h114 = _source201.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _3482___mcc_h115 = _source201.dtor_typeArgs;
            DAST._IResolvedType _3483___mcc_h116 = _source201.dtor_resolved;
            DAST._IType _3484_o = _3479_t;
            {
              RAST._IType _3485_genType;
              RAST._IType _out232;
              _out232 = (this).GenType(_3484_o, false, false);
              _3485_genType = _out232;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3485_genType);
            }
          } else if (_source201.is_Nullable) {
            DAST._IType _3486___mcc_h120 = _source201.dtor_Nullable_i_a0;
            DAST._IType _3487_o = _3479_t;
            {
              RAST._IType _3488_genType;
              RAST._IType _out233;
              _out233 = (this).GenType(_3487_o, false, false);
              _3488_genType = _out233;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3488_genType);
            }
          } else if (_source201.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3489___mcc_h122 = _source201.dtor_Tuple_i_a0;
            DAST._IType _3490_o = _3479_t;
            {
              RAST._IType _3491_genType;
              RAST._IType _out234;
              _out234 = (this).GenType(_3490_o, false, false);
              _3491_genType = _out234;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3491_genType);
            }
          } else if (_source201.is_Array) {
            DAST._IType _3492___mcc_h124 = _source201.dtor_element;
            BigInteger _3493___mcc_h125 = _source201.dtor_dims;
            DAST._IType _3494_o = _3479_t;
            {
              RAST._IType _3495_genType;
              RAST._IType _out235;
              _out235 = (this).GenType(_3494_o, false, false);
              _3495_genType = _out235;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3495_genType);
            }
          } else if (_source201.is_Seq) {
            DAST._IType _3496___mcc_h128 = _source201.dtor_element;
            DAST._IType _3497_o = _3479_t;
            {
              RAST._IType _3498_genType;
              RAST._IType _out236;
              _out236 = (this).GenType(_3497_o, false, false);
              _3498_genType = _out236;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3498_genType);
            }
          } else if (_source201.is_Set) {
            DAST._IType _3499___mcc_h130 = _source201.dtor_element;
            DAST._IType _3500_o = _3479_t;
            {
              RAST._IType _3501_genType;
              RAST._IType _out237;
              _out237 = (this).GenType(_3500_o, false, false);
              _3501_genType = _out237;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3501_genType);
            }
          } else if (_source201.is_Multiset) {
            DAST._IType _3502___mcc_h132 = _source201.dtor_element;
            DAST._IType _3503_o = _3479_t;
            {
              RAST._IType _3504_genType;
              RAST._IType _out238;
              _out238 = (this).GenType(_3503_o, false, false);
              _3504_genType = _out238;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3504_genType);
            }
          } else if (_source201.is_Map) {
            DAST._IType _3505___mcc_h134 = _source201.dtor_key;
            DAST._IType _3506___mcc_h135 = _source201.dtor_value;
            DAST._IType _3507_o = _3479_t;
            {
              RAST._IType _3508_genType;
              RAST._IType _out239;
              _out239 = (this).GenType(_3507_o, false, false);
              _3508_genType = _out239;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3508_genType);
            }
          } else if (_source201.is_SetBuilder) {
            DAST._IType _3509___mcc_h138 = _source201.dtor_element;
            DAST._IType _3510_o = _3479_t;
            {
              RAST._IType _3511_genType;
              RAST._IType _out240;
              _out240 = (this).GenType(_3510_o, false, false);
              _3511_genType = _out240;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3511_genType);
            }
          } else if (_source201.is_MapBuilder) {
            DAST._IType _3512___mcc_h140 = _source201.dtor_key;
            DAST._IType _3513___mcc_h141 = _source201.dtor_value;
            DAST._IType _3514_o = _3479_t;
            {
              RAST._IType _3515_genType;
              RAST._IType _out241;
              _out241 = (this).GenType(_3514_o, false, false);
              _3515_genType = _out241;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3515_genType);
            }
          } else if (_source201.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3516___mcc_h144 = _source201.dtor_args;
            DAST._IType _3517___mcc_h145 = _source201.dtor_result;
            DAST._IType _3518_o = _3479_t;
            {
              RAST._IType _3519_genType;
              RAST._IType _out242;
              _out242 = (this).GenType(_3518_o, false, false);
              _3519_genType = _out242;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3519_genType);
            }
          } else if (_source201.is_Primitive) {
            DAST._IPrimitive _3520___mcc_h148 = _source201.dtor_Primitive_i_a0;
            DAST._IPrimitive _source202 = _3520___mcc_h148;
            if (_source202.is_Int) {
              {
                if ((new BigInteger((_3480_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3480_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3480_i, true));
                }
              }
            } else if (_source202.is_Real) {
              DAST._IType _3521_o = _3479_t;
              {
                RAST._IType _3522_genType;
                RAST._IType _out243;
                _out243 = (this).GenType(_3521_o, false, false);
                _3522_genType = _out243;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3522_genType);
              }
            } else if (_source202.is_String) {
              DAST._IType _3523_o = _3479_t;
              {
                RAST._IType _3524_genType;
                RAST._IType _out244;
                _out244 = (this).GenType(_3523_o, false, false);
                _3524_genType = _out244;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3524_genType);
              }
            } else if (_source202.is_Bool) {
              DAST._IType _3525_o = _3479_t;
              {
                RAST._IType _3526_genType;
                RAST._IType _out245;
                _out245 = (this).GenType(_3525_o, false, false);
                _3526_genType = _out245;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3526_genType);
              }
            } else {
              DAST._IType _3527_o = _3479_t;
              {
                RAST._IType _3528_genType;
                RAST._IType _out246;
                _out246 = (this).GenType(_3527_o, false, false);
                _3528_genType = _out246;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3528_genType);
              }
            }
          } else if (_source201.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3529___mcc_h150 = _source201.dtor_Passthrough_i_a0;
            DAST._IType _3530_o = _3479_t;
            {
              RAST._IType _3531_genType;
              RAST._IType _out247;
              _out247 = (this).GenType(_3530_o, false, false);
              _3531_genType = _out247;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3531_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3532___mcc_h152 = _source201.dtor_TypeArg_i_a0;
            DAST._IType _3533_o = _3479_t;
            {
              RAST._IType _3534_genType;
              RAST._IType _out248;
              _out248 = (this).GenType(_3533_o, false, false);
              _3534_genType = _out248;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3480_i), _3534_genType);
            }
          }
          RAST._IExpr _out249;
          DCOMP._IOwnership _out250;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out249, out _out250);
          r = _out249;
          resultingOwnership = _out250;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source200.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3535___mcc_h4 = _source200.dtor_DecLiteral_i_a0;
        Dafny.ISequence<Dafny.Rune> _3536___mcc_h5 = _source200.dtor_DecLiteral_i_a1;
        DAST._IType _3537___mcc_h6 = _source200.dtor_DecLiteral_i_a2;
        DAST._IType _3538_t = _3537___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3539_d = _3536___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3540_n = _3535___mcc_h4;
        {
          DAST._IType _source203 = _3538_t;
          if (_source203.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3541___mcc_h154 = _source203.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _3542___mcc_h155 = _source203.dtor_typeArgs;
            DAST._IResolvedType _3543___mcc_h156 = _source203.dtor_resolved;
            DAST._IType _3544_o = _3538_t;
            {
              RAST._IType _3545_genType;
              RAST._IType _out251;
              _out251 = (this).GenType(_3544_o, false, false);
              _3545_genType = _out251;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3545_genType);
            }
          } else if (_source203.is_Nullable) {
            DAST._IType _3546___mcc_h160 = _source203.dtor_Nullable_i_a0;
            DAST._IType _3547_o = _3538_t;
            {
              RAST._IType _3548_genType;
              RAST._IType _out252;
              _out252 = (this).GenType(_3547_o, false, false);
              _3548_genType = _out252;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3548_genType);
            }
          } else if (_source203.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3549___mcc_h162 = _source203.dtor_Tuple_i_a0;
            DAST._IType _3550_o = _3538_t;
            {
              RAST._IType _3551_genType;
              RAST._IType _out253;
              _out253 = (this).GenType(_3550_o, false, false);
              _3551_genType = _out253;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3551_genType);
            }
          } else if (_source203.is_Array) {
            DAST._IType _3552___mcc_h164 = _source203.dtor_element;
            BigInteger _3553___mcc_h165 = _source203.dtor_dims;
            DAST._IType _3554_o = _3538_t;
            {
              RAST._IType _3555_genType;
              RAST._IType _out254;
              _out254 = (this).GenType(_3554_o, false, false);
              _3555_genType = _out254;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3555_genType);
            }
          } else if (_source203.is_Seq) {
            DAST._IType _3556___mcc_h168 = _source203.dtor_element;
            DAST._IType _3557_o = _3538_t;
            {
              RAST._IType _3558_genType;
              RAST._IType _out255;
              _out255 = (this).GenType(_3557_o, false, false);
              _3558_genType = _out255;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3558_genType);
            }
          } else if (_source203.is_Set) {
            DAST._IType _3559___mcc_h170 = _source203.dtor_element;
            DAST._IType _3560_o = _3538_t;
            {
              RAST._IType _3561_genType;
              RAST._IType _out256;
              _out256 = (this).GenType(_3560_o, false, false);
              _3561_genType = _out256;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3561_genType);
            }
          } else if (_source203.is_Multiset) {
            DAST._IType _3562___mcc_h172 = _source203.dtor_element;
            DAST._IType _3563_o = _3538_t;
            {
              RAST._IType _3564_genType;
              RAST._IType _out257;
              _out257 = (this).GenType(_3563_o, false, false);
              _3564_genType = _out257;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3564_genType);
            }
          } else if (_source203.is_Map) {
            DAST._IType _3565___mcc_h174 = _source203.dtor_key;
            DAST._IType _3566___mcc_h175 = _source203.dtor_value;
            DAST._IType _3567_o = _3538_t;
            {
              RAST._IType _3568_genType;
              RAST._IType _out258;
              _out258 = (this).GenType(_3567_o, false, false);
              _3568_genType = _out258;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3568_genType);
            }
          } else if (_source203.is_SetBuilder) {
            DAST._IType _3569___mcc_h178 = _source203.dtor_element;
            DAST._IType _3570_o = _3538_t;
            {
              RAST._IType _3571_genType;
              RAST._IType _out259;
              _out259 = (this).GenType(_3570_o, false, false);
              _3571_genType = _out259;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3571_genType);
            }
          } else if (_source203.is_MapBuilder) {
            DAST._IType _3572___mcc_h180 = _source203.dtor_key;
            DAST._IType _3573___mcc_h181 = _source203.dtor_value;
            DAST._IType _3574_o = _3538_t;
            {
              RAST._IType _3575_genType;
              RAST._IType _out260;
              _out260 = (this).GenType(_3574_o, false, false);
              _3575_genType = _out260;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3575_genType);
            }
          } else if (_source203.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3576___mcc_h184 = _source203.dtor_args;
            DAST._IType _3577___mcc_h185 = _source203.dtor_result;
            DAST._IType _3578_o = _3538_t;
            {
              RAST._IType _3579_genType;
              RAST._IType _out261;
              _out261 = (this).GenType(_3578_o, false, false);
              _3579_genType = _out261;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3579_genType);
            }
          } else if (_source203.is_Primitive) {
            DAST._IPrimitive _3580___mcc_h188 = _source203.dtor_Primitive_i_a0;
            DAST._IPrimitive _source204 = _3580___mcc_h188;
            if (_source204.is_Int) {
              DAST._IType _3581_o = _3538_t;
              {
                RAST._IType _3582_genType;
                RAST._IType _out262;
                _out262 = (this).GenType(_3581_o, false, false);
                _3582_genType = _out262;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3582_genType);
              }
            } else if (_source204.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source204.is_String) {
              DAST._IType _3583_o = _3538_t;
              {
                RAST._IType _3584_genType;
                RAST._IType _out263;
                _out263 = (this).GenType(_3583_o, false, false);
                _3584_genType = _out263;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3584_genType);
              }
            } else if (_source204.is_Bool) {
              DAST._IType _3585_o = _3538_t;
              {
                RAST._IType _3586_genType;
                RAST._IType _out264;
                _out264 = (this).GenType(_3585_o, false, false);
                _3586_genType = _out264;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3586_genType);
              }
            } else {
              DAST._IType _3587_o = _3538_t;
              {
                RAST._IType _3588_genType;
                RAST._IType _out265;
                _out265 = (this).GenType(_3587_o, false, false);
                _3588_genType = _out265;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3588_genType);
              }
            }
          } else if (_source203.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3589___mcc_h190 = _source203.dtor_Passthrough_i_a0;
            DAST._IType _3590_o = _3538_t;
            {
              RAST._IType _3591_genType;
              RAST._IType _out266;
              _out266 = (this).GenType(_3590_o, false, false);
              _3591_genType = _out266;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3591_genType);
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3592___mcc_h192 = _source203.dtor_TypeArg_i_a0;
            DAST._IType _3593_o = _3538_t;
            {
              RAST._IType _3594_genType;
              RAST._IType _out267;
              _out267 = (this).GenType(_3593_o, false, false);
              _3594_genType = _out267;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3540_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3539_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3594_genType);
            }
          }
          RAST._IExpr _out268;
          DCOMP._IOwnership _out269;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out268, out _out269);
          r = _out268;
          resultingOwnership = _out269;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source200.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3595___mcc_h7 = _source200.dtor_StringLiteral_i_a0;
        Dafny.ISequence<Dafny.Rune> _3596_l = _3595___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel((this).string__of)).Apply1(RAST.Expr.create_LiteralString(_3596_l, false));
          RAST._IExpr _out270;
          DCOMP._IOwnership _out271;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out270, out _out271);
          r = _out270;
          resultingOwnership = _out271;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source200.is_CharLiteral) {
        Dafny.Rune _3597___mcc_h8 = _source200.dtor_CharLiteral_i_a0;
        Dafny.Rune _3598_c = _3597___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3598_c).Value)));
          if (!((this).UnicodeChars)) {
            r = RAST.Expr.create_TypeAscription(r, RAST.Type.create_U16());
          } else {
            r = (((((((RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("primitive"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_u32"))).Apply1(r)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          }
          r = ((RAST.__default.dafny__runtime).MSel((this).DafnyChar)).Apply1(r);
          RAST._IExpr _out272;
          DCOMP._IOwnership _out273;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out272, out _out273);
          r = _out272;
          resultingOwnership = _out273;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3599___mcc_h9 = _source200.dtor_Null_i_a0;
        DAST._IType _3600_tpe = _3599___mcc_h9;
        {
          RAST._IType _3601_tpeGen;
          RAST._IType _out274;
          _out274 = (this).GenType(_3600_tpe, false, false);
          _3601_tpeGen = _out274;
          r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None")), _3601_tpeGen);
          RAST._IExpr _out275;
          DCOMP._IOwnership _out276;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out275, out _out276);
          r = _out275;
          resultingOwnership = _out276;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs52 = e;
      DAST._IBinOp _3602_op = _let_tmp_rhs52.dtor_op;
      DAST._IExpression _3603_lExpr = _let_tmp_rhs52.dtor_left;
      DAST._IExpression _3604_rExpr = _let_tmp_rhs52.dtor_right;
      DAST.Format._IBinaryOpFormat _3605_format = _let_tmp_rhs52.dtor_format2;
      bool _3606_becomesLeftCallsRight;
      _3606_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source205) => {
        if (_source205.is_Eq) {
          bool _3607___mcc_h0 = _source205.dtor_referential;
          bool _3608___mcc_h1 = _source205.dtor_nullable;
          return false;
        } else if (_source205.is_Div) {
          return false;
        } else if (_source205.is_EuclidianDiv) {
          return false;
        } else if (_source205.is_Mod) {
          return false;
        } else if (_source205.is_EuclidianMod) {
          return false;
        } else if (_source205.is_Lt) {
          return false;
        } else if (_source205.is_LtChar) {
          return false;
        } else if (_source205.is_Plus) {
          return false;
        } else if (_source205.is_Minus) {
          return false;
        } else if (_source205.is_Times) {
          return false;
        } else if (_source205.is_BitwiseAnd) {
          return false;
        } else if (_source205.is_BitwiseOr) {
          return false;
        } else if (_source205.is_BitwiseXor) {
          return false;
        } else if (_source205.is_BitwiseShiftRight) {
          return false;
        } else if (_source205.is_BitwiseShiftLeft) {
          return false;
        } else if (_source205.is_And) {
          return false;
        } else if (_source205.is_Or) {
          return false;
        } else if (_source205.is_In) {
          return false;
        } else if (_source205.is_SeqProperPrefix) {
          return false;
        } else if (_source205.is_SeqPrefix) {
          return false;
        } else if (_source205.is_SetMerge) {
          return true;
        } else if (_source205.is_SetSubtraction) {
          return true;
        } else if (_source205.is_SetIntersection) {
          return true;
        } else if (_source205.is_Subset) {
          return false;
        } else if (_source205.is_ProperSubset) {
          return false;
        } else if (_source205.is_SetDisjoint) {
          return true;
        } else if (_source205.is_MapMerge) {
          return true;
        } else if (_source205.is_MapSubtraction) {
          return true;
        } else if (_source205.is_MultisetMerge) {
          return true;
        } else if (_source205.is_MultisetSubtraction) {
          return true;
        } else if (_source205.is_MultisetIntersection) {
          return true;
        } else if (_source205.is_Submultiset) {
          return false;
        } else if (_source205.is_ProperSubmultiset) {
          return false;
        } else if (_source205.is_MultisetDisjoint) {
          return true;
        } else if (_source205.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3609___mcc_h4 = _source205.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3602_op);
      bool _3610_becomesRightCallsLeft;
      _3610_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source206) => {
        if (_source206.is_Eq) {
          bool _3611___mcc_h6 = _source206.dtor_referential;
          bool _3612___mcc_h7 = _source206.dtor_nullable;
          return false;
        } else if (_source206.is_Div) {
          return false;
        } else if (_source206.is_EuclidianDiv) {
          return false;
        } else if (_source206.is_Mod) {
          return false;
        } else if (_source206.is_EuclidianMod) {
          return false;
        } else if (_source206.is_Lt) {
          return false;
        } else if (_source206.is_LtChar) {
          return false;
        } else if (_source206.is_Plus) {
          return false;
        } else if (_source206.is_Minus) {
          return false;
        } else if (_source206.is_Times) {
          return false;
        } else if (_source206.is_BitwiseAnd) {
          return false;
        } else if (_source206.is_BitwiseOr) {
          return false;
        } else if (_source206.is_BitwiseXor) {
          return false;
        } else if (_source206.is_BitwiseShiftRight) {
          return false;
        } else if (_source206.is_BitwiseShiftLeft) {
          return false;
        } else if (_source206.is_And) {
          return false;
        } else if (_source206.is_Or) {
          return false;
        } else if (_source206.is_In) {
          return true;
        } else if (_source206.is_SeqProperPrefix) {
          return false;
        } else if (_source206.is_SeqPrefix) {
          return false;
        } else if (_source206.is_SetMerge) {
          return false;
        } else if (_source206.is_SetSubtraction) {
          return false;
        } else if (_source206.is_SetIntersection) {
          return false;
        } else if (_source206.is_Subset) {
          return false;
        } else if (_source206.is_ProperSubset) {
          return false;
        } else if (_source206.is_SetDisjoint) {
          return false;
        } else if (_source206.is_MapMerge) {
          return false;
        } else if (_source206.is_MapSubtraction) {
          return false;
        } else if (_source206.is_MultisetMerge) {
          return false;
        } else if (_source206.is_MultisetSubtraction) {
          return false;
        } else if (_source206.is_MultisetIntersection) {
          return false;
        } else if (_source206.is_Submultiset) {
          return false;
        } else if (_source206.is_ProperSubmultiset) {
          return false;
        } else if (_source206.is_MultisetDisjoint) {
          return false;
        } else if (_source206.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3613___mcc_h10 = _source206.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3602_op);
      bool _3614_becomesCallLeftRight;
      _3614_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source207) => {
        if (_source207.is_Eq) {
          bool _3615___mcc_h12 = _source207.dtor_referential;
          bool _3616___mcc_h13 = _source207.dtor_nullable;
          if ((_3615___mcc_h12) == (true)) {
            if ((_3616___mcc_h13) == (false)) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else if (_source207.is_Div) {
          return false;
        } else if (_source207.is_EuclidianDiv) {
          return false;
        } else if (_source207.is_Mod) {
          return false;
        } else if (_source207.is_EuclidianMod) {
          return false;
        } else if (_source207.is_Lt) {
          return false;
        } else if (_source207.is_LtChar) {
          return false;
        } else if (_source207.is_Plus) {
          return false;
        } else if (_source207.is_Minus) {
          return false;
        } else if (_source207.is_Times) {
          return false;
        } else if (_source207.is_BitwiseAnd) {
          return false;
        } else if (_source207.is_BitwiseOr) {
          return false;
        } else if (_source207.is_BitwiseXor) {
          return false;
        } else if (_source207.is_BitwiseShiftRight) {
          return false;
        } else if (_source207.is_BitwiseShiftLeft) {
          return false;
        } else if (_source207.is_And) {
          return false;
        } else if (_source207.is_Or) {
          return false;
        } else if (_source207.is_In) {
          return false;
        } else if (_source207.is_SeqProperPrefix) {
          return false;
        } else if (_source207.is_SeqPrefix) {
          return false;
        } else if (_source207.is_SetMerge) {
          return true;
        } else if (_source207.is_SetSubtraction) {
          return true;
        } else if (_source207.is_SetIntersection) {
          return true;
        } else if (_source207.is_Subset) {
          return false;
        } else if (_source207.is_ProperSubset) {
          return false;
        } else if (_source207.is_SetDisjoint) {
          return true;
        } else if (_source207.is_MapMerge) {
          return true;
        } else if (_source207.is_MapSubtraction) {
          return true;
        } else if (_source207.is_MultisetMerge) {
          return true;
        } else if (_source207.is_MultisetSubtraction) {
          return true;
        } else if (_source207.is_MultisetIntersection) {
          return true;
        } else if (_source207.is_Submultiset) {
          return false;
        } else if (_source207.is_ProperSubmultiset) {
          return false;
        } else if (_source207.is_MultisetDisjoint) {
          return true;
        } else if (_source207.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3617___mcc_h16 = _source207.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3602_op);
      DCOMP._IOwnership _3618_expectedLeftOwnership;
      _3618_expectedLeftOwnership = ((_3606_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3610_becomesRightCallsLeft) || (_3614_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3619_expectedRightOwnership;
      _3619_expectedRightOwnership = (((_3606_becomesLeftCallsRight) || (_3614_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3610_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3620_left;
      DCOMP._IOwnership _3621___v89;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3622_recIdentsL;
      RAST._IExpr _out277;
      DCOMP._IOwnership _out278;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out279;
      (this).GenExpr(_3603_lExpr, selfIdent, env, _3618_expectedLeftOwnership, out _out277, out _out278, out _out279);
      _3620_left = _out277;
      _3621___v89 = _out278;
      _3622_recIdentsL = _out279;
      RAST._IExpr _3623_right;
      DCOMP._IOwnership _3624___v90;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3625_recIdentsR;
      RAST._IExpr _out280;
      DCOMP._IOwnership _out281;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out282;
      (this).GenExpr(_3604_rExpr, selfIdent, env, _3619_expectedRightOwnership, out _out280, out _out281, out _out282);
      _3623_right = _out280;
      _3624___v90 = _out281;
      _3625_recIdentsR = _out282;
      DAST._IBinOp _source208 = _3602_op;
      if (_source208.is_Eq) {
        bool _3626___mcc_h18 = _source208.dtor_referential;
        bool _3627___mcc_h19 = _source208.dtor_nullable;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source209 = _3602_op;
            if (_source209.is_Eq) {
              bool _3628___mcc_h24 = _source209.dtor_referential;
              bool _3629___mcc_h25 = _source209.dtor_nullable;
              bool _3630_nullable = _3629___mcc_h25;
              bool _3631_referential = _3628___mcc_h24;
              {
                if (_3631_referential) {
                  if (_3630_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source209.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source209.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3632___mcc_h26 = _source209.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3633_op = _3632___mcc_h26;
              {
                r = RAST.Expr.create_BinaryOp(_3633_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source210 = _3602_op;
            if (_source210.is_Eq) {
              bool _3634___mcc_h27 = _source210.dtor_referential;
              bool _3635___mcc_h28 = _source210.dtor_nullable;
              bool _3636_nullable = _3635___mcc_h28;
              bool _3637_referential = _3634___mcc_h27;
              {
                if (_3637_referential) {
                  if (_3636_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source210.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source210.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3638___mcc_h29 = _source210.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3639_op = _3638___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3639_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source211 = _3602_op;
            if (_source211.is_Eq) {
              bool _3640___mcc_h30 = _source211.dtor_referential;
              bool _3641___mcc_h31 = _source211.dtor_nullable;
              bool _3642_nullable = _3641___mcc_h31;
              bool _3643_referential = _3640___mcc_h30;
              {
                if (_3643_referential) {
                  if (_3642_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source211.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source211.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3644___mcc_h32 = _source211.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3645_op = _3644___mcc_h32;
              {
                r = RAST.Expr.create_BinaryOp(_3645_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source212 = _3602_op;
            if (_source212.is_Eq) {
              bool _3646___mcc_h33 = _source212.dtor_referential;
              bool _3647___mcc_h34 = _source212.dtor_nullable;
              bool _3648_nullable = _3647___mcc_h34;
              bool _3649_referential = _3646___mcc_h33;
              {
                if (_3649_referential) {
                  if (_3648_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source212.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source212.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3650___mcc_h35 = _source212.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3651_op = _3650___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3651_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source213 = _3602_op;
            if (_source213.is_Eq) {
              bool _3652___mcc_h36 = _source213.dtor_referential;
              bool _3653___mcc_h37 = _source213.dtor_nullable;
              bool _3654_nullable = _3653___mcc_h37;
              bool _3655_referential = _3652___mcc_h36;
              {
                if (_3655_referential) {
                  if (_3654_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source213.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source213.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3656___mcc_h38 = _source213.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3657_op = _3656___mcc_h38;
              {
                r = RAST.Expr.create_BinaryOp(_3657_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source214 = _3602_op;
            if (_source214.is_Eq) {
              bool _3658___mcc_h39 = _source214.dtor_referential;
              bool _3659___mcc_h40 = _source214.dtor_nullable;
              bool _3660_nullable = _3659___mcc_h40;
              bool _3661_referential = _3658___mcc_h39;
              {
                if (_3661_referential) {
                  if (_3660_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source214.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source214.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3662___mcc_h41 = _source214.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3663_op = _3662___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3663_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source215 = _3602_op;
            if (_source215.is_Eq) {
              bool _3664___mcc_h42 = _source215.dtor_referential;
              bool _3665___mcc_h43 = _source215.dtor_nullable;
              bool _3666_nullable = _3665___mcc_h43;
              bool _3667_referential = _3664___mcc_h42;
              {
                if (_3667_referential) {
                  if (_3666_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source215.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source215.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3668___mcc_h44 = _source215.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3669_op = _3668___mcc_h44;
              {
                r = RAST.Expr.create_BinaryOp(_3669_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source216 = _3602_op;
            if (_source216.is_Eq) {
              bool _3670___mcc_h45 = _source216.dtor_referential;
              bool _3671___mcc_h46 = _source216.dtor_nullable;
              bool _3672_nullable = _3671___mcc_h46;
              bool _3673_referential = _3670___mcc_h45;
              {
                if (_3673_referential) {
                  if (_3672_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source216.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source216.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3674___mcc_h47 = _source216.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3675_op = _3674___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3675_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source217 = _3602_op;
            if (_source217.is_Eq) {
              bool _3676___mcc_h48 = _source217.dtor_referential;
              bool _3677___mcc_h49 = _source217.dtor_nullable;
              bool _3678_nullable = _3677___mcc_h49;
              bool _3679_referential = _3676___mcc_h48;
              {
                if (_3679_referential) {
                  if (_3678_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source217.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source217.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3680___mcc_h50 = _source217.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3681_op = _3680___mcc_h50;
              {
                r = RAST.Expr.create_BinaryOp(_3681_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source218 = _3602_op;
            if (_source218.is_Eq) {
              bool _3682___mcc_h51 = _source218.dtor_referential;
              bool _3683___mcc_h52 = _source218.dtor_nullable;
              bool _3684_nullable = _3683___mcc_h52;
              bool _3685_referential = _3682___mcc_h51;
              {
                if (_3685_referential) {
                  if (_3684_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source218.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source218.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3686___mcc_h53 = _source218.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3687_op = _3686___mcc_h53;
              {
                r = RAST.Expr.create_BinaryOp(_3687_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source219 = _3602_op;
            if (_source219.is_Eq) {
              bool _3688___mcc_h54 = _source219.dtor_referential;
              bool _3689___mcc_h55 = _source219.dtor_nullable;
              bool _3690_nullable = _3689___mcc_h55;
              bool _3691_referential = _3688___mcc_h54;
              {
                if (_3691_referential) {
                  if (_3690_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source219.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source219.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3692___mcc_h56 = _source219.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3693_op = _3692___mcc_h56;
              {
                r = RAST.Expr.create_BinaryOp(_3693_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source220 = _3602_op;
            if (_source220.is_Eq) {
              bool _3694___mcc_h57 = _source220.dtor_referential;
              bool _3695___mcc_h58 = _source220.dtor_nullable;
              bool _3696_nullable = _3695___mcc_h58;
              bool _3697_referential = _3694___mcc_h57;
              {
                if (_3697_referential) {
                  if (_3696_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source220.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source220.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3698___mcc_h59 = _source220.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3699_op = _3698___mcc_h59;
              {
                r = RAST.Expr.create_BinaryOp(_3699_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source221 = _3602_op;
            if (_source221.is_Eq) {
              bool _3700___mcc_h60 = _source221.dtor_referential;
              bool _3701___mcc_h61 = _source221.dtor_nullable;
              bool _3702_nullable = _3701___mcc_h61;
              bool _3703_referential = _3700___mcc_h60;
              {
                if (_3703_referential) {
                  if (_3702_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source221.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source221.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3704___mcc_h62 = _source221.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3705_op = _3704___mcc_h62;
              {
                r = RAST.Expr.create_BinaryOp(_3705_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source222 = _3602_op;
            if (_source222.is_Eq) {
              bool _3706___mcc_h63 = _source222.dtor_referential;
              bool _3707___mcc_h64 = _source222.dtor_nullable;
              bool _3708_nullable = _3707___mcc_h64;
              bool _3709_referential = _3706___mcc_h63;
              {
                if (_3709_referential) {
                  if (_3708_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source222.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source222.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3710___mcc_h65 = _source222.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3711_op = _3710___mcc_h65;
              {
                r = RAST.Expr.create_BinaryOp(_3711_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source223 = _3602_op;
            if (_source223.is_Eq) {
              bool _3712___mcc_h66 = _source223.dtor_referential;
              bool _3713___mcc_h67 = _source223.dtor_nullable;
              bool _3714_nullable = _3713___mcc_h67;
              bool _3715_referential = _3712___mcc_h66;
              {
                if (_3715_referential) {
                  if (_3714_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source223.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source223.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3716___mcc_h68 = _source223.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3717_op = _3716___mcc_h68;
              {
                r = RAST.Expr.create_BinaryOp(_3717_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source224 = _3602_op;
            if (_source224.is_Eq) {
              bool _3718___mcc_h69 = _source224.dtor_referential;
              bool _3719___mcc_h70 = _source224.dtor_nullable;
              bool _3720_nullable = _3719___mcc_h70;
              bool _3721_referential = _3718___mcc_h69;
              {
                if (_3721_referential) {
                  if (_3720_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source224.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source224.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3722___mcc_h71 = _source224.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3723_op = _3722___mcc_h71;
              {
                r = RAST.Expr.create_BinaryOp(_3723_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source225 = _3602_op;
            if (_source225.is_Eq) {
              bool _3724___mcc_h72 = _source225.dtor_referential;
              bool _3725___mcc_h73 = _source225.dtor_nullable;
              bool _3726_nullable = _3725___mcc_h73;
              bool _3727_referential = _3724___mcc_h72;
              {
                if (_3727_referential) {
                  if (_3726_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source225.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source225.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3728___mcc_h74 = _source225.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3729_op = _3728___mcc_h74;
              {
                r = RAST.Expr.create_BinaryOp(_3729_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      } else if (_source208.is_In) {
        {
          r = ((_3623_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3620_left);
        }
      } else if (_source208.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3620_left, _3623_right, _3605_format);
      } else if (_source208.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3620_left, _3623_right, _3605_format);
      } else if (_source208.is_SetMerge) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3623_right);
        }
      } else if (_source208.is_SetSubtraction) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3623_right);
        }
      } else if (_source208.is_SetIntersection) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3623_right);
        }
      } else if (_source208.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3620_left, _3623_right, _3605_format);
        }
      } else if (_source208.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3620_left, _3623_right, _3605_format);
        }
      } else if (_source208.is_SetDisjoint) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3623_right);
        }
      } else if (_source208.is_MapMerge) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3623_right);
        }
      } else if (_source208.is_MapSubtraction) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3623_right);
        }
      } else if (_source208.is_MultisetMerge) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3623_right);
        }
      } else if (_source208.is_MultisetSubtraction) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3623_right);
        }
      } else if (_source208.is_MultisetIntersection) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3623_right);
        }
      } else if (_source208.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3620_left, _3623_right, _3605_format);
        }
      } else if (_source208.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3620_left, _3623_right, _3605_format);
        }
      } else if (_source208.is_MultisetDisjoint) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3623_right);
        }
      } else if (_source208.is_Concat) {
        {
          r = ((_3620_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3623_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3730___mcc_h22 = _source208.dtor_Passthrough_i_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3602_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3602_op), _3620_left, _3623_right, _3605_format);
          } else {
            DAST._IBinOp _source226 = _3602_op;
            if (_source226.is_Eq) {
              bool _3731___mcc_h75 = _source226.dtor_referential;
              bool _3732___mcc_h76 = _source226.dtor_nullable;
              bool _3733_nullable = _3732___mcc_h76;
              bool _3734_referential = _3731___mcc_h75;
              {
                if (_3734_referential) {
                  if (_3733_nullable) {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::nullable_referential_equality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  } else {
                    r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::ptr_eq"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
                  }
                } else {
                  r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3620_left, _3623_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                }
              }
            } else if (_source226.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else if (_source226.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3620_left, _3623_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3735___mcc_h77 = _source226.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3736_op = _3735___mcc_h77;
              {
                r = RAST.Expr.create_BinaryOp(_3736_op, _3620_left, _3623_right, _3605_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out283;
      DCOMP._IOwnership _out284;
      DCOMP.COMP.FromOwned(r, expectedOwnership, out _out283, out _out284);
      r = _out283;
      resultingOwnership = _out284;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3622_recIdentsL, _3625_recIdentsR);
      return ;
    }
    public void GenExprConvertFromNullable(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IExpression _3737_expr = _let_tmp_rhs53.dtor_value;
      DAST._IType _3738_fromTpe = _let_tmp_rhs53.dtor_from;
      DAST._IType _3739_toTpe = _let_tmp_rhs53.dtor_typ;
      RAST._IExpr _3740_recursiveGen;
      DCOMP._IOwnership _3741_recOwned;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3742_recIdents;
      RAST._IExpr _out285;
      DCOMP._IOwnership _out286;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out287;
      (this).GenExpr(_3737_expr, selfIdent, env, expectedOwnership, out _out285, out _out286, out _out287);
      _3740_recursiveGen = _out285;
      _3741_recOwned = _out286;
      _3742_recIdents = _out287;
      r = _3740_recursiveGen;
      if (object.Equals(_3741_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
        r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
      }
      r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
      RAST._IExpr _out288;
      DCOMP._IOwnership _out289;
      DCOMP.COMP.FromOwnership(r, _3741_recOwned, expectedOwnership, out _out288, out _out289);
      r = _out288;
      resultingOwnership = _out289;
      readIdents = _3742_recIdents;
    }
    public void GenExprConvertToNullable(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _3743_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _3744_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _3745_toTpe = _let_tmp_rhs54.dtor_typ;
      RAST._IExpr _3746_recursiveGen;
      DCOMP._IOwnership _3747_recOwned;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3748_recIdents;
      RAST._IExpr _out290;
      DCOMP._IOwnership _out291;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out292;
      (this).GenExpr(_3743_expr, selfIdent, env, expectedOwnership, out _out290, out _out291, out _out292);
      _3746_recursiveGen = _out290;
      _3747_recOwned = _out291;
      _3748_recIdents = _out292;
      r = _3746_recursiveGen;
      if (object.Equals(_3747_recOwned, DCOMP.Ownership.create_OwnershipOwned())) {
        r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
      }
      r = ((((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("option"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Option"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Some"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(r));
      RAST._IExpr _out293;
      DCOMP._IOwnership _out294;
      DCOMP.COMP.FromOwnership(r, _3747_recOwned, expectedOwnership, out _out293, out _out294);
      r = _out293;
      resultingOwnership = _out294;
      readIdents = _3748_recIdents;
    }
    public void GenExprConvertToNewtype(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs55 = e;
      DAST._IExpression _3749_expr = _let_tmp_rhs55.dtor_value;
      DAST._IType _3750_fromTpe = _let_tmp_rhs55.dtor_from;
      DAST._IType _3751_toTpe = _let_tmp_rhs55.dtor_typ;
      DAST._IType _let_tmp_rhs56 = _3751_toTpe;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3752___v92 = _let_tmp_rhs56.dtor_Path_i_a0;
      Dafny.ISequence<DAST._IType> _3753___v93 = _let_tmp_rhs56.dtor_typeArgs;
      DAST._IResolvedType _let_tmp_rhs57 = _let_tmp_rhs56.dtor_resolved;
      DAST._IType _3754_b = _let_tmp_rhs57.dtor_baseType;
      DAST._INewtypeRange _3755_range = _let_tmp_rhs57.dtor_range;
      bool _3756_erase = _let_tmp_rhs57.dtor_erase;
      Dafny.ISequence<DAST._IAttribute> _3757_attributes = _let_tmp_rhs57.dtor_attributes;
      Std.Wrappers._IOption<RAST._IType> _3758_nativeToType;
      _3758_nativeToType = DCOMP.COMP.NewtypeToRustType(_3754_b, _3755_range);
      if (object.Equals(_3750_fromTpe, _3754_b)) {
        RAST._IExpr _3759_recursiveGen;
        DCOMP._IOwnership _3760_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3761_recIdents;
        RAST._IExpr _out295;
        DCOMP._IOwnership _out296;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out297;
        (this).GenExpr(_3749_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out295, out _out296, out _out297);
        _3759_recursiveGen = _out295;
        _3760_recOwned = _out296;
        _3761_recIdents = _out297;
        readIdents = _3761_recIdents;
        Std.Wrappers._IOption<RAST._IType> _source227 = _3758_nativeToType;
        if (_source227.is_None) {
          if (_3756_erase) {
            r = _3759_recursiveGen;
          } else {
            RAST._IType _3762_rhsType;
            RAST._IType _out298;
            _out298 = (this).GenType(_3751_toTpe, true, false);
            _3762_rhsType = _out298;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3762_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3759_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          }
          RAST._IExpr _out299;
          DCOMP._IOwnership _out300;
          DCOMP.COMP.FromOwnership(r, _3760_recOwned, expectedOwnership, out _out299, out _out300);
          r = _out299;
          resultingOwnership = _out300;
        } else {
          RAST._IType _3763___mcc_h0 = _source227.dtor_value;
          RAST._IType _3764_v = _3763___mcc_h0;
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3759_recursiveGen, RAST.Expr.create_ExprFromType(_3764_v)));
          RAST._IExpr _out301;
          DCOMP._IOwnership _out302;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out301, out _out302);
          r = _out301;
          resultingOwnership = _out302;
        }
      } else {
        if ((_3758_nativeToType).is_Some) {
          DAST._IType _source228 = _3750_fromTpe;
          if (_source228.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3765___mcc_h1 = _source228.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _3766___mcc_h2 = _source228.dtor_typeArgs;
            DAST._IResolvedType _3767___mcc_h3 = _source228.dtor_resolved;
            DAST._IResolvedType _source229 = _3767___mcc_h3;
            if (_source229.is_AllocatedDatatype) {
              DAST._IDatatypeType _3768___mcc_h7 = _source229.dtor_datatypeType;
            } else if (_source229.is_Datatype) {
              DAST._IDatatypeType _3769___mcc_h9 = _source229.dtor_datatypeType;
            } else if (_source229.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3770___mcc_h11 = _source229.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _3771___mcc_h12 = _source229.dtor_attributes;
            } else {
              DAST._IType _3772___mcc_h15 = _source229.dtor_baseType;
              DAST._INewtypeRange _3773___mcc_h16 = _source229.dtor_range;
              bool _3774___mcc_h17 = _source229.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _3775___mcc_h18 = _source229.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _3776_attributes0 = _3775___mcc_h18;
              bool _3777_erase0 = _3774___mcc_h17;
              DAST._INewtypeRange _3778_range0 = _3773___mcc_h16;
              DAST._IType _3779_b0 = _3772___mcc_h15;
              {
                Std.Wrappers._IOption<RAST._IType> _3780_nativeFromType;
                _3780_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3779_b0, _3778_range0);
                if ((_3780_nativeFromType).is_Some) {
                  RAST._IExpr _3781_recursiveGen;
                  DCOMP._IOwnership _3782_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3783_recIdents;
                  RAST._IExpr _out303;
                  DCOMP._IOwnership _out304;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out305;
                  (this).GenExpr(_3749_expr, selfIdent, env, expectedOwnership, out _out303, out _out304, out _out305);
                  _3781_recursiveGen = _out303;
                  _3782_recOwned = _out304;
                  _3783_recIdents = _out305;
                  RAST._IExpr _out306;
                  DCOMP._IOwnership _out307;
                  DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription(_3781_recursiveGen, (_3758_nativeToType).dtor_value), _3782_recOwned, expectedOwnership, out _out306, out _out307);
                  r = _out306;
                  resultingOwnership = _out307;
                  readIdents = _3783_recIdents;
                  return ;
                }
              }
            }
          } else if (_source228.is_Nullable) {
            DAST._IType _3784___mcc_h23 = _source228.dtor_Nullable_i_a0;
          } else if (_source228.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3785___mcc_h25 = _source228.dtor_Tuple_i_a0;
          } else if (_source228.is_Array) {
            DAST._IType _3786___mcc_h27 = _source228.dtor_element;
            BigInteger _3787___mcc_h28 = _source228.dtor_dims;
          } else if (_source228.is_Seq) {
            DAST._IType _3788___mcc_h31 = _source228.dtor_element;
          } else if (_source228.is_Set) {
            DAST._IType _3789___mcc_h33 = _source228.dtor_element;
          } else if (_source228.is_Multiset) {
            DAST._IType _3790___mcc_h35 = _source228.dtor_element;
          } else if (_source228.is_Map) {
            DAST._IType _3791___mcc_h37 = _source228.dtor_key;
            DAST._IType _3792___mcc_h38 = _source228.dtor_value;
          } else if (_source228.is_SetBuilder) {
            DAST._IType _3793___mcc_h41 = _source228.dtor_element;
          } else if (_source228.is_MapBuilder) {
            DAST._IType _3794___mcc_h43 = _source228.dtor_key;
            DAST._IType _3795___mcc_h44 = _source228.dtor_value;
          } else if (_source228.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3796___mcc_h47 = _source228.dtor_args;
            DAST._IType _3797___mcc_h48 = _source228.dtor_result;
          } else if (_source228.is_Primitive) {
            DAST._IPrimitive _3798___mcc_h51 = _source228.dtor_Primitive_i_a0;
          } else if (_source228.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3799___mcc_h53 = _source228.dtor_Passthrough_i_a0;
          } else {
            Dafny.ISequence<Dafny.Rune> _3800___mcc_h55 = _source228.dtor_TypeArg_i_a0;
          }
          if (object.Equals(_3750_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
            RAST._IExpr _3801_recursiveGen;
            DCOMP._IOwnership _3802_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3803_recIdents;
            RAST._IExpr _out308;
            DCOMP._IOwnership _out309;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out310;
            (this).GenExpr(_3749_expr, selfIdent, env, expectedOwnership, out _out308, out _out309, out _out310);
            _3801_recursiveGen = _out308;
            _3802_recOwned = _out309;
            _3803_recIdents = _out310;
            RAST._IExpr _out311;
            DCOMP._IOwnership _out312;
            DCOMP.COMP.FromOwnership(RAST.Expr.create_TypeAscription((_3801_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3758_nativeToType).dtor_value), _3802_recOwned, expectedOwnership, out _out311, out _out312);
            r = _out311;
            resultingOwnership = _out312;
            readIdents = _3803_recIdents;
            return ;
          }
        }
        RAST._IExpr _out313;
        DCOMP._IOwnership _out314;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out315;
        (this).GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3749_expr, _3750_fromTpe, _3754_b), _3754_b, _3751_toTpe), selfIdent, env, expectedOwnership, out _out313, out _out314, out _out315);
        r = _out313;
        resultingOwnership = _out314;
        readIdents = _out315;
      }
    }
    public void GenExprConvertFromNewtype(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs58 = e;
      DAST._IExpression _3804_expr = _let_tmp_rhs58.dtor_value;
      DAST._IType _3805_fromTpe = _let_tmp_rhs58.dtor_from;
      DAST._IType _3806_toTpe = _let_tmp_rhs58.dtor_typ;
      DAST._IType _let_tmp_rhs59 = _3805_fromTpe;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3807___v97 = _let_tmp_rhs59.dtor_Path_i_a0;
      Dafny.ISequence<DAST._IType> _3808___v98 = _let_tmp_rhs59.dtor_typeArgs;
      DAST._IResolvedType _let_tmp_rhs60 = _let_tmp_rhs59.dtor_resolved;
      DAST._IType _3809_b = _let_tmp_rhs60.dtor_baseType;
      DAST._INewtypeRange _3810_range = _let_tmp_rhs60.dtor_range;
      bool _3811_erase = _let_tmp_rhs60.dtor_erase;
      Dafny.ISequence<DAST._IAttribute> _3812_attributes = _let_tmp_rhs60.dtor_attributes;
      Std.Wrappers._IOption<RAST._IType> _3813_nativeFromType;
      _3813_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3809_b, _3810_range);
      if (object.Equals(_3809_b, _3806_toTpe)) {
        RAST._IExpr _3814_recursiveGen;
        DCOMP._IOwnership _3815_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3816_recIdents;
        RAST._IExpr _out316;
        DCOMP._IOwnership _out317;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out318;
        (this).GenExpr(_3804_expr, selfIdent, env, expectedOwnership, out _out316, out _out317, out _out318);
        _3814_recursiveGen = _out316;
        _3815_recOwned = _out317;
        _3816_recIdents = _out318;
        readIdents = _3816_recIdents;
        Std.Wrappers._IOption<RAST._IType> _source230 = _3813_nativeFromType;
        if (_source230.is_None) {
          if (_3811_erase) {
            r = _3814_recursiveGen;
          } else {
            r = (_3814_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
          }
          RAST._IExpr _out319;
          DCOMP._IOwnership _out320;
          DCOMP.COMP.FromOwnership(r, _3815_recOwned, expectedOwnership, out _out319, out _out320);
          r = _out319;
          resultingOwnership = _out320;
        } else {
          RAST._IType _3817___mcc_h0 = _source230.dtor_value;
          RAST._IType _3818_v = _3817___mcc_h0;
          RAST._IType _3819_toTpeRust;
          RAST._IType _out321;
          _out321 = (this).GenType(_3806_toTpe, false, false);
          _3819_toTpeRust = _out321;
          r = (((_3814_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3819_toTpeRust))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out322;
          DCOMP._IOwnership _out323;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out322, out _out323);
          r = _out322;
          resultingOwnership = _out323;
        }
      } else {
        if ((_3813_nativeFromType).is_Some) {
          if (object.Equals(_3806_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
            RAST._IExpr _3820_recursiveGen;
            DCOMP._IOwnership _3821_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3822_recIdents;
            RAST._IExpr _out324;
            DCOMP._IOwnership _out325;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out326;
            (this).GenExpr(_3804_expr, selfIdent, env, expectedOwnership, out _out324, out _out325, out _out326);
            _3820_recursiveGen = _out324;
            _3821_recOwned = _out325;
            _3822_recIdents = _out326;
            RAST._IExpr _out327;
            DCOMP._IOwnership _out328;
            DCOMP.COMP.FromOwnership(((RAST.__default.dafny__runtime).MSel((this).DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3820_recursiveGen, (this).DafnyCharUnderlying)), _3821_recOwned, expectedOwnership, out _out327, out _out328);
            r = _out327;
            resultingOwnership = _out328;
            readIdents = _3822_recIdents;
            return ;
          }
        }
        RAST._IExpr _out329;
        DCOMP._IOwnership _out330;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out331;
        (this).GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3804_expr, _3805_fromTpe, _3809_b), _3809_b, _3806_toTpe), selfIdent, env, expectedOwnership, out _out329, out _out330, out _out331);
        r = _out329;
        resultingOwnership = _out330;
        readIdents = _out331;
      }
    }
    public void GenExprConvertNotImplemented(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs61 = e;
      DAST._IExpression _3823_expr = _let_tmp_rhs61.dtor_value;
      DAST._IType _3824_fromTpe = _let_tmp_rhs61.dtor_from;
      DAST._IType _3825_toTpe = _let_tmp_rhs61.dtor_typ;
      RAST._IType _3826_fromTpeGen;
      RAST._IType _out332;
      _out332 = (this).GenType(_3824_fromTpe, true, false);
      _3826_fromTpeGen = _out332;
      RAST._IType _3827_toTpeGen;
      RAST._IType _out333;
      _out333 = (this).GenType(_3825_toTpe, true, false);
      _3827_toTpeGen = _out333;
      RAST._IExpr _3828_recursiveGen;
      DCOMP._IOwnership _3829_recOwned;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3830_recIdents;
      RAST._IExpr _out334;
      DCOMP._IOwnership _out335;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out336;
      (this).GenExpr(_3823_expr, selfIdent, env, expectedOwnership, out _out334, out _out335, out _out336);
      _3828_recursiveGen = _out334;
      _3829_recOwned = _out335;
      _3830_recIdents = _out336;
      readIdents = _3830_recIdents;
      if (RAST.__default.IsImmutableConversion(_3826_fromTpeGen, _3827_toTpeGen)) {
        RAST._IExpr _out337;
        DCOMP._IOwnership _out338;
        DCOMP.COMP.FromOwnership(_3828_recursiveGen, _3829_recOwned, DCOMP.Ownership.create_OwnershipOwned(), out _out337, out _out338);
        r = _out337;
        resultingOwnership = _out338;
        r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("UpcastTo"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3827_toTpeGen))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("upcast_to"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3828_recursiveGen));
        RAST._IExpr _out339;
        DCOMP._IOwnership _out340;
        DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipOwned(), expectedOwnership, out _out339, out _out340);
        r = _out339;
        resultingOwnership = _out340;
      } else {
        Dafny.ISequence<Dafny.Rune> _3831_msg;
        _3831_msg = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from "), (_3826_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_3827_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */"));
        (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_3831_msg);
        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat((_3828_recursiveGen)._ToString(DCOMP.__default.IND), _3831_msg));
        RAST._IExpr _out341;
        DCOMP._IOwnership _out342;
        DCOMP.COMP.FromOwnership(r, _3829_recOwned, expectedOwnership, out _out341, out _out342);
        r = _out341;
        resultingOwnership = _out342;
      }
    }
    public void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs62 = e;
      DAST._IExpression _3832_expr = _let_tmp_rhs62.dtor_value;
      DAST._IType _3833_fromTpe = _let_tmp_rhs62.dtor_from;
      DAST._IType _3834_toTpe = _let_tmp_rhs62.dtor_typ;
      if (object.Equals(_3833_fromTpe, _3834_toTpe)) {
        RAST._IExpr _3835_recursiveGen;
        DCOMP._IOwnership _3836_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3837_recIdents;
        RAST._IExpr _out343;
        DCOMP._IOwnership _out344;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out345;
        (this).GenExpr(_3832_expr, selfIdent, env, expectedOwnership, out _out343, out _out344, out _out345);
        _3835_recursiveGen = _out343;
        _3836_recOwned = _out344;
        _3837_recIdents = _out345;
        r = _3835_recursiveGen;
        RAST._IExpr _out346;
        DCOMP._IOwnership _out347;
        DCOMP.COMP.FromOwnership(r, _3836_recOwned, expectedOwnership, out _out346, out _out347);
        r = _out346;
        resultingOwnership = _out347;
        readIdents = _3837_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source231 = _System.Tuple2<DAST._IType, DAST._IType>.create(_3833_fromTpe, _3834_toTpe);
        DAST._IType _3838___mcc_h0 = _source231.dtor__0;
        DAST._IType _3839___mcc_h1 = _source231.dtor__1;
        DAST._IType _source232 = _3838___mcc_h0;
        if (_source232.is_Path) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3840___mcc_h4 = _source232.dtor_Path_i_a0;
          Dafny.ISequence<DAST._IType> _3841___mcc_h5 = _source232.dtor_typeArgs;
          DAST._IResolvedType _3842___mcc_h6 = _source232.dtor_resolved;
          DAST._IResolvedType _source233 = _3842___mcc_h6;
          if (_source233.is_AllocatedDatatype) {
            DAST._IDatatypeType _3843___mcc_h16 = _source233.dtor_datatypeType;
            DAST._IType _source234 = _3839___mcc_h1;
            if (_source234.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3844___mcc_h20 = _source234.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _3845___mcc_h21 = _source234.dtor_typeArgs;
              DAST._IResolvedType _3846___mcc_h22 = _source234.dtor_resolved;
              DAST._IResolvedType _source235 = _3846___mcc_h22;
              if (_source235.is_AllocatedDatatype) {
                DAST._IDatatypeType _3847___mcc_h26 = _source235.dtor_datatypeType;
                {
                  RAST._IExpr _out348;
                  DCOMP._IOwnership _out349;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out350;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out348, out _out349, out _out350);
                  r = _out348;
                  resultingOwnership = _out349;
                  readIdents = _out350;
                }
              } else if (_source235.is_Datatype) {
                DAST._IDatatypeType _3848___mcc_h28 = _source235.dtor_datatypeType;
                {
                  RAST._IExpr _out351;
                  DCOMP._IOwnership _out352;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out353;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out351, out _out352, out _out353);
                  r = _out351;
                  resultingOwnership = _out352;
                  readIdents = _out353;
                }
              } else if (_source235.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3849___mcc_h30 = _source235.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3850___mcc_h31 = _source235.dtor_attributes;
                {
                  RAST._IExpr _out354;
                  DCOMP._IOwnership _out355;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out356;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out354, out _out355, out _out356);
                  r = _out354;
                  resultingOwnership = _out355;
                  readIdents = _out356;
                }
              } else {
                DAST._IType _3851___mcc_h34 = _source235.dtor_baseType;
                DAST._INewtypeRange _3852___mcc_h35 = _source235.dtor_range;
                bool _3853___mcc_h36 = _source235.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3854___mcc_h37 = _source235.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3855_attributes = _3854___mcc_h37;
                bool _3856_erase = _3853___mcc_h36;
                DAST._INewtypeRange _3857_range = _3852___mcc_h35;
                DAST._IType _3858_b = _3851___mcc_h34;
                {
                  RAST._IExpr _out357;
                  DCOMP._IOwnership _out358;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out359;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out357, out _out358, out _out359);
                  r = _out357;
                  resultingOwnership = _out358;
                  readIdents = _out359;
                }
              }
            } else if (_source234.is_Nullable) {
              DAST._IType _3859___mcc_h42 = _source234.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out360;
                DCOMP._IOwnership _out361;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out362;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out360, out _out361, out _out362);
                r = _out360;
                resultingOwnership = _out361;
                readIdents = _out362;
              }
            } else if (_source234.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3860___mcc_h44 = _source234.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out363;
                DCOMP._IOwnership _out364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out365;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out363, out _out364, out _out365);
                r = _out363;
                resultingOwnership = _out364;
                readIdents = _out365;
              }
            } else if (_source234.is_Array) {
              DAST._IType _3861___mcc_h46 = _source234.dtor_element;
              BigInteger _3862___mcc_h47 = _source234.dtor_dims;
              {
                RAST._IExpr _out366;
                DCOMP._IOwnership _out367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out368;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out366, out _out367, out _out368);
                r = _out366;
                resultingOwnership = _out367;
                readIdents = _out368;
              }
            } else if (_source234.is_Seq) {
              DAST._IType _3863___mcc_h50 = _source234.dtor_element;
              {
                RAST._IExpr _out369;
                DCOMP._IOwnership _out370;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out371;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out369, out _out370, out _out371);
                r = _out369;
                resultingOwnership = _out370;
                readIdents = _out371;
              }
            } else if (_source234.is_Set) {
              DAST._IType _3864___mcc_h52 = _source234.dtor_element;
              {
                RAST._IExpr _out372;
                DCOMP._IOwnership _out373;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out374;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out372, out _out373, out _out374);
                r = _out372;
                resultingOwnership = _out373;
                readIdents = _out374;
              }
            } else if (_source234.is_Multiset) {
              DAST._IType _3865___mcc_h54 = _source234.dtor_element;
              {
                RAST._IExpr _out375;
                DCOMP._IOwnership _out376;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out377;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out375, out _out376, out _out377);
                r = _out375;
                resultingOwnership = _out376;
                readIdents = _out377;
              }
            } else if (_source234.is_Map) {
              DAST._IType _3866___mcc_h56 = _source234.dtor_key;
              DAST._IType _3867___mcc_h57 = _source234.dtor_value;
              {
                RAST._IExpr _out378;
                DCOMP._IOwnership _out379;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out380;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out378, out _out379, out _out380);
                r = _out378;
                resultingOwnership = _out379;
                readIdents = _out380;
              }
            } else if (_source234.is_SetBuilder) {
              DAST._IType _3868___mcc_h60 = _source234.dtor_element;
              {
                RAST._IExpr _out381;
                DCOMP._IOwnership _out382;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out383;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out381, out _out382, out _out383);
                r = _out381;
                resultingOwnership = _out382;
                readIdents = _out383;
              }
            } else if (_source234.is_MapBuilder) {
              DAST._IType _3869___mcc_h62 = _source234.dtor_key;
              DAST._IType _3870___mcc_h63 = _source234.dtor_value;
              {
                RAST._IExpr _out384;
                DCOMP._IOwnership _out385;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out386;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out384, out _out385, out _out386);
                r = _out384;
                resultingOwnership = _out385;
                readIdents = _out386;
              }
            } else if (_source234.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3871___mcc_h66 = _source234.dtor_args;
              DAST._IType _3872___mcc_h67 = _source234.dtor_result;
              {
                RAST._IExpr _out387;
                DCOMP._IOwnership _out388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out389;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out387, out _out388, out _out389);
                r = _out387;
                resultingOwnership = _out388;
                readIdents = _out389;
              }
            } else if (_source234.is_Primitive) {
              DAST._IPrimitive _3873___mcc_h70 = _source234.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out390;
                DCOMP._IOwnership _out391;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out392;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out390, out _out391, out _out392);
                r = _out390;
                resultingOwnership = _out391;
                readIdents = _out392;
              }
            } else if (_source234.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3874___mcc_h72 = _source234.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out393;
                DCOMP._IOwnership _out394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out395;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out393, out _out394, out _out395);
                r = _out393;
                resultingOwnership = _out394;
                readIdents = _out395;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3875___mcc_h74 = _source234.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out396;
                DCOMP._IOwnership _out397;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out398;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out396, out _out397, out _out398);
                r = _out396;
                resultingOwnership = _out397;
                readIdents = _out398;
              }
            }
          } else if (_source233.is_Datatype) {
            DAST._IDatatypeType _3876___mcc_h76 = _source233.dtor_datatypeType;
            DAST._IType _source236 = _3839___mcc_h1;
            if (_source236.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3877___mcc_h80 = _source236.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _3878___mcc_h81 = _source236.dtor_typeArgs;
              DAST._IResolvedType _3879___mcc_h82 = _source236.dtor_resolved;
              DAST._IResolvedType _source237 = _3879___mcc_h82;
              if (_source237.is_AllocatedDatatype) {
                DAST._IDatatypeType _3880___mcc_h86 = _source237.dtor_datatypeType;
                {
                  RAST._IExpr _out399;
                  DCOMP._IOwnership _out400;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out401;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out399, out _out400, out _out401);
                  r = _out399;
                  resultingOwnership = _out400;
                  readIdents = _out401;
                }
              } else if (_source237.is_Datatype) {
                DAST._IDatatypeType _3881___mcc_h88 = _source237.dtor_datatypeType;
                {
                  RAST._IExpr _out402;
                  DCOMP._IOwnership _out403;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out404;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out402, out _out403, out _out404);
                  r = _out402;
                  resultingOwnership = _out403;
                  readIdents = _out404;
                }
              } else if (_source237.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3882___mcc_h90 = _source237.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3883___mcc_h91 = _source237.dtor_attributes;
                {
                  RAST._IExpr _out405;
                  DCOMP._IOwnership _out406;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out407;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out405, out _out406, out _out407);
                  r = _out405;
                  resultingOwnership = _out406;
                  readIdents = _out407;
                }
              } else {
                DAST._IType _3884___mcc_h94 = _source237.dtor_baseType;
                DAST._INewtypeRange _3885___mcc_h95 = _source237.dtor_range;
                bool _3886___mcc_h96 = _source237.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3887___mcc_h97 = _source237.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3888_attributes = _3887___mcc_h97;
                bool _3889_erase = _3886___mcc_h96;
                DAST._INewtypeRange _3890_range = _3885___mcc_h95;
                DAST._IType _3891_b = _3884___mcc_h94;
                {
                  RAST._IExpr _out408;
                  DCOMP._IOwnership _out409;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out410;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out408, out _out409, out _out410);
                  r = _out408;
                  resultingOwnership = _out409;
                  readIdents = _out410;
                }
              }
            } else if (_source236.is_Nullable) {
              DAST._IType _3892___mcc_h102 = _source236.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out411;
                DCOMP._IOwnership _out412;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out413;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out411, out _out412, out _out413);
                r = _out411;
                resultingOwnership = _out412;
                readIdents = _out413;
              }
            } else if (_source236.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3893___mcc_h104 = _source236.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out414;
                DCOMP._IOwnership _out415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out416;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out414, out _out415, out _out416);
                r = _out414;
                resultingOwnership = _out415;
                readIdents = _out416;
              }
            } else if (_source236.is_Array) {
              DAST._IType _3894___mcc_h106 = _source236.dtor_element;
              BigInteger _3895___mcc_h107 = _source236.dtor_dims;
              {
                RAST._IExpr _out417;
                DCOMP._IOwnership _out418;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out419;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out417, out _out418, out _out419);
                r = _out417;
                resultingOwnership = _out418;
                readIdents = _out419;
              }
            } else if (_source236.is_Seq) {
              DAST._IType _3896___mcc_h110 = _source236.dtor_element;
              {
                RAST._IExpr _out420;
                DCOMP._IOwnership _out421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out422;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out420, out _out421, out _out422);
                r = _out420;
                resultingOwnership = _out421;
                readIdents = _out422;
              }
            } else if (_source236.is_Set) {
              DAST._IType _3897___mcc_h112 = _source236.dtor_element;
              {
                RAST._IExpr _out423;
                DCOMP._IOwnership _out424;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out425;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out423, out _out424, out _out425);
                r = _out423;
                resultingOwnership = _out424;
                readIdents = _out425;
              }
            } else if (_source236.is_Multiset) {
              DAST._IType _3898___mcc_h114 = _source236.dtor_element;
              {
                RAST._IExpr _out426;
                DCOMP._IOwnership _out427;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out428;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out426, out _out427, out _out428);
                r = _out426;
                resultingOwnership = _out427;
                readIdents = _out428;
              }
            } else if (_source236.is_Map) {
              DAST._IType _3899___mcc_h116 = _source236.dtor_key;
              DAST._IType _3900___mcc_h117 = _source236.dtor_value;
              {
                RAST._IExpr _out429;
                DCOMP._IOwnership _out430;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out431;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out429, out _out430, out _out431);
                r = _out429;
                resultingOwnership = _out430;
                readIdents = _out431;
              }
            } else if (_source236.is_SetBuilder) {
              DAST._IType _3901___mcc_h120 = _source236.dtor_element;
              {
                RAST._IExpr _out432;
                DCOMP._IOwnership _out433;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out434;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out432, out _out433, out _out434);
                r = _out432;
                resultingOwnership = _out433;
                readIdents = _out434;
              }
            } else if (_source236.is_MapBuilder) {
              DAST._IType _3902___mcc_h122 = _source236.dtor_key;
              DAST._IType _3903___mcc_h123 = _source236.dtor_value;
              {
                RAST._IExpr _out435;
                DCOMP._IOwnership _out436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out437;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out435, out _out436, out _out437);
                r = _out435;
                resultingOwnership = _out436;
                readIdents = _out437;
              }
            } else if (_source236.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3904___mcc_h126 = _source236.dtor_args;
              DAST._IType _3905___mcc_h127 = _source236.dtor_result;
              {
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out440;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out438, out _out439, out _out440);
                r = _out438;
                resultingOwnership = _out439;
                readIdents = _out440;
              }
            } else if (_source236.is_Primitive) {
              DAST._IPrimitive _3906___mcc_h130 = _source236.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out441;
                DCOMP._IOwnership _out442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out443;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out441, out _out442, out _out443);
                r = _out441;
                resultingOwnership = _out442;
                readIdents = _out443;
              }
            } else if (_source236.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3907___mcc_h132 = _source236.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out444;
                DCOMP._IOwnership _out445;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out446;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out444, out _out445, out _out446);
                r = _out444;
                resultingOwnership = _out445;
                readIdents = _out446;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3908___mcc_h134 = _source236.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out447;
                DCOMP._IOwnership _out448;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out449;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out447, out _out448, out _out449);
                r = _out447;
                resultingOwnership = _out448;
                readIdents = _out449;
              }
            }
          } else if (_source233.is_Trait) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3909___mcc_h136 = _source233.dtor_path;
            Dafny.ISequence<DAST._IAttribute> _3910___mcc_h137 = _source233.dtor_attributes;
            DAST._IType _source238 = _3839___mcc_h1;
            if (_source238.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3911___mcc_h144 = _source238.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _3912___mcc_h145 = _source238.dtor_typeArgs;
              DAST._IResolvedType _3913___mcc_h146 = _source238.dtor_resolved;
              DAST._IResolvedType _source239 = _3913___mcc_h146;
              if (_source239.is_AllocatedDatatype) {
                DAST._IDatatypeType _3914___mcc_h150 = _source239.dtor_datatypeType;
                {
                  RAST._IExpr _out450;
                  DCOMP._IOwnership _out451;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out452;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out450, out _out451, out _out452);
                  r = _out450;
                  resultingOwnership = _out451;
                  readIdents = _out452;
                }
              } else if (_source239.is_Datatype) {
                DAST._IDatatypeType _3915___mcc_h152 = _source239.dtor_datatypeType;
                {
                  RAST._IExpr _out453;
                  DCOMP._IOwnership _out454;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out455;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out453, out _out454, out _out455);
                  r = _out453;
                  resultingOwnership = _out454;
                  readIdents = _out455;
                }
              } else if (_source239.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3916___mcc_h154 = _source239.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3917___mcc_h155 = _source239.dtor_attributes;
                {
                  RAST._IExpr _out456;
                  DCOMP._IOwnership _out457;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out458;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out456, out _out457, out _out458);
                  r = _out456;
                  resultingOwnership = _out457;
                  readIdents = _out458;
                }
              } else {
                DAST._IType _3918___mcc_h158 = _source239.dtor_baseType;
                DAST._INewtypeRange _3919___mcc_h159 = _source239.dtor_range;
                bool _3920___mcc_h160 = _source239.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3921___mcc_h161 = _source239.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3922_attributes = _3921___mcc_h161;
                bool _3923_erase = _3920___mcc_h160;
                DAST._INewtypeRange _3924_range = _3919___mcc_h159;
                DAST._IType _3925_b = _3918___mcc_h158;
                {
                  RAST._IExpr _out459;
                  DCOMP._IOwnership _out460;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out461;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out459, out _out460, out _out461);
                  r = _out459;
                  resultingOwnership = _out460;
                  readIdents = _out461;
                }
              }
            } else if (_source238.is_Nullable) {
              DAST._IType _3926___mcc_h166 = _source238.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out462;
                DCOMP._IOwnership _out463;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out464;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out462, out _out463, out _out464);
                r = _out462;
                resultingOwnership = _out463;
                readIdents = _out464;
              }
            } else if (_source238.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3927___mcc_h168 = _source238.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out465;
                DCOMP._IOwnership _out466;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out467;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out465, out _out466, out _out467);
                r = _out465;
                resultingOwnership = _out466;
                readIdents = _out467;
              }
            } else if (_source238.is_Array) {
              DAST._IType _3928___mcc_h170 = _source238.dtor_element;
              BigInteger _3929___mcc_h171 = _source238.dtor_dims;
              {
                RAST._IExpr _out468;
                DCOMP._IOwnership _out469;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out470;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out468, out _out469, out _out470);
                r = _out468;
                resultingOwnership = _out469;
                readIdents = _out470;
              }
            } else if (_source238.is_Seq) {
              DAST._IType _3930___mcc_h174 = _source238.dtor_element;
              {
                RAST._IExpr _out471;
                DCOMP._IOwnership _out472;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out473;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out471, out _out472, out _out473);
                r = _out471;
                resultingOwnership = _out472;
                readIdents = _out473;
              }
            } else if (_source238.is_Set) {
              DAST._IType _3931___mcc_h176 = _source238.dtor_element;
              {
                RAST._IExpr _out474;
                DCOMP._IOwnership _out475;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out476;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out474, out _out475, out _out476);
                r = _out474;
                resultingOwnership = _out475;
                readIdents = _out476;
              }
            } else if (_source238.is_Multiset) {
              DAST._IType _3932___mcc_h178 = _source238.dtor_element;
              {
                RAST._IExpr _out477;
                DCOMP._IOwnership _out478;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out479;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out477, out _out478, out _out479);
                r = _out477;
                resultingOwnership = _out478;
                readIdents = _out479;
              }
            } else if (_source238.is_Map) {
              DAST._IType _3933___mcc_h180 = _source238.dtor_key;
              DAST._IType _3934___mcc_h181 = _source238.dtor_value;
              {
                RAST._IExpr _out480;
                DCOMP._IOwnership _out481;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out482;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out480, out _out481, out _out482);
                r = _out480;
                resultingOwnership = _out481;
                readIdents = _out482;
              }
            } else if (_source238.is_SetBuilder) {
              DAST._IType _3935___mcc_h184 = _source238.dtor_element;
              {
                RAST._IExpr _out483;
                DCOMP._IOwnership _out484;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out485;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out483, out _out484, out _out485);
                r = _out483;
                resultingOwnership = _out484;
                readIdents = _out485;
              }
            } else if (_source238.is_MapBuilder) {
              DAST._IType _3936___mcc_h186 = _source238.dtor_key;
              DAST._IType _3937___mcc_h187 = _source238.dtor_value;
              {
                RAST._IExpr _out486;
                DCOMP._IOwnership _out487;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out488;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out486, out _out487, out _out488);
                r = _out486;
                resultingOwnership = _out487;
                readIdents = _out488;
              }
            } else if (_source238.is_Arrow) {
              Dafny.ISequence<DAST._IType> _3938___mcc_h190 = _source238.dtor_args;
              DAST._IType _3939___mcc_h191 = _source238.dtor_result;
              {
                RAST._IExpr _out489;
                DCOMP._IOwnership _out490;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out491;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out489, out _out490, out _out491);
                r = _out489;
                resultingOwnership = _out490;
                readIdents = _out491;
              }
            } else if (_source238.is_Primitive) {
              DAST._IPrimitive _3940___mcc_h194 = _source238.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out492;
                DCOMP._IOwnership _out493;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out494;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out492, out _out493, out _out494);
                r = _out492;
                resultingOwnership = _out493;
                readIdents = _out494;
              }
            } else if (_source238.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _3941___mcc_h196 = _source238.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out495;
                DCOMP._IOwnership _out496;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out497;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out495, out _out496, out _out497);
                r = _out495;
                resultingOwnership = _out496;
                readIdents = _out497;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3942___mcc_h198 = _source238.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out498;
                DCOMP._IOwnership _out499;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out500;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out498, out _out499, out _out500);
                r = _out498;
                resultingOwnership = _out499;
                readIdents = _out500;
              }
            }
          } else {
            DAST._IType _3943___mcc_h200 = _source233.dtor_baseType;
            DAST._INewtypeRange _3944___mcc_h201 = _source233.dtor_range;
            bool _3945___mcc_h202 = _source233.dtor_erase;
            Dafny.ISequence<DAST._IAttribute> _3946___mcc_h203 = _source233.dtor_attributes;
            DAST._IType _source240 = _3839___mcc_h1;
            if (_source240.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3947___mcc_h216 = _source240.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _3948___mcc_h217 = _source240.dtor_typeArgs;
              DAST._IResolvedType _3949___mcc_h218 = _source240.dtor_resolved;
              DAST._IResolvedType _source241 = _3949___mcc_h218;
              if (_source241.is_AllocatedDatatype) {
                DAST._IDatatypeType _3950___mcc_h225 = _source241.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _3951_attributes = _3946___mcc_h203;
                bool _3952_erase = _3945___mcc_h202;
                DAST._INewtypeRange _3953_range = _3944___mcc_h201;
                DAST._IType _3954_b = _3943___mcc_h200;
                {
                  RAST._IExpr _out501;
                  DCOMP._IOwnership _out502;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out503;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out501, out _out502, out _out503);
                  r = _out501;
                  resultingOwnership = _out502;
                  readIdents = _out503;
                }
              } else if (_source241.is_Datatype) {
                DAST._IDatatypeType _3955___mcc_h228 = _source241.dtor_datatypeType;
                Dafny.ISequence<DAST._IAttribute> _3956_attributes = _3946___mcc_h203;
                bool _3957_erase = _3945___mcc_h202;
                DAST._INewtypeRange _3958_range = _3944___mcc_h201;
                DAST._IType _3959_b = _3943___mcc_h200;
                {
                  RAST._IExpr _out504;
                  DCOMP._IOwnership _out505;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out506;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out504, out _out505, out _out506);
                  r = _out504;
                  resultingOwnership = _out505;
                  readIdents = _out506;
                }
              } else if (_source241.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3960___mcc_h231 = _source241.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _3961___mcc_h232 = _source241.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3962_attributes = _3946___mcc_h203;
                bool _3963_erase = _3945___mcc_h202;
                DAST._INewtypeRange _3964_range = _3944___mcc_h201;
                DAST._IType _3965_b = _3943___mcc_h200;
                {
                  RAST._IExpr _out507;
                  DCOMP._IOwnership _out508;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out509;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out507, out _out508, out _out509);
                  r = _out507;
                  resultingOwnership = _out508;
                  readIdents = _out509;
                }
              } else {
                DAST._IType _3966___mcc_h237 = _source241.dtor_baseType;
                DAST._INewtypeRange _3967___mcc_h238 = _source241.dtor_range;
                bool _3968___mcc_h239 = _source241.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _3969___mcc_h240 = _source241.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _3970_attributes = _3969___mcc_h240;
                bool _3971_erase = _3968___mcc_h239;
                DAST._INewtypeRange _3972_range = _3967___mcc_h238;
                DAST._IType _3973_b = _3966___mcc_h237;
                {
                  RAST._IExpr _out510;
                  DCOMP._IOwnership _out511;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out512;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out510, out _out511, out _out512);
                  r = _out510;
                  resultingOwnership = _out511;
                  readIdents = _out512;
                }
              }
            } else if (_source240.is_Nullable) {
              DAST._IType _3974___mcc_h249 = _source240.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out513;
                DCOMP._IOwnership _out514;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out515;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out513, out _out514, out _out515);
                r = _out513;
                resultingOwnership = _out514;
                readIdents = _out515;
              }
            } else if (_source240.is_Tuple) {
              Dafny.ISequence<DAST._IType> _3975___mcc_h252 = _source240.dtor_Tuple_i_a0;
              Dafny.ISequence<DAST._IAttribute> _3976_attributes = _3946___mcc_h203;
              bool _3977_erase = _3945___mcc_h202;
              DAST._INewtypeRange _3978_range = _3944___mcc_h201;
              DAST._IType _3979_b = _3943___mcc_h200;
              {
                RAST._IExpr _out516;
                DCOMP._IOwnership _out517;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out518;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out516, out _out517, out _out518);
                r = _out516;
                resultingOwnership = _out517;
                readIdents = _out518;
              }
            } else if (_source240.is_Array) {
              DAST._IType _3980___mcc_h255 = _source240.dtor_element;
              BigInteger _3981___mcc_h256 = _source240.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _3982_attributes = _3946___mcc_h203;
              bool _3983_erase = _3945___mcc_h202;
              DAST._INewtypeRange _3984_range = _3944___mcc_h201;
              DAST._IType _3985_b = _3943___mcc_h200;
              {
                RAST._IExpr _out519;
                DCOMP._IOwnership _out520;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out521;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out519, out _out520, out _out521);
                r = _out519;
                resultingOwnership = _out520;
                readIdents = _out521;
              }
            } else if (_source240.is_Seq) {
              DAST._IType _3986___mcc_h261 = _source240.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3987_attributes = _3946___mcc_h203;
              bool _3988_erase = _3945___mcc_h202;
              DAST._INewtypeRange _3989_range = _3944___mcc_h201;
              DAST._IType _3990_b = _3943___mcc_h200;
              {
                RAST._IExpr _out522;
                DCOMP._IOwnership _out523;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out524;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out522, out _out523, out _out524);
                r = _out522;
                resultingOwnership = _out523;
                readIdents = _out524;
              }
            } else if (_source240.is_Set) {
              DAST._IType _3991___mcc_h264 = _source240.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3992_attributes = _3946___mcc_h203;
              bool _3993_erase = _3945___mcc_h202;
              DAST._INewtypeRange _3994_range = _3944___mcc_h201;
              DAST._IType _3995_b = _3943___mcc_h200;
              {
                RAST._IExpr _out525;
                DCOMP._IOwnership _out526;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out527;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out525, out _out526, out _out527);
                r = _out525;
                resultingOwnership = _out526;
                readIdents = _out527;
              }
            } else if (_source240.is_Multiset) {
              DAST._IType _3996___mcc_h267 = _source240.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _3997_attributes = _3946___mcc_h203;
              bool _3998_erase = _3945___mcc_h202;
              DAST._INewtypeRange _3999_range = _3944___mcc_h201;
              DAST._IType _4000_b = _3943___mcc_h200;
              {
                RAST._IExpr _out528;
                DCOMP._IOwnership _out529;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out530;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out528, out _out529, out _out530);
                r = _out528;
                resultingOwnership = _out529;
                readIdents = _out530;
              }
            } else if (_source240.is_Map) {
              DAST._IType _4001___mcc_h270 = _source240.dtor_key;
              DAST._IType _4002___mcc_h271 = _source240.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4003_attributes = _3946___mcc_h203;
              bool _4004_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4005_range = _3944___mcc_h201;
              DAST._IType _4006_b = _3943___mcc_h200;
              {
                RAST._IExpr _out531;
                DCOMP._IOwnership _out532;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out533;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out531, out _out532, out _out533);
                r = _out531;
                resultingOwnership = _out532;
                readIdents = _out533;
              }
            } else if (_source240.is_SetBuilder) {
              DAST._IType _4007___mcc_h276 = _source240.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4008_attributes = _3946___mcc_h203;
              bool _4009_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4010_range = _3944___mcc_h201;
              DAST._IType _4011_b = _3943___mcc_h200;
              {
                RAST._IExpr _out534;
                DCOMP._IOwnership _out535;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out536;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out534, out _out535, out _out536);
                r = _out534;
                resultingOwnership = _out535;
                readIdents = _out536;
              }
            } else if (_source240.is_MapBuilder) {
              DAST._IType _4012___mcc_h279 = _source240.dtor_key;
              DAST._IType _4013___mcc_h280 = _source240.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4014_attributes = _3946___mcc_h203;
              bool _4015_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4016_range = _3944___mcc_h201;
              DAST._IType _4017_b = _3943___mcc_h200;
              {
                RAST._IExpr _out537;
                DCOMP._IOwnership _out538;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out539;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out537, out _out538, out _out539);
                r = _out537;
                resultingOwnership = _out538;
                readIdents = _out539;
              }
            } else if (_source240.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4018___mcc_h285 = _source240.dtor_args;
              DAST._IType _4019___mcc_h286 = _source240.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _4020_attributes = _3946___mcc_h203;
              bool _4021_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4022_range = _3944___mcc_h201;
              DAST._IType _4023_b = _3943___mcc_h200;
              {
                RAST._IExpr _out540;
                DCOMP._IOwnership _out541;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out542;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out540, out _out541, out _out542);
                r = _out540;
                resultingOwnership = _out541;
                readIdents = _out542;
              }
            } else if (_source240.is_Primitive) {
              DAST._IPrimitive _4024___mcc_h291 = _source240.dtor_Primitive_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4025_attributes = _3946___mcc_h203;
              bool _4026_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4027_range = _3944___mcc_h201;
              DAST._IType _4028_b = _3943___mcc_h200;
              {
                RAST._IExpr _out543;
                DCOMP._IOwnership _out544;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out545;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out543, out _out544, out _out545);
                r = _out543;
                resultingOwnership = _out544;
                readIdents = _out545;
              }
            } else if (_source240.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4029___mcc_h294 = _source240.dtor_Passthrough_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4030_attributes = _3946___mcc_h203;
              bool _4031_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4032_range = _3944___mcc_h201;
              DAST._IType _4033_b = _3943___mcc_h200;
              {
                RAST._IExpr _out546;
                DCOMP._IOwnership _out547;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out548;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out546, out _out547, out _out548);
                r = _out546;
                resultingOwnership = _out547;
                readIdents = _out548;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4034___mcc_h297 = _source240.dtor_TypeArg_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4035_attributes = _3946___mcc_h203;
              bool _4036_erase = _3945___mcc_h202;
              DAST._INewtypeRange _4037_range = _3944___mcc_h201;
              DAST._IType _4038_b = _3943___mcc_h200;
              {
                RAST._IExpr _out549;
                DCOMP._IOwnership _out550;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out551;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out549, out _out550, out _out551);
                r = _out549;
                resultingOwnership = _out550;
                readIdents = _out551;
              }
            }
          }
        } else if (_source232.is_Nullable) {
          DAST._IType _4039___mcc_h300 = _source232.dtor_Nullable_i_a0;
          DAST._IType _source242 = _3839___mcc_h1;
          if (_source242.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4040___mcc_h304 = _source242.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4041___mcc_h305 = _source242.dtor_typeArgs;
            DAST._IResolvedType _4042___mcc_h306 = _source242.dtor_resolved;
            DAST._IResolvedType _source243 = _4042___mcc_h306;
            if (_source243.is_AllocatedDatatype) {
              DAST._IDatatypeType _4043___mcc_h313 = _source243.dtor_datatypeType;
              {
                RAST._IExpr _out552;
                DCOMP._IOwnership _out553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out554;
                (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out552, out _out553, out _out554);
                r = _out552;
                resultingOwnership = _out553;
                readIdents = _out554;
              }
            } else if (_source243.is_Datatype) {
              DAST._IDatatypeType _4044___mcc_h316 = _source243.dtor_datatypeType;
              {
                RAST._IExpr _out555;
                DCOMP._IOwnership _out556;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out557;
                (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out555, out _out556, out _out557);
                r = _out555;
                resultingOwnership = _out556;
                readIdents = _out557;
              }
            } else if (_source243.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4045___mcc_h319 = _source243.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4046___mcc_h320 = _source243.dtor_attributes;
              {
                RAST._IExpr _out558;
                DCOMP._IOwnership _out559;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out560;
                (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out558, out _out559, out _out560);
                r = _out558;
                resultingOwnership = _out559;
                readIdents = _out560;
              }
            } else {
              DAST._IType _4047___mcc_h325 = _source243.dtor_baseType;
              DAST._INewtypeRange _4048___mcc_h326 = _source243.dtor_range;
              bool _4049___mcc_h327 = _source243.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4050___mcc_h328 = _source243.dtor_attributes;
              {
                RAST._IExpr _out561;
                DCOMP._IOwnership _out562;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out563;
                (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out561, out _out562, out _out563);
                r = _out561;
                resultingOwnership = _out562;
                readIdents = _out563;
              }
            }
          } else if (_source242.is_Nullable) {
            DAST._IType _4051___mcc_h337 = _source242.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out564;
              DCOMP._IOwnership _out565;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out566;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out564, out _out565, out _out566);
              r = _out564;
              resultingOwnership = _out565;
              readIdents = _out566;
            }
          } else if (_source242.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4052___mcc_h340 = _source242.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out567;
              DCOMP._IOwnership _out568;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out569;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out567, out _out568, out _out569);
              r = _out567;
              resultingOwnership = _out568;
              readIdents = _out569;
            }
          } else if (_source242.is_Array) {
            DAST._IType _4053___mcc_h343 = _source242.dtor_element;
            BigInteger _4054___mcc_h344 = _source242.dtor_dims;
            {
              RAST._IExpr _out570;
              DCOMP._IOwnership _out571;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out572;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out570, out _out571, out _out572);
              r = _out570;
              resultingOwnership = _out571;
              readIdents = _out572;
            }
          } else if (_source242.is_Seq) {
            DAST._IType _4055___mcc_h349 = _source242.dtor_element;
            {
              RAST._IExpr _out573;
              DCOMP._IOwnership _out574;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out575;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out573, out _out574, out _out575);
              r = _out573;
              resultingOwnership = _out574;
              readIdents = _out575;
            }
          } else if (_source242.is_Set) {
            DAST._IType _4056___mcc_h352 = _source242.dtor_element;
            {
              RAST._IExpr _out576;
              DCOMP._IOwnership _out577;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out578;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out576, out _out577, out _out578);
              r = _out576;
              resultingOwnership = _out577;
              readIdents = _out578;
            }
          } else if (_source242.is_Multiset) {
            DAST._IType _4057___mcc_h355 = _source242.dtor_element;
            {
              RAST._IExpr _out579;
              DCOMP._IOwnership _out580;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out581;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out579, out _out580, out _out581);
              r = _out579;
              resultingOwnership = _out580;
              readIdents = _out581;
            }
          } else if (_source242.is_Map) {
            DAST._IType _4058___mcc_h358 = _source242.dtor_key;
            DAST._IType _4059___mcc_h359 = _source242.dtor_value;
            {
              RAST._IExpr _out582;
              DCOMP._IOwnership _out583;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out584;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out582, out _out583, out _out584);
              r = _out582;
              resultingOwnership = _out583;
              readIdents = _out584;
            }
          } else if (_source242.is_SetBuilder) {
            DAST._IType _4060___mcc_h364 = _source242.dtor_element;
            {
              RAST._IExpr _out585;
              DCOMP._IOwnership _out586;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out587;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out585, out _out586, out _out587);
              r = _out585;
              resultingOwnership = _out586;
              readIdents = _out587;
            }
          } else if (_source242.is_MapBuilder) {
            DAST._IType _4061___mcc_h367 = _source242.dtor_key;
            DAST._IType _4062___mcc_h368 = _source242.dtor_value;
            {
              RAST._IExpr _out588;
              DCOMP._IOwnership _out589;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out590;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out588, out _out589, out _out590);
              r = _out588;
              resultingOwnership = _out589;
              readIdents = _out590;
            }
          } else if (_source242.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4063___mcc_h373 = _source242.dtor_args;
            DAST._IType _4064___mcc_h374 = _source242.dtor_result;
            {
              RAST._IExpr _out591;
              DCOMP._IOwnership _out592;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out593;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out591, out _out592, out _out593);
              r = _out591;
              resultingOwnership = _out592;
              readIdents = _out593;
            }
          } else if (_source242.is_Primitive) {
            DAST._IPrimitive _4065___mcc_h379 = _source242.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out594;
              DCOMP._IOwnership _out595;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out596;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out594, out _out595, out _out596);
              r = _out594;
              resultingOwnership = _out595;
              readIdents = _out596;
            }
          } else if (_source242.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4066___mcc_h382 = _source242.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out597;
              DCOMP._IOwnership _out598;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out599;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out597, out _out598, out _out599);
              r = _out597;
              resultingOwnership = _out598;
              readIdents = _out599;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4067___mcc_h385 = _source242.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out600;
              DCOMP._IOwnership _out601;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out602;
              (this).GenExprConvertFromNullable(e, selfIdent, env, expectedOwnership, out _out600, out _out601, out _out602);
              r = _out600;
              resultingOwnership = _out601;
              readIdents = _out602;
            }
          }
        } else if (_source232.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4068___mcc_h388 = _source232.dtor_Tuple_i_a0;
          DAST._IType _source244 = _3839___mcc_h1;
          if (_source244.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4069___mcc_h392 = _source244.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4070___mcc_h393 = _source244.dtor_typeArgs;
            DAST._IResolvedType _4071___mcc_h394 = _source244.dtor_resolved;
            DAST._IResolvedType _source245 = _4071___mcc_h394;
            if (_source245.is_AllocatedDatatype) {
              DAST._IDatatypeType _4072___mcc_h398 = _source245.dtor_datatypeType;
              {
                RAST._IExpr _out603;
                DCOMP._IOwnership _out604;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out605;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out603, out _out604, out _out605);
                r = _out603;
                resultingOwnership = _out604;
                readIdents = _out605;
              }
            } else if (_source245.is_Datatype) {
              DAST._IDatatypeType _4073___mcc_h400 = _source245.dtor_datatypeType;
              {
                RAST._IExpr _out606;
                DCOMP._IOwnership _out607;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out608;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out606, out _out607, out _out608);
                r = _out606;
                resultingOwnership = _out607;
                readIdents = _out608;
              }
            } else if (_source245.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4074___mcc_h402 = _source245.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4075___mcc_h403 = _source245.dtor_attributes;
              {
                RAST._IExpr _out609;
                DCOMP._IOwnership _out610;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out611;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out609, out _out610, out _out611);
                r = _out609;
                resultingOwnership = _out610;
                readIdents = _out611;
              }
            } else {
              DAST._IType _4076___mcc_h406 = _source245.dtor_baseType;
              DAST._INewtypeRange _4077___mcc_h407 = _source245.dtor_range;
              bool _4078___mcc_h408 = _source245.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4079___mcc_h409 = _source245.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4080_attributes = _4079___mcc_h409;
              bool _4081_erase = _4078___mcc_h408;
              DAST._INewtypeRange _4082_range = _4077___mcc_h407;
              DAST._IType _4083_b = _4076___mcc_h406;
              {
                RAST._IExpr _out612;
                DCOMP._IOwnership _out613;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out614;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out612, out _out613, out _out614);
                r = _out612;
                resultingOwnership = _out613;
                readIdents = _out614;
              }
            }
          } else if (_source244.is_Nullable) {
            DAST._IType _4084___mcc_h414 = _source244.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out615;
              DCOMP._IOwnership _out616;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out617;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out615, out _out616, out _out617);
              r = _out615;
              resultingOwnership = _out616;
              readIdents = _out617;
            }
          } else if (_source244.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4085___mcc_h416 = _source244.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out618;
              DCOMP._IOwnership _out619;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out620;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out618, out _out619, out _out620);
              r = _out618;
              resultingOwnership = _out619;
              readIdents = _out620;
            }
          } else if (_source244.is_Array) {
            DAST._IType _4086___mcc_h418 = _source244.dtor_element;
            BigInteger _4087___mcc_h419 = _source244.dtor_dims;
            {
              RAST._IExpr _out621;
              DCOMP._IOwnership _out622;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out623;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out621, out _out622, out _out623);
              r = _out621;
              resultingOwnership = _out622;
              readIdents = _out623;
            }
          } else if (_source244.is_Seq) {
            DAST._IType _4088___mcc_h422 = _source244.dtor_element;
            {
              RAST._IExpr _out624;
              DCOMP._IOwnership _out625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out626;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out624, out _out625, out _out626);
              r = _out624;
              resultingOwnership = _out625;
              readIdents = _out626;
            }
          } else if (_source244.is_Set) {
            DAST._IType _4089___mcc_h424 = _source244.dtor_element;
            {
              RAST._IExpr _out627;
              DCOMP._IOwnership _out628;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out629;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out627, out _out628, out _out629);
              r = _out627;
              resultingOwnership = _out628;
              readIdents = _out629;
            }
          } else if (_source244.is_Multiset) {
            DAST._IType _4090___mcc_h426 = _source244.dtor_element;
            {
              RAST._IExpr _out630;
              DCOMP._IOwnership _out631;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out632;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out630, out _out631, out _out632);
              r = _out630;
              resultingOwnership = _out631;
              readIdents = _out632;
            }
          } else if (_source244.is_Map) {
            DAST._IType _4091___mcc_h428 = _source244.dtor_key;
            DAST._IType _4092___mcc_h429 = _source244.dtor_value;
            {
              RAST._IExpr _out633;
              DCOMP._IOwnership _out634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out635;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out633, out _out634, out _out635);
              r = _out633;
              resultingOwnership = _out634;
              readIdents = _out635;
            }
          } else if (_source244.is_SetBuilder) {
            DAST._IType _4093___mcc_h432 = _source244.dtor_element;
            {
              RAST._IExpr _out636;
              DCOMP._IOwnership _out637;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out638;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out636, out _out637, out _out638);
              r = _out636;
              resultingOwnership = _out637;
              readIdents = _out638;
            }
          } else if (_source244.is_MapBuilder) {
            DAST._IType _4094___mcc_h434 = _source244.dtor_key;
            DAST._IType _4095___mcc_h435 = _source244.dtor_value;
            {
              RAST._IExpr _out639;
              DCOMP._IOwnership _out640;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out641;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out639, out _out640, out _out641);
              r = _out639;
              resultingOwnership = _out640;
              readIdents = _out641;
            }
          } else if (_source244.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4096___mcc_h438 = _source244.dtor_args;
            DAST._IType _4097___mcc_h439 = _source244.dtor_result;
            {
              RAST._IExpr _out642;
              DCOMP._IOwnership _out643;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out644;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out642, out _out643, out _out644);
              r = _out642;
              resultingOwnership = _out643;
              readIdents = _out644;
            }
          } else if (_source244.is_Primitive) {
            DAST._IPrimitive _4098___mcc_h442 = _source244.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out645;
              DCOMP._IOwnership _out646;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out647;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out645, out _out646, out _out647);
              r = _out645;
              resultingOwnership = _out646;
              readIdents = _out647;
            }
          } else if (_source244.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4099___mcc_h444 = _source244.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out648;
              DCOMP._IOwnership _out649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out650;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out648, out _out649, out _out650);
              r = _out648;
              resultingOwnership = _out649;
              readIdents = _out650;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4100___mcc_h446 = _source244.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out651;
              DCOMP._IOwnership _out652;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out653;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out651, out _out652, out _out653);
              r = _out651;
              resultingOwnership = _out652;
              readIdents = _out653;
            }
          }
        } else if (_source232.is_Array) {
          DAST._IType _4101___mcc_h448 = _source232.dtor_element;
          BigInteger _4102___mcc_h449 = _source232.dtor_dims;
          DAST._IType _source246 = _3839___mcc_h1;
          if (_source246.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4103___mcc_h456 = _source246.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4104___mcc_h457 = _source246.dtor_typeArgs;
            DAST._IResolvedType _4105___mcc_h458 = _source246.dtor_resolved;
            DAST._IResolvedType _source247 = _4105___mcc_h458;
            if (_source247.is_AllocatedDatatype) {
              DAST._IDatatypeType _4106___mcc_h462 = _source247.dtor_datatypeType;
              {
                RAST._IExpr _out654;
                DCOMP._IOwnership _out655;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out656;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out654, out _out655, out _out656);
                r = _out654;
                resultingOwnership = _out655;
                readIdents = _out656;
              }
            } else if (_source247.is_Datatype) {
              DAST._IDatatypeType _4107___mcc_h464 = _source247.dtor_datatypeType;
              {
                RAST._IExpr _out657;
                DCOMP._IOwnership _out658;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out659;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out657, out _out658, out _out659);
                r = _out657;
                resultingOwnership = _out658;
                readIdents = _out659;
              }
            } else if (_source247.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4108___mcc_h466 = _source247.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4109___mcc_h467 = _source247.dtor_attributes;
              {
                RAST._IExpr _out660;
                DCOMP._IOwnership _out661;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out662;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out660, out _out661, out _out662);
                r = _out660;
                resultingOwnership = _out661;
                readIdents = _out662;
              }
            } else {
              DAST._IType _4110___mcc_h470 = _source247.dtor_baseType;
              DAST._INewtypeRange _4111___mcc_h471 = _source247.dtor_range;
              bool _4112___mcc_h472 = _source247.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4113___mcc_h473 = _source247.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4114_attributes = _4113___mcc_h473;
              bool _4115_erase = _4112___mcc_h472;
              DAST._INewtypeRange _4116_range = _4111___mcc_h471;
              DAST._IType _4117_b = _4110___mcc_h470;
              {
                RAST._IExpr _out663;
                DCOMP._IOwnership _out664;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out665;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out663, out _out664, out _out665);
                r = _out663;
                resultingOwnership = _out664;
                readIdents = _out665;
              }
            }
          } else if (_source246.is_Nullable) {
            DAST._IType _4118___mcc_h478 = _source246.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out666;
              DCOMP._IOwnership _out667;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out668;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out666, out _out667, out _out668);
              r = _out666;
              resultingOwnership = _out667;
              readIdents = _out668;
            }
          } else if (_source246.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4119___mcc_h480 = _source246.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out669;
              DCOMP._IOwnership _out670;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out671;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out669, out _out670, out _out671);
              r = _out669;
              resultingOwnership = _out670;
              readIdents = _out671;
            }
          } else if (_source246.is_Array) {
            DAST._IType _4120___mcc_h482 = _source246.dtor_element;
            BigInteger _4121___mcc_h483 = _source246.dtor_dims;
            {
              RAST._IExpr _out672;
              DCOMP._IOwnership _out673;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out674;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out672, out _out673, out _out674);
              r = _out672;
              resultingOwnership = _out673;
              readIdents = _out674;
            }
          } else if (_source246.is_Seq) {
            DAST._IType _4122___mcc_h486 = _source246.dtor_element;
            {
              RAST._IExpr _out675;
              DCOMP._IOwnership _out676;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out677;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out675, out _out676, out _out677);
              r = _out675;
              resultingOwnership = _out676;
              readIdents = _out677;
            }
          } else if (_source246.is_Set) {
            DAST._IType _4123___mcc_h488 = _source246.dtor_element;
            {
              RAST._IExpr _out678;
              DCOMP._IOwnership _out679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out680;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out678, out _out679, out _out680);
              r = _out678;
              resultingOwnership = _out679;
              readIdents = _out680;
            }
          } else if (_source246.is_Multiset) {
            DAST._IType _4124___mcc_h490 = _source246.dtor_element;
            {
              RAST._IExpr _out681;
              DCOMP._IOwnership _out682;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out683;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out681, out _out682, out _out683);
              r = _out681;
              resultingOwnership = _out682;
              readIdents = _out683;
            }
          } else if (_source246.is_Map) {
            DAST._IType _4125___mcc_h492 = _source246.dtor_key;
            DAST._IType _4126___mcc_h493 = _source246.dtor_value;
            {
              RAST._IExpr _out684;
              DCOMP._IOwnership _out685;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out686;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out684, out _out685, out _out686);
              r = _out684;
              resultingOwnership = _out685;
              readIdents = _out686;
            }
          } else if (_source246.is_SetBuilder) {
            DAST._IType _4127___mcc_h496 = _source246.dtor_element;
            {
              RAST._IExpr _out687;
              DCOMP._IOwnership _out688;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out689;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out687, out _out688, out _out689);
              r = _out687;
              resultingOwnership = _out688;
              readIdents = _out689;
            }
          } else if (_source246.is_MapBuilder) {
            DAST._IType _4128___mcc_h498 = _source246.dtor_key;
            DAST._IType _4129___mcc_h499 = _source246.dtor_value;
            {
              RAST._IExpr _out690;
              DCOMP._IOwnership _out691;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out692;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out690, out _out691, out _out692);
              r = _out690;
              resultingOwnership = _out691;
              readIdents = _out692;
            }
          } else if (_source246.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4130___mcc_h502 = _source246.dtor_args;
            DAST._IType _4131___mcc_h503 = _source246.dtor_result;
            {
              RAST._IExpr _out693;
              DCOMP._IOwnership _out694;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out695;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out693, out _out694, out _out695);
              r = _out693;
              resultingOwnership = _out694;
              readIdents = _out695;
            }
          } else if (_source246.is_Primitive) {
            DAST._IPrimitive _4132___mcc_h506 = _source246.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out696;
              DCOMP._IOwnership _out697;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out698;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out696, out _out697, out _out698);
              r = _out696;
              resultingOwnership = _out697;
              readIdents = _out698;
            }
          } else if (_source246.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4133___mcc_h508 = _source246.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out699;
              DCOMP._IOwnership _out700;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out701;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out699, out _out700, out _out701);
              r = _out699;
              resultingOwnership = _out700;
              readIdents = _out701;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4134___mcc_h510 = _source246.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out702;
              DCOMP._IOwnership _out703;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out704;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out702, out _out703, out _out704);
              r = _out702;
              resultingOwnership = _out703;
              readIdents = _out704;
            }
          }
        } else if (_source232.is_Seq) {
          DAST._IType _4135___mcc_h512 = _source232.dtor_element;
          DAST._IType _source248 = _3839___mcc_h1;
          if (_source248.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4136___mcc_h516 = _source248.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4137___mcc_h517 = _source248.dtor_typeArgs;
            DAST._IResolvedType _4138___mcc_h518 = _source248.dtor_resolved;
            DAST._IResolvedType _source249 = _4138___mcc_h518;
            if (_source249.is_AllocatedDatatype) {
              DAST._IDatatypeType _4139___mcc_h522 = _source249.dtor_datatypeType;
              {
                RAST._IExpr _out705;
                DCOMP._IOwnership _out706;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out707;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out705, out _out706, out _out707);
                r = _out705;
                resultingOwnership = _out706;
                readIdents = _out707;
              }
            } else if (_source249.is_Datatype) {
              DAST._IDatatypeType _4140___mcc_h524 = _source249.dtor_datatypeType;
              {
                RAST._IExpr _out708;
                DCOMP._IOwnership _out709;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out710;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out708, out _out709, out _out710);
                r = _out708;
                resultingOwnership = _out709;
                readIdents = _out710;
              }
            } else if (_source249.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4141___mcc_h526 = _source249.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4142___mcc_h527 = _source249.dtor_attributes;
              {
                RAST._IExpr _out711;
                DCOMP._IOwnership _out712;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out713;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out711, out _out712, out _out713);
                r = _out711;
                resultingOwnership = _out712;
                readIdents = _out713;
              }
            } else {
              DAST._IType _4143___mcc_h530 = _source249.dtor_baseType;
              DAST._INewtypeRange _4144___mcc_h531 = _source249.dtor_range;
              bool _4145___mcc_h532 = _source249.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4146___mcc_h533 = _source249.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4147_attributes = _4146___mcc_h533;
              bool _4148_erase = _4145___mcc_h532;
              DAST._INewtypeRange _4149_range = _4144___mcc_h531;
              DAST._IType _4150_b = _4143___mcc_h530;
              {
                RAST._IExpr _out714;
                DCOMP._IOwnership _out715;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out716;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out714, out _out715, out _out716);
                r = _out714;
                resultingOwnership = _out715;
                readIdents = _out716;
              }
            }
          } else if (_source248.is_Nullable) {
            DAST._IType _4151___mcc_h538 = _source248.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out717;
              DCOMP._IOwnership _out718;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out719;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out717, out _out718, out _out719);
              r = _out717;
              resultingOwnership = _out718;
              readIdents = _out719;
            }
          } else if (_source248.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4152___mcc_h540 = _source248.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out720;
              DCOMP._IOwnership _out721;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out722;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out720, out _out721, out _out722);
              r = _out720;
              resultingOwnership = _out721;
              readIdents = _out722;
            }
          } else if (_source248.is_Array) {
            DAST._IType _4153___mcc_h542 = _source248.dtor_element;
            BigInteger _4154___mcc_h543 = _source248.dtor_dims;
            {
              RAST._IExpr _out723;
              DCOMP._IOwnership _out724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out725;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out723, out _out724, out _out725);
              r = _out723;
              resultingOwnership = _out724;
              readIdents = _out725;
            }
          } else if (_source248.is_Seq) {
            DAST._IType _4155___mcc_h546 = _source248.dtor_element;
            {
              RAST._IExpr _out726;
              DCOMP._IOwnership _out727;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out728;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out726, out _out727, out _out728);
              r = _out726;
              resultingOwnership = _out727;
              readIdents = _out728;
            }
          } else if (_source248.is_Set) {
            DAST._IType _4156___mcc_h548 = _source248.dtor_element;
            {
              RAST._IExpr _out729;
              DCOMP._IOwnership _out730;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out731;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out729, out _out730, out _out731);
              r = _out729;
              resultingOwnership = _out730;
              readIdents = _out731;
            }
          } else if (_source248.is_Multiset) {
            DAST._IType _4157___mcc_h550 = _source248.dtor_element;
            {
              RAST._IExpr _out732;
              DCOMP._IOwnership _out733;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out734;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out732, out _out733, out _out734);
              r = _out732;
              resultingOwnership = _out733;
              readIdents = _out734;
            }
          } else if (_source248.is_Map) {
            DAST._IType _4158___mcc_h552 = _source248.dtor_key;
            DAST._IType _4159___mcc_h553 = _source248.dtor_value;
            {
              RAST._IExpr _out735;
              DCOMP._IOwnership _out736;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out737;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out735, out _out736, out _out737);
              r = _out735;
              resultingOwnership = _out736;
              readIdents = _out737;
            }
          } else if (_source248.is_SetBuilder) {
            DAST._IType _4160___mcc_h556 = _source248.dtor_element;
            {
              RAST._IExpr _out738;
              DCOMP._IOwnership _out739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out740;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out738, out _out739, out _out740);
              r = _out738;
              resultingOwnership = _out739;
              readIdents = _out740;
            }
          } else if (_source248.is_MapBuilder) {
            DAST._IType _4161___mcc_h558 = _source248.dtor_key;
            DAST._IType _4162___mcc_h559 = _source248.dtor_value;
            {
              RAST._IExpr _out741;
              DCOMP._IOwnership _out742;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out743;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out741, out _out742, out _out743);
              r = _out741;
              resultingOwnership = _out742;
              readIdents = _out743;
            }
          } else if (_source248.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4163___mcc_h562 = _source248.dtor_args;
            DAST._IType _4164___mcc_h563 = _source248.dtor_result;
            {
              RAST._IExpr _out744;
              DCOMP._IOwnership _out745;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out746;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out744, out _out745, out _out746);
              r = _out744;
              resultingOwnership = _out745;
              readIdents = _out746;
            }
          } else if (_source248.is_Primitive) {
            DAST._IPrimitive _4165___mcc_h566 = _source248.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out747;
              DCOMP._IOwnership _out748;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out749;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out747, out _out748, out _out749);
              r = _out747;
              resultingOwnership = _out748;
              readIdents = _out749;
            }
          } else if (_source248.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4166___mcc_h568 = _source248.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out750;
              DCOMP._IOwnership _out751;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out752;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out750, out _out751, out _out752);
              r = _out750;
              resultingOwnership = _out751;
              readIdents = _out752;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4167___mcc_h570 = _source248.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out753;
              DCOMP._IOwnership _out754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out755;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out753, out _out754, out _out755);
              r = _out753;
              resultingOwnership = _out754;
              readIdents = _out755;
            }
          }
        } else if (_source232.is_Set) {
          DAST._IType _4168___mcc_h572 = _source232.dtor_element;
          DAST._IType _source250 = _3839___mcc_h1;
          if (_source250.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4169___mcc_h576 = _source250.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4170___mcc_h577 = _source250.dtor_typeArgs;
            DAST._IResolvedType _4171___mcc_h578 = _source250.dtor_resolved;
            DAST._IResolvedType _source251 = _4171___mcc_h578;
            if (_source251.is_AllocatedDatatype) {
              DAST._IDatatypeType _4172___mcc_h582 = _source251.dtor_datatypeType;
              {
                RAST._IExpr _out756;
                DCOMP._IOwnership _out757;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out758;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out756, out _out757, out _out758);
                r = _out756;
                resultingOwnership = _out757;
                readIdents = _out758;
              }
            } else if (_source251.is_Datatype) {
              DAST._IDatatypeType _4173___mcc_h584 = _source251.dtor_datatypeType;
              {
                RAST._IExpr _out759;
                DCOMP._IOwnership _out760;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out761;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out759, out _out760, out _out761);
                r = _out759;
                resultingOwnership = _out760;
                readIdents = _out761;
              }
            } else if (_source251.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4174___mcc_h586 = _source251.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4175___mcc_h587 = _source251.dtor_attributes;
              {
                RAST._IExpr _out762;
                DCOMP._IOwnership _out763;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out764;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out762, out _out763, out _out764);
                r = _out762;
                resultingOwnership = _out763;
                readIdents = _out764;
              }
            } else {
              DAST._IType _4176___mcc_h590 = _source251.dtor_baseType;
              DAST._INewtypeRange _4177___mcc_h591 = _source251.dtor_range;
              bool _4178___mcc_h592 = _source251.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4179___mcc_h593 = _source251.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4180_attributes = _4179___mcc_h593;
              bool _4181_erase = _4178___mcc_h592;
              DAST._INewtypeRange _4182_range = _4177___mcc_h591;
              DAST._IType _4183_b = _4176___mcc_h590;
              {
                RAST._IExpr _out765;
                DCOMP._IOwnership _out766;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out767;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out765, out _out766, out _out767);
                r = _out765;
                resultingOwnership = _out766;
                readIdents = _out767;
              }
            }
          } else if (_source250.is_Nullable) {
            DAST._IType _4184___mcc_h598 = _source250.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out768;
              DCOMP._IOwnership _out769;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out770;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out768, out _out769, out _out770);
              r = _out768;
              resultingOwnership = _out769;
              readIdents = _out770;
            }
          } else if (_source250.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4185___mcc_h600 = _source250.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out771;
              DCOMP._IOwnership _out772;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out773;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out771, out _out772, out _out773);
              r = _out771;
              resultingOwnership = _out772;
              readIdents = _out773;
            }
          } else if (_source250.is_Array) {
            DAST._IType _4186___mcc_h602 = _source250.dtor_element;
            BigInteger _4187___mcc_h603 = _source250.dtor_dims;
            {
              RAST._IExpr _out774;
              DCOMP._IOwnership _out775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out776;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out774, out _out775, out _out776);
              r = _out774;
              resultingOwnership = _out775;
              readIdents = _out776;
            }
          } else if (_source250.is_Seq) {
            DAST._IType _4188___mcc_h606 = _source250.dtor_element;
            {
              RAST._IExpr _out777;
              DCOMP._IOwnership _out778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out779;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out777, out _out778, out _out779);
              r = _out777;
              resultingOwnership = _out778;
              readIdents = _out779;
            }
          } else if (_source250.is_Set) {
            DAST._IType _4189___mcc_h608 = _source250.dtor_element;
            {
              RAST._IExpr _out780;
              DCOMP._IOwnership _out781;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out782;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out780, out _out781, out _out782);
              r = _out780;
              resultingOwnership = _out781;
              readIdents = _out782;
            }
          } else if (_source250.is_Multiset) {
            DAST._IType _4190___mcc_h610 = _source250.dtor_element;
            {
              RAST._IExpr _out783;
              DCOMP._IOwnership _out784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out785;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out783, out _out784, out _out785);
              r = _out783;
              resultingOwnership = _out784;
              readIdents = _out785;
            }
          } else if (_source250.is_Map) {
            DAST._IType _4191___mcc_h612 = _source250.dtor_key;
            DAST._IType _4192___mcc_h613 = _source250.dtor_value;
            {
              RAST._IExpr _out786;
              DCOMP._IOwnership _out787;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out788;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out786, out _out787, out _out788);
              r = _out786;
              resultingOwnership = _out787;
              readIdents = _out788;
            }
          } else if (_source250.is_SetBuilder) {
            DAST._IType _4193___mcc_h616 = _source250.dtor_element;
            {
              RAST._IExpr _out789;
              DCOMP._IOwnership _out790;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out791;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out789, out _out790, out _out791);
              r = _out789;
              resultingOwnership = _out790;
              readIdents = _out791;
            }
          } else if (_source250.is_MapBuilder) {
            DAST._IType _4194___mcc_h618 = _source250.dtor_key;
            DAST._IType _4195___mcc_h619 = _source250.dtor_value;
            {
              RAST._IExpr _out792;
              DCOMP._IOwnership _out793;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out794;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out792, out _out793, out _out794);
              r = _out792;
              resultingOwnership = _out793;
              readIdents = _out794;
            }
          } else if (_source250.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4196___mcc_h622 = _source250.dtor_args;
            DAST._IType _4197___mcc_h623 = _source250.dtor_result;
            {
              RAST._IExpr _out795;
              DCOMP._IOwnership _out796;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out797;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out795, out _out796, out _out797);
              r = _out795;
              resultingOwnership = _out796;
              readIdents = _out797;
            }
          } else if (_source250.is_Primitive) {
            DAST._IPrimitive _4198___mcc_h626 = _source250.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out798;
              DCOMP._IOwnership _out799;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out800;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out798, out _out799, out _out800);
              r = _out798;
              resultingOwnership = _out799;
              readIdents = _out800;
            }
          } else if (_source250.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4199___mcc_h628 = _source250.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out801;
              DCOMP._IOwnership _out802;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out803;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out801, out _out802, out _out803);
              r = _out801;
              resultingOwnership = _out802;
              readIdents = _out803;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4200___mcc_h630 = _source250.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out804;
              DCOMP._IOwnership _out805;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out806;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out804, out _out805, out _out806);
              r = _out804;
              resultingOwnership = _out805;
              readIdents = _out806;
            }
          }
        } else if (_source232.is_Multiset) {
          DAST._IType _4201___mcc_h632 = _source232.dtor_element;
          DAST._IType _source252 = _3839___mcc_h1;
          if (_source252.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4202___mcc_h636 = _source252.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4203___mcc_h637 = _source252.dtor_typeArgs;
            DAST._IResolvedType _4204___mcc_h638 = _source252.dtor_resolved;
            DAST._IResolvedType _source253 = _4204___mcc_h638;
            if (_source253.is_AllocatedDatatype) {
              DAST._IDatatypeType _4205___mcc_h642 = _source253.dtor_datatypeType;
              {
                RAST._IExpr _out807;
                DCOMP._IOwnership _out808;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out809;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out807, out _out808, out _out809);
                r = _out807;
                resultingOwnership = _out808;
                readIdents = _out809;
              }
            } else if (_source253.is_Datatype) {
              DAST._IDatatypeType _4206___mcc_h644 = _source253.dtor_datatypeType;
              {
                RAST._IExpr _out810;
                DCOMP._IOwnership _out811;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out812;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out810, out _out811, out _out812);
                r = _out810;
                resultingOwnership = _out811;
                readIdents = _out812;
              }
            } else if (_source253.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4207___mcc_h646 = _source253.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4208___mcc_h647 = _source253.dtor_attributes;
              {
                RAST._IExpr _out813;
                DCOMP._IOwnership _out814;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out815;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out813, out _out814, out _out815);
                r = _out813;
                resultingOwnership = _out814;
                readIdents = _out815;
              }
            } else {
              DAST._IType _4209___mcc_h650 = _source253.dtor_baseType;
              DAST._INewtypeRange _4210___mcc_h651 = _source253.dtor_range;
              bool _4211___mcc_h652 = _source253.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4212___mcc_h653 = _source253.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4213_attributes = _4212___mcc_h653;
              bool _4214_erase = _4211___mcc_h652;
              DAST._INewtypeRange _4215_range = _4210___mcc_h651;
              DAST._IType _4216_b = _4209___mcc_h650;
              {
                RAST._IExpr _out816;
                DCOMP._IOwnership _out817;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out818;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out816, out _out817, out _out818);
                r = _out816;
                resultingOwnership = _out817;
                readIdents = _out818;
              }
            }
          } else if (_source252.is_Nullable) {
            DAST._IType _4217___mcc_h658 = _source252.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out819;
              DCOMP._IOwnership _out820;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out821;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out819, out _out820, out _out821);
              r = _out819;
              resultingOwnership = _out820;
              readIdents = _out821;
            }
          } else if (_source252.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4218___mcc_h660 = _source252.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out822;
              DCOMP._IOwnership _out823;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out824;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out822, out _out823, out _out824);
              r = _out822;
              resultingOwnership = _out823;
              readIdents = _out824;
            }
          } else if (_source252.is_Array) {
            DAST._IType _4219___mcc_h662 = _source252.dtor_element;
            BigInteger _4220___mcc_h663 = _source252.dtor_dims;
            {
              RAST._IExpr _out825;
              DCOMP._IOwnership _out826;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out827;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out825, out _out826, out _out827);
              r = _out825;
              resultingOwnership = _out826;
              readIdents = _out827;
            }
          } else if (_source252.is_Seq) {
            DAST._IType _4221___mcc_h666 = _source252.dtor_element;
            {
              RAST._IExpr _out828;
              DCOMP._IOwnership _out829;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out830;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out828, out _out829, out _out830);
              r = _out828;
              resultingOwnership = _out829;
              readIdents = _out830;
            }
          } else if (_source252.is_Set) {
            DAST._IType _4222___mcc_h668 = _source252.dtor_element;
            {
              RAST._IExpr _out831;
              DCOMP._IOwnership _out832;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out833;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out831, out _out832, out _out833);
              r = _out831;
              resultingOwnership = _out832;
              readIdents = _out833;
            }
          } else if (_source252.is_Multiset) {
            DAST._IType _4223___mcc_h670 = _source252.dtor_element;
            {
              RAST._IExpr _out834;
              DCOMP._IOwnership _out835;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out836;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out834, out _out835, out _out836);
              r = _out834;
              resultingOwnership = _out835;
              readIdents = _out836;
            }
          } else if (_source252.is_Map) {
            DAST._IType _4224___mcc_h672 = _source252.dtor_key;
            DAST._IType _4225___mcc_h673 = _source252.dtor_value;
            {
              RAST._IExpr _out837;
              DCOMP._IOwnership _out838;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out839;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out837, out _out838, out _out839);
              r = _out837;
              resultingOwnership = _out838;
              readIdents = _out839;
            }
          } else if (_source252.is_SetBuilder) {
            DAST._IType _4226___mcc_h676 = _source252.dtor_element;
            {
              RAST._IExpr _out840;
              DCOMP._IOwnership _out841;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out842;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out840, out _out841, out _out842);
              r = _out840;
              resultingOwnership = _out841;
              readIdents = _out842;
            }
          } else if (_source252.is_MapBuilder) {
            DAST._IType _4227___mcc_h678 = _source252.dtor_key;
            DAST._IType _4228___mcc_h679 = _source252.dtor_value;
            {
              RAST._IExpr _out843;
              DCOMP._IOwnership _out844;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out845;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out843, out _out844, out _out845);
              r = _out843;
              resultingOwnership = _out844;
              readIdents = _out845;
            }
          } else if (_source252.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4229___mcc_h682 = _source252.dtor_args;
            DAST._IType _4230___mcc_h683 = _source252.dtor_result;
            {
              RAST._IExpr _out846;
              DCOMP._IOwnership _out847;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out848;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out846, out _out847, out _out848);
              r = _out846;
              resultingOwnership = _out847;
              readIdents = _out848;
            }
          } else if (_source252.is_Primitive) {
            DAST._IPrimitive _4231___mcc_h686 = _source252.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out849;
              DCOMP._IOwnership _out850;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out851;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out849, out _out850, out _out851);
              r = _out849;
              resultingOwnership = _out850;
              readIdents = _out851;
            }
          } else if (_source252.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4232___mcc_h688 = _source252.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out852;
              DCOMP._IOwnership _out853;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out854;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out852, out _out853, out _out854);
              r = _out852;
              resultingOwnership = _out853;
              readIdents = _out854;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4233___mcc_h690 = _source252.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out855;
              DCOMP._IOwnership _out856;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out857;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out855, out _out856, out _out857);
              r = _out855;
              resultingOwnership = _out856;
              readIdents = _out857;
            }
          }
        } else if (_source232.is_Map) {
          DAST._IType _4234___mcc_h692 = _source232.dtor_key;
          DAST._IType _4235___mcc_h693 = _source232.dtor_value;
          DAST._IType _source254 = _3839___mcc_h1;
          if (_source254.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4236___mcc_h700 = _source254.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4237___mcc_h701 = _source254.dtor_typeArgs;
            DAST._IResolvedType _4238___mcc_h702 = _source254.dtor_resolved;
            DAST._IResolvedType _source255 = _4238___mcc_h702;
            if (_source255.is_AllocatedDatatype) {
              DAST._IDatatypeType _4239___mcc_h706 = _source255.dtor_datatypeType;
              {
                RAST._IExpr _out858;
                DCOMP._IOwnership _out859;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out860;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out858, out _out859, out _out860);
                r = _out858;
                resultingOwnership = _out859;
                readIdents = _out860;
              }
            } else if (_source255.is_Datatype) {
              DAST._IDatatypeType _4240___mcc_h708 = _source255.dtor_datatypeType;
              {
                RAST._IExpr _out861;
                DCOMP._IOwnership _out862;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out863;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out861, out _out862, out _out863);
                r = _out861;
                resultingOwnership = _out862;
                readIdents = _out863;
              }
            } else if (_source255.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4241___mcc_h710 = _source255.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4242___mcc_h711 = _source255.dtor_attributes;
              {
                RAST._IExpr _out864;
                DCOMP._IOwnership _out865;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out866;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out864, out _out865, out _out866);
                r = _out864;
                resultingOwnership = _out865;
                readIdents = _out866;
              }
            } else {
              DAST._IType _4243___mcc_h714 = _source255.dtor_baseType;
              DAST._INewtypeRange _4244___mcc_h715 = _source255.dtor_range;
              bool _4245___mcc_h716 = _source255.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4246___mcc_h717 = _source255.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4247_attributes = _4246___mcc_h717;
              bool _4248_erase = _4245___mcc_h716;
              DAST._INewtypeRange _4249_range = _4244___mcc_h715;
              DAST._IType _4250_b = _4243___mcc_h714;
              {
                RAST._IExpr _out867;
                DCOMP._IOwnership _out868;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out869;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out867, out _out868, out _out869);
                r = _out867;
                resultingOwnership = _out868;
                readIdents = _out869;
              }
            }
          } else if (_source254.is_Nullable) {
            DAST._IType _4251___mcc_h722 = _source254.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out870;
              DCOMP._IOwnership _out871;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out872;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out870, out _out871, out _out872);
              r = _out870;
              resultingOwnership = _out871;
              readIdents = _out872;
            }
          } else if (_source254.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4252___mcc_h724 = _source254.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out873;
              DCOMP._IOwnership _out874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out875;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out873, out _out874, out _out875);
              r = _out873;
              resultingOwnership = _out874;
              readIdents = _out875;
            }
          } else if (_source254.is_Array) {
            DAST._IType _4253___mcc_h726 = _source254.dtor_element;
            BigInteger _4254___mcc_h727 = _source254.dtor_dims;
            {
              RAST._IExpr _out876;
              DCOMP._IOwnership _out877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out878;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out876, out _out877, out _out878);
              r = _out876;
              resultingOwnership = _out877;
              readIdents = _out878;
            }
          } else if (_source254.is_Seq) {
            DAST._IType _4255___mcc_h730 = _source254.dtor_element;
            {
              RAST._IExpr _out879;
              DCOMP._IOwnership _out880;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out881;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out879, out _out880, out _out881);
              r = _out879;
              resultingOwnership = _out880;
              readIdents = _out881;
            }
          } else if (_source254.is_Set) {
            DAST._IType _4256___mcc_h732 = _source254.dtor_element;
            {
              RAST._IExpr _out882;
              DCOMP._IOwnership _out883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out884;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out882, out _out883, out _out884);
              r = _out882;
              resultingOwnership = _out883;
              readIdents = _out884;
            }
          } else if (_source254.is_Multiset) {
            DAST._IType _4257___mcc_h734 = _source254.dtor_element;
            {
              RAST._IExpr _out885;
              DCOMP._IOwnership _out886;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out887;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out885, out _out886, out _out887);
              r = _out885;
              resultingOwnership = _out886;
              readIdents = _out887;
            }
          } else if (_source254.is_Map) {
            DAST._IType _4258___mcc_h736 = _source254.dtor_key;
            DAST._IType _4259___mcc_h737 = _source254.dtor_value;
            {
              RAST._IExpr _out888;
              DCOMP._IOwnership _out889;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out890;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out888, out _out889, out _out890);
              r = _out888;
              resultingOwnership = _out889;
              readIdents = _out890;
            }
          } else if (_source254.is_SetBuilder) {
            DAST._IType _4260___mcc_h740 = _source254.dtor_element;
            {
              RAST._IExpr _out891;
              DCOMP._IOwnership _out892;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out893;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out891, out _out892, out _out893);
              r = _out891;
              resultingOwnership = _out892;
              readIdents = _out893;
            }
          } else if (_source254.is_MapBuilder) {
            DAST._IType _4261___mcc_h742 = _source254.dtor_key;
            DAST._IType _4262___mcc_h743 = _source254.dtor_value;
            {
              RAST._IExpr _out894;
              DCOMP._IOwnership _out895;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out896;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out894, out _out895, out _out896);
              r = _out894;
              resultingOwnership = _out895;
              readIdents = _out896;
            }
          } else if (_source254.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4263___mcc_h746 = _source254.dtor_args;
            DAST._IType _4264___mcc_h747 = _source254.dtor_result;
            {
              RAST._IExpr _out897;
              DCOMP._IOwnership _out898;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out899;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out897, out _out898, out _out899);
              r = _out897;
              resultingOwnership = _out898;
              readIdents = _out899;
            }
          } else if (_source254.is_Primitive) {
            DAST._IPrimitive _4265___mcc_h750 = _source254.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out900;
              DCOMP._IOwnership _out901;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out902;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out900, out _out901, out _out902);
              r = _out900;
              resultingOwnership = _out901;
              readIdents = _out902;
            }
          } else if (_source254.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4266___mcc_h752 = _source254.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out903;
              DCOMP._IOwnership _out904;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out905;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out903, out _out904, out _out905);
              r = _out903;
              resultingOwnership = _out904;
              readIdents = _out905;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4267___mcc_h754 = _source254.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out906;
              DCOMP._IOwnership _out907;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out908;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out906, out _out907, out _out908);
              r = _out906;
              resultingOwnership = _out907;
              readIdents = _out908;
            }
          }
        } else if (_source232.is_SetBuilder) {
          DAST._IType _4268___mcc_h756 = _source232.dtor_element;
          DAST._IType _source256 = _3839___mcc_h1;
          if (_source256.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4269___mcc_h760 = _source256.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4270___mcc_h761 = _source256.dtor_typeArgs;
            DAST._IResolvedType _4271___mcc_h762 = _source256.dtor_resolved;
            DAST._IResolvedType _source257 = _4271___mcc_h762;
            if (_source257.is_AllocatedDatatype) {
              DAST._IDatatypeType _4272___mcc_h766 = _source257.dtor_datatypeType;
              {
                RAST._IExpr _out909;
                DCOMP._IOwnership _out910;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out911;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out909, out _out910, out _out911);
                r = _out909;
                resultingOwnership = _out910;
                readIdents = _out911;
              }
            } else if (_source257.is_Datatype) {
              DAST._IDatatypeType _4273___mcc_h768 = _source257.dtor_datatypeType;
              {
                RAST._IExpr _out912;
                DCOMP._IOwnership _out913;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out914;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out912, out _out913, out _out914);
                r = _out912;
                resultingOwnership = _out913;
                readIdents = _out914;
              }
            } else if (_source257.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4274___mcc_h770 = _source257.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4275___mcc_h771 = _source257.dtor_attributes;
              {
                RAST._IExpr _out915;
                DCOMP._IOwnership _out916;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out917;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out915, out _out916, out _out917);
                r = _out915;
                resultingOwnership = _out916;
                readIdents = _out917;
              }
            } else {
              DAST._IType _4276___mcc_h774 = _source257.dtor_baseType;
              DAST._INewtypeRange _4277___mcc_h775 = _source257.dtor_range;
              bool _4278___mcc_h776 = _source257.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4279___mcc_h777 = _source257.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4280_attributes = _4279___mcc_h777;
              bool _4281_erase = _4278___mcc_h776;
              DAST._INewtypeRange _4282_range = _4277___mcc_h775;
              DAST._IType _4283_b = _4276___mcc_h774;
              {
                RAST._IExpr _out918;
                DCOMP._IOwnership _out919;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out920;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out918, out _out919, out _out920);
                r = _out918;
                resultingOwnership = _out919;
                readIdents = _out920;
              }
            }
          } else if (_source256.is_Nullable) {
            DAST._IType _4284___mcc_h782 = _source256.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out921;
              DCOMP._IOwnership _out922;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out923;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out921, out _out922, out _out923);
              r = _out921;
              resultingOwnership = _out922;
              readIdents = _out923;
            }
          } else if (_source256.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4285___mcc_h784 = _source256.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out924;
              DCOMP._IOwnership _out925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out926;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out924, out _out925, out _out926);
              r = _out924;
              resultingOwnership = _out925;
              readIdents = _out926;
            }
          } else if (_source256.is_Array) {
            DAST._IType _4286___mcc_h786 = _source256.dtor_element;
            BigInteger _4287___mcc_h787 = _source256.dtor_dims;
            {
              RAST._IExpr _out927;
              DCOMP._IOwnership _out928;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out929;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out927, out _out928, out _out929);
              r = _out927;
              resultingOwnership = _out928;
              readIdents = _out929;
            }
          } else if (_source256.is_Seq) {
            DAST._IType _4288___mcc_h790 = _source256.dtor_element;
            {
              RAST._IExpr _out930;
              DCOMP._IOwnership _out931;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out932;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out930, out _out931, out _out932);
              r = _out930;
              resultingOwnership = _out931;
              readIdents = _out932;
            }
          } else if (_source256.is_Set) {
            DAST._IType _4289___mcc_h792 = _source256.dtor_element;
            {
              RAST._IExpr _out933;
              DCOMP._IOwnership _out934;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out935;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out933, out _out934, out _out935);
              r = _out933;
              resultingOwnership = _out934;
              readIdents = _out935;
            }
          } else if (_source256.is_Multiset) {
            DAST._IType _4290___mcc_h794 = _source256.dtor_element;
            {
              RAST._IExpr _out936;
              DCOMP._IOwnership _out937;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out938;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out936, out _out937, out _out938);
              r = _out936;
              resultingOwnership = _out937;
              readIdents = _out938;
            }
          } else if (_source256.is_Map) {
            DAST._IType _4291___mcc_h796 = _source256.dtor_key;
            DAST._IType _4292___mcc_h797 = _source256.dtor_value;
            {
              RAST._IExpr _out939;
              DCOMP._IOwnership _out940;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out941;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out939, out _out940, out _out941);
              r = _out939;
              resultingOwnership = _out940;
              readIdents = _out941;
            }
          } else if (_source256.is_SetBuilder) {
            DAST._IType _4293___mcc_h800 = _source256.dtor_element;
            {
              RAST._IExpr _out942;
              DCOMP._IOwnership _out943;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out944;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out942, out _out943, out _out944);
              r = _out942;
              resultingOwnership = _out943;
              readIdents = _out944;
            }
          } else if (_source256.is_MapBuilder) {
            DAST._IType _4294___mcc_h802 = _source256.dtor_key;
            DAST._IType _4295___mcc_h803 = _source256.dtor_value;
            {
              RAST._IExpr _out945;
              DCOMP._IOwnership _out946;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out947;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out945, out _out946, out _out947);
              r = _out945;
              resultingOwnership = _out946;
              readIdents = _out947;
            }
          } else if (_source256.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4296___mcc_h806 = _source256.dtor_args;
            DAST._IType _4297___mcc_h807 = _source256.dtor_result;
            {
              RAST._IExpr _out948;
              DCOMP._IOwnership _out949;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out950;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out948, out _out949, out _out950);
              r = _out948;
              resultingOwnership = _out949;
              readIdents = _out950;
            }
          } else if (_source256.is_Primitive) {
            DAST._IPrimitive _4298___mcc_h810 = _source256.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out951;
              DCOMP._IOwnership _out952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out953;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out951, out _out952, out _out953);
              r = _out951;
              resultingOwnership = _out952;
              readIdents = _out953;
            }
          } else if (_source256.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4299___mcc_h812 = _source256.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out954;
              DCOMP._IOwnership _out955;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out956;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out954, out _out955, out _out956);
              r = _out954;
              resultingOwnership = _out955;
              readIdents = _out956;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4300___mcc_h814 = _source256.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out959;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out957, out _out958, out _out959);
              r = _out957;
              resultingOwnership = _out958;
              readIdents = _out959;
            }
          }
        } else if (_source232.is_MapBuilder) {
          DAST._IType _4301___mcc_h816 = _source232.dtor_key;
          DAST._IType _4302___mcc_h817 = _source232.dtor_value;
          DAST._IType _source258 = _3839___mcc_h1;
          if (_source258.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4303___mcc_h824 = _source258.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4304___mcc_h825 = _source258.dtor_typeArgs;
            DAST._IResolvedType _4305___mcc_h826 = _source258.dtor_resolved;
            DAST._IResolvedType _source259 = _4305___mcc_h826;
            if (_source259.is_AllocatedDatatype) {
              DAST._IDatatypeType _4306___mcc_h830 = _source259.dtor_datatypeType;
              {
                RAST._IExpr _out960;
                DCOMP._IOwnership _out961;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out962;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out960, out _out961, out _out962);
                r = _out960;
                resultingOwnership = _out961;
                readIdents = _out962;
              }
            } else if (_source259.is_Datatype) {
              DAST._IDatatypeType _4307___mcc_h832 = _source259.dtor_datatypeType;
              {
                RAST._IExpr _out963;
                DCOMP._IOwnership _out964;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out965;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out963, out _out964, out _out965);
                r = _out963;
                resultingOwnership = _out964;
                readIdents = _out965;
              }
            } else if (_source259.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4308___mcc_h834 = _source259.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4309___mcc_h835 = _source259.dtor_attributes;
              {
                RAST._IExpr _out966;
                DCOMP._IOwnership _out967;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out968;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out966, out _out967, out _out968);
                r = _out966;
                resultingOwnership = _out967;
                readIdents = _out968;
              }
            } else {
              DAST._IType _4310___mcc_h838 = _source259.dtor_baseType;
              DAST._INewtypeRange _4311___mcc_h839 = _source259.dtor_range;
              bool _4312___mcc_h840 = _source259.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4313___mcc_h841 = _source259.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4314_attributes = _4313___mcc_h841;
              bool _4315_erase = _4312___mcc_h840;
              DAST._INewtypeRange _4316_range = _4311___mcc_h839;
              DAST._IType _4317_b = _4310___mcc_h838;
              {
                RAST._IExpr _out969;
                DCOMP._IOwnership _out970;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out971;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out969, out _out970, out _out971);
                r = _out969;
                resultingOwnership = _out970;
                readIdents = _out971;
              }
            }
          } else if (_source258.is_Nullable) {
            DAST._IType _4318___mcc_h846 = _source258.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out972;
              DCOMP._IOwnership _out973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out974;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out972, out _out973, out _out974);
              r = _out972;
              resultingOwnership = _out973;
              readIdents = _out974;
            }
          } else if (_source258.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4319___mcc_h848 = _source258.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out975;
              DCOMP._IOwnership _out976;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out977;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out975, out _out976, out _out977);
              r = _out975;
              resultingOwnership = _out976;
              readIdents = _out977;
            }
          } else if (_source258.is_Array) {
            DAST._IType _4320___mcc_h850 = _source258.dtor_element;
            BigInteger _4321___mcc_h851 = _source258.dtor_dims;
            {
              RAST._IExpr _out978;
              DCOMP._IOwnership _out979;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out980;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out978, out _out979, out _out980);
              r = _out978;
              resultingOwnership = _out979;
              readIdents = _out980;
            }
          } else if (_source258.is_Seq) {
            DAST._IType _4322___mcc_h854 = _source258.dtor_element;
            {
              RAST._IExpr _out981;
              DCOMP._IOwnership _out982;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out983;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out981, out _out982, out _out983);
              r = _out981;
              resultingOwnership = _out982;
              readIdents = _out983;
            }
          } else if (_source258.is_Set) {
            DAST._IType _4323___mcc_h856 = _source258.dtor_element;
            {
              RAST._IExpr _out984;
              DCOMP._IOwnership _out985;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out986;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out984, out _out985, out _out986);
              r = _out984;
              resultingOwnership = _out985;
              readIdents = _out986;
            }
          } else if (_source258.is_Multiset) {
            DAST._IType _4324___mcc_h858 = _source258.dtor_element;
            {
              RAST._IExpr _out987;
              DCOMP._IOwnership _out988;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out989;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out987, out _out988, out _out989);
              r = _out987;
              resultingOwnership = _out988;
              readIdents = _out989;
            }
          } else if (_source258.is_Map) {
            DAST._IType _4325___mcc_h860 = _source258.dtor_key;
            DAST._IType _4326___mcc_h861 = _source258.dtor_value;
            {
              RAST._IExpr _out990;
              DCOMP._IOwnership _out991;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out992;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out990, out _out991, out _out992);
              r = _out990;
              resultingOwnership = _out991;
              readIdents = _out992;
            }
          } else if (_source258.is_SetBuilder) {
            DAST._IType _4327___mcc_h864 = _source258.dtor_element;
            {
              RAST._IExpr _out993;
              DCOMP._IOwnership _out994;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out995;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out993, out _out994, out _out995);
              r = _out993;
              resultingOwnership = _out994;
              readIdents = _out995;
            }
          } else if (_source258.is_MapBuilder) {
            DAST._IType _4328___mcc_h866 = _source258.dtor_key;
            DAST._IType _4329___mcc_h867 = _source258.dtor_value;
            {
              RAST._IExpr _out996;
              DCOMP._IOwnership _out997;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out998;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out996, out _out997, out _out998);
              r = _out996;
              resultingOwnership = _out997;
              readIdents = _out998;
            }
          } else if (_source258.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4330___mcc_h870 = _source258.dtor_args;
            DAST._IType _4331___mcc_h871 = _source258.dtor_result;
            {
              RAST._IExpr _out999;
              DCOMP._IOwnership _out1000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1001;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out999, out _out1000, out _out1001);
              r = _out999;
              resultingOwnership = _out1000;
              readIdents = _out1001;
            }
          } else if (_source258.is_Primitive) {
            DAST._IPrimitive _4332___mcc_h874 = _source258.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out1002;
              DCOMP._IOwnership _out1003;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1004;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1002, out _out1003, out _out1004);
              r = _out1002;
              resultingOwnership = _out1003;
              readIdents = _out1004;
            }
          } else if (_source258.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4333___mcc_h876 = _source258.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1005;
              DCOMP._IOwnership _out1006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1007;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1005, out _out1006, out _out1007);
              r = _out1005;
              resultingOwnership = _out1006;
              readIdents = _out1007;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4334___mcc_h878 = _source258.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1008;
              DCOMP._IOwnership _out1009;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1010;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1008, out _out1009, out _out1010);
              r = _out1008;
              resultingOwnership = _out1009;
              readIdents = _out1010;
            }
          }
        } else if (_source232.is_Arrow) {
          Dafny.ISequence<DAST._IType> _4335___mcc_h880 = _source232.dtor_args;
          DAST._IType _4336___mcc_h881 = _source232.dtor_result;
          DAST._IType _source260 = _3839___mcc_h1;
          if (_source260.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4337___mcc_h888 = _source260.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4338___mcc_h889 = _source260.dtor_typeArgs;
            DAST._IResolvedType _4339___mcc_h890 = _source260.dtor_resolved;
            DAST._IResolvedType _source261 = _4339___mcc_h890;
            if (_source261.is_AllocatedDatatype) {
              DAST._IDatatypeType _4340___mcc_h894 = _source261.dtor_datatypeType;
              {
                RAST._IExpr _out1011;
                DCOMP._IOwnership _out1012;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1013;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1011, out _out1012, out _out1013);
                r = _out1011;
                resultingOwnership = _out1012;
                readIdents = _out1013;
              }
            } else if (_source261.is_Datatype) {
              DAST._IDatatypeType _4341___mcc_h896 = _source261.dtor_datatypeType;
              {
                RAST._IExpr _out1014;
                DCOMP._IOwnership _out1015;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1016;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1014, out _out1015, out _out1016);
                r = _out1014;
                resultingOwnership = _out1015;
                readIdents = _out1016;
              }
            } else if (_source261.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4342___mcc_h898 = _source261.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4343___mcc_h899 = _source261.dtor_attributes;
              {
                RAST._IExpr _out1017;
                DCOMP._IOwnership _out1018;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1019;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1017, out _out1018, out _out1019);
                r = _out1017;
                resultingOwnership = _out1018;
                readIdents = _out1019;
              }
            } else {
              DAST._IType _4344___mcc_h902 = _source261.dtor_baseType;
              DAST._INewtypeRange _4345___mcc_h903 = _source261.dtor_range;
              bool _4346___mcc_h904 = _source261.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4347___mcc_h905 = _source261.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4348_attributes = _4347___mcc_h905;
              bool _4349_erase = _4346___mcc_h904;
              DAST._INewtypeRange _4350_range = _4345___mcc_h903;
              DAST._IType _4351_b = _4344___mcc_h902;
              {
                RAST._IExpr _out1020;
                DCOMP._IOwnership _out1021;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1022;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1020, out _out1021, out _out1022);
                r = _out1020;
                resultingOwnership = _out1021;
                readIdents = _out1022;
              }
            }
          } else if (_source260.is_Nullable) {
            DAST._IType _4352___mcc_h910 = _source260.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out1023;
              DCOMP._IOwnership _out1024;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1025;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1023, out _out1024, out _out1025);
              r = _out1023;
              resultingOwnership = _out1024;
              readIdents = _out1025;
            }
          } else if (_source260.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4353___mcc_h912 = _source260.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1026;
              DCOMP._IOwnership _out1027;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1028;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1026, out _out1027, out _out1028);
              r = _out1026;
              resultingOwnership = _out1027;
              readIdents = _out1028;
            }
          } else if (_source260.is_Array) {
            DAST._IType _4354___mcc_h914 = _source260.dtor_element;
            BigInteger _4355___mcc_h915 = _source260.dtor_dims;
            {
              RAST._IExpr _out1029;
              DCOMP._IOwnership _out1030;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1031;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1029, out _out1030, out _out1031);
              r = _out1029;
              resultingOwnership = _out1030;
              readIdents = _out1031;
            }
          } else if (_source260.is_Seq) {
            DAST._IType _4356___mcc_h918 = _source260.dtor_element;
            {
              RAST._IExpr _out1032;
              DCOMP._IOwnership _out1033;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1034;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1032, out _out1033, out _out1034);
              r = _out1032;
              resultingOwnership = _out1033;
              readIdents = _out1034;
            }
          } else if (_source260.is_Set) {
            DAST._IType _4357___mcc_h920 = _source260.dtor_element;
            {
              RAST._IExpr _out1035;
              DCOMP._IOwnership _out1036;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1037;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1035, out _out1036, out _out1037);
              r = _out1035;
              resultingOwnership = _out1036;
              readIdents = _out1037;
            }
          } else if (_source260.is_Multiset) {
            DAST._IType _4358___mcc_h922 = _source260.dtor_element;
            {
              RAST._IExpr _out1038;
              DCOMP._IOwnership _out1039;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1040;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1038, out _out1039, out _out1040);
              r = _out1038;
              resultingOwnership = _out1039;
              readIdents = _out1040;
            }
          } else if (_source260.is_Map) {
            DAST._IType _4359___mcc_h924 = _source260.dtor_key;
            DAST._IType _4360___mcc_h925 = _source260.dtor_value;
            {
              RAST._IExpr _out1041;
              DCOMP._IOwnership _out1042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
              r = _out1041;
              resultingOwnership = _out1042;
              readIdents = _out1043;
            }
          } else if (_source260.is_SetBuilder) {
            DAST._IType _4361___mcc_h928 = _source260.dtor_element;
            {
              RAST._IExpr _out1044;
              DCOMP._IOwnership _out1045;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1046;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1044, out _out1045, out _out1046);
              r = _out1044;
              resultingOwnership = _out1045;
              readIdents = _out1046;
            }
          } else if (_source260.is_MapBuilder) {
            DAST._IType _4362___mcc_h930 = _source260.dtor_key;
            DAST._IType _4363___mcc_h931 = _source260.dtor_value;
            {
              RAST._IExpr _out1047;
              DCOMP._IOwnership _out1048;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1049;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1047, out _out1048, out _out1049);
              r = _out1047;
              resultingOwnership = _out1048;
              readIdents = _out1049;
            }
          } else if (_source260.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4364___mcc_h934 = _source260.dtor_args;
            DAST._IType _4365___mcc_h935 = _source260.dtor_result;
            {
              RAST._IExpr _out1050;
              DCOMP._IOwnership _out1051;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1052;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1050, out _out1051, out _out1052);
              r = _out1050;
              resultingOwnership = _out1051;
              readIdents = _out1052;
            }
          } else if (_source260.is_Primitive) {
            DAST._IPrimitive _4366___mcc_h938 = _source260.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out1053;
              DCOMP._IOwnership _out1054;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1055;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1053, out _out1054, out _out1055);
              r = _out1053;
              resultingOwnership = _out1054;
              readIdents = _out1055;
            }
          } else if (_source260.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4367___mcc_h940 = _source260.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1056;
              DCOMP._IOwnership _out1057;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1058;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1056, out _out1057, out _out1058);
              r = _out1056;
              resultingOwnership = _out1057;
              readIdents = _out1058;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4368___mcc_h942 = _source260.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1059;
              DCOMP._IOwnership _out1060;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1061;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1059, out _out1060, out _out1061);
              r = _out1059;
              resultingOwnership = _out1060;
              readIdents = _out1061;
            }
          }
        } else if (_source232.is_Primitive) {
          DAST._IPrimitive _4369___mcc_h944 = _source232.dtor_Primitive_i_a0;
          DAST._IPrimitive _source262 = _4369___mcc_h944;
          if (_source262.is_Int) {
            DAST._IType _source263 = _3839___mcc_h1;
            if (_source263.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4370___mcc_h948 = _source263.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _4371___mcc_h949 = _source263.dtor_typeArgs;
              DAST._IResolvedType _4372___mcc_h950 = _source263.dtor_resolved;
              DAST._IResolvedType _source264 = _4372___mcc_h950;
              if (_source264.is_AllocatedDatatype) {
                DAST._IDatatypeType _4373___mcc_h954 = _source264.dtor_datatypeType;
                {
                  RAST._IExpr _out1062;
                  DCOMP._IOwnership _out1063;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1064;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1062, out _out1063, out _out1064);
                  r = _out1062;
                  resultingOwnership = _out1063;
                  readIdents = _out1064;
                }
              } else if (_source264.is_Datatype) {
                DAST._IDatatypeType _4374___mcc_h956 = _source264.dtor_datatypeType;
                {
                  RAST._IExpr _out1065;
                  DCOMP._IOwnership _out1066;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1067;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1065, out _out1066, out _out1067);
                  r = _out1065;
                  resultingOwnership = _out1066;
                  readIdents = _out1067;
                }
              } else if (_source264.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4375___mcc_h958 = _source264.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4376___mcc_h959 = _source264.dtor_attributes;
                {
                  RAST._IExpr _out1068;
                  DCOMP._IOwnership _out1069;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1070;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1068, out _out1069, out _out1070);
                  r = _out1068;
                  resultingOwnership = _out1069;
                  readIdents = _out1070;
                }
              } else {
                DAST._IType _4377___mcc_h962 = _source264.dtor_baseType;
                DAST._INewtypeRange _4378___mcc_h963 = _source264.dtor_range;
                bool _4379___mcc_h964 = _source264.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4380___mcc_h965 = _source264.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4381_attributes = _4380___mcc_h965;
                bool _4382_erase = _4379___mcc_h964;
                DAST._INewtypeRange _4383_range = _4378___mcc_h963;
                DAST._IType _4384_b = _4377___mcc_h962;
                {
                  RAST._IExpr _out1071;
                  DCOMP._IOwnership _out1072;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1073;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1071, out _out1072, out _out1073);
                  r = _out1071;
                  resultingOwnership = _out1072;
                  readIdents = _out1073;
                }
              }
            } else if (_source263.is_Nullable) {
              DAST._IType _4385___mcc_h970 = _source263.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out1074;
                DCOMP._IOwnership _out1075;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1076;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1074, out _out1075, out _out1076);
                r = _out1074;
                resultingOwnership = _out1075;
                readIdents = _out1076;
              }
            } else if (_source263.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4386___mcc_h972 = _source263.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1077;
                DCOMP._IOwnership _out1078;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1079;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1077, out _out1078, out _out1079);
                r = _out1077;
                resultingOwnership = _out1078;
                readIdents = _out1079;
              }
            } else if (_source263.is_Array) {
              DAST._IType _4387___mcc_h974 = _source263.dtor_element;
              BigInteger _4388___mcc_h975 = _source263.dtor_dims;
              {
                RAST._IExpr _out1080;
                DCOMP._IOwnership _out1081;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1082;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1080, out _out1081, out _out1082);
                r = _out1080;
                resultingOwnership = _out1081;
                readIdents = _out1082;
              }
            } else if (_source263.is_Seq) {
              DAST._IType _4389___mcc_h978 = _source263.dtor_element;
              {
                RAST._IExpr _out1083;
                DCOMP._IOwnership _out1084;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1085;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1083, out _out1084, out _out1085);
                r = _out1083;
                resultingOwnership = _out1084;
                readIdents = _out1085;
              }
            } else if (_source263.is_Set) {
              DAST._IType _4390___mcc_h980 = _source263.dtor_element;
              {
                RAST._IExpr _out1086;
                DCOMP._IOwnership _out1087;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1088;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1086, out _out1087, out _out1088);
                r = _out1086;
                resultingOwnership = _out1087;
                readIdents = _out1088;
              }
            } else if (_source263.is_Multiset) {
              DAST._IType _4391___mcc_h982 = _source263.dtor_element;
              {
                RAST._IExpr _out1089;
                DCOMP._IOwnership _out1090;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1091;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1089, out _out1090, out _out1091);
                r = _out1089;
                resultingOwnership = _out1090;
                readIdents = _out1091;
              }
            } else if (_source263.is_Map) {
              DAST._IType _4392___mcc_h984 = _source263.dtor_key;
              DAST._IType _4393___mcc_h985 = _source263.dtor_value;
              {
                RAST._IExpr _out1092;
                DCOMP._IOwnership _out1093;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1094;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1092, out _out1093, out _out1094);
                r = _out1092;
                resultingOwnership = _out1093;
                readIdents = _out1094;
              }
            } else if (_source263.is_SetBuilder) {
              DAST._IType _4394___mcc_h988 = _source263.dtor_element;
              {
                RAST._IExpr _out1095;
                DCOMP._IOwnership _out1096;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1097;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1095, out _out1096, out _out1097);
                r = _out1095;
                resultingOwnership = _out1096;
                readIdents = _out1097;
              }
            } else if (_source263.is_MapBuilder) {
              DAST._IType _4395___mcc_h990 = _source263.dtor_key;
              DAST._IType _4396___mcc_h991 = _source263.dtor_value;
              {
                RAST._IExpr _out1098;
                DCOMP._IOwnership _out1099;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1100;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1098, out _out1099, out _out1100);
                r = _out1098;
                resultingOwnership = _out1099;
                readIdents = _out1100;
              }
            } else if (_source263.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4397___mcc_h994 = _source263.dtor_args;
              DAST._IType _4398___mcc_h995 = _source263.dtor_result;
              {
                RAST._IExpr _out1101;
                DCOMP._IOwnership _out1102;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1103;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1101, out _out1102, out _out1103);
                r = _out1101;
                resultingOwnership = _out1102;
                readIdents = _out1103;
              }
            } else if (_source263.is_Primitive) {
              DAST._IPrimitive _4399___mcc_h998 = _source263.dtor_Primitive_i_a0;
              DAST._IPrimitive _source265 = _4399___mcc_h998;
              if (_source265.is_Int) {
                {
                  RAST._IExpr _out1104;
                  DCOMP._IOwnership _out1105;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1106;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1104, out _out1105, out _out1106);
                  r = _out1104;
                  resultingOwnership = _out1105;
                  readIdents = _out1106;
                }
              } else if (_source265.is_Real) {
                {
                  RAST._IExpr _4400_recursiveGen;
                  DCOMP._IOwnership _4401___v109;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4402_recIdents;
                  RAST._IExpr _out1107;
                  DCOMP._IOwnership _out1108;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1109;
                  (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1107, out _out1108, out _out1109);
                  _4400_recursiveGen = _out1107;
                  _4401___v109 = _out1108;
                  _4402_recIdents = _out1109;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_4400_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out1110;
                  DCOMP._IOwnership _out1111;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1110, out _out1111);
                  r = _out1110;
                  resultingOwnership = _out1111;
                  readIdents = _4402_recIdents;
                }
              } else if (_source265.is_String) {
                {
                  RAST._IExpr _out1112;
                  DCOMP._IOwnership _out1113;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1114;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1112, out _out1113, out _out1114);
                  r = _out1112;
                  resultingOwnership = _out1113;
                  readIdents = _out1114;
                }
              } else if (_source265.is_Bool) {
                {
                  RAST._IExpr _out1115;
                  DCOMP._IOwnership _out1116;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1117;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1115, out _out1116, out _out1117);
                  r = _out1115;
                  resultingOwnership = _out1116;
                  readIdents = _out1117;
                }
              } else {
                {
                  RAST._IType _4403_rhsType;
                  RAST._IType _out1118;
                  _out1118 = (this).GenType(_3834_toTpe, true, false);
                  _4403_rhsType = _out1118;
                  RAST._IExpr _4404_recursiveGen;
                  DCOMP._IOwnership _4405___v115;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4406_recIdents;
                  RAST._IExpr _out1119;
                  DCOMP._IOwnership _out1120;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1121;
                  (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1119, out _out1120, out _out1121);
                  _4404_recursiveGen = _out1119;
                  _4405___v115 = _out1120;
                  _4406_recIdents = _out1121;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_4404_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out1122;
                  DCOMP._IOwnership _out1123;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1122, out _out1123);
                  r = _out1122;
                  resultingOwnership = _out1123;
                  readIdents = _4406_recIdents;
                }
              }
            } else if (_source263.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4407___mcc_h1000 = _source263.dtor_Passthrough_i_a0;
              {
                RAST._IType _4408_rhsType;
                RAST._IType _out1124;
                _out1124 = (this).GenType(_3834_toTpe, true, false);
                _4408_rhsType = _out1124;
                RAST._IExpr _4409_recursiveGen;
                DCOMP._IOwnership _4410___v112;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4411_recIdents;
                RAST._IExpr _out1125;
                DCOMP._IOwnership _out1126;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1127;
                (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1125, out _out1126, out _out1127);
                _4409_recursiveGen = _out1125;
                _4410___v112 = _out1126;
                _4411_recIdents = _out1127;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_4408_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_4409_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out1128;
                DCOMP._IOwnership _out1129;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1128, out _out1129);
                r = _out1128;
                resultingOwnership = _out1129;
                readIdents = _4411_recIdents;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4412___mcc_h1002 = _source263.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1130;
                DCOMP._IOwnership _out1131;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1132;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1130, out _out1131, out _out1132);
                r = _out1130;
                resultingOwnership = _out1131;
                readIdents = _out1132;
              }
            }
          } else if (_source262.is_Real) {
            DAST._IType _source266 = _3839___mcc_h1;
            if (_source266.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4413___mcc_h1004 = _source266.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _4414___mcc_h1005 = _source266.dtor_typeArgs;
              DAST._IResolvedType _4415___mcc_h1006 = _source266.dtor_resolved;
              DAST._IResolvedType _source267 = _4415___mcc_h1006;
              if (_source267.is_AllocatedDatatype) {
                DAST._IDatatypeType _4416___mcc_h1010 = _source267.dtor_datatypeType;
                {
                  RAST._IExpr _out1133;
                  DCOMP._IOwnership _out1134;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1135;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1133, out _out1134, out _out1135);
                  r = _out1133;
                  resultingOwnership = _out1134;
                  readIdents = _out1135;
                }
              } else if (_source267.is_Datatype) {
                DAST._IDatatypeType _4417___mcc_h1012 = _source267.dtor_datatypeType;
                {
                  RAST._IExpr _out1136;
                  DCOMP._IOwnership _out1137;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1138;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1136, out _out1137, out _out1138);
                  r = _out1136;
                  resultingOwnership = _out1137;
                  readIdents = _out1138;
                }
              } else if (_source267.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4418___mcc_h1014 = _source267.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4419___mcc_h1015 = _source267.dtor_attributes;
                {
                  RAST._IExpr _out1139;
                  DCOMP._IOwnership _out1140;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1141;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1139, out _out1140, out _out1141);
                  r = _out1139;
                  resultingOwnership = _out1140;
                  readIdents = _out1141;
                }
              } else {
                DAST._IType _4420___mcc_h1018 = _source267.dtor_baseType;
                DAST._INewtypeRange _4421___mcc_h1019 = _source267.dtor_range;
                bool _4422___mcc_h1020 = _source267.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4423___mcc_h1021 = _source267.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4424_attributes = _4423___mcc_h1021;
                bool _4425_erase = _4422___mcc_h1020;
                DAST._INewtypeRange _4426_range = _4421___mcc_h1019;
                DAST._IType _4427_b = _4420___mcc_h1018;
                {
                  RAST._IExpr _out1142;
                  DCOMP._IOwnership _out1143;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1144;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1142, out _out1143, out _out1144);
                  r = _out1142;
                  resultingOwnership = _out1143;
                  readIdents = _out1144;
                }
              }
            } else if (_source266.is_Nullable) {
              DAST._IType _4428___mcc_h1026 = _source266.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out1145;
                DCOMP._IOwnership _out1146;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1147;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1145, out _out1146, out _out1147);
                r = _out1145;
                resultingOwnership = _out1146;
                readIdents = _out1147;
              }
            } else if (_source266.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4429___mcc_h1028 = _source266.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1148;
                DCOMP._IOwnership _out1149;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1150;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1148, out _out1149, out _out1150);
                r = _out1148;
                resultingOwnership = _out1149;
                readIdents = _out1150;
              }
            } else if (_source266.is_Array) {
              DAST._IType _4430___mcc_h1030 = _source266.dtor_element;
              BigInteger _4431___mcc_h1031 = _source266.dtor_dims;
              {
                RAST._IExpr _out1151;
                DCOMP._IOwnership _out1152;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1153;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1151, out _out1152, out _out1153);
                r = _out1151;
                resultingOwnership = _out1152;
                readIdents = _out1153;
              }
            } else if (_source266.is_Seq) {
              DAST._IType _4432___mcc_h1034 = _source266.dtor_element;
              {
                RAST._IExpr _out1154;
                DCOMP._IOwnership _out1155;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1156;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1154, out _out1155, out _out1156);
                r = _out1154;
                resultingOwnership = _out1155;
                readIdents = _out1156;
              }
            } else if (_source266.is_Set) {
              DAST._IType _4433___mcc_h1036 = _source266.dtor_element;
              {
                RAST._IExpr _out1157;
                DCOMP._IOwnership _out1158;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1159;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1157, out _out1158, out _out1159);
                r = _out1157;
                resultingOwnership = _out1158;
                readIdents = _out1159;
              }
            } else if (_source266.is_Multiset) {
              DAST._IType _4434___mcc_h1038 = _source266.dtor_element;
              {
                RAST._IExpr _out1160;
                DCOMP._IOwnership _out1161;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1162;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1160, out _out1161, out _out1162);
                r = _out1160;
                resultingOwnership = _out1161;
                readIdents = _out1162;
              }
            } else if (_source266.is_Map) {
              DAST._IType _4435___mcc_h1040 = _source266.dtor_key;
              DAST._IType _4436___mcc_h1041 = _source266.dtor_value;
              {
                RAST._IExpr _out1163;
                DCOMP._IOwnership _out1164;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1165;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1163, out _out1164, out _out1165);
                r = _out1163;
                resultingOwnership = _out1164;
                readIdents = _out1165;
              }
            } else if (_source266.is_SetBuilder) {
              DAST._IType _4437___mcc_h1044 = _source266.dtor_element;
              {
                RAST._IExpr _out1166;
                DCOMP._IOwnership _out1167;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1168;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1166, out _out1167, out _out1168);
                r = _out1166;
                resultingOwnership = _out1167;
                readIdents = _out1168;
              }
            } else if (_source266.is_MapBuilder) {
              DAST._IType _4438___mcc_h1046 = _source266.dtor_key;
              DAST._IType _4439___mcc_h1047 = _source266.dtor_value;
              {
                RAST._IExpr _out1169;
                DCOMP._IOwnership _out1170;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1171;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1169, out _out1170, out _out1171);
                r = _out1169;
                resultingOwnership = _out1170;
                readIdents = _out1171;
              }
            } else if (_source266.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4440___mcc_h1050 = _source266.dtor_args;
              DAST._IType _4441___mcc_h1051 = _source266.dtor_result;
              {
                RAST._IExpr _out1172;
                DCOMP._IOwnership _out1173;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1174;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1172, out _out1173, out _out1174);
                r = _out1172;
                resultingOwnership = _out1173;
                readIdents = _out1174;
              }
            } else if (_source266.is_Primitive) {
              DAST._IPrimitive _4442___mcc_h1054 = _source266.dtor_Primitive_i_a0;
              DAST._IPrimitive _source268 = _4442___mcc_h1054;
              if (_source268.is_Int) {
                {
                  RAST._IExpr _4443_recursiveGen;
                  DCOMP._IOwnership _4444___v110;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4445_recIdents;
                  RAST._IExpr _out1175;
                  DCOMP._IOwnership _out1176;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1177;
                  (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1175, out _out1176, out _out1177);
                  _4443_recursiveGen = _out1175;
                  _4444___v110 = _out1176;
                  _4445_recIdents = _out1177;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_4443_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out1178;
                  DCOMP._IOwnership _out1179;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1178, out _out1179);
                  r = _out1178;
                  resultingOwnership = _out1179;
                  readIdents = _4445_recIdents;
                }
              } else if (_source268.is_Real) {
                {
                  RAST._IExpr _out1180;
                  DCOMP._IOwnership _out1181;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1182;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1180, out _out1181, out _out1182);
                  r = _out1180;
                  resultingOwnership = _out1181;
                  readIdents = _out1182;
                }
              } else if (_source268.is_String) {
                {
                  RAST._IExpr _out1183;
                  DCOMP._IOwnership _out1184;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1185;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1183, out _out1184, out _out1185);
                  r = _out1183;
                  resultingOwnership = _out1184;
                  readIdents = _out1185;
                }
              } else if (_source268.is_Bool) {
                {
                  RAST._IExpr _out1186;
                  DCOMP._IOwnership _out1187;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1188;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1186, out _out1187, out _out1188);
                  r = _out1186;
                  resultingOwnership = _out1187;
                  readIdents = _out1188;
                }
              } else {
                {
                  RAST._IExpr _out1189;
                  DCOMP._IOwnership _out1190;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1191;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1189, out _out1190, out _out1191);
                  r = _out1189;
                  resultingOwnership = _out1190;
                  readIdents = _out1191;
                }
              }
            } else if (_source266.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4446___mcc_h1056 = _source266.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1192;
                DCOMP._IOwnership _out1193;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1194;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1192, out _out1193, out _out1194);
                r = _out1192;
                resultingOwnership = _out1193;
                readIdents = _out1194;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4447___mcc_h1058 = _source266.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1195;
                DCOMP._IOwnership _out1196;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1197;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1195, out _out1196, out _out1197);
                r = _out1195;
                resultingOwnership = _out1196;
                readIdents = _out1197;
              }
            }
          } else if (_source262.is_String) {
            DAST._IType _source269 = _3839___mcc_h1;
            if (_source269.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4448___mcc_h1060 = _source269.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _4449___mcc_h1061 = _source269.dtor_typeArgs;
              DAST._IResolvedType _4450___mcc_h1062 = _source269.dtor_resolved;
              DAST._IResolvedType _source270 = _4450___mcc_h1062;
              if (_source270.is_AllocatedDatatype) {
                DAST._IDatatypeType _4451___mcc_h1066 = _source270.dtor_datatypeType;
                {
                  RAST._IExpr _out1198;
                  DCOMP._IOwnership _out1199;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1200;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1198, out _out1199, out _out1200);
                  r = _out1198;
                  resultingOwnership = _out1199;
                  readIdents = _out1200;
                }
              } else if (_source270.is_Datatype) {
                DAST._IDatatypeType _4452___mcc_h1068 = _source270.dtor_datatypeType;
                {
                  RAST._IExpr _out1201;
                  DCOMP._IOwnership _out1202;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1203;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1201, out _out1202, out _out1203);
                  r = _out1201;
                  resultingOwnership = _out1202;
                  readIdents = _out1203;
                }
              } else if (_source270.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4453___mcc_h1070 = _source270.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4454___mcc_h1071 = _source270.dtor_attributes;
                {
                  RAST._IExpr _out1204;
                  DCOMP._IOwnership _out1205;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1206;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1204, out _out1205, out _out1206);
                  r = _out1204;
                  resultingOwnership = _out1205;
                  readIdents = _out1206;
                }
              } else {
                DAST._IType _4455___mcc_h1074 = _source270.dtor_baseType;
                DAST._INewtypeRange _4456___mcc_h1075 = _source270.dtor_range;
                bool _4457___mcc_h1076 = _source270.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4458___mcc_h1077 = _source270.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4459_attributes = _4458___mcc_h1077;
                bool _4460_erase = _4457___mcc_h1076;
                DAST._INewtypeRange _4461_range = _4456___mcc_h1075;
                DAST._IType _4462_b = _4455___mcc_h1074;
                {
                  RAST._IExpr _out1207;
                  DCOMP._IOwnership _out1208;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1209;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1207, out _out1208, out _out1209);
                  r = _out1207;
                  resultingOwnership = _out1208;
                  readIdents = _out1209;
                }
              }
            } else if (_source269.is_Nullable) {
              DAST._IType _4463___mcc_h1082 = _source269.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out1210;
                DCOMP._IOwnership _out1211;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1212;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1210, out _out1211, out _out1212);
                r = _out1210;
                resultingOwnership = _out1211;
                readIdents = _out1212;
              }
            } else if (_source269.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4464___mcc_h1084 = _source269.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1213;
                DCOMP._IOwnership _out1214;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1215;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1213, out _out1214, out _out1215);
                r = _out1213;
                resultingOwnership = _out1214;
                readIdents = _out1215;
              }
            } else if (_source269.is_Array) {
              DAST._IType _4465___mcc_h1086 = _source269.dtor_element;
              BigInteger _4466___mcc_h1087 = _source269.dtor_dims;
              {
                RAST._IExpr _out1216;
                DCOMP._IOwnership _out1217;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1218;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1216, out _out1217, out _out1218);
                r = _out1216;
                resultingOwnership = _out1217;
                readIdents = _out1218;
              }
            } else if (_source269.is_Seq) {
              DAST._IType _4467___mcc_h1090 = _source269.dtor_element;
              {
                RAST._IExpr _out1219;
                DCOMP._IOwnership _out1220;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1221;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1219, out _out1220, out _out1221);
                r = _out1219;
                resultingOwnership = _out1220;
                readIdents = _out1221;
              }
            } else if (_source269.is_Set) {
              DAST._IType _4468___mcc_h1092 = _source269.dtor_element;
              {
                RAST._IExpr _out1222;
                DCOMP._IOwnership _out1223;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1224;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1222, out _out1223, out _out1224);
                r = _out1222;
                resultingOwnership = _out1223;
                readIdents = _out1224;
              }
            } else if (_source269.is_Multiset) {
              DAST._IType _4469___mcc_h1094 = _source269.dtor_element;
              {
                RAST._IExpr _out1225;
                DCOMP._IOwnership _out1226;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1227;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1225, out _out1226, out _out1227);
                r = _out1225;
                resultingOwnership = _out1226;
                readIdents = _out1227;
              }
            } else if (_source269.is_Map) {
              DAST._IType _4470___mcc_h1096 = _source269.dtor_key;
              DAST._IType _4471___mcc_h1097 = _source269.dtor_value;
              {
                RAST._IExpr _out1228;
                DCOMP._IOwnership _out1229;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1230;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1228, out _out1229, out _out1230);
                r = _out1228;
                resultingOwnership = _out1229;
                readIdents = _out1230;
              }
            } else if (_source269.is_SetBuilder) {
              DAST._IType _4472___mcc_h1100 = _source269.dtor_element;
              {
                RAST._IExpr _out1231;
                DCOMP._IOwnership _out1232;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1233;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1231, out _out1232, out _out1233);
                r = _out1231;
                resultingOwnership = _out1232;
                readIdents = _out1233;
              }
            } else if (_source269.is_MapBuilder) {
              DAST._IType _4473___mcc_h1102 = _source269.dtor_key;
              DAST._IType _4474___mcc_h1103 = _source269.dtor_value;
              {
                RAST._IExpr _out1234;
                DCOMP._IOwnership _out1235;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1236;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1234, out _out1235, out _out1236);
                r = _out1234;
                resultingOwnership = _out1235;
                readIdents = _out1236;
              }
            } else if (_source269.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4475___mcc_h1106 = _source269.dtor_args;
              DAST._IType _4476___mcc_h1107 = _source269.dtor_result;
              {
                RAST._IExpr _out1237;
                DCOMP._IOwnership _out1238;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1239;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1237, out _out1238, out _out1239);
                r = _out1237;
                resultingOwnership = _out1238;
                readIdents = _out1239;
              }
            } else if (_source269.is_Primitive) {
              DAST._IPrimitive _4477___mcc_h1110 = _source269.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out1240;
                DCOMP._IOwnership _out1241;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1242;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1240, out _out1241, out _out1242);
                r = _out1240;
                resultingOwnership = _out1241;
                readIdents = _out1242;
              }
            } else if (_source269.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4478___mcc_h1112 = _source269.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1243;
                DCOMP._IOwnership _out1244;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1245;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1243, out _out1244, out _out1245);
                r = _out1243;
                resultingOwnership = _out1244;
                readIdents = _out1245;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4479___mcc_h1114 = _source269.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1246;
                DCOMP._IOwnership _out1247;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1248;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1246, out _out1247, out _out1248);
                r = _out1246;
                resultingOwnership = _out1247;
                readIdents = _out1248;
              }
            }
          } else if (_source262.is_Bool) {
            DAST._IType _source271 = _3839___mcc_h1;
            if (_source271.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4480___mcc_h1116 = _source271.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _4481___mcc_h1117 = _source271.dtor_typeArgs;
              DAST._IResolvedType _4482___mcc_h1118 = _source271.dtor_resolved;
              DAST._IResolvedType _source272 = _4482___mcc_h1118;
              if (_source272.is_AllocatedDatatype) {
                DAST._IDatatypeType _4483___mcc_h1122 = _source272.dtor_datatypeType;
                {
                  RAST._IExpr _out1249;
                  DCOMP._IOwnership _out1250;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1251;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1249, out _out1250, out _out1251);
                  r = _out1249;
                  resultingOwnership = _out1250;
                  readIdents = _out1251;
                }
              } else if (_source272.is_Datatype) {
                DAST._IDatatypeType _4484___mcc_h1124 = _source272.dtor_datatypeType;
                {
                  RAST._IExpr _out1252;
                  DCOMP._IOwnership _out1253;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1254;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1252, out _out1253, out _out1254);
                  r = _out1252;
                  resultingOwnership = _out1253;
                  readIdents = _out1254;
                }
              } else if (_source272.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4485___mcc_h1126 = _source272.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4486___mcc_h1127 = _source272.dtor_attributes;
                {
                  RAST._IExpr _out1255;
                  DCOMP._IOwnership _out1256;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1257;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1255, out _out1256, out _out1257);
                  r = _out1255;
                  resultingOwnership = _out1256;
                  readIdents = _out1257;
                }
              } else {
                DAST._IType _4487___mcc_h1130 = _source272.dtor_baseType;
                DAST._INewtypeRange _4488___mcc_h1131 = _source272.dtor_range;
                bool _4489___mcc_h1132 = _source272.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4490___mcc_h1133 = _source272.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4491_attributes = _4490___mcc_h1133;
                bool _4492_erase = _4489___mcc_h1132;
                DAST._INewtypeRange _4493_range = _4488___mcc_h1131;
                DAST._IType _4494_b = _4487___mcc_h1130;
                {
                  RAST._IExpr _out1258;
                  DCOMP._IOwnership _out1259;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1260;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1258, out _out1259, out _out1260);
                  r = _out1258;
                  resultingOwnership = _out1259;
                  readIdents = _out1260;
                }
              }
            } else if (_source271.is_Nullable) {
              DAST._IType _4495___mcc_h1138 = _source271.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out1261;
                DCOMP._IOwnership _out1262;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1263;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1261, out _out1262, out _out1263);
                r = _out1261;
                resultingOwnership = _out1262;
                readIdents = _out1263;
              }
            } else if (_source271.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4496___mcc_h1140 = _source271.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1264;
                DCOMP._IOwnership _out1265;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1266;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1264, out _out1265, out _out1266);
                r = _out1264;
                resultingOwnership = _out1265;
                readIdents = _out1266;
              }
            } else if (_source271.is_Array) {
              DAST._IType _4497___mcc_h1142 = _source271.dtor_element;
              BigInteger _4498___mcc_h1143 = _source271.dtor_dims;
              {
                RAST._IExpr _out1267;
                DCOMP._IOwnership _out1268;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1269;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1267, out _out1268, out _out1269);
                r = _out1267;
                resultingOwnership = _out1268;
                readIdents = _out1269;
              }
            } else if (_source271.is_Seq) {
              DAST._IType _4499___mcc_h1146 = _source271.dtor_element;
              {
                RAST._IExpr _out1270;
                DCOMP._IOwnership _out1271;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1272;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1270, out _out1271, out _out1272);
                r = _out1270;
                resultingOwnership = _out1271;
                readIdents = _out1272;
              }
            } else if (_source271.is_Set) {
              DAST._IType _4500___mcc_h1148 = _source271.dtor_element;
              {
                RAST._IExpr _out1273;
                DCOMP._IOwnership _out1274;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1275;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1273, out _out1274, out _out1275);
                r = _out1273;
                resultingOwnership = _out1274;
                readIdents = _out1275;
              }
            } else if (_source271.is_Multiset) {
              DAST._IType _4501___mcc_h1150 = _source271.dtor_element;
              {
                RAST._IExpr _out1276;
                DCOMP._IOwnership _out1277;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1278;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1276, out _out1277, out _out1278);
                r = _out1276;
                resultingOwnership = _out1277;
                readIdents = _out1278;
              }
            } else if (_source271.is_Map) {
              DAST._IType _4502___mcc_h1152 = _source271.dtor_key;
              DAST._IType _4503___mcc_h1153 = _source271.dtor_value;
              {
                RAST._IExpr _out1279;
                DCOMP._IOwnership _out1280;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1281;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1279, out _out1280, out _out1281);
                r = _out1279;
                resultingOwnership = _out1280;
                readIdents = _out1281;
              }
            } else if (_source271.is_SetBuilder) {
              DAST._IType _4504___mcc_h1156 = _source271.dtor_element;
              {
                RAST._IExpr _out1282;
                DCOMP._IOwnership _out1283;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1284;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1282, out _out1283, out _out1284);
                r = _out1282;
                resultingOwnership = _out1283;
                readIdents = _out1284;
              }
            } else if (_source271.is_MapBuilder) {
              DAST._IType _4505___mcc_h1158 = _source271.dtor_key;
              DAST._IType _4506___mcc_h1159 = _source271.dtor_value;
              {
                RAST._IExpr _out1285;
                DCOMP._IOwnership _out1286;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1287;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1285, out _out1286, out _out1287);
                r = _out1285;
                resultingOwnership = _out1286;
                readIdents = _out1287;
              }
            } else if (_source271.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4507___mcc_h1162 = _source271.dtor_args;
              DAST._IType _4508___mcc_h1163 = _source271.dtor_result;
              {
                RAST._IExpr _out1288;
                DCOMP._IOwnership _out1289;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1290;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1288, out _out1289, out _out1290);
                r = _out1288;
                resultingOwnership = _out1289;
                readIdents = _out1290;
              }
            } else if (_source271.is_Primitive) {
              DAST._IPrimitive _4509___mcc_h1166 = _source271.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out1291;
                DCOMP._IOwnership _out1292;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1293;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1291, out _out1292, out _out1293);
                r = _out1291;
                resultingOwnership = _out1292;
                readIdents = _out1293;
              }
            } else if (_source271.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4510___mcc_h1168 = _source271.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1294;
                DCOMP._IOwnership _out1295;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1296;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1294, out _out1295, out _out1296);
                r = _out1294;
                resultingOwnership = _out1295;
                readIdents = _out1296;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4511___mcc_h1170 = _source271.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1297;
                DCOMP._IOwnership _out1298;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1299;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1297, out _out1298, out _out1299);
                r = _out1297;
                resultingOwnership = _out1298;
                readIdents = _out1299;
              }
            }
          } else {
            DAST._IType _source273 = _3839___mcc_h1;
            if (_source273.is_Path) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4512___mcc_h1172 = _source273.dtor_Path_i_a0;
              Dafny.ISequence<DAST._IType> _4513___mcc_h1173 = _source273.dtor_typeArgs;
              DAST._IResolvedType _4514___mcc_h1174 = _source273.dtor_resolved;
              DAST._IResolvedType _source274 = _4514___mcc_h1174;
              if (_source274.is_AllocatedDatatype) {
                DAST._IDatatypeType _4515___mcc_h1178 = _source274.dtor_datatypeType;
                {
                  RAST._IExpr _out1300;
                  DCOMP._IOwnership _out1301;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1302;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1300, out _out1301, out _out1302);
                  r = _out1300;
                  resultingOwnership = _out1301;
                  readIdents = _out1302;
                }
              } else if (_source274.is_Datatype) {
                DAST._IDatatypeType _4516___mcc_h1180 = _source274.dtor_datatypeType;
                {
                  RAST._IExpr _out1303;
                  DCOMP._IOwnership _out1304;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
                  r = _out1303;
                  resultingOwnership = _out1304;
                  readIdents = _out1305;
                }
              } else if (_source274.is_Trait) {
                Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4517___mcc_h1182 = _source274.dtor_path;
                Dafny.ISequence<DAST._IAttribute> _4518___mcc_h1183 = _source274.dtor_attributes;
                {
                  RAST._IExpr _out1306;
                  DCOMP._IOwnership _out1307;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1308;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1306, out _out1307, out _out1308);
                  r = _out1306;
                  resultingOwnership = _out1307;
                  readIdents = _out1308;
                }
              } else {
                DAST._IType _4519___mcc_h1186 = _source274.dtor_baseType;
                DAST._INewtypeRange _4520___mcc_h1187 = _source274.dtor_range;
                bool _4521___mcc_h1188 = _source274.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4522___mcc_h1189 = _source274.dtor_attributes;
                Dafny.ISequence<DAST._IAttribute> _4523_attributes = _4522___mcc_h1189;
                bool _4524_erase = _4521___mcc_h1188;
                DAST._INewtypeRange _4525_range = _4520___mcc_h1187;
                DAST._IType _4526_b = _4519___mcc_h1186;
                {
                  RAST._IExpr _out1309;
                  DCOMP._IOwnership _out1310;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1311;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1309, out _out1310, out _out1311);
                  r = _out1309;
                  resultingOwnership = _out1310;
                  readIdents = _out1311;
                }
              }
            } else if (_source273.is_Nullable) {
              DAST._IType _4527___mcc_h1194 = _source273.dtor_Nullable_i_a0;
              {
                RAST._IExpr _out1312;
                DCOMP._IOwnership _out1313;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1314;
                (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1312, out _out1313, out _out1314);
                r = _out1312;
                resultingOwnership = _out1313;
                readIdents = _out1314;
              }
            } else if (_source273.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4528___mcc_h1196 = _source273.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1315;
                DCOMP._IOwnership _out1316;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1317;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1315, out _out1316, out _out1317);
                r = _out1315;
                resultingOwnership = _out1316;
                readIdents = _out1317;
              }
            } else if (_source273.is_Array) {
              DAST._IType _4529___mcc_h1198 = _source273.dtor_element;
              BigInteger _4530___mcc_h1199 = _source273.dtor_dims;
              {
                RAST._IExpr _out1318;
                DCOMP._IOwnership _out1319;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1320;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1318, out _out1319, out _out1320);
                r = _out1318;
                resultingOwnership = _out1319;
                readIdents = _out1320;
              }
            } else if (_source273.is_Seq) {
              DAST._IType _4531___mcc_h1202 = _source273.dtor_element;
              {
                RAST._IExpr _out1321;
                DCOMP._IOwnership _out1322;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1323;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1321, out _out1322, out _out1323);
                r = _out1321;
                resultingOwnership = _out1322;
                readIdents = _out1323;
              }
            } else if (_source273.is_Set) {
              DAST._IType _4532___mcc_h1204 = _source273.dtor_element;
              {
                RAST._IExpr _out1324;
                DCOMP._IOwnership _out1325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1326;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1324, out _out1325, out _out1326);
                r = _out1324;
                resultingOwnership = _out1325;
                readIdents = _out1326;
              }
            } else if (_source273.is_Multiset) {
              DAST._IType _4533___mcc_h1206 = _source273.dtor_element;
              {
                RAST._IExpr _out1327;
                DCOMP._IOwnership _out1328;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1329;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1327, out _out1328, out _out1329);
                r = _out1327;
                resultingOwnership = _out1328;
                readIdents = _out1329;
              }
            } else if (_source273.is_Map) {
              DAST._IType _4534___mcc_h1208 = _source273.dtor_key;
              DAST._IType _4535___mcc_h1209 = _source273.dtor_value;
              {
                RAST._IExpr _out1330;
                DCOMP._IOwnership _out1331;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1332;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1330, out _out1331, out _out1332);
                r = _out1330;
                resultingOwnership = _out1331;
                readIdents = _out1332;
              }
            } else if (_source273.is_SetBuilder) {
              DAST._IType _4536___mcc_h1212 = _source273.dtor_element;
              {
                RAST._IExpr _out1333;
                DCOMP._IOwnership _out1334;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1335;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1333, out _out1334, out _out1335);
                r = _out1333;
                resultingOwnership = _out1334;
                readIdents = _out1335;
              }
            } else if (_source273.is_MapBuilder) {
              DAST._IType _4537___mcc_h1214 = _source273.dtor_key;
              DAST._IType _4538___mcc_h1215 = _source273.dtor_value;
              {
                RAST._IExpr _out1336;
                DCOMP._IOwnership _out1337;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1338;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1336, out _out1337, out _out1338);
                r = _out1336;
                resultingOwnership = _out1337;
                readIdents = _out1338;
              }
            } else if (_source273.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4539___mcc_h1218 = _source273.dtor_args;
              DAST._IType _4540___mcc_h1219 = _source273.dtor_result;
              {
                RAST._IExpr _out1339;
                DCOMP._IOwnership _out1340;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1341;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1339, out _out1340, out _out1341);
                r = _out1339;
                resultingOwnership = _out1340;
                readIdents = _out1341;
              }
            } else if (_source273.is_Primitive) {
              DAST._IPrimitive _4541___mcc_h1222 = _source273.dtor_Primitive_i_a0;
              DAST._IPrimitive _source275 = _4541___mcc_h1222;
              if (_source275.is_Int) {
                {
                  RAST._IType _4542_rhsType;
                  RAST._IType _out1342;
                  _out1342 = (this).GenType(_3833_fromTpe, true, false);
                  _4542_rhsType = _out1342;
                  RAST._IExpr _4543_recursiveGen;
                  DCOMP._IOwnership _4544___v116;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4545_recIdents;
                  RAST._IExpr _out1343;
                  DCOMP._IOwnership _out1344;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1345;
                  (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1343, out _out1344, out _out1345);
                  _4543_recursiveGen = _out1343;
                  _4544___v116 = _out1344;
                  _4545_recIdents = _out1345;
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1((_4543_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")));
                  RAST._IExpr _out1346;
                  DCOMP._IOwnership _out1347;
                  DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1346, out _out1347);
                  r = _out1346;
                  resultingOwnership = _out1347;
                  readIdents = _4545_recIdents;
                }
              } else if (_source275.is_Real) {
                {
                  RAST._IExpr _out1348;
                  DCOMP._IOwnership _out1349;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1350;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1348, out _out1349, out _out1350);
                  r = _out1348;
                  resultingOwnership = _out1349;
                  readIdents = _out1350;
                }
              } else if (_source275.is_String) {
                {
                  RAST._IExpr _out1351;
                  DCOMP._IOwnership _out1352;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1353;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1351, out _out1352, out _out1353);
                  r = _out1351;
                  resultingOwnership = _out1352;
                  readIdents = _out1353;
                }
              } else if (_source275.is_Bool) {
                {
                  RAST._IExpr _out1354;
                  DCOMP._IOwnership _out1355;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1356;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1354, out _out1355, out _out1356);
                  r = _out1354;
                  resultingOwnership = _out1355;
                  readIdents = _out1356;
                }
              } else {
                {
                  RAST._IExpr _out1357;
                  DCOMP._IOwnership _out1358;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1359;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1357, out _out1358, out _out1359);
                  r = _out1357;
                  resultingOwnership = _out1358;
                  readIdents = _out1359;
                }
              }
            } else if (_source273.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4546___mcc_h1224 = _source273.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1360;
                DCOMP._IOwnership _out1361;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1362;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1360, out _out1361, out _out1362);
                r = _out1360;
                resultingOwnership = _out1361;
                readIdents = _out1362;
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _4547___mcc_h1226 = _source273.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1363;
                DCOMP._IOwnership _out1364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1365;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1363, out _out1364, out _out1365);
                r = _out1363;
                resultingOwnership = _out1364;
                readIdents = _out1365;
              }
            }
          }
        } else if (_source232.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _4548___mcc_h1228 = _source232.dtor_Passthrough_i_a0;
          DAST._IType _source276 = _3839___mcc_h1;
          if (_source276.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4549___mcc_h1232 = _source276.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4550___mcc_h1233 = _source276.dtor_typeArgs;
            DAST._IResolvedType _4551___mcc_h1234 = _source276.dtor_resolved;
            DAST._IResolvedType _source277 = _4551___mcc_h1234;
            if (_source277.is_AllocatedDatatype) {
              DAST._IDatatypeType _4552___mcc_h1238 = _source277.dtor_datatypeType;
              {
                RAST._IExpr _out1366;
                DCOMP._IOwnership _out1367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1368;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1366, out _out1367, out _out1368);
                r = _out1366;
                resultingOwnership = _out1367;
                readIdents = _out1368;
              }
            } else if (_source277.is_Datatype) {
              DAST._IDatatypeType _4553___mcc_h1240 = _source277.dtor_datatypeType;
              {
                RAST._IExpr _out1369;
                DCOMP._IOwnership _out1370;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1371;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1369, out _out1370, out _out1371);
                r = _out1369;
                resultingOwnership = _out1370;
                readIdents = _out1371;
              }
            } else if (_source277.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4554___mcc_h1242 = _source277.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4555___mcc_h1243 = _source277.dtor_attributes;
              {
                RAST._IExpr _out1372;
                DCOMP._IOwnership _out1373;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1374;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1372, out _out1373, out _out1374);
                r = _out1372;
                resultingOwnership = _out1373;
                readIdents = _out1374;
              }
            } else {
              DAST._IType _4556___mcc_h1246 = _source277.dtor_baseType;
              DAST._INewtypeRange _4557___mcc_h1247 = _source277.dtor_range;
              bool _4558___mcc_h1248 = _source277.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4559___mcc_h1249 = _source277.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4560_attributes = _4559___mcc_h1249;
              bool _4561_erase = _4558___mcc_h1248;
              DAST._INewtypeRange _4562_range = _4557___mcc_h1247;
              DAST._IType _4563_b = _4556___mcc_h1246;
              {
                RAST._IExpr _out1375;
                DCOMP._IOwnership _out1376;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1377;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1375, out _out1376, out _out1377);
                r = _out1375;
                resultingOwnership = _out1376;
                readIdents = _out1377;
              }
            }
          } else if (_source276.is_Nullable) {
            DAST._IType _4564___mcc_h1254 = _source276.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out1378;
              DCOMP._IOwnership _out1379;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1380;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1378, out _out1379, out _out1380);
              r = _out1378;
              resultingOwnership = _out1379;
              readIdents = _out1380;
            }
          } else if (_source276.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4565___mcc_h1256 = _source276.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1381;
              DCOMP._IOwnership _out1382;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1383;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1381, out _out1382, out _out1383);
              r = _out1381;
              resultingOwnership = _out1382;
              readIdents = _out1383;
            }
          } else if (_source276.is_Array) {
            DAST._IType _4566___mcc_h1258 = _source276.dtor_element;
            BigInteger _4567___mcc_h1259 = _source276.dtor_dims;
            {
              RAST._IExpr _out1384;
              DCOMP._IOwnership _out1385;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1386;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1384, out _out1385, out _out1386);
              r = _out1384;
              resultingOwnership = _out1385;
              readIdents = _out1386;
            }
          } else if (_source276.is_Seq) {
            DAST._IType _4568___mcc_h1262 = _source276.dtor_element;
            {
              RAST._IExpr _out1387;
              DCOMP._IOwnership _out1388;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1389;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1387, out _out1388, out _out1389);
              r = _out1387;
              resultingOwnership = _out1388;
              readIdents = _out1389;
            }
          } else if (_source276.is_Set) {
            DAST._IType _4569___mcc_h1264 = _source276.dtor_element;
            {
              RAST._IExpr _out1390;
              DCOMP._IOwnership _out1391;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1392;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1390, out _out1391, out _out1392);
              r = _out1390;
              resultingOwnership = _out1391;
              readIdents = _out1392;
            }
          } else if (_source276.is_Multiset) {
            DAST._IType _4570___mcc_h1266 = _source276.dtor_element;
            {
              RAST._IExpr _out1393;
              DCOMP._IOwnership _out1394;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1395;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1393, out _out1394, out _out1395);
              r = _out1393;
              resultingOwnership = _out1394;
              readIdents = _out1395;
            }
          } else if (_source276.is_Map) {
            DAST._IType _4571___mcc_h1268 = _source276.dtor_key;
            DAST._IType _4572___mcc_h1269 = _source276.dtor_value;
            {
              RAST._IExpr _out1396;
              DCOMP._IOwnership _out1397;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1398;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1396, out _out1397, out _out1398);
              r = _out1396;
              resultingOwnership = _out1397;
              readIdents = _out1398;
            }
          } else if (_source276.is_SetBuilder) {
            DAST._IType _4573___mcc_h1272 = _source276.dtor_element;
            {
              RAST._IExpr _out1399;
              DCOMP._IOwnership _out1400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1401;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1399, out _out1400, out _out1401);
              r = _out1399;
              resultingOwnership = _out1400;
              readIdents = _out1401;
            }
          } else if (_source276.is_MapBuilder) {
            DAST._IType _4574___mcc_h1274 = _source276.dtor_key;
            DAST._IType _4575___mcc_h1275 = _source276.dtor_value;
            {
              RAST._IExpr _out1402;
              DCOMP._IOwnership _out1403;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1404;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1402, out _out1403, out _out1404);
              r = _out1402;
              resultingOwnership = _out1403;
              readIdents = _out1404;
            }
          } else if (_source276.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4576___mcc_h1278 = _source276.dtor_args;
            DAST._IType _4577___mcc_h1279 = _source276.dtor_result;
            {
              RAST._IExpr _out1405;
              DCOMP._IOwnership _out1406;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1407;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1405, out _out1406, out _out1407);
              r = _out1405;
              resultingOwnership = _out1406;
              readIdents = _out1407;
            }
          } else if (_source276.is_Primitive) {
            DAST._IPrimitive _4578___mcc_h1282 = _source276.dtor_Primitive_i_a0;
            DAST._IPrimitive _source278 = _4578___mcc_h1282;
            if (_source278.is_Int) {
              {
                RAST._IType _4579_rhsType;
                RAST._IType _out1408;
                _out1408 = (this).GenType(_3833_fromTpe, true, false);
                _4579_rhsType = _out1408;
                RAST._IExpr _4580_recursiveGen;
                DCOMP._IOwnership _4581___v114;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4582_recIdents;
                RAST._IExpr _out1409;
                DCOMP._IOwnership _out1410;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1411;
                (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1409, out _out1410, out _out1411);
                _4580_recursiveGen = _out1409;
                _4581___v114 = _out1410;
                _4582_recIdents = _out1411;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt{data: ::dafny_runtime::BigInt::from("), (_4580_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")}")));
                RAST._IExpr _out1412;
                DCOMP._IOwnership _out1413;
                DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1412, out _out1413);
                r = _out1412;
                resultingOwnership = _out1413;
                readIdents = _4582_recIdents;
              }
            } else if (_source278.is_Real) {
              {
                RAST._IExpr _out1414;
                DCOMP._IOwnership _out1415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1416;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1414, out _out1415, out _out1416);
                r = _out1414;
                resultingOwnership = _out1415;
                readIdents = _out1416;
              }
            } else if (_source278.is_String) {
              {
                RAST._IExpr _out1417;
                DCOMP._IOwnership _out1418;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1419;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1417, out _out1418, out _out1419);
                r = _out1417;
                resultingOwnership = _out1418;
                readIdents = _out1419;
              }
            } else if (_source278.is_Bool) {
              {
                RAST._IExpr _out1420;
                DCOMP._IOwnership _out1421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1422;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1420, out _out1421, out _out1422);
                r = _out1420;
                resultingOwnership = _out1421;
                readIdents = _out1422;
              }
            } else {
              {
                RAST._IExpr _out1423;
                DCOMP._IOwnership _out1424;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1425;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1423, out _out1424, out _out1425);
                r = _out1423;
                resultingOwnership = _out1424;
                readIdents = _out1425;
              }
            }
          } else if (_source276.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4583___mcc_h1284 = _source276.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _4584_recursiveGen;
              DCOMP._IOwnership _4585___v119;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4586_recIdents;
              RAST._IExpr _out1426;
              DCOMP._IOwnership _out1427;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1428;
              (this).GenExpr(_3832_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1426, out _out1427, out _out1428);
              _4584_recursiveGen = _out1426;
              _4585___v119 = _out1427;
              _4586_recIdents = _out1428;
              RAST._IType _4587_toTpeGen;
              RAST._IType _out1429;
              _out1429 = (this).GenType(_3834_toTpe, true, false);
              _4587_toTpeGen = _out1429;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_4584_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_4587_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out1430;
              DCOMP._IOwnership _out1431;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1430, out _out1431);
              r = _out1430;
              resultingOwnership = _out1431;
              readIdents = _4586_recIdents;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4588___mcc_h1286 = _source276.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1432;
              DCOMP._IOwnership _out1433;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1434;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1432, out _out1433, out _out1434);
              r = _out1432;
              resultingOwnership = _out1433;
              readIdents = _out1434;
            }
          }
        } else {
          Dafny.ISequence<Dafny.Rune> _4589___mcc_h1288 = _source232.dtor_TypeArg_i_a0;
          DAST._IType _source279 = _3839___mcc_h1;
          if (_source279.is_Path) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4590___mcc_h1292 = _source279.dtor_Path_i_a0;
            Dafny.ISequence<DAST._IType> _4591___mcc_h1293 = _source279.dtor_typeArgs;
            DAST._IResolvedType _4592___mcc_h1294 = _source279.dtor_resolved;
            DAST._IResolvedType _source280 = _4592___mcc_h1294;
            if (_source280.is_AllocatedDatatype) {
              DAST._IDatatypeType _4593___mcc_h1298 = _source280.dtor_datatypeType;
              {
                RAST._IExpr _out1435;
                DCOMP._IOwnership _out1436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1437;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1435, out _out1436, out _out1437);
                r = _out1435;
                resultingOwnership = _out1436;
                readIdents = _out1437;
              }
            } else if (_source280.is_Datatype) {
              DAST._IDatatypeType _4594___mcc_h1300 = _source280.dtor_datatypeType;
              {
                RAST._IExpr _out1438;
                DCOMP._IOwnership _out1439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1440;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1438, out _out1439, out _out1440);
                r = _out1438;
                resultingOwnership = _out1439;
                readIdents = _out1440;
              }
            } else if (_source280.is_Trait) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4595___mcc_h1302 = _source280.dtor_path;
              Dafny.ISequence<DAST._IAttribute> _4596___mcc_h1303 = _source280.dtor_attributes;
              {
                RAST._IExpr _out1441;
                DCOMP._IOwnership _out1442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1443;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1441, out _out1442, out _out1443);
                r = _out1441;
                resultingOwnership = _out1442;
                readIdents = _out1443;
              }
            } else {
              DAST._IType _4597___mcc_h1306 = _source280.dtor_baseType;
              DAST._INewtypeRange _4598___mcc_h1307 = _source280.dtor_range;
              bool _4599___mcc_h1308 = _source280.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4600___mcc_h1309 = _source280.dtor_attributes;
              Dafny.ISequence<DAST._IAttribute> _4601_attributes = _4600___mcc_h1309;
              bool _4602_erase = _4599___mcc_h1308;
              DAST._INewtypeRange _4603_range = _4598___mcc_h1307;
              DAST._IType _4604_b = _4597___mcc_h1306;
              {
                RAST._IExpr _out1444;
                DCOMP._IOwnership _out1445;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1446;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1444, out _out1445, out _out1446);
                r = _out1444;
                resultingOwnership = _out1445;
                readIdents = _out1446;
              }
            }
          } else if (_source279.is_Nullable) {
            DAST._IType _4605___mcc_h1314 = _source279.dtor_Nullable_i_a0;
            {
              RAST._IExpr _out1447;
              DCOMP._IOwnership _out1448;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1449;
              (this).GenExprConvertToNullable(e, selfIdent, env, expectedOwnership, out _out1447, out _out1448, out _out1449);
              r = _out1447;
              resultingOwnership = _out1448;
              readIdents = _out1449;
            }
          } else if (_source279.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4606___mcc_h1316 = _source279.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1450;
              DCOMP._IOwnership _out1451;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1452;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1450, out _out1451, out _out1452);
              r = _out1450;
              resultingOwnership = _out1451;
              readIdents = _out1452;
            }
          } else if (_source279.is_Array) {
            DAST._IType _4607___mcc_h1318 = _source279.dtor_element;
            BigInteger _4608___mcc_h1319 = _source279.dtor_dims;
            {
              RAST._IExpr _out1453;
              DCOMP._IOwnership _out1454;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1455;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1453, out _out1454, out _out1455);
              r = _out1453;
              resultingOwnership = _out1454;
              readIdents = _out1455;
            }
          } else if (_source279.is_Seq) {
            DAST._IType _4609___mcc_h1322 = _source279.dtor_element;
            {
              RAST._IExpr _out1456;
              DCOMP._IOwnership _out1457;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1458;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1456, out _out1457, out _out1458);
              r = _out1456;
              resultingOwnership = _out1457;
              readIdents = _out1458;
            }
          } else if (_source279.is_Set) {
            DAST._IType _4610___mcc_h1324 = _source279.dtor_element;
            {
              RAST._IExpr _out1459;
              DCOMP._IOwnership _out1460;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1461;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1459, out _out1460, out _out1461);
              r = _out1459;
              resultingOwnership = _out1460;
              readIdents = _out1461;
            }
          } else if (_source279.is_Multiset) {
            DAST._IType _4611___mcc_h1326 = _source279.dtor_element;
            {
              RAST._IExpr _out1462;
              DCOMP._IOwnership _out1463;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1464;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1462, out _out1463, out _out1464);
              r = _out1462;
              resultingOwnership = _out1463;
              readIdents = _out1464;
            }
          } else if (_source279.is_Map) {
            DAST._IType _4612___mcc_h1328 = _source279.dtor_key;
            DAST._IType _4613___mcc_h1329 = _source279.dtor_value;
            {
              RAST._IExpr _out1465;
              DCOMP._IOwnership _out1466;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1467;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1465, out _out1466, out _out1467);
              r = _out1465;
              resultingOwnership = _out1466;
              readIdents = _out1467;
            }
          } else if (_source279.is_SetBuilder) {
            DAST._IType _4614___mcc_h1332 = _source279.dtor_element;
            {
              RAST._IExpr _out1468;
              DCOMP._IOwnership _out1469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1470;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1468, out _out1469, out _out1470);
              r = _out1468;
              resultingOwnership = _out1469;
              readIdents = _out1470;
            }
          } else if (_source279.is_MapBuilder) {
            DAST._IType _4615___mcc_h1334 = _source279.dtor_key;
            DAST._IType _4616___mcc_h1335 = _source279.dtor_value;
            {
              RAST._IExpr _out1471;
              DCOMP._IOwnership _out1472;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1473;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1471, out _out1472, out _out1473);
              r = _out1471;
              resultingOwnership = _out1472;
              readIdents = _out1473;
            }
          } else if (_source279.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4617___mcc_h1338 = _source279.dtor_args;
            DAST._IType _4618___mcc_h1339 = _source279.dtor_result;
            {
              RAST._IExpr _out1474;
              DCOMP._IOwnership _out1475;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1476;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1474, out _out1475, out _out1476);
              r = _out1474;
              resultingOwnership = _out1475;
              readIdents = _out1476;
            }
          } else if (_source279.is_Primitive) {
            DAST._IPrimitive _4619___mcc_h1342 = _source279.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out1477;
              DCOMP._IOwnership _out1478;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1479;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1477, out _out1478, out _out1479);
              r = _out1477;
              resultingOwnership = _out1478;
              readIdents = _out1479;
            }
          } else if (_source279.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4620___mcc_h1344 = _source279.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1480;
              DCOMP._IOwnership _out1481;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1482;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1480, out _out1481, out _out1482);
              r = _out1480;
              resultingOwnership = _out1481;
              readIdents = _out1482;
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4621___mcc_h1346 = _source279.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1483;
              DCOMP._IOwnership _out1484;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1485;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1483, out _out1484, out _out1485);
              r = _out1483;
              resultingOwnership = _out1484;
              readIdents = _out1485;
            }
          }
        }
      }
      return ;
    }
    public void GenIdent(Dafny.ISequence<Dafny.Rune> rName, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      r = RAST.Expr.create_Identifier(rName);
      Std.Wrappers._IOption<RAST._IType> _4622_tpe;
      _4622_tpe = (env).GetType(rName);
      Std.Wrappers._IOption<RAST._IType> _4623_placeboOpt;
      _4623_placeboOpt = (((_4622_tpe).is_Some) ? (((_4622_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
      bool _4624_currentlyBorrowed;
      _4624_currentlyBorrowed = (env).IsBorrowed(rName);
      bool _4625_noNeedOfClone;
      _4625_noNeedOfClone = (env).CanReadWithoutClone(rName);
      if ((_4623_placeboOpt).is_Some) {
        r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
        _4624_currentlyBorrowed = false;
        _4625_noNeedOfClone = true;
      }
      if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
        if (((_4622_tpe).is_Some) && (((_4622_tpe).dtor_value).IsObjectOrPointer())) {
          r = ((this).modify__macro).Apply1(r);
        } else {
          r = RAST.__default.BorrowMut(r);
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
        if (!(_4625_noNeedOfClone)) {
          r = RAST.__default.Clone(r);
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        if (!(_4625_noNeedOfClone)) {
          r = RAST.__default.Clone(r);
        }
        r = RAST.__default.BoxNew(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
      } else if (_4624_currentlyBorrowed) {
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        if (((_4622_tpe).is_Some) && (((_4622_tpe).dtor_value).IsPointer())) {
          r = ((this).read__macro).Apply1(r);
        } else {
          r = RAST.__default.Borrow(r);
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      }
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(rName);
      return ;
    }
    public void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source281 = e;
      if (_source281.is_Literal) {
        DAST._ILiteral _4626___mcc_h0 = _source281.dtor_Literal_i_a0;
        RAST._IExpr _out1486;
        DCOMP._IOwnership _out1487;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1488;
        (this).GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out1486, out _out1487, out _out1488);
        r = _out1486;
        resultingOwnership = _out1487;
        readIdents = _out1488;
      } else if (_source281.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _4627___mcc_h1 = _source281.dtor_Ident_i_a0;
        Dafny.ISequence<Dafny.Rune> _4628_name = _4627___mcc_h1;
        {
          RAST._IExpr _out1489;
          DCOMP._IOwnership _out1490;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1491;
          (this).GenIdent(DCOMP.__default.escapeName(_4628_name), selfIdent, env, expectedOwnership, out _out1489, out _out1490, out _out1491);
          r = _out1489;
          resultingOwnership = _out1490;
          readIdents = _out1491;
        }
      } else if (_source281.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4629___mcc_h2 = _source281.dtor_Companion_i_a0;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4630_path = _4629___mcc_h2;
        {
          RAST._IExpr _out1492;
          _out1492 = DCOMP.COMP.GenPathExpr(_4630_path);
          r = _out1492;
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else {
            RAST._IExpr _out1493;
            DCOMP._IOwnership _out1494;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1493, out _out1494);
            r = _out1493;
            resultingOwnership = _out1494;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source281.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _4631___mcc_h3 = _source281.dtor_Tuple_i_a0;
        Dafny.ISequence<DAST._IExpression> _4632_values = _4631___mcc_h3;
        {
          Dafny.ISequence<RAST._IExpr> _4633_exprs;
          _4633_exprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi33 = new BigInteger((_4632_values).Count);
          for (BigInteger _4634_i = BigInteger.Zero; _4634_i < _hi33; _4634_i++) {
            RAST._IExpr _4635_recursiveGen;
            DCOMP._IOwnership _4636___v122;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4637_recIdents;
            RAST._IExpr _out1495;
            DCOMP._IOwnership _out1496;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1497;
            (this).GenExpr((_4632_values).Select(_4634_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1495, out _out1496, out _out1497);
            _4635_recursiveGen = _out1495;
            _4636___v122 = _out1496;
            _4637_recIdents = _out1497;
            _4633_exprs = Dafny.Sequence<RAST._IExpr>.Concat(_4633_exprs, Dafny.Sequence<RAST._IExpr>.FromElements(_4635_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4637_recIdents);
          }
          r = RAST.Expr.create_Tuple(_4633_exprs);
          RAST._IExpr _out1498;
          DCOMP._IOwnership _out1499;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1498, out _out1499);
          r = _out1498;
          resultingOwnership = _out1499;
          return ;
        }
      } else if (_source281.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4638___mcc_h4 = _source281.dtor_path;
        Dafny.ISequence<DAST._IType> _4639___mcc_h5 = _source281.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _4640___mcc_h6 = _source281.dtor_args;
        Dafny.ISequence<DAST._IExpression> _4641_args = _4640___mcc_h6;
        Dafny.ISequence<DAST._IType> _4642_typeArgs = _4639___mcc_h5;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4643_path = _4638___mcc_h4;
        {
          RAST._IExpr _out1500;
          _out1500 = DCOMP.COMP.GenPathExpr(_4643_path);
          r = _out1500;
          if ((new BigInteger((_4642_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _4644_typeExprs;
            _4644_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi34 = new BigInteger((_4642_typeArgs).Count);
            for (BigInteger _4645_i = BigInteger.Zero; _4645_i < _hi34; _4645_i++) {
              RAST._IType _4646_typeExpr;
              RAST._IType _out1501;
              _out1501 = (this).GenType((_4642_typeArgs).Select(_4645_i), false, false);
              _4646_typeExpr = _out1501;
              _4644_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_4644_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_4646_typeExpr));
            }
            r = (r).ApplyType(_4644_typeExprs);
          }
          r = (r).MSel((this).allocate__fn);
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _4647_arguments;
          _4647_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi35 = new BigInteger((_4641_args).Count);
          for (BigInteger _4648_i = BigInteger.Zero; _4648_i < _hi35; _4648_i++) {
            RAST._IExpr _4649_recursiveGen;
            DCOMP._IOwnership _4650___v123;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4651_recIdents;
            RAST._IExpr _out1502;
            DCOMP._IOwnership _out1503;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1504;
            (this).GenExpr((_4641_args).Select(_4648_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1502, out _out1503, out _out1504);
            _4649_recursiveGen = _out1502;
            _4650___v123 = _out1503;
            _4651_recIdents = _out1504;
            _4647_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_4647_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_4649_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4651_recIdents);
          }
          r = (r).Apply(_4647_arguments);
          RAST._IExpr _out1505;
          DCOMP._IOwnership _out1506;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1505, out _out1506);
          r = _out1505;
          resultingOwnership = _out1506;
          return ;
        }
      } else if (_source281.is_NewUninitArray) {
        Dafny.ISequence<DAST._IExpression> _4652___mcc_h7 = _source281.dtor_dims;
        DAST._IType _4653___mcc_h8 = _source281.dtor_typ;
        DAST._IType _4654_typ = _4653___mcc_h8;
        Dafny.ISequence<DAST._IExpression> _4655_dims = _4652___mcc_h7;
        {
          if ((new BigInteger(16)) < (new BigInteger((_4655_dims).Count))) {
            Dafny.ISequence<Dafny.Rune> _4656_msg;
            _4656_msg = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Unsupported: Creation of arrays of more than 16 dimensions");
            if ((this.error).is_None) {
              (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_4656_msg);
            }
            r = RAST.Expr.create_RawExpr(_4656_msg);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          } else {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
            RAST._IType _4657_typeGen;
            RAST._IType _out1507;
            _out1507 = (this).GenType(_4654_typ, false, false);
            _4657_typeGen = _out1507;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            Dafny.ISequence<RAST._IExpr> _4658_dimExprs;
            _4658_dimExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi36 = new BigInteger((_4655_dims).Count);
            for (BigInteger _4659_i = BigInteger.Zero; _4659_i < _hi36; _4659_i++) {
              RAST._IExpr _4660_recursiveGen;
              DCOMP._IOwnership _4661___v124;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4662_recIdents;
              RAST._IExpr _out1508;
              DCOMP._IOwnership _out1509;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1510;
              (this).GenExpr((_4655_dims).Select(_4659_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1508, out _out1509, out _out1510);
              _4660_recursiveGen = _out1508;
              _4661___v124 = _out1509;
              _4662_recIdents = _out1510;
              _4658_dimExprs = Dafny.Sequence<RAST._IExpr>.Concat(_4658_dimExprs, Dafny.Sequence<RAST._IExpr>.FromElements(((_4660_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_usize"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4662_recIdents);
            }
            if ((new BigInteger((_4655_dims).Count)) > (BigInteger.One)) {
              Dafny.ISequence<Dafny.Rune> _4663_class__name;
              _4663_class__name = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array"), Std.Strings.__default.OfNat(new BigInteger((_4655_dims).Count)));
              r = ((((RAST.__default.dafny__runtime).MSel(_4663_class__name)).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4657_typeGen))).MSel((this).placebos__usize)).Apply(_4658_dimExprs);
            } else {
              r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("array"))).MSel((this).placebos__usize)).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4657_typeGen))).Apply(_4658_dimExprs);
            }
          }
          RAST._IExpr _out1511;
          DCOMP._IOwnership _out1512;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1511, out _out1512);
          r = _out1511;
          resultingOwnership = _out1512;
        }
      } else if (_source281.is_ArrayIndexToInt) {
        DAST._IExpression _4664___mcc_h9 = _source281.dtor_value;
        DAST._IExpression _4665_underlying = _4664___mcc_h9;
        {
          RAST._IExpr _4666_recursiveGen;
          DCOMP._IOwnership _4667___v125;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4668_recIdents;
          RAST._IExpr _out1513;
          DCOMP._IOwnership _out1514;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1515;
          (this).GenExpr(_4665_underlying, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1513, out _out1514, out _out1515);
          _4666_recursiveGen = _out1513;
          _4667___v125 = _out1514;
          _4668_recIdents = _out1515;
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(_4666_recursiveGen);
          readIdents = _4668_recIdents;
          RAST._IExpr _out1516;
          DCOMP._IOwnership _out1517;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1516, out _out1517);
          r = _out1516;
          resultingOwnership = _out1517;
        }
      } else if (_source281.is_FinalizeNewArray) {
        DAST._IExpression _4669___mcc_h10 = _source281.dtor_value;
        DAST._IType _4670___mcc_h11 = _source281.dtor_typ;
        DAST._IType _4671_typ = _4670___mcc_h11;
        DAST._IExpression _4672_underlying = _4669___mcc_h10;
        {
          RAST._IType _4673_tpe;
          RAST._IType _out1518;
          _out1518 = (this).GenType(_4671_typ, false, false);
          _4673_tpe = _out1518;
          RAST._IExpr _4674_recursiveGen;
          DCOMP._IOwnership _4675___v126;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4676_recIdents;
          RAST._IExpr _out1519;
          DCOMP._IOwnership _out1520;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1521;
          (this).GenExpr(_4672_underlying, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1519, out _out1520, out _out1521);
          _4674_recursiveGen = _out1519;
          _4675___v126 = _out1520;
          _4676_recIdents = _out1521;
          readIdents = _4676_recIdents;
          if ((_4673_tpe).IsObjectOrPointer()) {
            RAST._IType _4677_t;
            _4677_t = (_4673_tpe).ObjectOrPointerUnderlying();
            if ((_4677_t).is_Array) {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("array"))).MSel((this).array__construct)).Apply1(_4674_recursiveGen);
            } else if ((_4677_t).IsMultiArray()) {
              Dafny.ISequence<Dafny.Rune> _4678_c;
              _4678_c = (_4677_t).MultiArrayClass();
              r = (((RAST.__default.dafny__runtime).MSel(_4678_c)).MSel((this).array__construct)).Apply1(_4674_recursiveGen);
            } else {
              (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Finalize New Array with a pointer or object type to something that is not an array or a multi array: "), (_4673_tpe)._ToString(DCOMP.__default.IND)));
              r = RAST.Expr.create_RawExpr((this.error).dtor_value);
            }
          } else {
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Finalize New Array with a type that is not a pointer or an object: "), (_4673_tpe)._ToString(DCOMP.__default.IND)));
            r = RAST.Expr.create_RawExpr((this.error).dtor_value);
          }
          RAST._IExpr _out1522;
          DCOMP._IOwnership _out1523;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1522, out _out1523);
          r = _out1522;
          resultingOwnership = _out1523;
        }
      } else if (_source281.is_DatatypeValue) {
        DAST._IDatatypeType _4679___mcc_h12 = _source281.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _4680___mcc_h13 = _source281.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _4681___mcc_h14 = _source281.dtor_variant;
        bool _4682___mcc_h15 = _source281.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _4683___mcc_h16 = _source281.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _4684_values = _4683___mcc_h16;
        bool _4685_isCo = _4682___mcc_h15;
        Dafny.ISequence<Dafny.Rune> _4686_variant = _4681___mcc_h14;
        Dafny.ISequence<DAST._IType> _4687_typeArgs = _4680___mcc_h13;
        DAST._IDatatypeType _4688_datatypeType = _4679___mcc_h12;
        {
          RAST._IExpr _out1524;
          _out1524 = DCOMP.COMP.GenPathExpr((_4688_datatypeType).dtor_path);
          r = _out1524;
          Dafny.ISequence<RAST._IType> _4689_genTypeArgs;
          _4689_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi37 = new BigInteger((_4687_typeArgs).Count);
          for (BigInteger _4690_i = BigInteger.Zero; _4690_i < _hi37; _4690_i++) {
            RAST._IType _4691_typeExpr;
            RAST._IType _out1525;
            _out1525 = (this).GenType((_4687_typeArgs).Select(_4690_i), false, false);
            _4691_typeExpr = _out1525;
            _4689_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_4689_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_4691_typeExpr));
          }
          if ((new BigInteger((_4687_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_4689_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeName(_4686_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _4692_assignments;
          _4692_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi38 = new BigInteger((_4684_values).Count);
          for (BigInteger _4693_i = BigInteger.Zero; _4693_i < _hi38; _4693_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs63 = (_4684_values).Select(_4693_i);
            Dafny.ISequence<Dafny.Rune> _4694_name = _let_tmp_rhs63.dtor__0;
            DAST._IExpression _4695_value = _let_tmp_rhs63.dtor__1;
            if (_4685_isCo) {
              RAST._IExpr _4696_recursiveGen;
              DCOMP._IOwnership _4697___v127;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4698_recIdents;
              RAST._IExpr _out1526;
              DCOMP._IOwnership _out1527;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1528;
              (this).GenExpr(_4695_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out1526, out _out1527, out _out1528);
              _4696_recursiveGen = _out1526;
              _4697___v127 = _out1527;
              _4698_recIdents = _out1528;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4698_recIdents);
              Dafny.ISequence<Dafny.Rune> _4699_allReadCloned;
              _4699_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_4698_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _4700_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_4698_recIdents).Elements) {
                  _4700_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_4698_recIdents).Contains(_4700_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3635)");
              after__ASSIGN_SUCH_THAT_2: ;
                _4699_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_4699_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), _4700_next), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), _4700_next), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _4698_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_4698_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_4700_next));
              }
              Dafny.ISequence<Dafny.Rune> _4701_wasAssigned;
              _4701_wasAssigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _4699_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_4696_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _4692_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_4692_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_4694_name, RAST.Expr.create_RawExpr(_4701_wasAssigned))));
            } else {
              RAST._IExpr _4702_recursiveGen;
              DCOMP._IOwnership _4703___v128;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4704_recIdents;
              RAST._IExpr _out1529;
              DCOMP._IOwnership _out1530;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1531;
              (this).GenExpr(_4695_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1529, out _out1530, out _out1531);
              _4702_recursiveGen = _out1529;
              _4703___v128 = _out1530;
              _4704_recIdents = _out1531;
              _4692_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_4692_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_4694_name, _4702_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4704_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _4692_assignments);
          if ((this).IsRcWrapped((_4688_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out1532;
          DCOMP._IOwnership _out1533;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1532, out _out1533);
          r = _out1532;
          resultingOwnership = _out1533;
          return ;
        }
      } else if (_source281.is_Convert) {
        DAST._IExpression _4705___mcc_h17 = _source281.dtor_value;
        DAST._IType _4706___mcc_h18 = _source281.dtor_from;
        DAST._IType _4707___mcc_h19 = _source281.dtor_typ;
        {
          RAST._IExpr _out1534;
          DCOMP._IOwnership _out1535;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1536;
          (this).GenExprConvert(e, selfIdent, env, expectedOwnership, out _out1534, out _out1535, out _out1536);
          r = _out1534;
          resultingOwnership = _out1535;
          readIdents = _out1536;
        }
      } else if (_source281.is_SeqConstruct) {
        DAST._IExpression _4708___mcc_h20 = _source281.dtor_length;
        DAST._IExpression _4709___mcc_h21 = _source281.dtor_elem;
        DAST._IExpression _4710_expr = _4709___mcc_h21;
        DAST._IExpression _4711_length = _4708___mcc_h20;
        {
          RAST._IExpr _4712_recursiveGen;
          DCOMP._IOwnership _4713___v132;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4714_recIdents;
          RAST._IExpr _out1537;
          DCOMP._IOwnership _out1538;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1539;
          (this).GenExpr(_4710_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1537, out _out1538, out _out1539);
          _4712_recursiveGen = _out1537;
          _4713___v132 = _out1538;
          _4714_recIdents = _out1539;
          RAST._IExpr _4715_lengthGen;
          DCOMP._IOwnership _4716___v133;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4717_lengthIdents;
          RAST._IExpr _out1540;
          DCOMP._IOwnership _out1541;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1542;
          (this).GenExpr(_4711_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1540, out _out1541, out _out1542);
          _4715_lengthGen = _out1540;
          _4716___v133 = _out1541;
          _4717_lengthIdents = _out1542;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_4712_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_4715_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4714_recIdents, _4717_lengthIdents);
          RAST._IExpr _out1543;
          DCOMP._IOwnership _out1544;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1543, out _out1544);
          r = _out1543;
          resultingOwnership = _out1544;
          return ;
        }
      } else if (_source281.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _4718___mcc_h22 = _source281.dtor_elements;
        DAST._IType _4719___mcc_h23 = _source281.dtor_typ;
        DAST._IType _4720_typ = _4719___mcc_h23;
        Dafny.ISequence<DAST._IExpression> _4721_exprs = _4718___mcc_h22;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _4722_genTpe;
          RAST._IType _out1545;
          _out1545 = (this).GenType(_4720_typ, false, false);
          _4722_genTpe = _out1545;
          BigInteger _4723_i;
          _4723_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _4724_args;
          _4724_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_4723_i) < (new BigInteger((_4721_exprs).Count))) {
            RAST._IExpr _4725_recursiveGen;
            DCOMP._IOwnership _4726___v134;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4727_recIdents;
            RAST._IExpr _out1546;
            DCOMP._IOwnership _out1547;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1548;
            (this).GenExpr((_4721_exprs).Select(_4723_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1546, out _out1547, out _out1548);
            _4725_recursiveGen = _out1546;
            _4726___v134 = _out1547;
            _4727_recIdents = _out1548;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4727_recIdents);
            _4724_args = Dafny.Sequence<RAST._IExpr>.Concat(_4724_args, Dafny.Sequence<RAST._IExpr>.FromElements(_4725_recursiveGen));
            _4723_i = (_4723_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_4724_args);
          if ((new BigInteger((_4724_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_4722_genTpe));
          }
          RAST._IExpr _out1549;
          DCOMP._IOwnership _out1550;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1549, out _out1550);
          r = _out1549;
          resultingOwnership = _out1550;
          return ;
        }
      } else if (_source281.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _4728___mcc_h24 = _source281.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _4729_exprs = _4728___mcc_h24;
        {
          Dafny.ISequence<RAST._IExpr> _4730_generatedValues;
          _4730_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4731_i;
          _4731_i = BigInteger.Zero;
          while ((_4731_i) < (new BigInteger((_4729_exprs).Count))) {
            RAST._IExpr _4732_recursiveGen;
            DCOMP._IOwnership _4733___v135;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4734_recIdents;
            RAST._IExpr _out1551;
            DCOMP._IOwnership _out1552;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1553;
            (this).GenExpr((_4729_exprs).Select(_4731_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1551, out _out1552, out _out1553);
            _4732_recursiveGen = _out1551;
            _4733___v135 = _out1552;
            _4734_recIdents = _out1553;
            _4730_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_4730_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_4732_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4734_recIdents);
            _4731_i = (_4731_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_4730_generatedValues);
          RAST._IExpr _out1554;
          DCOMP._IOwnership _out1555;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1554, out _out1555);
          r = _out1554;
          resultingOwnership = _out1555;
          return ;
        }
      } else if (_source281.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _4735___mcc_h25 = _source281.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _4736_exprs = _4735___mcc_h25;
        {
          Dafny.ISequence<RAST._IExpr> _4737_generatedValues;
          _4737_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4738_i;
          _4738_i = BigInteger.Zero;
          while ((_4738_i) < (new BigInteger((_4736_exprs).Count))) {
            RAST._IExpr _4739_recursiveGen;
            DCOMP._IOwnership _4740___v136;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4741_recIdents;
            RAST._IExpr _out1556;
            DCOMP._IOwnership _out1557;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1558;
            (this).GenExpr((_4736_exprs).Select(_4738_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1556, out _out1557, out _out1558);
            _4739_recursiveGen = _out1556;
            _4740___v136 = _out1557;
            _4741_recIdents = _out1558;
            _4737_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_4737_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_4739_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4741_recIdents);
            _4738_i = (_4738_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_4737_generatedValues);
          RAST._IExpr _out1559;
          DCOMP._IOwnership _out1560;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1559, out _out1560);
          r = _out1559;
          resultingOwnership = _out1560;
          return ;
        }
      } else if (_source281.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _4742___mcc_h26 = _source281.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _4743_mapElems = _4742___mcc_h26;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _4744_generatedValues;
          _4744_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4745_i;
          _4745_i = BigInteger.Zero;
          while ((_4745_i) < (new BigInteger((_4743_mapElems).Count))) {
            RAST._IExpr _4746_recursiveGenKey;
            DCOMP._IOwnership _4747___v138;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4748_recIdentsKey;
            RAST._IExpr _out1561;
            DCOMP._IOwnership _out1562;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1563;
            (this).GenExpr(((_4743_mapElems).Select(_4745_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1561, out _out1562, out _out1563);
            _4746_recursiveGenKey = _out1561;
            _4747___v138 = _out1562;
            _4748_recIdentsKey = _out1563;
            RAST._IExpr _4749_recursiveGenValue;
            DCOMP._IOwnership _4750___v139;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4751_recIdentsValue;
            RAST._IExpr _out1564;
            DCOMP._IOwnership _out1565;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1566;
            (this).GenExpr(((_4743_mapElems).Select(_4745_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1564, out _out1565, out _out1566);
            _4749_recursiveGenValue = _out1564;
            _4750___v139 = _out1565;
            _4751_recIdentsValue = _out1566;
            _4744_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_4744_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_4746_recursiveGenKey, _4749_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4748_recIdentsKey), _4751_recIdentsValue);
            _4745_i = (_4745_i) + (BigInteger.One);
          }
          _4745_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _4752_arguments;
          _4752_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_4745_i) < (new BigInteger((_4744_generatedValues).Count))) {
            RAST._IExpr _4753_genKey;
            _4753_genKey = ((_4744_generatedValues).Select(_4745_i)).dtor__0;
            RAST._IExpr _4754_genValue;
            _4754_genValue = ((_4744_generatedValues).Select(_4745_i)).dtor__1;
            _4752_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_4752_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _4753_genKey, _4754_genValue, DAST.Format.BinaryOpFormat.create_NoFormat())));
            _4745_i = (_4745_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_4752_arguments);
          RAST._IExpr _out1567;
          DCOMP._IOwnership _out1568;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1567, out _out1568);
          r = _out1567;
          resultingOwnership = _out1568;
          return ;
        }
      } else if (_source281.is_MapBuilder) {
        DAST._IType _4755___mcc_h27 = _source281.dtor_keyType;
        DAST._IType _4756___mcc_h28 = _source281.dtor_valueType;
        DAST._IType _4757_valueType = _4756___mcc_h28;
        DAST._IType _4758_keyType = _4755___mcc_h27;
        {
          RAST._IType _4759_kType;
          RAST._IType _out1569;
          _out1569 = (this).GenType(_4758_keyType, false, false);
          _4759_kType = _out1569;
          RAST._IType _4760_vType;
          RAST._IType _out1570;
          _out1570 = (this).GenType(_4757_valueType, false, false);
          _4760_vType = _out1570;
          r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4759_kType, _4760_vType))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1571;
          DCOMP._IOwnership _out1572;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1571, out _out1572);
          r = _out1571;
          resultingOwnership = _out1572;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source281.is_SeqUpdate) {
        DAST._IExpression _4761___mcc_h29 = _source281.dtor_expr;
        DAST._IExpression _4762___mcc_h30 = _source281.dtor_indexExpr;
        DAST._IExpression _4763___mcc_h31 = _source281.dtor_value;
        DAST._IExpression _4764_value = _4763___mcc_h31;
        DAST._IExpression _4765_index = _4762___mcc_h30;
        DAST._IExpression _4766_expr = _4761___mcc_h29;
        {
          RAST._IExpr _4767_exprR;
          DCOMP._IOwnership _4768___v140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4769_exprIdents;
          RAST._IExpr _out1573;
          DCOMP._IOwnership _out1574;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1575;
          (this).GenExpr(_4766_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1573, out _out1574, out _out1575);
          _4767_exprR = _out1573;
          _4768___v140 = _out1574;
          _4769_exprIdents = _out1575;
          RAST._IExpr _4770_indexR;
          DCOMP._IOwnership _4771_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4772_indexIdents;
          RAST._IExpr _out1576;
          DCOMP._IOwnership _out1577;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1578;
          (this).GenExpr(_4765_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1576, out _out1577, out _out1578);
          _4770_indexR = _out1576;
          _4771_indexOwnership = _out1577;
          _4772_indexIdents = _out1578;
          RAST._IExpr _4773_valueR;
          DCOMP._IOwnership _4774_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4775_valueIdents;
          RAST._IExpr _out1579;
          DCOMP._IOwnership _out1580;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1581;
          (this).GenExpr(_4764_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1579, out _out1580, out _out1581);
          _4773_valueR = _out1579;
          _4774_valueOwnership = _out1580;
          _4775_valueIdents = _out1581;
          r = ((_4767_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4770_indexR, _4773_valueR));
          RAST._IExpr _out1582;
          DCOMP._IOwnership _out1583;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1582, out _out1583);
          r = _out1582;
          resultingOwnership = _out1583;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4769_exprIdents, _4772_indexIdents), _4775_valueIdents);
          return ;
        }
      } else if (_source281.is_MapUpdate) {
        DAST._IExpression _4776___mcc_h32 = _source281.dtor_expr;
        DAST._IExpression _4777___mcc_h33 = _source281.dtor_indexExpr;
        DAST._IExpression _4778___mcc_h34 = _source281.dtor_value;
        DAST._IExpression _4779_value = _4778___mcc_h34;
        DAST._IExpression _4780_index = _4777___mcc_h33;
        DAST._IExpression _4781_expr = _4776___mcc_h32;
        {
          RAST._IExpr _4782_exprR;
          DCOMP._IOwnership _4783___v141;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4784_exprIdents;
          RAST._IExpr _out1584;
          DCOMP._IOwnership _out1585;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1586;
          (this).GenExpr(_4781_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1584, out _out1585, out _out1586);
          _4782_exprR = _out1584;
          _4783___v141 = _out1585;
          _4784_exprIdents = _out1586;
          RAST._IExpr _4785_indexR;
          DCOMP._IOwnership _4786_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4787_indexIdents;
          RAST._IExpr _out1587;
          DCOMP._IOwnership _out1588;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1589;
          (this).GenExpr(_4780_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1587, out _out1588, out _out1589);
          _4785_indexR = _out1587;
          _4786_indexOwnership = _out1588;
          _4787_indexIdents = _out1589;
          RAST._IExpr _4788_valueR;
          DCOMP._IOwnership _4789_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4790_valueIdents;
          RAST._IExpr _out1590;
          DCOMP._IOwnership _out1591;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1592;
          (this).GenExpr(_4779_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1590, out _out1591, out _out1592);
          _4788_valueR = _out1590;
          _4789_valueOwnership = _out1591;
          _4790_valueIdents = _out1592;
          r = ((_4782_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4785_indexR, _4788_valueR));
          RAST._IExpr _out1593;
          DCOMP._IOwnership _out1594;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1593, out _out1594);
          r = _out1593;
          resultingOwnership = _out1594;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4784_exprIdents, _4787_indexIdents), _4790_valueIdents);
          return ;
        }
      } else if (_source281.is_SetBuilder) {
        DAST._IType _4791___mcc_h35 = _source281.dtor_elemType;
        DAST._IType _4792_elemType = _4791___mcc_h35;
        {
          RAST._IType _4793_eType;
          RAST._IType _out1595;
          _out1595 = (this).GenType(_4792_elemType, false, false);
          _4793_eType = _out1595;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4793_eType))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1596;
          DCOMP._IOwnership _out1597;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1596, out _out1597);
          r = _out1596;
          resultingOwnership = _out1597;
          return ;
        }
      } else if (_source281.is_ToMultiset) {
        DAST._IExpression _4794___mcc_h36 = _source281.dtor_ToMultiset_i_a0;
        DAST._IExpression _4795_expr = _4794___mcc_h36;
        {
          RAST._IExpr _4796_recursiveGen;
          DCOMP._IOwnership _4797___v137;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4798_recIdents;
          RAST._IExpr _out1598;
          DCOMP._IOwnership _out1599;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1600;
          (this).GenExpr(_4795_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1598, out _out1599, out _out1600);
          _4796_recursiveGen = _out1598;
          _4797___v137 = _out1599;
          _4798_recIdents = _out1600;
          r = ((_4796_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _4798_recIdents;
          RAST._IExpr _out1601;
          DCOMP._IOwnership _out1602;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1601, out _out1602);
          r = _out1601;
          resultingOwnership = _out1602;
          return ;
        }
      } else if (_source281.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source282 = selfIdent;
          if (_source282.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out1603;
              DCOMP._IOwnership _out1604;
              DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1603, out _out1604);
              r = _out1603;
              resultingOwnership = _out1604;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4799___mcc_h315 = _source282.dtor_value;
            Dafny.ISequence<Dafny.Rune> _4800_id = _4799___mcc_h315;
            {
              r = RAST.Expr.create_Identifier(_4800_id);
              if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
                r = RAST.__default.Clone(r);
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
                r = RAST.__default.BoxNew(RAST.__default.Clone(r));
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_4800_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_4800_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_4800_id);
            }
          }
          return ;
        }
      } else if (_source281.is_Ite) {
        DAST._IExpression _4801___mcc_h37 = _source281.dtor_cond;
        DAST._IExpression _4802___mcc_h38 = _source281.dtor_thn;
        DAST._IExpression _4803___mcc_h39 = _source281.dtor_els;
        DAST._IExpression _4804_f = _4803___mcc_h39;
        DAST._IExpression _4805_t = _4802___mcc_h38;
        DAST._IExpression _4806_cond = _4801___mcc_h37;
        {
          RAST._IExpr _4807_cond;
          DCOMP._IOwnership _4808___v142;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4809_recIdentsCond;
          RAST._IExpr _out1605;
          DCOMP._IOwnership _out1606;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1607;
          (this).GenExpr(_4806_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1605, out _out1606, out _out1607);
          _4807_cond = _out1605;
          _4808___v142 = _out1606;
          _4809_recIdentsCond = _out1607;
          Dafny.ISequence<Dafny.Rune> _4810_condString;
          _4810_condString = (_4807_cond)._ToString(DCOMP.__default.IND);
          RAST._IExpr _4811___v143;
          DCOMP._IOwnership _4812_tHasToBeOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4813___v144;
          RAST._IExpr _out1608;
          DCOMP._IOwnership _out1609;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1610;
          (this).GenExpr(_4805_t, selfIdent, env, expectedOwnership, out _out1608, out _out1609, out _out1610);
          _4811___v143 = _out1608;
          _4812_tHasToBeOwned = _out1609;
          _4813___v144 = _out1610;
          RAST._IExpr _4814_fExpr;
          DCOMP._IOwnership _4815_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4816_recIdentsF;
          RAST._IExpr _out1611;
          DCOMP._IOwnership _out1612;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1613;
          (this).GenExpr(_4804_f, selfIdent, env, _4812_tHasToBeOwned, out _out1611, out _out1612, out _out1613);
          _4814_fExpr = _out1611;
          _4815_fOwned = _out1612;
          _4816_recIdentsF = _out1613;
          Dafny.ISequence<Dafny.Rune> _4817_fString;
          _4817_fString = (_4814_fExpr)._ToString(DCOMP.__default.IND);
          RAST._IExpr _4818_tExpr;
          DCOMP._IOwnership _4819___v145;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4820_recIdentsT;
          RAST._IExpr _out1614;
          DCOMP._IOwnership _out1615;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1616;
          (this).GenExpr(_4805_t, selfIdent, env, _4815_fOwned, out _out1614, out _out1615, out _out1616);
          _4818_tExpr = _out1614;
          _4819___v145 = _out1615;
          _4820_recIdentsT = _out1616;
          Dafny.ISequence<Dafny.Rune> _4821_tString;
          _4821_tString = (_4818_tExpr)._ToString(DCOMP.__default.IND);
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(if "), _4810_condString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" {\n")), _4821_tString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n} else {\n")), _4817_fString), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n})")));
          RAST._IExpr _out1617;
          DCOMP._IOwnership _out1618;
          DCOMP.COMP.FromOwnership(r, _4815_fOwned, expectedOwnership, out _out1617, out _out1618);
          r = _out1617;
          resultingOwnership = _out1618;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4809_recIdentsCond, _4820_recIdentsT), _4816_recIdentsF);
          return ;
        }
      } else if (_source281.is_UnOp) {
        DAST._IUnaryOp _4822___mcc_h40 = _source281.dtor_unOp;
        DAST._IExpression _4823___mcc_h41 = _source281.dtor_expr;
        DAST.Format._IUnaryOpFormat _4824___mcc_h42 = _source281.dtor_format1;
        DAST._IUnaryOp _source283 = _4822___mcc_h40;
        if (_source283.is_Not) {
          DAST.Format._IUnaryOpFormat _4825_format = _4824___mcc_h42;
          DAST._IExpression _4826_e = _4823___mcc_h41;
          {
            RAST._IExpr _4827_recursiveGen;
            DCOMP._IOwnership _4828___v146;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4829_recIdents;
            RAST._IExpr _out1619;
            DCOMP._IOwnership _out1620;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1621;
            (this).GenExpr(_4826_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1619, out _out1620, out _out1621);
            _4827_recursiveGen = _out1619;
            _4828___v146 = _out1620;
            _4829_recIdents = _out1621;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _4827_recursiveGen, _4825_format);
            RAST._IExpr _out1622;
            DCOMP._IOwnership _out1623;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1622, out _out1623);
            r = _out1622;
            resultingOwnership = _out1623;
            readIdents = _4829_recIdents;
            return ;
          }
        } else if (_source283.is_BitwiseNot) {
          DAST.Format._IUnaryOpFormat _4830_format = _4824___mcc_h42;
          DAST._IExpression _4831_e = _4823___mcc_h41;
          {
            RAST._IExpr _4832_recursiveGen;
            DCOMP._IOwnership _4833___v147;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4834_recIdents;
            RAST._IExpr _out1624;
            DCOMP._IOwnership _out1625;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1626;
            (this).GenExpr(_4831_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1624, out _out1625, out _out1626);
            _4832_recursiveGen = _out1624;
            _4833___v147 = _out1625;
            _4834_recIdents = _out1626;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _4832_recursiveGen, _4830_format);
            RAST._IExpr _out1627;
            DCOMP._IOwnership _out1628;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1627, out _out1628);
            r = _out1627;
            resultingOwnership = _out1628;
            readIdents = _4834_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnaryOpFormat _4835_format = _4824___mcc_h42;
          DAST._IExpression _4836_e = _4823___mcc_h41;
          {
            RAST._IExpr _4837_recursiveGen;
            DCOMP._IOwnership _4838_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4839_recIdents;
            RAST._IExpr _out1629;
            DCOMP._IOwnership _out1630;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1631;
            (this).GenExpr(_4836_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1629, out _out1630, out _out1631);
            _4837_recursiveGen = _out1629;
            _4838_recOwned = _out1630;
            _4839_recIdents = _out1631;
            r = ((_4837_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out1632;
            DCOMP._IOwnership _out1633;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1632, out _out1633);
            r = _out1632;
            resultingOwnership = _out1633;
            readIdents = _4839_recIdents;
            return ;
          }
        }
      } else if (_source281.is_BinOp) {
        DAST._IBinOp _4840___mcc_h43 = _source281.dtor_op;
        DAST._IExpression _4841___mcc_h44 = _source281.dtor_left;
        DAST._IExpression _4842___mcc_h45 = _source281.dtor_right;
        DAST.Format._IBinaryOpFormat _4843___mcc_h46 = _source281.dtor_format2;
        RAST._IExpr _out1634;
        DCOMP._IOwnership _out1635;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1636;
        (this).GenExprBinary(e, selfIdent, env, expectedOwnership, out _out1634, out _out1635, out _out1636);
        r = _out1634;
        resultingOwnership = _out1635;
        readIdents = _out1636;
      } else if (_source281.is_ArrayLen) {
        DAST._IExpression _4844___mcc_h47 = _source281.dtor_expr;
        DAST._IType _4845___mcc_h48 = _source281.dtor_exprType;
        BigInteger _4846___mcc_h49 = _source281.dtor_dim;
        bool _4847___mcc_h50 = _source281.dtor_native;
        bool _4848_native = _4847___mcc_h50;
        BigInteger _4849_dim = _4846___mcc_h49;
        DAST._IType _4850_exprType = _4845___mcc_h48;
        DAST._IExpression _4851_expr = _4844___mcc_h47;
        {
          RAST._IExpr _4852_recursiveGen;
          DCOMP._IOwnership _4853___v152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4854_recIdents;
          RAST._IExpr _out1637;
          DCOMP._IOwnership _out1638;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1639;
          (this).GenExpr(_4851_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1637, out _out1638, out _out1639);
          _4852_recursiveGen = _out1637;
          _4853___v152 = _out1638;
          _4854_recIdents = _out1639;
          RAST._IType _4855_arrayType;
          RAST._IType _out1640;
          _out1640 = (this).GenType(_4850_exprType, false, false);
          _4855_arrayType = _out1640;
          if (!((_4855_arrayType).IsObjectOrPointer())) {
            Dafny.ISequence<Dafny.Rune> _4856_msg;
            _4856_msg = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array length of something not an array but "), (_4855_arrayType)._ToString(DCOMP.__default.IND));
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_4856_msg);
            r = RAST.Expr.create_RawExpr(_4856_msg);
          } else {
            RAST._IType _4857_underlying;
            _4857_underlying = (_4855_arrayType).ObjectOrPointerUnderlying();
            if (((_4849_dim).Sign == 0) && ((_4857_underlying).is_Array)) {
              r = ((((this).read__macro).Apply1(_4852_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            } else {
              if ((_4849_dim).Sign == 0) {
                r = (((((this).read__macro).Apply1(_4852_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("data"))).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              } else {
                r = (((this).read__macro).Apply1(_4852_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Length"), Std.Strings.__default.OfNat(_4849_dim)));
              }
            }
            if (!(_4848_native)) {
              r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(r);
            }
          }
          RAST._IExpr _out1641;
          DCOMP._IOwnership _out1642;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1641, out _out1642);
          r = _out1641;
          resultingOwnership = _out1642;
          readIdents = _4854_recIdents;
          return ;
        }
      } else if (_source281.is_MapKeys) {
        DAST._IExpression _4858___mcc_h51 = _source281.dtor_expr;
        DAST._IExpression _4859_expr = _4858___mcc_h51;
        {
          RAST._IExpr _4860_recursiveGen;
          DCOMP._IOwnership _4861___v153;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4862_recIdents;
          RAST._IExpr _out1643;
          DCOMP._IOwnership _out1644;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1645;
          (this).GenExpr(_4859_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1643, out _out1644, out _out1645);
          _4860_recursiveGen = _out1643;
          _4861___v153 = _out1644;
          _4862_recIdents = _out1645;
          readIdents = _4862_recIdents;
          r = ((_4860_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1646;
          DCOMP._IOwnership _out1647;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1646, out _out1647);
          r = _out1646;
          resultingOwnership = _out1647;
          return ;
        }
      } else if (_source281.is_MapValues) {
        DAST._IExpression _4863___mcc_h52 = _source281.dtor_expr;
        DAST._IExpression _4864_expr = _4863___mcc_h52;
        {
          RAST._IExpr _4865_recursiveGen;
          DCOMP._IOwnership _4866___v154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4867_recIdents;
          RAST._IExpr _out1648;
          DCOMP._IOwnership _out1649;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1650;
          (this).GenExpr(_4864_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1648, out _out1649, out _out1650);
          _4865_recursiveGen = _out1648;
          _4866___v154 = _out1649;
          _4867_recIdents = _out1650;
          readIdents = _4867_recIdents;
          r = ((_4865_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1651;
          DCOMP._IOwnership _out1652;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1651, out _out1652);
          r = _out1651;
          resultingOwnership = _out1652;
          return ;
        }
      } else if (_source281.is_Select) {
        DAST._IExpression _4868___mcc_h53 = _source281.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _4869___mcc_h54 = _source281.dtor_field;
        bool _4870___mcc_h55 = _source281.dtor_isConstant;
        bool _4871___mcc_h56 = _source281.dtor_onDatatype;
        DAST._IType _4872___mcc_h57 = _source281.dtor_fieldType;
        DAST._IExpression _source284 = _4868___mcc_h53;
        if (_source284.is_Literal) {
          DAST._ILiteral _4873___mcc_h58 = _source284.dtor_Literal_i_a0;
          DAST._IType _4874_fieldType = _4872___mcc_h57;
          bool _4875_isDatatype = _4871___mcc_h56;
          bool _4876_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _4877_field = _4869___mcc_h54;
          DAST._IExpression _4878_on = _4868___mcc_h53;
          {
            if (_4875_isDatatype) {
              RAST._IExpr _4879_onExpr;
              DCOMP._IOwnership _4880_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4881_recIdents;
              RAST._IExpr _out1653;
              DCOMP._IOwnership _out1654;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1655;
              (this).GenExpr(_4878_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1653, out _out1654, out _out1655);
              _4879_onExpr = _out1653;
              _4880_onOwned = _out1654;
              _4881_recIdents = _out1655;
              r = ((_4879_onExpr).Sel(DCOMP.__default.escapeName(_4877_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _4882_typ;
              RAST._IType _out1656;
              _out1656 = (this).GenType(_4874_fieldType, false, false);
              _4882_typ = _out1656;
              if (((_4882_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1657;
                DCOMP._IOwnership _out1658;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1657, out _out1658);
                r = _out1657;
                resultingOwnership = _out1658;
              }
              readIdents = _4881_recIdents;
            } else {
              RAST._IExpr _4883_onExpr;
              DCOMP._IOwnership _4884_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4885_recIdents;
              RAST._IExpr _out1659;
              DCOMP._IOwnership _out1660;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1661;
              (this).GenExpr(_4878_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1659, out _out1660, out _out1661);
              _4883_onExpr = _out1659;
              _4884_onOwned = _out1660;
              _4885_recIdents = _out1661;
              r = _4883_onExpr;
              if (!object.Equals(_4883_onExpr, RAST.__default.self)) {
                RAST._IExpr _source285 = _4883_onExpr;
                if (_source285.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _4886___mcc_h316 = _source285.dtor_content;
                } else if (_source285.is_ExprFromType) {
                  RAST._IType _4887___mcc_h318 = _source285.dtor_tpe;
                } else if (_source285.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _4888___mcc_h320 = _source285.dtor_name;
                } else if (_source285.is_Match) {
                  RAST._IExpr _4889___mcc_h322 = _source285.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _4890___mcc_h323 = _source285.dtor_cases;
                } else if (_source285.is_StmtExpr) {
                  RAST._IExpr _4891___mcc_h326 = _source285.dtor_stmt;
                  RAST._IExpr _4892___mcc_h327 = _source285.dtor_rhs;
                } else if (_source285.is_Block) {
                  RAST._IExpr _4893___mcc_h330 = _source285.dtor_underlying;
                } else if (_source285.is_StructBuild) {
                  RAST._IExpr _4894___mcc_h332 = _source285.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _4895___mcc_h333 = _source285.dtor_assignments;
                } else if (_source285.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _4896___mcc_h336 = _source285.dtor_arguments;
                } else if (_source285.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _4897___mcc_h338 = _source285.dtor_op1;
                  RAST._IExpr _4898___mcc_h339 = _source285.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _4899___mcc_h340 = _source285.dtor_format;
                  if (object.Equals(_4897___mcc_h338, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source286 = _4898___mcc_h339;
                    if (_source286.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _4900___mcc_h344 = _source286.dtor_content;
                    } else if (_source286.is_ExprFromType) {
                      RAST._IType _4901___mcc_h346 = _source286.dtor_tpe;
                    } else if (_source286.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _4902___mcc_h348 = _source286.dtor_name;
                      if (object.Equals(_4902___mcc_h348, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source286.is_Match) {
                      RAST._IExpr _4903___mcc_h350 = _source286.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _4904___mcc_h351 = _source286.dtor_cases;
                    } else if (_source286.is_StmtExpr) {
                      RAST._IExpr _4905___mcc_h354 = _source286.dtor_stmt;
                      RAST._IExpr _4906___mcc_h355 = _source286.dtor_rhs;
                    } else if (_source286.is_Block) {
                      RAST._IExpr _4907___mcc_h358 = _source286.dtor_underlying;
                    } else if (_source286.is_StructBuild) {
                      RAST._IExpr _4908___mcc_h360 = _source286.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _4909___mcc_h361 = _source286.dtor_assignments;
                    } else if (_source286.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _4910___mcc_h364 = _source286.dtor_arguments;
                    } else if (_source286.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _4911___mcc_h366 = _source286.dtor_op1;
                      RAST._IExpr _4912___mcc_h367 = _source286.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _4913___mcc_h368 = _source286.dtor_format;
                    } else if (_source286.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _4914___mcc_h372 = _source286.dtor_op2;
                      RAST._IExpr _4915___mcc_h373 = _source286.dtor_left;
                      RAST._IExpr _4916___mcc_h374 = _source286.dtor_right;
                      DAST.Format._IBinaryOpFormat _4917___mcc_h375 = _source286.dtor_format2;
                    } else if (_source286.is_TypeAscription) {
                      RAST._IExpr _4918___mcc_h380 = _source286.dtor_left;
                      RAST._IType _4919___mcc_h381 = _source286.dtor_tpe;
                    } else if (_source286.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _4920___mcc_h384 = _source286.dtor_value;
                    } else if (_source286.is_LiteralBool) {
                      bool _4921___mcc_h386 = _source286.dtor_bvalue;
                    } else if (_source286.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _4922___mcc_h388 = _source286.dtor_value;
                      bool _4923___mcc_h389 = _source286.dtor_binary;
                    } else if (_source286.is_DeclareVar) {
                      RAST._IDeclareType _4924___mcc_h392 = _source286.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _4925___mcc_h393 = _source286.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _4926___mcc_h394 = _source286.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _4927___mcc_h395 = _source286.dtor_optRhs;
                    } else if (_source286.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _4928___mcc_h400 = _source286.dtor_names;
                      RAST._IExpr _4929___mcc_h401 = _source286.dtor_rhs;
                    } else if (_source286.is_IfExpr) {
                      RAST._IExpr _4930___mcc_h404 = _source286.dtor_cond;
                      RAST._IExpr _4931___mcc_h405 = _source286.dtor_thn;
                      RAST._IExpr _4932___mcc_h406 = _source286.dtor_els;
                    } else if (_source286.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _4933___mcc_h410 = _source286.dtor_optCond;
                      RAST._IExpr _4934___mcc_h411 = _source286.dtor_underlying;
                    } else if (_source286.is_For) {
                      Dafny.ISequence<Dafny.Rune> _4935___mcc_h414 = _source286.dtor_name;
                      RAST._IExpr _4936___mcc_h415 = _source286.dtor_range;
                      RAST._IExpr _4937___mcc_h416 = _source286.dtor_body;
                    } else if (_source286.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _4938___mcc_h420 = _source286.dtor_lbl;
                      RAST._IExpr _4939___mcc_h421 = _source286.dtor_underlying;
                    } else if (_source286.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _4940___mcc_h424 = _source286.dtor_optLbl;
                    } else if (_source286.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _4941___mcc_h426 = _source286.dtor_optLbl;
                    } else if (_source286.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _4942___mcc_h428 = _source286.dtor_optExpr;
                    } else if (_source286.is_CallType) {
                      RAST._IExpr _4943___mcc_h430 = _source286.dtor_obj;
                      Dafny.ISequence<RAST._IType> _4944___mcc_h431 = _source286.dtor_typeParameters;
                    } else if (_source286.is_Call) {
                      RAST._IExpr _4945___mcc_h434 = _source286.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _4946___mcc_h435 = _source286.dtor_arguments;
                    } else if (_source286.is_Select) {
                      RAST._IExpr _4947___mcc_h438 = _source286.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _4948___mcc_h439 = _source286.dtor_name;
                    } else if (_source286.is_MemberSelect) {
                      RAST._IExpr _4949___mcc_h442 = _source286.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _4950___mcc_h443 = _source286.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _4951___mcc_h446 = _source286.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _4952___mcc_h447 = _source286.dtor_retType;
                      RAST._IExpr _4953___mcc_h448 = _source286.dtor_body;
                    }
                  } else {
                  }
                } else if (_source285.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _4954___mcc_h452 = _source285.dtor_op2;
                  RAST._IExpr _4955___mcc_h453 = _source285.dtor_left;
                  RAST._IExpr _4956___mcc_h454 = _source285.dtor_right;
                  DAST.Format._IBinaryOpFormat _4957___mcc_h455 = _source285.dtor_format2;
                } else if (_source285.is_TypeAscription) {
                  RAST._IExpr _4958___mcc_h460 = _source285.dtor_left;
                  RAST._IType _4959___mcc_h461 = _source285.dtor_tpe;
                } else if (_source285.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _4960___mcc_h464 = _source285.dtor_value;
                } else if (_source285.is_LiteralBool) {
                  bool _4961___mcc_h466 = _source285.dtor_bvalue;
                } else if (_source285.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _4962___mcc_h468 = _source285.dtor_value;
                  bool _4963___mcc_h469 = _source285.dtor_binary;
                } else if (_source285.is_DeclareVar) {
                  RAST._IDeclareType _4964___mcc_h472 = _source285.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _4965___mcc_h473 = _source285.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _4966___mcc_h474 = _source285.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _4967___mcc_h475 = _source285.dtor_optRhs;
                } else if (_source285.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _4968___mcc_h480 = _source285.dtor_names;
                  RAST._IExpr _4969___mcc_h481 = _source285.dtor_rhs;
                } else if (_source285.is_IfExpr) {
                  RAST._IExpr _4970___mcc_h484 = _source285.dtor_cond;
                  RAST._IExpr _4971___mcc_h485 = _source285.dtor_thn;
                  RAST._IExpr _4972___mcc_h486 = _source285.dtor_els;
                } else if (_source285.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _4973___mcc_h490 = _source285.dtor_optCond;
                  RAST._IExpr _4974___mcc_h491 = _source285.dtor_underlying;
                } else if (_source285.is_For) {
                  Dafny.ISequence<Dafny.Rune> _4975___mcc_h494 = _source285.dtor_name;
                  RAST._IExpr _4976___mcc_h495 = _source285.dtor_range;
                  RAST._IExpr _4977___mcc_h496 = _source285.dtor_body;
                } else if (_source285.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _4978___mcc_h500 = _source285.dtor_lbl;
                  RAST._IExpr _4979___mcc_h501 = _source285.dtor_underlying;
                } else if (_source285.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _4980___mcc_h504 = _source285.dtor_optLbl;
                } else if (_source285.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _4981___mcc_h506 = _source285.dtor_optLbl;
                } else if (_source285.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _4982___mcc_h508 = _source285.dtor_optExpr;
                } else if (_source285.is_CallType) {
                  RAST._IExpr _4983___mcc_h510 = _source285.dtor_obj;
                  Dafny.ISequence<RAST._IType> _4984___mcc_h511 = _source285.dtor_typeParameters;
                } else if (_source285.is_Call) {
                  RAST._IExpr _4985___mcc_h514 = _source285.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _4986___mcc_h515 = _source285.dtor_arguments;
                } else if (_source285.is_Select) {
                  RAST._IExpr _4987___mcc_h518 = _source285.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _4988___mcc_h519 = _source285.dtor_name;
                } else if (_source285.is_MemberSelect) {
                  RAST._IExpr _4989___mcc_h522 = _source285.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _4990___mcc_h523 = _source285.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _4991___mcc_h526 = _source285.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _4992___mcc_h527 = _source285.dtor_retType;
                  RAST._IExpr _4993___mcc_h528 = _source285.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_4877_field));
              if (_4876_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _4994_fromOwnership;
              _4994_fromOwnership = ((_4876_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1662;
              DCOMP._IOwnership _out1663;
              DCOMP.COMP.FromOwnership(r, _4994_fromOwnership, expectedOwnership, out _out1662, out _out1663);
              r = _out1662;
              resultingOwnership = _out1663;
              readIdents = _4885_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _4995___mcc_h60 = _source284.dtor_Ident_i_a0;
          DAST._IType _4996_fieldType = _4872___mcc_h57;
          bool _4997_isDatatype = _4871___mcc_h56;
          bool _4998_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _4999_field = _4869___mcc_h54;
          DAST._IExpression _5000_on = _4868___mcc_h53;
          {
            if (_4997_isDatatype) {
              RAST._IExpr _5001_onExpr;
              DCOMP._IOwnership _5002_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5003_recIdents;
              RAST._IExpr _out1664;
              DCOMP._IOwnership _out1665;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1666;
              (this).GenExpr(_5000_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1664, out _out1665, out _out1666);
              _5001_onExpr = _out1664;
              _5002_onOwned = _out1665;
              _5003_recIdents = _out1666;
              r = ((_5001_onExpr).Sel(DCOMP.__default.escapeName(_4999_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5004_typ;
              RAST._IType _out1667;
              _out1667 = (this).GenType(_4996_fieldType, false, false);
              _5004_typ = _out1667;
              if (((_5004_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1668;
                DCOMP._IOwnership _out1669;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1668, out _out1669);
                r = _out1668;
                resultingOwnership = _out1669;
              }
              readIdents = _5003_recIdents;
            } else {
              RAST._IExpr _5005_onExpr;
              DCOMP._IOwnership _5006_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5007_recIdents;
              RAST._IExpr _out1670;
              DCOMP._IOwnership _out1671;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1672;
              (this).GenExpr(_5000_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1670, out _out1671, out _out1672);
              _5005_onExpr = _out1670;
              _5006_onOwned = _out1671;
              _5007_recIdents = _out1672;
              r = _5005_onExpr;
              if (!object.Equals(_5005_onExpr, RAST.__default.self)) {
                RAST._IExpr _source287 = _5005_onExpr;
                if (_source287.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5008___mcc_h532 = _source287.dtor_content;
                } else if (_source287.is_ExprFromType) {
                  RAST._IType _5009___mcc_h534 = _source287.dtor_tpe;
                } else if (_source287.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5010___mcc_h536 = _source287.dtor_name;
                } else if (_source287.is_Match) {
                  RAST._IExpr _5011___mcc_h538 = _source287.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5012___mcc_h539 = _source287.dtor_cases;
                } else if (_source287.is_StmtExpr) {
                  RAST._IExpr _5013___mcc_h542 = _source287.dtor_stmt;
                  RAST._IExpr _5014___mcc_h543 = _source287.dtor_rhs;
                } else if (_source287.is_Block) {
                  RAST._IExpr _5015___mcc_h546 = _source287.dtor_underlying;
                } else if (_source287.is_StructBuild) {
                  RAST._IExpr _5016___mcc_h548 = _source287.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5017___mcc_h549 = _source287.dtor_assignments;
                } else if (_source287.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5018___mcc_h552 = _source287.dtor_arguments;
                } else if (_source287.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5019___mcc_h554 = _source287.dtor_op1;
                  RAST._IExpr _5020___mcc_h555 = _source287.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5021___mcc_h556 = _source287.dtor_format;
                  if (object.Equals(_5019___mcc_h554, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source288 = _5020___mcc_h555;
                    if (_source288.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5022___mcc_h560 = _source288.dtor_content;
                    } else if (_source288.is_ExprFromType) {
                      RAST._IType _5023___mcc_h562 = _source288.dtor_tpe;
                    } else if (_source288.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5024___mcc_h564 = _source288.dtor_name;
                      if (object.Equals(_5024___mcc_h564, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source288.is_Match) {
                      RAST._IExpr _5025___mcc_h566 = _source288.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5026___mcc_h567 = _source288.dtor_cases;
                    } else if (_source288.is_StmtExpr) {
                      RAST._IExpr _5027___mcc_h570 = _source288.dtor_stmt;
                      RAST._IExpr _5028___mcc_h571 = _source288.dtor_rhs;
                    } else if (_source288.is_Block) {
                      RAST._IExpr _5029___mcc_h574 = _source288.dtor_underlying;
                    } else if (_source288.is_StructBuild) {
                      RAST._IExpr _5030___mcc_h576 = _source288.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5031___mcc_h577 = _source288.dtor_assignments;
                    } else if (_source288.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5032___mcc_h580 = _source288.dtor_arguments;
                    } else if (_source288.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5033___mcc_h582 = _source288.dtor_op1;
                      RAST._IExpr _5034___mcc_h583 = _source288.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5035___mcc_h584 = _source288.dtor_format;
                    } else if (_source288.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5036___mcc_h588 = _source288.dtor_op2;
                      RAST._IExpr _5037___mcc_h589 = _source288.dtor_left;
                      RAST._IExpr _5038___mcc_h590 = _source288.dtor_right;
                      DAST.Format._IBinaryOpFormat _5039___mcc_h591 = _source288.dtor_format2;
                    } else if (_source288.is_TypeAscription) {
                      RAST._IExpr _5040___mcc_h596 = _source288.dtor_left;
                      RAST._IType _5041___mcc_h597 = _source288.dtor_tpe;
                    } else if (_source288.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5042___mcc_h600 = _source288.dtor_value;
                    } else if (_source288.is_LiteralBool) {
                      bool _5043___mcc_h602 = _source288.dtor_bvalue;
                    } else if (_source288.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5044___mcc_h604 = _source288.dtor_value;
                      bool _5045___mcc_h605 = _source288.dtor_binary;
                    } else if (_source288.is_DeclareVar) {
                      RAST._IDeclareType _5046___mcc_h608 = _source288.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5047___mcc_h609 = _source288.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5048___mcc_h610 = _source288.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5049___mcc_h611 = _source288.dtor_optRhs;
                    } else if (_source288.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5050___mcc_h616 = _source288.dtor_names;
                      RAST._IExpr _5051___mcc_h617 = _source288.dtor_rhs;
                    } else if (_source288.is_IfExpr) {
                      RAST._IExpr _5052___mcc_h620 = _source288.dtor_cond;
                      RAST._IExpr _5053___mcc_h621 = _source288.dtor_thn;
                      RAST._IExpr _5054___mcc_h622 = _source288.dtor_els;
                    } else if (_source288.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5055___mcc_h626 = _source288.dtor_optCond;
                      RAST._IExpr _5056___mcc_h627 = _source288.dtor_underlying;
                    } else if (_source288.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5057___mcc_h630 = _source288.dtor_name;
                      RAST._IExpr _5058___mcc_h631 = _source288.dtor_range;
                      RAST._IExpr _5059___mcc_h632 = _source288.dtor_body;
                    } else if (_source288.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5060___mcc_h636 = _source288.dtor_lbl;
                      RAST._IExpr _5061___mcc_h637 = _source288.dtor_underlying;
                    } else if (_source288.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5062___mcc_h640 = _source288.dtor_optLbl;
                    } else if (_source288.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5063___mcc_h642 = _source288.dtor_optLbl;
                    } else if (_source288.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5064___mcc_h644 = _source288.dtor_optExpr;
                    } else if (_source288.is_CallType) {
                      RAST._IExpr _5065___mcc_h646 = _source288.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5066___mcc_h647 = _source288.dtor_typeParameters;
                    } else if (_source288.is_Call) {
                      RAST._IExpr _5067___mcc_h650 = _source288.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5068___mcc_h651 = _source288.dtor_arguments;
                    } else if (_source288.is_Select) {
                      RAST._IExpr _5069___mcc_h654 = _source288.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5070___mcc_h655 = _source288.dtor_name;
                    } else if (_source288.is_MemberSelect) {
                      RAST._IExpr _5071___mcc_h658 = _source288.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5072___mcc_h659 = _source288.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5073___mcc_h662 = _source288.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5074___mcc_h663 = _source288.dtor_retType;
                      RAST._IExpr _5075___mcc_h664 = _source288.dtor_body;
                    }
                  } else {
                  }
                } else if (_source287.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5076___mcc_h668 = _source287.dtor_op2;
                  RAST._IExpr _5077___mcc_h669 = _source287.dtor_left;
                  RAST._IExpr _5078___mcc_h670 = _source287.dtor_right;
                  DAST.Format._IBinaryOpFormat _5079___mcc_h671 = _source287.dtor_format2;
                } else if (_source287.is_TypeAscription) {
                  RAST._IExpr _5080___mcc_h676 = _source287.dtor_left;
                  RAST._IType _5081___mcc_h677 = _source287.dtor_tpe;
                } else if (_source287.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5082___mcc_h680 = _source287.dtor_value;
                } else if (_source287.is_LiteralBool) {
                  bool _5083___mcc_h682 = _source287.dtor_bvalue;
                } else if (_source287.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5084___mcc_h684 = _source287.dtor_value;
                  bool _5085___mcc_h685 = _source287.dtor_binary;
                } else if (_source287.is_DeclareVar) {
                  RAST._IDeclareType _5086___mcc_h688 = _source287.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5087___mcc_h689 = _source287.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5088___mcc_h690 = _source287.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5089___mcc_h691 = _source287.dtor_optRhs;
                } else if (_source287.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5090___mcc_h696 = _source287.dtor_names;
                  RAST._IExpr _5091___mcc_h697 = _source287.dtor_rhs;
                } else if (_source287.is_IfExpr) {
                  RAST._IExpr _5092___mcc_h700 = _source287.dtor_cond;
                  RAST._IExpr _5093___mcc_h701 = _source287.dtor_thn;
                  RAST._IExpr _5094___mcc_h702 = _source287.dtor_els;
                } else if (_source287.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5095___mcc_h706 = _source287.dtor_optCond;
                  RAST._IExpr _5096___mcc_h707 = _source287.dtor_underlying;
                } else if (_source287.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5097___mcc_h710 = _source287.dtor_name;
                  RAST._IExpr _5098___mcc_h711 = _source287.dtor_range;
                  RAST._IExpr _5099___mcc_h712 = _source287.dtor_body;
                } else if (_source287.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5100___mcc_h716 = _source287.dtor_lbl;
                  RAST._IExpr _5101___mcc_h717 = _source287.dtor_underlying;
                } else if (_source287.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5102___mcc_h720 = _source287.dtor_optLbl;
                } else if (_source287.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5103___mcc_h722 = _source287.dtor_optLbl;
                } else if (_source287.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5104___mcc_h724 = _source287.dtor_optExpr;
                } else if (_source287.is_CallType) {
                  RAST._IExpr _5105___mcc_h726 = _source287.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5106___mcc_h727 = _source287.dtor_typeParameters;
                } else if (_source287.is_Call) {
                  RAST._IExpr _5107___mcc_h730 = _source287.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5108___mcc_h731 = _source287.dtor_arguments;
                } else if (_source287.is_Select) {
                  RAST._IExpr _5109___mcc_h734 = _source287.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5110___mcc_h735 = _source287.dtor_name;
                } else if (_source287.is_MemberSelect) {
                  RAST._IExpr _5111___mcc_h738 = _source287.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5112___mcc_h739 = _source287.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5113___mcc_h742 = _source287.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5114___mcc_h743 = _source287.dtor_retType;
                  RAST._IExpr _5115___mcc_h744 = _source287.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_4999_field));
              if (_4998_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5116_fromOwnership;
              _5116_fromOwnership = ((_4998_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1673;
              DCOMP._IOwnership _out1674;
              DCOMP.COMP.FromOwnership(r, _5116_fromOwnership, expectedOwnership, out _out1673, out _out1674);
              r = _out1673;
              resultingOwnership = _out1674;
              readIdents = _5007_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5117___mcc_h62 = _source284.dtor_Companion_i_a0;
          DAST._IType _5118_fieldType = _4872___mcc_h57;
          bool _5119_isDatatype = _4871___mcc_h56;
          bool _5120_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5121_field = _4869___mcc_h54;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5122_c = _5117___mcc_h62;
          {
            RAST._IExpr _5123_onExpr;
            DCOMP._IOwnership _5124_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5125_recIdents;
            RAST._IExpr _out1675;
            DCOMP._IOwnership _out1676;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1677;
            (this).GenExpr(DAST.Expression.create_Companion(_5122_c), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1675, out _out1676, out _out1677);
            _5123_onExpr = _out1675;
            _5124_onOwned = _out1676;
            _5125_recIdents = _out1677;
            r = ((_5123_onExpr).MSel(DCOMP.__default.escapeName(_5121_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out1678;
            DCOMP._IOwnership _out1679;
            DCOMP.COMP.FromOwned(r, expectedOwnership, out _out1678, out _out1679);
            r = _out1678;
            resultingOwnership = _out1679;
            readIdents = _5125_recIdents;
            return ;
          }
        } else if (_source284.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _5126___mcc_h64 = _source284.dtor_Tuple_i_a0;
          DAST._IType _5127_fieldType = _4872___mcc_h57;
          bool _5128_isDatatype = _4871___mcc_h56;
          bool _5129_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5130_field = _4869___mcc_h54;
          DAST._IExpression _5131_on = _4868___mcc_h53;
          {
            if (_5128_isDatatype) {
              RAST._IExpr _5132_onExpr;
              DCOMP._IOwnership _5133_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5134_recIdents;
              RAST._IExpr _out1680;
              DCOMP._IOwnership _out1681;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1682;
              (this).GenExpr(_5131_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1680, out _out1681, out _out1682);
              _5132_onExpr = _out1680;
              _5133_onOwned = _out1681;
              _5134_recIdents = _out1682;
              r = ((_5132_onExpr).Sel(DCOMP.__default.escapeName(_5130_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5135_typ;
              RAST._IType _out1683;
              _out1683 = (this).GenType(_5127_fieldType, false, false);
              _5135_typ = _out1683;
              if (((_5135_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1684;
                DCOMP._IOwnership _out1685;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1684, out _out1685);
                r = _out1684;
                resultingOwnership = _out1685;
              }
              readIdents = _5134_recIdents;
            } else {
              RAST._IExpr _5136_onExpr;
              DCOMP._IOwnership _5137_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5138_recIdents;
              RAST._IExpr _out1686;
              DCOMP._IOwnership _out1687;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1688;
              (this).GenExpr(_5131_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1686, out _out1687, out _out1688);
              _5136_onExpr = _out1686;
              _5137_onOwned = _out1687;
              _5138_recIdents = _out1688;
              r = _5136_onExpr;
              if (!object.Equals(_5136_onExpr, RAST.__default.self)) {
                RAST._IExpr _source289 = _5136_onExpr;
                if (_source289.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5139___mcc_h748 = _source289.dtor_content;
                } else if (_source289.is_ExprFromType) {
                  RAST._IType _5140___mcc_h750 = _source289.dtor_tpe;
                } else if (_source289.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5141___mcc_h752 = _source289.dtor_name;
                } else if (_source289.is_Match) {
                  RAST._IExpr _5142___mcc_h754 = _source289.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5143___mcc_h755 = _source289.dtor_cases;
                } else if (_source289.is_StmtExpr) {
                  RAST._IExpr _5144___mcc_h758 = _source289.dtor_stmt;
                  RAST._IExpr _5145___mcc_h759 = _source289.dtor_rhs;
                } else if (_source289.is_Block) {
                  RAST._IExpr _5146___mcc_h762 = _source289.dtor_underlying;
                } else if (_source289.is_StructBuild) {
                  RAST._IExpr _5147___mcc_h764 = _source289.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5148___mcc_h765 = _source289.dtor_assignments;
                } else if (_source289.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5149___mcc_h768 = _source289.dtor_arguments;
                } else if (_source289.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5150___mcc_h770 = _source289.dtor_op1;
                  RAST._IExpr _5151___mcc_h771 = _source289.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5152___mcc_h772 = _source289.dtor_format;
                  if (object.Equals(_5150___mcc_h770, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source290 = _5151___mcc_h771;
                    if (_source290.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5153___mcc_h776 = _source290.dtor_content;
                    } else if (_source290.is_ExprFromType) {
                      RAST._IType _5154___mcc_h778 = _source290.dtor_tpe;
                    } else if (_source290.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5155___mcc_h780 = _source290.dtor_name;
                      if (object.Equals(_5155___mcc_h780, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source290.is_Match) {
                      RAST._IExpr _5156___mcc_h782 = _source290.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5157___mcc_h783 = _source290.dtor_cases;
                    } else if (_source290.is_StmtExpr) {
                      RAST._IExpr _5158___mcc_h786 = _source290.dtor_stmt;
                      RAST._IExpr _5159___mcc_h787 = _source290.dtor_rhs;
                    } else if (_source290.is_Block) {
                      RAST._IExpr _5160___mcc_h790 = _source290.dtor_underlying;
                    } else if (_source290.is_StructBuild) {
                      RAST._IExpr _5161___mcc_h792 = _source290.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5162___mcc_h793 = _source290.dtor_assignments;
                    } else if (_source290.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5163___mcc_h796 = _source290.dtor_arguments;
                    } else if (_source290.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5164___mcc_h798 = _source290.dtor_op1;
                      RAST._IExpr _5165___mcc_h799 = _source290.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5166___mcc_h800 = _source290.dtor_format;
                    } else if (_source290.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5167___mcc_h804 = _source290.dtor_op2;
                      RAST._IExpr _5168___mcc_h805 = _source290.dtor_left;
                      RAST._IExpr _5169___mcc_h806 = _source290.dtor_right;
                      DAST.Format._IBinaryOpFormat _5170___mcc_h807 = _source290.dtor_format2;
                    } else if (_source290.is_TypeAscription) {
                      RAST._IExpr _5171___mcc_h812 = _source290.dtor_left;
                      RAST._IType _5172___mcc_h813 = _source290.dtor_tpe;
                    } else if (_source290.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5173___mcc_h816 = _source290.dtor_value;
                    } else if (_source290.is_LiteralBool) {
                      bool _5174___mcc_h818 = _source290.dtor_bvalue;
                    } else if (_source290.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5175___mcc_h820 = _source290.dtor_value;
                      bool _5176___mcc_h821 = _source290.dtor_binary;
                    } else if (_source290.is_DeclareVar) {
                      RAST._IDeclareType _5177___mcc_h824 = _source290.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5178___mcc_h825 = _source290.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5179___mcc_h826 = _source290.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5180___mcc_h827 = _source290.dtor_optRhs;
                    } else if (_source290.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5181___mcc_h832 = _source290.dtor_names;
                      RAST._IExpr _5182___mcc_h833 = _source290.dtor_rhs;
                    } else if (_source290.is_IfExpr) {
                      RAST._IExpr _5183___mcc_h836 = _source290.dtor_cond;
                      RAST._IExpr _5184___mcc_h837 = _source290.dtor_thn;
                      RAST._IExpr _5185___mcc_h838 = _source290.dtor_els;
                    } else if (_source290.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5186___mcc_h842 = _source290.dtor_optCond;
                      RAST._IExpr _5187___mcc_h843 = _source290.dtor_underlying;
                    } else if (_source290.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5188___mcc_h846 = _source290.dtor_name;
                      RAST._IExpr _5189___mcc_h847 = _source290.dtor_range;
                      RAST._IExpr _5190___mcc_h848 = _source290.dtor_body;
                    } else if (_source290.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5191___mcc_h852 = _source290.dtor_lbl;
                      RAST._IExpr _5192___mcc_h853 = _source290.dtor_underlying;
                    } else if (_source290.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5193___mcc_h856 = _source290.dtor_optLbl;
                    } else if (_source290.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5194___mcc_h858 = _source290.dtor_optLbl;
                    } else if (_source290.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5195___mcc_h860 = _source290.dtor_optExpr;
                    } else if (_source290.is_CallType) {
                      RAST._IExpr _5196___mcc_h862 = _source290.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5197___mcc_h863 = _source290.dtor_typeParameters;
                    } else if (_source290.is_Call) {
                      RAST._IExpr _5198___mcc_h866 = _source290.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5199___mcc_h867 = _source290.dtor_arguments;
                    } else if (_source290.is_Select) {
                      RAST._IExpr _5200___mcc_h870 = _source290.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5201___mcc_h871 = _source290.dtor_name;
                    } else if (_source290.is_MemberSelect) {
                      RAST._IExpr _5202___mcc_h874 = _source290.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5203___mcc_h875 = _source290.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5204___mcc_h878 = _source290.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5205___mcc_h879 = _source290.dtor_retType;
                      RAST._IExpr _5206___mcc_h880 = _source290.dtor_body;
                    }
                  } else {
                  }
                } else if (_source289.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5207___mcc_h884 = _source289.dtor_op2;
                  RAST._IExpr _5208___mcc_h885 = _source289.dtor_left;
                  RAST._IExpr _5209___mcc_h886 = _source289.dtor_right;
                  DAST.Format._IBinaryOpFormat _5210___mcc_h887 = _source289.dtor_format2;
                } else if (_source289.is_TypeAscription) {
                  RAST._IExpr _5211___mcc_h892 = _source289.dtor_left;
                  RAST._IType _5212___mcc_h893 = _source289.dtor_tpe;
                } else if (_source289.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5213___mcc_h896 = _source289.dtor_value;
                } else if (_source289.is_LiteralBool) {
                  bool _5214___mcc_h898 = _source289.dtor_bvalue;
                } else if (_source289.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5215___mcc_h900 = _source289.dtor_value;
                  bool _5216___mcc_h901 = _source289.dtor_binary;
                } else if (_source289.is_DeclareVar) {
                  RAST._IDeclareType _5217___mcc_h904 = _source289.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5218___mcc_h905 = _source289.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5219___mcc_h906 = _source289.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5220___mcc_h907 = _source289.dtor_optRhs;
                } else if (_source289.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5221___mcc_h912 = _source289.dtor_names;
                  RAST._IExpr _5222___mcc_h913 = _source289.dtor_rhs;
                } else if (_source289.is_IfExpr) {
                  RAST._IExpr _5223___mcc_h916 = _source289.dtor_cond;
                  RAST._IExpr _5224___mcc_h917 = _source289.dtor_thn;
                  RAST._IExpr _5225___mcc_h918 = _source289.dtor_els;
                } else if (_source289.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5226___mcc_h922 = _source289.dtor_optCond;
                  RAST._IExpr _5227___mcc_h923 = _source289.dtor_underlying;
                } else if (_source289.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5228___mcc_h926 = _source289.dtor_name;
                  RAST._IExpr _5229___mcc_h927 = _source289.dtor_range;
                  RAST._IExpr _5230___mcc_h928 = _source289.dtor_body;
                } else if (_source289.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5231___mcc_h932 = _source289.dtor_lbl;
                  RAST._IExpr _5232___mcc_h933 = _source289.dtor_underlying;
                } else if (_source289.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5233___mcc_h936 = _source289.dtor_optLbl;
                } else if (_source289.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5234___mcc_h938 = _source289.dtor_optLbl;
                } else if (_source289.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5235___mcc_h940 = _source289.dtor_optExpr;
                } else if (_source289.is_CallType) {
                  RAST._IExpr _5236___mcc_h942 = _source289.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5237___mcc_h943 = _source289.dtor_typeParameters;
                } else if (_source289.is_Call) {
                  RAST._IExpr _5238___mcc_h946 = _source289.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5239___mcc_h947 = _source289.dtor_arguments;
                } else if (_source289.is_Select) {
                  RAST._IExpr _5240___mcc_h950 = _source289.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5241___mcc_h951 = _source289.dtor_name;
                } else if (_source289.is_MemberSelect) {
                  RAST._IExpr _5242___mcc_h954 = _source289.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5243___mcc_h955 = _source289.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5244___mcc_h958 = _source289.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5245___mcc_h959 = _source289.dtor_retType;
                  RAST._IExpr _5246___mcc_h960 = _source289.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5130_field));
              if (_5129_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5247_fromOwnership;
              _5247_fromOwnership = ((_5129_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1689;
              DCOMP._IOwnership _out1690;
              DCOMP.COMP.FromOwnership(r, _5247_fromOwnership, expectedOwnership, out _out1689, out _out1690);
              r = _out1689;
              resultingOwnership = _out1690;
              readIdents = _5138_recIdents;
            }
            return ;
          }
        } else if (_source284.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5248___mcc_h66 = _source284.dtor_path;
          Dafny.ISequence<DAST._IType> _5249___mcc_h67 = _source284.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _5250___mcc_h68 = _source284.dtor_args;
          DAST._IType _5251_fieldType = _4872___mcc_h57;
          bool _5252_isDatatype = _4871___mcc_h56;
          bool _5253_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5254_field = _4869___mcc_h54;
          DAST._IExpression _5255_on = _4868___mcc_h53;
          {
            if (_5252_isDatatype) {
              RAST._IExpr _5256_onExpr;
              DCOMP._IOwnership _5257_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5258_recIdents;
              RAST._IExpr _out1691;
              DCOMP._IOwnership _out1692;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1693;
              (this).GenExpr(_5255_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1691, out _out1692, out _out1693);
              _5256_onExpr = _out1691;
              _5257_onOwned = _out1692;
              _5258_recIdents = _out1693;
              r = ((_5256_onExpr).Sel(DCOMP.__default.escapeName(_5254_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5259_typ;
              RAST._IType _out1694;
              _out1694 = (this).GenType(_5251_fieldType, false, false);
              _5259_typ = _out1694;
              if (((_5259_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1695;
                DCOMP._IOwnership _out1696;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1695, out _out1696);
                r = _out1695;
                resultingOwnership = _out1696;
              }
              readIdents = _5258_recIdents;
            } else {
              RAST._IExpr _5260_onExpr;
              DCOMP._IOwnership _5261_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5262_recIdents;
              RAST._IExpr _out1697;
              DCOMP._IOwnership _out1698;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1699;
              (this).GenExpr(_5255_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1697, out _out1698, out _out1699);
              _5260_onExpr = _out1697;
              _5261_onOwned = _out1698;
              _5262_recIdents = _out1699;
              r = _5260_onExpr;
              if (!object.Equals(_5260_onExpr, RAST.__default.self)) {
                RAST._IExpr _source291 = _5260_onExpr;
                if (_source291.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5263___mcc_h964 = _source291.dtor_content;
                } else if (_source291.is_ExprFromType) {
                  RAST._IType _5264___mcc_h966 = _source291.dtor_tpe;
                } else if (_source291.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5265___mcc_h968 = _source291.dtor_name;
                } else if (_source291.is_Match) {
                  RAST._IExpr _5266___mcc_h970 = _source291.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5267___mcc_h971 = _source291.dtor_cases;
                } else if (_source291.is_StmtExpr) {
                  RAST._IExpr _5268___mcc_h974 = _source291.dtor_stmt;
                  RAST._IExpr _5269___mcc_h975 = _source291.dtor_rhs;
                } else if (_source291.is_Block) {
                  RAST._IExpr _5270___mcc_h978 = _source291.dtor_underlying;
                } else if (_source291.is_StructBuild) {
                  RAST._IExpr _5271___mcc_h980 = _source291.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5272___mcc_h981 = _source291.dtor_assignments;
                } else if (_source291.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5273___mcc_h984 = _source291.dtor_arguments;
                } else if (_source291.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5274___mcc_h986 = _source291.dtor_op1;
                  RAST._IExpr _5275___mcc_h987 = _source291.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5276___mcc_h988 = _source291.dtor_format;
                  if (object.Equals(_5274___mcc_h986, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source292 = _5275___mcc_h987;
                    if (_source292.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5277___mcc_h992 = _source292.dtor_content;
                    } else if (_source292.is_ExprFromType) {
                      RAST._IType _5278___mcc_h994 = _source292.dtor_tpe;
                    } else if (_source292.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5279___mcc_h996 = _source292.dtor_name;
                      if (object.Equals(_5279___mcc_h996, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source292.is_Match) {
                      RAST._IExpr _5280___mcc_h998 = _source292.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5281___mcc_h999 = _source292.dtor_cases;
                    } else if (_source292.is_StmtExpr) {
                      RAST._IExpr _5282___mcc_h1002 = _source292.dtor_stmt;
                      RAST._IExpr _5283___mcc_h1003 = _source292.dtor_rhs;
                    } else if (_source292.is_Block) {
                      RAST._IExpr _5284___mcc_h1006 = _source292.dtor_underlying;
                    } else if (_source292.is_StructBuild) {
                      RAST._IExpr _5285___mcc_h1008 = _source292.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5286___mcc_h1009 = _source292.dtor_assignments;
                    } else if (_source292.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5287___mcc_h1012 = _source292.dtor_arguments;
                    } else if (_source292.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5288___mcc_h1014 = _source292.dtor_op1;
                      RAST._IExpr _5289___mcc_h1015 = _source292.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5290___mcc_h1016 = _source292.dtor_format;
                    } else if (_source292.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5291___mcc_h1020 = _source292.dtor_op2;
                      RAST._IExpr _5292___mcc_h1021 = _source292.dtor_left;
                      RAST._IExpr _5293___mcc_h1022 = _source292.dtor_right;
                      DAST.Format._IBinaryOpFormat _5294___mcc_h1023 = _source292.dtor_format2;
                    } else if (_source292.is_TypeAscription) {
                      RAST._IExpr _5295___mcc_h1028 = _source292.dtor_left;
                      RAST._IType _5296___mcc_h1029 = _source292.dtor_tpe;
                    } else if (_source292.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5297___mcc_h1032 = _source292.dtor_value;
                    } else if (_source292.is_LiteralBool) {
                      bool _5298___mcc_h1034 = _source292.dtor_bvalue;
                    } else if (_source292.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5299___mcc_h1036 = _source292.dtor_value;
                      bool _5300___mcc_h1037 = _source292.dtor_binary;
                    } else if (_source292.is_DeclareVar) {
                      RAST._IDeclareType _5301___mcc_h1040 = _source292.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5302___mcc_h1041 = _source292.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5303___mcc_h1042 = _source292.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5304___mcc_h1043 = _source292.dtor_optRhs;
                    } else if (_source292.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5305___mcc_h1048 = _source292.dtor_names;
                      RAST._IExpr _5306___mcc_h1049 = _source292.dtor_rhs;
                    } else if (_source292.is_IfExpr) {
                      RAST._IExpr _5307___mcc_h1052 = _source292.dtor_cond;
                      RAST._IExpr _5308___mcc_h1053 = _source292.dtor_thn;
                      RAST._IExpr _5309___mcc_h1054 = _source292.dtor_els;
                    } else if (_source292.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5310___mcc_h1058 = _source292.dtor_optCond;
                      RAST._IExpr _5311___mcc_h1059 = _source292.dtor_underlying;
                    } else if (_source292.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5312___mcc_h1062 = _source292.dtor_name;
                      RAST._IExpr _5313___mcc_h1063 = _source292.dtor_range;
                      RAST._IExpr _5314___mcc_h1064 = _source292.dtor_body;
                    } else if (_source292.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5315___mcc_h1068 = _source292.dtor_lbl;
                      RAST._IExpr _5316___mcc_h1069 = _source292.dtor_underlying;
                    } else if (_source292.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5317___mcc_h1072 = _source292.dtor_optLbl;
                    } else if (_source292.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5318___mcc_h1074 = _source292.dtor_optLbl;
                    } else if (_source292.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5319___mcc_h1076 = _source292.dtor_optExpr;
                    } else if (_source292.is_CallType) {
                      RAST._IExpr _5320___mcc_h1078 = _source292.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5321___mcc_h1079 = _source292.dtor_typeParameters;
                    } else if (_source292.is_Call) {
                      RAST._IExpr _5322___mcc_h1082 = _source292.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5323___mcc_h1083 = _source292.dtor_arguments;
                    } else if (_source292.is_Select) {
                      RAST._IExpr _5324___mcc_h1086 = _source292.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5325___mcc_h1087 = _source292.dtor_name;
                    } else if (_source292.is_MemberSelect) {
                      RAST._IExpr _5326___mcc_h1090 = _source292.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5327___mcc_h1091 = _source292.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5328___mcc_h1094 = _source292.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5329___mcc_h1095 = _source292.dtor_retType;
                      RAST._IExpr _5330___mcc_h1096 = _source292.dtor_body;
                    }
                  } else {
                  }
                } else if (_source291.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5331___mcc_h1100 = _source291.dtor_op2;
                  RAST._IExpr _5332___mcc_h1101 = _source291.dtor_left;
                  RAST._IExpr _5333___mcc_h1102 = _source291.dtor_right;
                  DAST.Format._IBinaryOpFormat _5334___mcc_h1103 = _source291.dtor_format2;
                } else if (_source291.is_TypeAscription) {
                  RAST._IExpr _5335___mcc_h1108 = _source291.dtor_left;
                  RAST._IType _5336___mcc_h1109 = _source291.dtor_tpe;
                } else if (_source291.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5337___mcc_h1112 = _source291.dtor_value;
                } else if (_source291.is_LiteralBool) {
                  bool _5338___mcc_h1114 = _source291.dtor_bvalue;
                } else if (_source291.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5339___mcc_h1116 = _source291.dtor_value;
                  bool _5340___mcc_h1117 = _source291.dtor_binary;
                } else if (_source291.is_DeclareVar) {
                  RAST._IDeclareType _5341___mcc_h1120 = _source291.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5342___mcc_h1121 = _source291.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5343___mcc_h1122 = _source291.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5344___mcc_h1123 = _source291.dtor_optRhs;
                } else if (_source291.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5345___mcc_h1128 = _source291.dtor_names;
                  RAST._IExpr _5346___mcc_h1129 = _source291.dtor_rhs;
                } else if (_source291.is_IfExpr) {
                  RAST._IExpr _5347___mcc_h1132 = _source291.dtor_cond;
                  RAST._IExpr _5348___mcc_h1133 = _source291.dtor_thn;
                  RAST._IExpr _5349___mcc_h1134 = _source291.dtor_els;
                } else if (_source291.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5350___mcc_h1138 = _source291.dtor_optCond;
                  RAST._IExpr _5351___mcc_h1139 = _source291.dtor_underlying;
                } else if (_source291.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5352___mcc_h1142 = _source291.dtor_name;
                  RAST._IExpr _5353___mcc_h1143 = _source291.dtor_range;
                  RAST._IExpr _5354___mcc_h1144 = _source291.dtor_body;
                } else if (_source291.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5355___mcc_h1148 = _source291.dtor_lbl;
                  RAST._IExpr _5356___mcc_h1149 = _source291.dtor_underlying;
                } else if (_source291.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5357___mcc_h1152 = _source291.dtor_optLbl;
                } else if (_source291.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5358___mcc_h1154 = _source291.dtor_optLbl;
                } else if (_source291.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5359___mcc_h1156 = _source291.dtor_optExpr;
                } else if (_source291.is_CallType) {
                  RAST._IExpr _5360___mcc_h1158 = _source291.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5361___mcc_h1159 = _source291.dtor_typeParameters;
                } else if (_source291.is_Call) {
                  RAST._IExpr _5362___mcc_h1162 = _source291.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5363___mcc_h1163 = _source291.dtor_arguments;
                } else if (_source291.is_Select) {
                  RAST._IExpr _5364___mcc_h1166 = _source291.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5365___mcc_h1167 = _source291.dtor_name;
                } else if (_source291.is_MemberSelect) {
                  RAST._IExpr _5366___mcc_h1170 = _source291.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5367___mcc_h1171 = _source291.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5368___mcc_h1174 = _source291.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5369___mcc_h1175 = _source291.dtor_retType;
                  RAST._IExpr _5370___mcc_h1176 = _source291.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5254_field));
              if (_5253_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5371_fromOwnership;
              _5371_fromOwnership = ((_5253_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1700;
              DCOMP._IOwnership _out1701;
              DCOMP.COMP.FromOwnership(r, _5371_fromOwnership, expectedOwnership, out _out1700, out _out1701);
              r = _out1700;
              resultingOwnership = _out1701;
              readIdents = _5262_recIdents;
            }
            return ;
          }
        } else if (_source284.is_NewUninitArray) {
          Dafny.ISequence<DAST._IExpression> _5372___mcc_h72 = _source284.dtor_dims;
          DAST._IType _5373___mcc_h73 = _source284.dtor_typ;
          DAST._IType _5374_fieldType = _4872___mcc_h57;
          bool _5375_isDatatype = _4871___mcc_h56;
          bool _5376_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5377_field = _4869___mcc_h54;
          DAST._IExpression _5378_on = _4868___mcc_h53;
          {
            if (_5375_isDatatype) {
              RAST._IExpr _5379_onExpr;
              DCOMP._IOwnership _5380_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5381_recIdents;
              RAST._IExpr _out1702;
              DCOMP._IOwnership _out1703;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1704;
              (this).GenExpr(_5378_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1702, out _out1703, out _out1704);
              _5379_onExpr = _out1702;
              _5380_onOwned = _out1703;
              _5381_recIdents = _out1704;
              r = ((_5379_onExpr).Sel(DCOMP.__default.escapeName(_5377_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5382_typ;
              RAST._IType _out1705;
              _out1705 = (this).GenType(_5374_fieldType, false, false);
              _5382_typ = _out1705;
              if (((_5382_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1706;
                DCOMP._IOwnership _out1707;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1706, out _out1707);
                r = _out1706;
                resultingOwnership = _out1707;
              }
              readIdents = _5381_recIdents;
            } else {
              RAST._IExpr _5383_onExpr;
              DCOMP._IOwnership _5384_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5385_recIdents;
              RAST._IExpr _out1708;
              DCOMP._IOwnership _out1709;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1710;
              (this).GenExpr(_5378_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1708, out _out1709, out _out1710);
              _5383_onExpr = _out1708;
              _5384_onOwned = _out1709;
              _5385_recIdents = _out1710;
              r = _5383_onExpr;
              if (!object.Equals(_5383_onExpr, RAST.__default.self)) {
                RAST._IExpr _source293 = _5383_onExpr;
                if (_source293.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5386___mcc_h1180 = _source293.dtor_content;
                } else if (_source293.is_ExprFromType) {
                  RAST._IType _5387___mcc_h1182 = _source293.dtor_tpe;
                } else if (_source293.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5388___mcc_h1184 = _source293.dtor_name;
                } else if (_source293.is_Match) {
                  RAST._IExpr _5389___mcc_h1186 = _source293.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5390___mcc_h1187 = _source293.dtor_cases;
                } else if (_source293.is_StmtExpr) {
                  RAST._IExpr _5391___mcc_h1190 = _source293.dtor_stmt;
                  RAST._IExpr _5392___mcc_h1191 = _source293.dtor_rhs;
                } else if (_source293.is_Block) {
                  RAST._IExpr _5393___mcc_h1194 = _source293.dtor_underlying;
                } else if (_source293.is_StructBuild) {
                  RAST._IExpr _5394___mcc_h1196 = _source293.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5395___mcc_h1197 = _source293.dtor_assignments;
                } else if (_source293.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5396___mcc_h1200 = _source293.dtor_arguments;
                } else if (_source293.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5397___mcc_h1202 = _source293.dtor_op1;
                  RAST._IExpr _5398___mcc_h1203 = _source293.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5399___mcc_h1204 = _source293.dtor_format;
                  if (object.Equals(_5397___mcc_h1202, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source294 = _5398___mcc_h1203;
                    if (_source294.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5400___mcc_h1208 = _source294.dtor_content;
                    } else if (_source294.is_ExprFromType) {
                      RAST._IType _5401___mcc_h1210 = _source294.dtor_tpe;
                    } else if (_source294.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5402___mcc_h1212 = _source294.dtor_name;
                      if (object.Equals(_5402___mcc_h1212, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source294.is_Match) {
                      RAST._IExpr _5403___mcc_h1214 = _source294.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5404___mcc_h1215 = _source294.dtor_cases;
                    } else if (_source294.is_StmtExpr) {
                      RAST._IExpr _5405___mcc_h1218 = _source294.dtor_stmt;
                      RAST._IExpr _5406___mcc_h1219 = _source294.dtor_rhs;
                    } else if (_source294.is_Block) {
                      RAST._IExpr _5407___mcc_h1222 = _source294.dtor_underlying;
                    } else if (_source294.is_StructBuild) {
                      RAST._IExpr _5408___mcc_h1224 = _source294.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5409___mcc_h1225 = _source294.dtor_assignments;
                    } else if (_source294.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5410___mcc_h1228 = _source294.dtor_arguments;
                    } else if (_source294.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5411___mcc_h1230 = _source294.dtor_op1;
                      RAST._IExpr _5412___mcc_h1231 = _source294.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5413___mcc_h1232 = _source294.dtor_format;
                    } else if (_source294.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5414___mcc_h1236 = _source294.dtor_op2;
                      RAST._IExpr _5415___mcc_h1237 = _source294.dtor_left;
                      RAST._IExpr _5416___mcc_h1238 = _source294.dtor_right;
                      DAST.Format._IBinaryOpFormat _5417___mcc_h1239 = _source294.dtor_format2;
                    } else if (_source294.is_TypeAscription) {
                      RAST._IExpr _5418___mcc_h1244 = _source294.dtor_left;
                      RAST._IType _5419___mcc_h1245 = _source294.dtor_tpe;
                    } else if (_source294.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5420___mcc_h1248 = _source294.dtor_value;
                    } else if (_source294.is_LiteralBool) {
                      bool _5421___mcc_h1250 = _source294.dtor_bvalue;
                    } else if (_source294.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5422___mcc_h1252 = _source294.dtor_value;
                      bool _5423___mcc_h1253 = _source294.dtor_binary;
                    } else if (_source294.is_DeclareVar) {
                      RAST._IDeclareType _5424___mcc_h1256 = _source294.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5425___mcc_h1257 = _source294.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5426___mcc_h1258 = _source294.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5427___mcc_h1259 = _source294.dtor_optRhs;
                    } else if (_source294.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5428___mcc_h1264 = _source294.dtor_names;
                      RAST._IExpr _5429___mcc_h1265 = _source294.dtor_rhs;
                    } else if (_source294.is_IfExpr) {
                      RAST._IExpr _5430___mcc_h1268 = _source294.dtor_cond;
                      RAST._IExpr _5431___mcc_h1269 = _source294.dtor_thn;
                      RAST._IExpr _5432___mcc_h1270 = _source294.dtor_els;
                    } else if (_source294.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5433___mcc_h1274 = _source294.dtor_optCond;
                      RAST._IExpr _5434___mcc_h1275 = _source294.dtor_underlying;
                    } else if (_source294.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5435___mcc_h1278 = _source294.dtor_name;
                      RAST._IExpr _5436___mcc_h1279 = _source294.dtor_range;
                      RAST._IExpr _5437___mcc_h1280 = _source294.dtor_body;
                    } else if (_source294.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5438___mcc_h1284 = _source294.dtor_lbl;
                      RAST._IExpr _5439___mcc_h1285 = _source294.dtor_underlying;
                    } else if (_source294.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5440___mcc_h1288 = _source294.dtor_optLbl;
                    } else if (_source294.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5441___mcc_h1290 = _source294.dtor_optLbl;
                    } else if (_source294.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5442___mcc_h1292 = _source294.dtor_optExpr;
                    } else if (_source294.is_CallType) {
                      RAST._IExpr _5443___mcc_h1294 = _source294.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5444___mcc_h1295 = _source294.dtor_typeParameters;
                    } else if (_source294.is_Call) {
                      RAST._IExpr _5445___mcc_h1298 = _source294.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5446___mcc_h1299 = _source294.dtor_arguments;
                    } else if (_source294.is_Select) {
                      RAST._IExpr _5447___mcc_h1302 = _source294.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5448___mcc_h1303 = _source294.dtor_name;
                    } else if (_source294.is_MemberSelect) {
                      RAST._IExpr _5449___mcc_h1306 = _source294.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5450___mcc_h1307 = _source294.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5451___mcc_h1310 = _source294.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5452___mcc_h1311 = _source294.dtor_retType;
                      RAST._IExpr _5453___mcc_h1312 = _source294.dtor_body;
                    }
                  } else {
                  }
                } else if (_source293.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5454___mcc_h1316 = _source293.dtor_op2;
                  RAST._IExpr _5455___mcc_h1317 = _source293.dtor_left;
                  RAST._IExpr _5456___mcc_h1318 = _source293.dtor_right;
                  DAST.Format._IBinaryOpFormat _5457___mcc_h1319 = _source293.dtor_format2;
                } else if (_source293.is_TypeAscription) {
                  RAST._IExpr _5458___mcc_h1324 = _source293.dtor_left;
                  RAST._IType _5459___mcc_h1325 = _source293.dtor_tpe;
                } else if (_source293.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5460___mcc_h1328 = _source293.dtor_value;
                } else if (_source293.is_LiteralBool) {
                  bool _5461___mcc_h1330 = _source293.dtor_bvalue;
                } else if (_source293.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5462___mcc_h1332 = _source293.dtor_value;
                  bool _5463___mcc_h1333 = _source293.dtor_binary;
                } else if (_source293.is_DeclareVar) {
                  RAST._IDeclareType _5464___mcc_h1336 = _source293.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5465___mcc_h1337 = _source293.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5466___mcc_h1338 = _source293.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5467___mcc_h1339 = _source293.dtor_optRhs;
                } else if (_source293.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5468___mcc_h1344 = _source293.dtor_names;
                  RAST._IExpr _5469___mcc_h1345 = _source293.dtor_rhs;
                } else if (_source293.is_IfExpr) {
                  RAST._IExpr _5470___mcc_h1348 = _source293.dtor_cond;
                  RAST._IExpr _5471___mcc_h1349 = _source293.dtor_thn;
                  RAST._IExpr _5472___mcc_h1350 = _source293.dtor_els;
                } else if (_source293.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5473___mcc_h1354 = _source293.dtor_optCond;
                  RAST._IExpr _5474___mcc_h1355 = _source293.dtor_underlying;
                } else if (_source293.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5475___mcc_h1358 = _source293.dtor_name;
                  RAST._IExpr _5476___mcc_h1359 = _source293.dtor_range;
                  RAST._IExpr _5477___mcc_h1360 = _source293.dtor_body;
                } else if (_source293.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5478___mcc_h1364 = _source293.dtor_lbl;
                  RAST._IExpr _5479___mcc_h1365 = _source293.dtor_underlying;
                } else if (_source293.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5480___mcc_h1368 = _source293.dtor_optLbl;
                } else if (_source293.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5481___mcc_h1370 = _source293.dtor_optLbl;
                } else if (_source293.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5482___mcc_h1372 = _source293.dtor_optExpr;
                } else if (_source293.is_CallType) {
                  RAST._IExpr _5483___mcc_h1374 = _source293.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5484___mcc_h1375 = _source293.dtor_typeParameters;
                } else if (_source293.is_Call) {
                  RAST._IExpr _5485___mcc_h1378 = _source293.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5486___mcc_h1379 = _source293.dtor_arguments;
                } else if (_source293.is_Select) {
                  RAST._IExpr _5487___mcc_h1382 = _source293.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5488___mcc_h1383 = _source293.dtor_name;
                } else if (_source293.is_MemberSelect) {
                  RAST._IExpr _5489___mcc_h1386 = _source293.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5490___mcc_h1387 = _source293.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5491___mcc_h1390 = _source293.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5492___mcc_h1391 = _source293.dtor_retType;
                  RAST._IExpr _5493___mcc_h1392 = _source293.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5377_field));
              if (_5376_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5494_fromOwnership;
              _5494_fromOwnership = ((_5376_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1711;
              DCOMP._IOwnership _out1712;
              DCOMP.COMP.FromOwnership(r, _5494_fromOwnership, expectedOwnership, out _out1711, out _out1712);
              r = _out1711;
              resultingOwnership = _out1712;
              readIdents = _5385_recIdents;
            }
            return ;
          }
        } else if (_source284.is_ArrayIndexToInt) {
          DAST._IExpression _5495___mcc_h76 = _source284.dtor_value;
          DAST._IType _5496_fieldType = _4872___mcc_h57;
          bool _5497_isDatatype = _4871___mcc_h56;
          bool _5498_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5499_field = _4869___mcc_h54;
          DAST._IExpression _5500_on = _4868___mcc_h53;
          {
            if (_5497_isDatatype) {
              RAST._IExpr _5501_onExpr;
              DCOMP._IOwnership _5502_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5503_recIdents;
              RAST._IExpr _out1713;
              DCOMP._IOwnership _out1714;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1715;
              (this).GenExpr(_5500_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1713, out _out1714, out _out1715);
              _5501_onExpr = _out1713;
              _5502_onOwned = _out1714;
              _5503_recIdents = _out1715;
              r = ((_5501_onExpr).Sel(DCOMP.__default.escapeName(_5499_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5504_typ;
              RAST._IType _out1716;
              _out1716 = (this).GenType(_5496_fieldType, false, false);
              _5504_typ = _out1716;
              if (((_5504_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1717;
                DCOMP._IOwnership _out1718;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1717, out _out1718);
                r = _out1717;
                resultingOwnership = _out1718;
              }
              readIdents = _5503_recIdents;
            } else {
              RAST._IExpr _5505_onExpr;
              DCOMP._IOwnership _5506_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5507_recIdents;
              RAST._IExpr _out1719;
              DCOMP._IOwnership _out1720;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1721;
              (this).GenExpr(_5500_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1719, out _out1720, out _out1721);
              _5505_onExpr = _out1719;
              _5506_onOwned = _out1720;
              _5507_recIdents = _out1721;
              r = _5505_onExpr;
              if (!object.Equals(_5505_onExpr, RAST.__default.self)) {
                RAST._IExpr _source295 = _5505_onExpr;
                if (_source295.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5508___mcc_h1396 = _source295.dtor_content;
                } else if (_source295.is_ExprFromType) {
                  RAST._IType _5509___mcc_h1398 = _source295.dtor_tpe;
                } else if (_source295.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5510___mcc_h1400 = _source295.dtor_name;
                } else if (_source295.is_Match) {
                  RAST._IExpr _5511___mcc_h1402 = _source295.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5512___mcc_h1403 = _source295.dtor_cases;
                } else if (_source295.is_StmtExpr) {
                  RAST._IExpr _5513___mcc_h1406 = _source295.dtor_stmt;
                  RAST._IExpr _5514___mcc_h1407 = _source295.dtor_rhs;
                } else if (_source295.is_Block) {
                  RAST._IExpr _5515___mcc_h1410 = _source295.dtor_underlying;
                } else if (_source295.is_StructBuild) {
                  RAST._IExpr _5516___mcc_h1412 = _source295.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5517___mcc_h1413 = _source295.dtor_assignments;
                } else if (_source295.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5518___mcc_h1416 = _source295.dtor_arguments;
                } else if (_source295.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5519___mcc_h1418 = _source295.dtor_op1;
                  RAST._IExpr _5520___mcc_h1419 = _source295.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5521___mcc_h1420 = _source295.dtor_format;
                  if (object.Equals(_5519___mcc_h1418, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source296 = _5520___mcc_h1419;
                    if (_source296.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5522___mcc_h1424 = _source296.dtor_content;
                    } else if (_source296.is_ExprFromType) {
                      RAST._IType _5523___mcc_h1426 = _source296.dtor_tpe;
                    } else if (_source296.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5524___mcc_h1428 = _source296.dtor_name;
                      if (object.Equals(_5524___mcc_h1428, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source296.is_Match) {
                      RAST._IExpr _5525___mcc_h1430 = _source296.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5526___mcc_h1431 = _source296.dtor_cases;
                    } else if (_source296.is_StmtExpr) {
                      RAST._IExpr _5527___mcc_h1434 = _source296.dtor_stmt;
                      RAST._IExpr _5528___mcc_h1435 = _source296.dtor_rhs;
                    } else if (_source296.is_Block) {
                      RAST._IExpr _5529___mcc_h1438 = _source296.dtor_underlying;
                    } else if (_source296.is_StructBuild) {
                      RAST._IExpr _5530___mcc_h1440 = _source296.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5531___mcc_h1441 = _source296.dtor_assignments;
                    } else if (_source296.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5532___mcc_h1444 = _source296.dtor_arguments;
                    } else if (_source296.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5533___mcc_h1446 = _source296.dtor_op1;
                      RAST._IExpr _5534___mcc_h1447 = _source296.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5535___mcc_h1448 = _source296.dtor_format;
                    } else if (_source296.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5536___mcc_h1452 = _source296.dtor_op2;
                      RAST._IExpr _5537___mcc_h1453 = _source296.dtor_left;
                      RAST._IExpr _5538___mcc_h1454 = _source296.dtor_right;
                      DAST.Format._IBinaryOpFormat _5539___mcc_h1455 = _source296.dtor_format2;
                    } else if (_source296.is_TypeAscription) {
                      RAST._IExpr _5540___mcc_h1460 = _source296.dtor_left;
                      RAST._IType _5541___mcc_h1461 = _source296.dtor_tpe;
                    } else if (_source296.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5542___mcc_h1464 = _source296.dtor_value;
                    } else if (_source296.is_LiteralBool) {
                      bool _5543___mcc_h1466 = _source296.dtor_bvalue;
                    } else if (_source296.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5544___mcc_h1468 = _source296.dtor_value;
                      bool _5545___mcc_h1469 = _source296.dtor_binary;
                    } else if (_source296.is_DeclareVar) {
                      RAST._IDeclareType _5546___mcc_h1472 = _source296.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5547___mcc_h1473 = _source296.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5548___mcc_h1474 = _source296.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5549___mcc_h1475 = _source296.dtor_optRhs;
                    } else if (_source296.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5550___mcc_h1480 = _source296.dtor_names;
                      RAST._IExpr _5551___mcc_h1481 = _source296.dtor_rhs;
                    } else if (_source296.is_IfExpr) {
                      RAST._IExpr _5552___mcc_h1484 = _source296.dtor_cond;
                      RAST._IExpr _5553___mcc_h1485 = _source296.dtor_thn;
                      RAST._IExpr _5554___mcc_h1486 = _source296.dtor_els;
                    } else if (_source296.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5555___mcc_h1490 = _source296.dtor_optCond;
                      RAST._IExpr _5556___mcc_h1491 = _source296.dtor_underlying;
                    } else if (_source296.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5557___mcc_h1494 = _source296.dtor_name;
                      RAST._IExpr _5558___mcc_h1495 = _source296.dtor_range;
                      RAST._IExpr _5559___mcc_h1496 = _source296.dtor_body;
                    } else if (_source296.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5560___mcc_h1500 = _source296.dtor_lbl;
                      RAST._IExpr _5561___mcc_h1501 = _source296.dtor_underlying;
                    } else if (_source296.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5562___mcc_h1504 = _source296.dtor_optLbl;
                    } else if (_source296.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5563___mcc_h1506 = _source296.dtor_optLbl;
                    } else if (_source296.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5564___mcc_h1508 = _source296.dtor_optExpr;
                    } else if (_source296.is_CallType) {
                      RAST._IExpr _5565___mcc_h1510 = _source296.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5566___mcc_h1511 = _source296.dtor_typeParameters;
                    } else if (_source296.is_Call) {
                      RAST._IExpr _5567___mcc_h1514 = _source296.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5568___mcc_h1515 = _source296.dtor_arguments;
                    } else if (_source296.is_Select) {
                      RAST._IExpr _5569___mcc_h1518 = _source296.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5570___mcc_h1519 = _source296.dtor_name;
                    } else if (_source296.is_MemberSelect) {
                      RAST._IExpr _5571___mcc_h1522 = _source296.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5572___mcc_h1523 = _source296.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5573___mcc_h1526 = _source296.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5574___mcc_h1527 = _source296.dtor_retType;
                      RAST._IExpr _5575___mcc_h1528 = _source296.dtor_body;
                    }
                  } else {
                  }
                } else if (_source295.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5576___mcc_h1532 = _source295.dtor_op2;
                  RAST._IExpr _5577___mcc_h1533 = _source295.dtor_left;
                  RAST._IExpr _5578___mcc_h1534 = _source295.dtor_right;
                  DAST.Format._IBinaryOpFormat _5579___mcc_h1535 = _source295.dtor_format2;
                } else if (_source295.is_TypeAscription) {
                  RAST._IExpr _5580___mcc_h1540 = _source295.dtor_left;
                  RAST._IType _5581___mcc_h1541 = _source295.dtor_tpe;
                } else if (_source295.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5582___mcc_h1544 = _source295.dtor_value;
                } else if (_source295.is_LiteralBool) {
                  bool _5583___mcc_h1546 = _source295.dtor_bvalue;
                } else if (_source295.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5584___mcc_h1548 = _source295.dtor_value;
                  bool _5585___mcc_h1549 = _source295.dtor_binary;
                } else if (_source295.is_DeclareVar) {
                  RAST._IDeclareType _5586___mcc_h1552 = _source295.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5587___mcc_h1553 = _source295.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5588___mcc_h1554 = _source295.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5589___mcc_h1555 = _source295.dtor_optRhs;
                } else if (_source295.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5590___mcc_h1560 = _source295.dtor_names;
                  RAST._IExpr _5591___mcc_h1561 = _source295.dtor_rhs;
                } else if (_source295.is_IfExpr) {
                  RAST._IExpr _5592___mcc_h1564 = _source295.dtor_cond;
                  RAST._IExpr _5593___mcc_h1565 = _source295.dtor_thn;
                  RAST._IExpr _5594___mcc_h1566 = _source295.dtor_els;
                } else if (_source295.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5595___mcc_h1570 = _source295.dtor_optCond;
                  RAST._IExpr _5596___mcc_h1571 = _source295.dtor_underlying;
                } else if (_source295.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5597___mcc_h1574 = _source295.dtor_name;
                  RAST._IExpr _5598___mcc_h1575 = _source295.dtor_range;
                  RAST._IExpr _5599___mcc_h1576 = _source295.dtor_body;
                } else if (_source295.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5600___mcc_h1580 = _source295.dtor_lbl;
                  RAST._IExpr _5601___mcc_h1581 = _source295.dtor_underlying;
                } else if (_source295.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5602___mcc_h1584 = _source295.dtor_optLbl;
                } else if (_source295.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5603___mcc_h1586 = _source295.dtor_optLbl;
                } else if (_source295.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5604___mcc_h1588 = _source295.dtor_optExpr;
                } else if (_source295.is_CallType) {
                  RAST._IExpr _5605___mcc_h1590 = _source295.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5606___mcc_h1591 = _source295.dtor_typeParameters;
                } else if (_source295.is_Call) {
                  RAST._IExpr _5607___mcc_h1594 = _source295.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5608___mcc_h1595 = _source295.dtor_arguments;
                } else if (_source295.is_Select) {
                  RAST._IExpr _5609___mcc_h1598 = _source295.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5610___mcc_h1599 = _source295.dtor_name;
                } else if (_source295.is_MemberSelect) {
                  RAST._IExpr _5611___mcc_h1602 = _source295.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5612___mcc_h1603 = _source295.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5613___mcc_h1606 = _source295.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5614___mcc_h1607 = _source295.dtor_retType;
                  RAST._IExpr _5615___mcc_h1608 = _source295.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5499_field));
              if (_5498_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5616_fromOwnership;
              _5616_fromOwnership = ((_5498_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1722;
              DCOMP._IOwnership _out1723;
              DCOMP.COMP.FromOwnership(r, _5616_fromOwnership, expectedOwnership, out _out1722, out _out1723);
              r = _out1722;
              resultingOwnership = _out1723;
              readIdents = _5507_recIdents;
            }
            return ;
          }
        } else if (_source284.is_FinalizeNewArray) {
          DAST._IExpression _5617___mcc_h78 = _source284.dtor_value;
          DAST._IType _5618___mcc_h79 = _source284.dtor_typ;
          DAST._IType _5619_fieldType = _4872___mcc_h57;
          bool _5620_isDatatype = _4871___mcc_h56;
          bool _5621_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5622_field = _4869___mcc_h54;
          DAST._IExpression _5623_on = _4868___mcc_h53;
          {
            if (_5620_isDatatype) {
              RAST._IExpr _5624_onExpr;
              DCOMP._IOwnership _5625_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5626_recIdents;
              RAST._IExpr _out1724;
              DCOMP._IOwnership _out1725;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1726;
              (this).GenExpr(_5623_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1724, out _out1725, out _out1726);
              _5624_onExpr = _out1724;
              _5625_onOwned = _out1725;
              _5626_recIdents = _out1726;
              r = ((_5624_onExpr).Sel(DCOMP.__default.escapeName(_5622_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5627_typ;
              RAST._IType _out1727;
              _out1727 = (this).GenType(_5619_fieldType, false, false);
              _5627_typ = _out1727;
              if (((_5627_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1728;
                DCOMP._IOwnership _out1729;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1728, out _out1729);
                r = _out1728;
                resultingOwnership = _out1729;
              }
              readIdents = _5626_recIdents;
            } else {
              RAST._IExpr _5628_onExpr;
              DCOMP._IOwnership _5629_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5630_recIdents;
              RAST._IExpr _out1730;
              DCOMP._IOwnership _out1731;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1732;
              (this).GenExpr(_5623_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1730, out _out1731, out _out1732);
              _5628_onExpr = _out1730;
              _5629_onOwned = _out1731;
              _5630_recIdents = _out1732;
              r = _5628_onExpr;
              if (!object.Equals(_5628_onExpr, RAST.__default.self)) {
                RAST._IExpr _source297 = _5628_onExpr;
                if (_source297.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5631___mcc_h1612 = _source297.dtor_content;
                } else if (_source297.is_ExprFromType) {
                  RAST._IType _5632___mcc_h1614 = _source297.dtor_tpe;
                } else if (_source297.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5633___mcc_h1616 = _source297.dtor_name;
                } else if (_source297.is_Match) {
                  RAST._IExpr _5634___mcc_h1618 = _source297.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5635___mcc_h1619 = _source297.dtor_cases;
                } else if (_source297.is_StmtExpr) {
                  RAST._IExpr _5636___mcc_h1622 = _source297.dtor_stmt;
                  RAST._IExpr _5637___mcc_h1623 = _source297.dtor_rhs;
                } else if (_source297.is_Block) {
                  RAST._IExpr _5638___mcc_h1626 = _source297.dtor_underlying;
                } else if (_source297.is_StructBuild) {
                  RAST._IExpr _5639___mcc_h1628 = _source297.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5640___mcc_h1629 = _source297.dtor_assignments;
                } else if (_source297.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5641___mcc_h1632 = _source297.dtor_arguments;
                } else if (_source297.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5642___mcc_h1634 = _source297.dtor_op1;
                  RAST._IExpr _5643___mcc_h1635 = _source297.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5644___mcc_h1636 = _source297.dtor_format;
                  if (object.Equals(_5642___mcc_h1634, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source298 = _5643___mcc_h1635;
                    if (_source298.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5645___mcc_h1640 = _source298.dtor_content;
                    } else if (_source298.is_ExprFromType) {
                      RAST._IType _5646___mcc_h1642 = _source298.dtor_tpe;
                    } else if (_source298.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5647___mcc_h1644 = _source298.dtor_name;
                      if (object.Equals(_5647___mcc_h1644, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source298.is_Match) {
                      RAST._IExpr _5648___mcc_h1646 = _source298.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5649___mcc_h1647 = _source298.dtor_cases;
                    } else if (_source298.is_StmtExpr) {
                      RAST._IExpr _5650___mcc_h1650 = _source298.dtor_stmt;
                      RAST._IExpr _5651___mcc_h1651 = _source298.dtor_rhs;
                    } else if (_source298.is_Block) {
                      RAST._IExpr _5652___mcc_h1654 = _source298.dtor_underlying;
                    } else if (_source298.is_StructBuild) {
                      RAST._IExpr _5653___mcc_h1656 = _source298.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5654___mcc_h1657 = _source298.dtor_assignments;
                    } else if (_source298.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5655___mcc_h1660 = _source298.dtor_arguments;
                    } else if (_source298.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5656___mcc_h1662 = _source298.dtor_op1;
                      RAST._IExpr _5657___mcc_h1663 = _source298.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5658___mcc_h1664 = _source298.dtor_format;
                    } else if (_source298.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5659___mcc_h1668 = _source298.dtor_op2;
                      RAST._IExpr _5660___mcc_h1669 = _source298.dtor_left;
                      RAST._IExpr _5661___mcc_h1670 = _source298.dtor_right;
                      DAST.Format._IBinaryOpFormat _5662___mcc_h1671 = _source298.dtor_format2;
                    } else if (_source298.is_TypeAscription) {
                      RAST._IExpr _5663___mcc_h1676 = _source298.dtor_left;
                      RAST._IType _5664___mcc_h1677 = _source298.dtor_tpe;
                    } else if (_source298.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5665___mcc_h1680 = _source298.dtor_value;
                    } else if (_source298.is_LiteralBool) {
                      bool _5666___mcc_h1682 = _source298.dtor_bvalue;
                    } else if (_source298.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5667___mcc_h1684 = _source298.dtor_value;
                      bool _5668___mcc_h1685 = _source298.dtor_binary;
                    } else if (_source298.is_DeclareVar) {
                      RAST._IDeclareType _5669___mcc_h1688 = _source298.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5670___mcc_h1689 = _source298.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5671___mcc_h1690 = _source298.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5672___mcc_h1691 = _source298.dtor_optRhs;
                    } else if (_source298.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5673___mcc_h1696 = _source298.dtor_names;
                      RAST._IExpr _5674___mcc_h1697 = _source298.dtor_rhs;
                    } else if (_source298.is_IfExpr) {
                      RAST._IExpr _5675___mcc_h1700 = _source298.dtor_cond;
                      RAST._IExpr _5676___mcc_h1701 = _source298.dtor_thn;
                      RAST._IExpr _5677___mcc_h1702 = _source298.dtor_els;
                    } else if (_source298.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5678___mcc_h1706 = _source298.dtor_optCond;
                      RAST._IExpr _5679___mcc_h1707 = _source298.dtor_underlying;
                    } else if (_source298.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5680___mcc_h1710 = _source298.dtor_name;
                      RAST._IExpr _5681___mcc_h1711 = _source298.dtor_range;
                      RAST._IExpr _5682___mcc_h1712 = _source298.dtor_body;
                    } else if (_source298.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5683___mcc_h1716 = _source298.dtor_lbl;
                      RAST._IExpr _5684___mcc_h1717 = _source298.dtor_underlying;
                    } else if (_source298.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5685___mcc_h1720 = _source298.dtor_optLbl;
                    } else if (_source298.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5686___mcc_h1722 = _source298.dtor_optLbl;
                    } else if (_source298.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5687___mcc_h1724 = _source298.dtor_optExpr;
                    } else if (_source298.is_CallType) {
                      RAST._IExpr _5688___mcc_h1726 = _source298.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5689___mcc_h1727 = _source298.dtor_typeParameters;
                    } else if (_source298.is_Call) {
                      RAST._IExpr _5690___mcc_h1730 = _source298.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5691___mcc_h1731 = _source298.dtor_arguments;
                    } else if (_source298.is_Select) {
                      RAST._IExpr _5692___mcc_h1734 = _source298.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5693___mcc_h1735 = _source298.dtor_name;
                    } else if (_source298.is_MemberSelect) {
                      RAST._IExpr _5694___mcc_h1738 = _source298.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5695___mcc_h1739 = _source298.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5696___mcc_h1742 = _source298.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5697___mcc_h1743 = _source298.dtor_retType;
                      RAST._IExpr _5698___mcc_h1744 = _source298.dtor_body;
                    }
                  } else {
                  }
                } else if (_source297.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5699___mcc_h1748 = _source297.dtor_op2;
                  RAST._IExpr _5700___mcc_h1749 = _source297.dtor_left;
                  RAST._IExpr _5701___mcc_h1750 = _source297.dtor_right;
                  DAST.Format._IBinaryOpFormat _5702___mcc_h1751 = _source297.dtor_format2;
                } else if (_source297.is_TypeAscription) {
                  RAST._IExpr _5703___mcc_h1756 = _source297.dtor_left;
                  RAST._IType _5704___mcc_h1757 = _source297.dtor_tpe;
                } else if (_source297.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5705___mcc_h1760 = _source297.dtor_value;
                } else if (_source297.is_LiteralBool) {
                  bool _5706___mcc_h1762 = _source297.dtor_bvalue;
                } else if (_source297.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5707___mcc_h1764 = _source297.dtor_value;
                  bool _5708___mcc_h1765 = _source297.dtor_binary;
                } else if (_source297.is_DeclareVar) {
                  RAST._IDeclareType _5709___mcc_h1768 = _source297.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5710___mcc_h1769 = _source297.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5711___mcc_h1770 = _source297.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5712___mcc_h1771 = _source297.dtor_optRhs;
                } else if (_source297.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5713___mcc_h1776 = _source297.dtor_names;
                  RAST._IExpr _5714___mcc_h1777 = _source297.dtor_rhs;
                } else if (_source297.is_IfExpr) {
                  RAST._IExpr _5715___mcc_h1780 = _source297.dtor_cond;
                  RAST._IExpr _5716___mcc_h1781 = _source297.dtor_thn;
                  RAST._IExpr _5717___mcc_h1782 = _source297.dtor_els;
                } else if (_source297.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5718___mcc_h1786 = _source297.dtor_optCond;
                  RAST._IExpr _5719___mcc_h1787 = _source297.dtor_underlying;
                } else if (_source297.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5720___mcc_h1790 = _source297.dtor_name;
                  RAST._IExpr _5721___mcc_h1791 = _source297.dtor_range;
                  RAST._IExpr _5722___mcc_h1792 = _source297.dtor_body;
                } else if (_source297.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5723___mcc_h1796 = _source297.dtor_lbl;
                  RAST._IExpr _5724___mcc_h1797 = _source297.dtor_underlying;
                } else if (_source297.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5725___mcc_h1800 = _source297.dtor_optLbl;
                } else if (_source297.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5726___mcc_h1802 = _source297.dtor_optLbl;
                } else if (_source297.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5727___mcc_h1804 = _source297.dtor_optExpr;
                } else if (_source297.is_CallType) {
                  RAST._IExpr _5728___mcc_h1806 = _source297.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5729___mcc_h1807 = _source297.dtor_typeParameters;
                } else if (_source297.is_Call) {
                  RAST._IExpr _5730___mcc_h1810 = _source297.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5731___mcc_h1811 = _source297.dtor_arguments;
                } else if (_source297.is_Select) {
                  RAST._IExpr _5732___mcc_h1814 = _source297.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5733___mcc_h1815 = _source297.dtor_name;
                } else if (_source297.is_MemberSelect) {
                  RAST._IExpr _5734___mcc_h1818 = _source297.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5735___mcc_h1819 = _source297.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5736___mcc_h1822 = _source297.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5737___mcc_h1823 = _source297.dtor_retType;
                  RAST._IExpr _5738___mcc_h1824 = _source297.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5622_field));
              if (_5621_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5739_fromOwnership;
              _5739_fromOwnership = ((_5621_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1733;
              DCOMP._IOwnership _out1734;
              DCOMP.COMP.FromOwnership(r, _5739_fromOwnership, expectedOwnership, out _out1733, out _out1734);
              r = _out1733;
              resultingOwnership = _out1734;
              readIdents = _5630_recIdents;
            }
            return ;
          }
        } else if (_source284.is_DatatypeValue) {
          DAST._IDatatypeType _5740___mcc_h82 = _source284.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _5741___mcc_h83 = _source284.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _5742___mcc_h84 = _source284.dtor_variant;
          bool _5743___mcc_h85 = _source284.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _5744___mcc_h86 = _source284.dtor_contents;
          DAST._IType _5745_fieldType = _4872___mcc_h57;
          bool _5746_isDatatype = _4871___mcc_h56;
          bool _5747_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5748_field = _4869___mcc_h54;
          DAST._IExpression _5749_on = _4868___mcc_h53;
          {
            if (_5746_isDatatype) {
              RAST._IExpr _5750_onExpr;
              DCOMP._IOwnership _5751_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5752_recIdents;
              RAST._IExpr _out1735;
              DCOMP._IOwnership _out1736;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1737;
              (this).GenExpr(_5749_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1735, out _out1736, out _out1737);
              _5750_onExpr = _out1735;
              _5751_onOwned = _out1736;
              _5752_recIdents = _out1737;
              r = ((_5750_onExpr).Sel(DCOMP.__default.escapeName(_5748_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5753_typ;
              RAST._IType _out1738;
              _out1738 = (this).GenType(_5745_fieldType, false, false);
              _5753_typ = _out1738;
              if (((_5753_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1739;
                DCOMP._IOwnership _out1740;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1739, out _out1740);
                r = _out1739;
                resultingOwnership = _out1740;
              }
              readIdents = _5752_recIdents;
            } else {
              RAST._IExpr _5754_onExpr;
              DCOMP._IOwnership _5755_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5756_recIdents;
              RAST._IExpr _out1741;
              DCOMP._IOwnership _out1742;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1743;
              (this).GenExpr(_5749_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1741, out _out1742, out _out1743);
              _5754_onExpr = _out1741;
              _5755_onOwned = _out1742;
              _5756_recIdents = _out1743;
              r = _5754_onExpr;
              if (!object.Equals(_5754_onExpr, RAST.__default.self)) {
                RAST._IExpr _source299 = _5754_onExpr;
                if (_source299.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5757___mcc_h1828 = _source299.dtor_content;
                } else if (_source299.is_ExprFromType) {
                  RAST._IType _5758___mcc_h1830 = _source299.dtor_tpe;
                } else if (_source299.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5759___mcc_h1832 = _source299.dtor_name;
                } else if (_source299.is_Match) {
                  RAST._IExpr _5760___mcc_h1834 = _source299.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5761___mcc_h1835 = _source299.dtor_cases;
                } else if (_source299.is_StmtExpr) {
                  RAST._IExpr _5762___mcc_h1838 = _source299.dtor_stmt;
                  RAST._IExpr _5763___mcc_h1839 = _source299.dtor_rhs;
                } else if (_source299.is_Block) {
                  RAST._IExpr _5764___mcc_h1842 = _source299.dtor_underlying;
                } else if (_source299.is_StructBuild) {
                  RAST._IExpr _5765___mcc_h1844 = _source299.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5766___mcc_h1845 = _source299.dtor_assignments;
                } else if (_source299.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5767___mcc_h1848 = _source299.dtor_arguments;
                } else if (_source299.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5768___mcc_h1850 = _source299.dtor_op1;
                  RAST._IExpr _5769___mcc_h1851 = _source299.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5770___mcc_h1852 = _source299.dtor_format;
                  if (object.Equals(_5768___mcc_h1850, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source300 = _5769___mcc_h1851;
                    if (_source300.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5771___mcc_h1856 = _source300.dtor_content;
                    } else if (_source300.is_ExprFromType) {
                      RAST._IType _5772___mcc_h1858 = _source300.dtor_tpe;
                    } else if (_source300.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5773___mcc_h1860 = _source300.dtor_name;
                      if (object.Equals(_5773___mcc_h1860, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source300.is_Match) {
                      RAST._IExpr _5774___mcc_h1862 = _source300.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5775___mcc_h1863 = _source300.dtor_cases;
                    } else if (_source300.is_StmtExpr) {
                      RAST._IExpr _5776___mcc_h1866 = _source300.dtor_stmt;
                      RAST._IExpr _5777___mcc_h1867 = _source300.dtor_rhs;
                    } else if (_source300.is_Block) {
                      RAST._IExpr _5778___mcc_h1870 = _source300.dtor_underlying;
                    } else if (_source300.is_StructBuild) {
                      RAST._IExpr _5779___mcc_h1872 = _source300.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5780___mcc_h1873 = _source300.dtor_assignments;
                    } else if (_source300.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5781___mcc_h1876 = _source300.dtor_arguments;
                    } else if (_source300.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5782___mcc_h1878 = _source300.dtor_op1;
                      RAST._IExpr _5783___mcc_h1879 = _source300.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5784___mcc_h1880 = _source300.dtor_format;
                    } else if (_source300.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5785___mcc_h1884 = _source300.dtor_op2;
                      RAST._IExpr _5786___mcc_h1885 = _source300.dtor_left;
                      RAST._IExpr _5787___mcc_h1886 = _source300.dtor_right;
                      DAST.Format._IBinaryOpFormat _5788___mcc_h1887 = _source300.dtor_format2;
                    } else if (_source300.is_TypeAscription) {
                      RAST._IExpr _5789___mcc_h1892 = _source300.dtor_left;
                      RAST._IType _5790___mcc_h1893 = _source300.dtor_tpe;
                    } else if (_source300.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5791___mcc_h1896 = _source300.dtor_value;
                    } else if (_source300.is_LiteralBool) {
                      bool _5792___mcc_h1898 = _source300.dtor_bvalue;
                    } else if (_source300.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5793___mcc_h1900 = _source300.dtor_value;
                      bool _5794___mcc_h1901 = _source300.dtor_binary;
                    } else if (_source300.is_DeclareVar) {
                      RAST._IDeclareType _5795___mcc_h1904 = _source300.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5796___mcc_h1905 = _source300.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5797___mcc_h1906 = _source300.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5798___mcc_h1907 = _source300.dtor_optRhs;
                    } else if (_source300.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5799___mcc_h1912 = _source300.dtor_names;
                      RAST._IExpr _5800___mcc_h1913 = _source300.dtor_rhs;
                    } else if (_source300.is_IfExpr) {
                      RAST._IExpr _5801___mcc_h1916 = _source300.dtor_cond;
                      RAST._IExpr _5802___mcc_h1917 = _source300.dtor_thn;
                      RAST._IExpr _5803___mcc_h1918 = _source300.dtor_els;
                    } else if (_source300.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5804___mcc_h1922 = _source300.dtor_optCond;
                      RAST._IExpr _5805___mcc_h1923 = _source300.dtor_underlying;
                    } else if (_source300.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5806___mcc_h1926 = _source300.dtor_name;
                      RAST._IExpr _5807___mcc_h1927 = _source300.dtor_range;
                      RAST._IExpr _5808___mcc_h1928 = _source300.dtor_body;
                    } else if (_source300.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5809___mcc_h1932 = _source300.dtor_lbl;
                      RAST._IExpr _5810___mcc_h1933 = _source300.dtor_underlying;
                    } else if (_source300.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5811___mcc_h1936 = _source300.dtor_optLbl;
                    } else if (_source300.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5812___mcc_h1938 = _source300.dtor_optLbl;
                    } else if (_source300.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5813___mcc_h1940 = _source300.dtor_optExpr;
                    } else if (_source300.is_CallType) {
                      RAST._IExpr _5814___mcc_h1942 = _source300.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5815___mcc_h1943 = _source300.dtor_typeParameters;
                    } else if (_source300.is_Call) {
                      RAST._IExpr _5816___mcc_h1946 = _source300.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5817___mcc_h1947 = _source300.dtor_arguments;
                    } else if (_source300.is_Select) {
                      RAST._IExpr _5818___mcc_h1950 = _source300.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5819___mcc_h1951 = _source300.dtor_name;
                    } else if (_source300.is_MemberSelect) {
                      RAST._IExpr _5820___mcc_h1954 = _source300.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5821___mcc_h1955 = _source300.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5822___mcc_h1958 = _source300.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5823___mcc_h1959 = _source300.dtor_retType;
                      RAST._IExpr _5824___mcc_h1960 = _source300.dtor_body;
                    }
                  } else {
                  }
                } else if (_source299.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5825___mcc_h1964 = _source299.dtor_op2;
                  RAST._IExpr _5826___mcc_h1965 = _source299.dtor_left;
                  RAST._IExpr _5827___mcc_h1966 = _source299.dtor_right;
                  DAST.Format._IBinaryOpFormat _5828___mcc_h1967 = _source299.dtor_format2;
                } else if (_source299.is_TypeAscription) {
                  RAST._IExpr _5829___mcc_h1972 = _source299.dtor_left;
                  RAST._IType _5830___mcc_h1973 = _source299.dtor_tpe;
                } else if (_source299.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5831___mcc_h1976 = _source299.dtor_value;
                } else if (_source299.is_LiteralBool) {
                  bool _5832___mcc_h1978 = _source299.dtor_bvalue;
                } else if (_source299.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5833___mcc_h1980 = _source299.dtor_value;
                  bool _5834___mcc_h1981 = _source299.dtor_binary;
                } else if (_source299.is_DeclareVar) {
                  RAST._IDeclareType _5835___mcc_h1984 = _source299.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5836___mcc_h1985 = _source299.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5837___mcc_h1986 = _source299.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5838___mcc_h1987 = _source299.dtor_optRhs;
                } else if (_source299.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5839___mcc_h1992 = _source299.dtor_names;
                  RAST._IExpr _5840___mcc_h1993 = _source299.dtor_rhs;
                } else if (_source299.is_IfExpr) {
                  RAST._IExpr _5841___mcc_h1996 = _source299.dtor_cond;
                  RAST._IExpr _5842___mcc_h1997 = _source299.dtor_thn;
                  RAST._IExpr _5843___mcc_h1998 = _source299.dtor_els;
                } else if (_source299.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5844___mcc_h2002 = _source299.dtor_optCond;
                  RAST._IExpr _5845___mcc_h2003 = _source299.dtor_underlying;
                } else if (_source299.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5846___mcc_h2006 = _source299.dtor_name;
                  RAST._IExpr _5847___mcc_h2007 = _source299.dtor_range;
                  RAST._IExpr _5848___mcc_h2008 = _source299.dtor_body;
                } else if (_source299.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5849___mcc_h2012 = _source299.dtor_lbl;
                  RAST._IExpr _5850___mcc_h2013 = _source299.dtor_underlying;
                } else if (_source299.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5851___mcc_h2016 = _source299.dtor_optLbl;
                } else if (_source299.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5852___mcc_h2018 = _source299.dtor_optLbl;
                } else if (_source299.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5853___mcc_h2020 = _source299.dtor_optExpr;
                } else if (_source299.is_CallType) {
                  RAST._IExpr _5854___mcc_h2022 = _source299.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5855___mcc_h2023 = _source299.dtor_typeParameters;
                } else if (_source299.is_Call) {
                  RAST._IExpr _5856___mcc_h2026 = _source299.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5857___mcc_h2027 = _source299.dtor_arguments;
                } else if (_source299.is_Select) {
                  RAST._IExpr _5858___mcc_h2030 = _source299.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5859___mcc_h2031 = _source299.dtor_name;
                } else if (_source299.is_MemberSelect) {
                  RAST._IExpr _5860___mcc_h2034 = _source299.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5861___mcc_h2035 = _source299.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5862___mcc_h2038 = _source299.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5863___mcc_h2039 = _source299.dtor_retType;
                  RAST._IExpr _5864___mcc_h2040 = _source299.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5748_field));
              if (_5747_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5865_fromOwnership;
              _5865_fromOwnership = ((_5747_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1744;
              DCOMP._IOwnership _out1745;
              DCOMP.COMP.FromOwnership(r, _5865_fromOwnership, expectedOwnership, out _out1744, out _out1745);
              r = _out1744;
              resultingOwnership = _out1745;
              readIdents = _5756_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Convert) {
          DAST._IExpression _5866___mcc_h92 = _source284.dtor_value;
          DAST._IType _5867___mcc_h93 = _source284.dtor_from;
          DAST._IType _5868___mcc_h94 = _source284.dtor_typ;
          DAST._IType _5869_fieldType = _4872___mcc_h57;
          bool _5870_isDatatype = _4871___mcc_h56;
          bool _5871_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5872_field = _4869___mcc_h54;
          DAST._IExpression _5873_on = _4868___mcc_h53;
          {
            if (_5870_isDatatype) {
              RAST._IExpr _5874_onExpr;
              DCOMP._IOwnership _5875_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5876_recIdents;
              RAST._IExpr _out1746;
              DCOMP._IOwnership _out1747;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1748;
              (this).GenExpr(_5873_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1746, out _out1747, out _out1748);
              _5874_onExpr = _out1746;
              _5875_onOwned = _out1747;
              _5876_recIdents = _out1748;
              r = ((_5874_onExpr).Sel(DCOMP.__default.escapeName(_5872_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5877_typ;
              RAST._IType _out1749;
              _out1749 = (this).GenType(_5869_fieldType, false, false);
              _5877_typ = _out1749;
              if (((_5877_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1750;
                DCOMP._IOwnership _out1751;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1750, out _out1751);
                r = _out1750;
                resultingOwnership = _out1751;
              }
              readIdents = _5876_recIdents;
            } else {
              RAST._IExpr _5878_onExpr;
              DCOMP._IOwnership _5879_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5880_recIdents;
              RAST._IExpr _out1752;
              DCOMP._IOwnership _out1753;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1754;
              (this).GenExpr(_5873_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1752, out _out1753, out _out1754);
              _5878_onExpr = _out1752;
              _5879_onOwned = _out1753;
              _5880_recIdents = _out1754;
              r = _5878_onExpr;
              if (!object.Equals(_5878_onExpr, RAST.__default.self)) {
                RAST._IExpr _source301 = _5878_onExpr;
                if (_source301.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5881___mcc_h2044 = _source301.dtor_content;
                } else if (_source301.is_ExprFromType) {
                  RAST._IType _5882___mcc_h2046 = _source301.dtor_tpe;
                } else if (_source301.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5883___mcc_h2048 = _source301.dtor_name;
                } else if (_source301.is_Match) {
                  RAST._IExpr _5884___mcc_h2050 = _source301.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5885___mcc_h2051 = _source301.dtor_cases;
                } else if (_source301.is_StmtExpr) {
                  RAST._IExpr _5886___mcc_h2054 = _source301.dtor_stmt;
                  RAST._IExpr _5887___mcc_h2055 = _source301.dtor_rhs;
                } else if (_source301.is_Block) {
                  RAST._IExpr _5888___mcc_h2058 = _source301.dtor_underlying;
                } else if (_source301.is_StructBuild) {
                  RAST._IExpr _5889___mcc_h2060 = _source301.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5890___mcc_h2061 = _source301.dtor_assignments;
                } else if (_source301.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5891___mcc_h2064 = _source301.dtor_arguments;
                } else if (_source301.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5892___mcc_h2066 = _source301.dtor_op1;
                  RAST._IExpr _5893___mcc_h2067 = _source301.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5894___mcc_h2068 = _source301.dtor_format;
                  if (object.Equals(_5892___mcc_h2066, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source302 = _5893___mcc_h2067;
                    if (_source302.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5895___mcc_h2072 = _source302.dtor_content;
                    } else if (_source302.is_ExprFromType) {
                      RAST._IType _5896___mcc_h2074 = _source302.dtor_tpe;
                    } else if (_source302.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5897___mcc_h2076 = _source302.dtor_name;
                      if (object.Equals(_5897___mcc_h2076, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source302.is_Match) {
                      RAST._IExpr _5898___mcc_h2078 = _source302.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5899___mcc_h2079 = _source302.dtor_cases;
                    } else if (_source302.is_StmtExpr) {
                      RAST._IExpr _5900___mcc_h2082 = _source302.dtor_stmt;
                      RAST._IExpr _5901___mcc_h2083 = _source302.dtor_rhs;
                    } else if (_source302.is_Block) {
                      RAST._IExpr _5902___mcc_h2086 = _source302.dtor_underlying;
                    } else if (_source302.is_StructBuild) {
                      RAST._IExpr _5903___mcc_h2088 = _source302.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5904___mcc_h2089 = _source302.dtor_assignments;
                    } else if (_source302.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5905___mcc_h2092 = _source302.dtor_arguments;
                    } else if (_source302.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5906___mcc_h2094 = _source302.dtor_op1;
                      RAST._IExpr _5907___mcc_h2095 = _source302.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5908___mcc_h2096 = _source302.dtor_format;
                    } else if (_source302.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5909___mcc_h2100 = _source302.dtor_op2;
                      RAST._IExpr _5910___mcc_h2101 = _source302.dtor_left;
                      RAST._IExpr _5911___mcc_h2102 = _source302.dtor_right;
                      DAST.Format._IBinaryOpFormat _5912___mcc_h2103 = _source302.dtor_format2;
                    } else if (_source302.is_TypeAscription) {
                      RAST._IExpr _5913___mcc_h2108 = _source302.dtor_left;
                      RAST._IType _5914___mcc_h2109 = _source302.dtor_tpe;
                    } else if (_source302.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5915___mcc_h2112 = _source302.dtor_value;
                    } else if (_source302.is_LiteralBool) {
                      bool _5916___mcc_h2114 = _source302.dtor_bvalue;
                    } else if (_source302.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5917___mcc_h2116 = _source302.dtor_value;
                      bool _5918___mcc_h2117 = _source302.dtor_binary;
                    } else if (_source302.is_DeclareVar) {
                      RAST._IDeclareType _5919___mcc_h2120 = _source302.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5920___mcc_h2121 = _source302.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5921___mcc_h2122 = _source302.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5922___mcc_h2123 = _source302.dtor_optRhs;
                    } else if (_source302.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5923___mcc_h2128 = _source302.dtor_names;
                      RAST._IExpr _5924___mcc_h2129 = _source302.dtor_rhs;
                    } else if (_source302.is_IfExpr) {
                      RAST._IExpr _5925___mcc_h2132 = _source302.dtor_cond;
                      RAST._IExpr _5926___mcc_h2133 = _source302.dtor_thn;
                      RAST._IExpr _5927___mcc_h2134 = _source302.dtor_els;
                    } else if (_source302.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5928___mcc_h2138 = _source302.dtor_optCond;
                      RAST._IExpr _5929___mcc_h2139 = _source302.dtor_underlying;
                    } else if (_source302.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5930___mcc_h2142 = _source302.dtor_name;
                      RAST._IExpr _5931___mcc_h2143 = _source302.dtor_range;
                      RAST._IExpr _5932___mcc_h2144 = _source302.dtor_body;
                    } else if (_source302.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5933___mcc_h2148 = _source302.dtor_lbl;
                      RAST._IExpr _5934___mcc_h2149 = _source302.dtor_underlying;
                    } else if (_source302.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5935___mcc_h2152 = _source302.dtor_optLbl;
                    } else if (_source302.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5936___mcc_h2154 = _source302.dtor_optLbl;
                    } else if (_source302.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5937___mcc_h2156 = _source302.dtor_optExpr;
                    } else if (_source302.is_CallType) {
                      RAST._IExpr _5938___mcc_h2158 = _source302.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5939___mcc_h2159 = _source302.dtor_typeParameters;
                    } else if (_source302.is_Call) {
                      RAST._IExpr _5940___mcc_h2162 = _source302.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5941___mcc_h2163 = _source302.dtor_arguments;
                    } else if (_source302.is_Select) {
                      RAST._IExpr _5942___mcc_h2166 = _source302.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5943___mcc_h2167 = _source302.dtor_name;
                    } else if (_source302.is_MemberSelect) {
                      RAST._IExpr _5944___mcc_h2170 = _source302.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5945___mcc_h2171 = _source302.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5946___mcc_h2174 = _source302.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5947___mcc_h2175 = _source302.dtor_retType;
                      RAST._IExpr _5948___mcc_h2176 = _source302.dtor_body;
                    }
                  } else {
                  }
                } else if (_source301.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5949___mcc_h2180 = _source301.dtor_op2;
                  RAST._IExpr _5950___mcc_h2181 = _source301.dtor_left;
                  RAST._IExpr _5951___mcc_h2182 = _source301.dtor_right;
                  DAST.Format._IBinaryOpFormat _5952___mcc_h2183 = _source301.dtor_format2;
                } else if (_source301.is_TypeAscription) {
                  RAST._IExpr _5953___mcc_h2188 = _source301.dtor_left;
                  RAST._IType _5954___mcc_h2189 = _source301.dtor_tpe;
                } else if (_source301.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5955___mcc_h2192 = _source301.dtor_value;
                } else if (_source301.is_LiteralBool) {
                  bool _5956___mcc_h2194 = _source301.dtor_bvalue;
                } else if (_source301.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5957___mcc_h2196 = _source301.dtor_value;
                  bool _5958___mcc_h2197 = _source301.dtor_binary;
                } else if (_source301.is_DeclareVar) {
                  RAST._IDeclareType _5959___mcc_h2200 = _source301.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5960___mcc_h2201 = _source301.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5961___mcc_h2202 = _source301.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5962___mcc_h2203 = _source301.dtor_optRhs;
                } else if (_source301.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5963___mcc_h2208 = _source301.dtor_names;
                  RAST._IExpr _5964___mcc_h2209 = _source301.dtor_rhs;
                } else if (_source301.is_IfExpr) {
                  RAST._IExpr _5965___mcc_h2212 = _source301.dtor_cond;
                  RAST._IExpr _5966___mcc_h2213 = _source301.dtor_thn;
                  RAST._IExpr _5967___mcc_h2214 = _source301.dtor_els;
                } else if (_source301.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5968___mcc_h2218 = _source301.dtor_optCond;
                  RAST._IExpr _5969___mcc_h2219 = _source301.dtor_underlying;
                } else if (_source301.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5970___mcc_h2222 = _source301.dtor_name;
                  RAST._IExpr _5971___mcc_h2223 = _source301.dtor_range;
                  RAST._IExpr _5972___mcc_h2224 = _source301.dtor_body;
                } else if (_source301.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5973___mcc_h2228 = _source301.dtor_lbl;
                  RAST._IExpr _5974___mcc_h2229 = _source301.dtor_underlying;
                } else if (_source301.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5975___mcc_h2232 = _source301.dtor_optLbl;
                } else if (_source301.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5976___mcc_h2234 = _source301.dtor_optLbl;
                } else if (_source301.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5977___mcc_h2236 = _source301.dtor_optExpr;
                } else if (_source301.is_CallType) {
                  RAST._IExpr _5978___mcc_h2238 = _source301.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5979___mcc_h2239 = _source301.dtor_typeParameters;
                } else if (_source301.is_Call) {
                  RAST._IExpr _5980___mcc_h2242 = _source301.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5981___mcc_h2243 = _source301.dtor_arguments;
                } else if (_source301.is_Select) {
                  RAST._IExpr _5982___mcc_h2246 = _source301.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5983___mcc_h2247 = _source301.dtor_name;
                } else if (_source301.is_MemberSelect) {
                  RAST._IExpr _5984___mcc_h2250 = _source301.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5985___mcc_h2251 = _source301.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5986___mcc_h2254 = _source301.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5987___mcc_h2255 = _source301.dtor_retType;
                  RAST._IExpr _5988___mcc_h2256 = _source301.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5872_field));
              if (_5871_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _5989_fromOwnership;
              _5989_fromOwnership = ((_5871_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1755;
              DCOMP._IOwnership _out1756;
              DCOMP.COMP.FromOwnership(r, _5989_fromOwnership, expectedOwnership, out _out1755, out _out1756);
              r = _out1755;
              resultingOwnership = _out1756;
              readIdents = _5880_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SeqConstruct) {
          DAST._IExpression _5990___mcc_h98 = _source284.dtor_length;
          DAST._IExpression _5991___mcc_h99 = _source284.dtor_elem;
          DAST._IType _5992_fieldType = _4872___mcc_h57;
          bool _5993_isDatatype = _4871___mcc_h56;
          bool _5994_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _5995_field = _4869___mcc_h54;
          DAST._IExpression _5996_on = _4868___mcc_h53;
          {
            if (_5993_isDatatype) {
              RAST._IExpr _5997_onExpr;
              DCOMP._IOwnership _5998_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5999_recIdents;
              RAST._IExpr _out1757;
              DCOMP._IOwnership _out1758;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1759;
              (this).GenExpr(_5996_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1757, out _out1758, out _out1759);
              _5997_onExpr = _out1757;
              _5998_onOwned = _out1758;
              _5999_recIdents = _out1759;
              r = ((_5997_onExpr).Sel(DCOMP.__default.escapeName(_5995_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6000_typ;
              RAST._IType _out1760;
              _out1760 = (this).GenType(_5992_fieldType, false, false);
              _6000_typ = _out1760;
              if (((_6000_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1761;
                DCOMP._IOwnership _out1762;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1761, out _out1762);
                r = _out1761;
                resultingOwnership = _out1762;
              }
              readIdents = _5999_recIdents;
            } else {
              RAST._IExpr _6001_onExpr;
              DCOMP._IOwnership _6002_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6003_recIdents;
              RAST._IExpr _out1763;
              DCOMP._IOwnership _out1764;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1765;
              (this).GenExpr(_5996_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1763, out _out1764, out _out1765);
              _6001_onExpr = _out1763;
              _6002_onOwned = _out1764;
              _6003_recIdents = _out1765;
              r = _6001_onExpr;
              if (!object.Equals(_6001_onExpr, RAST.__default.self)) {
                RAST._IExpr _source303 = _6001_onExpr;
                if (_source303.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6004___mcc_h2260 = _source303.dtor_content;
                } else if (_source303.is_ExprFromType) {
                  RAST._IType _6005___mcc_h2262 = _source303.dtor_tpe;
                } else if (_source303.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6006___mcc_h2264 = _source303.dtor_name;
                } else if (_source303.is_Match) {
                  RAST._IExpr _6007___mcc_h2266 = _source303.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6008___mcc_h2267 = _source303.dtor_cases;
                } else if (_source303.is_StmtExpr) {
                  RAST._IExpr _6009___mcc_h2270 = _source303.dtor_stmt;
                  RAST._IExpr _6010___mcc_h2271 = _source303.dtor_rhs;
                } else if (_source303.is_Block) {
                  RAST._IExpr _6011___mcc_h2274 = _source303.dtor_underlying;
                } else if (_source303.is_StructBuild) {
                  RAST._IExpr _6012___mcc_h2276 = _source303.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6013___mcc_h2277 = _source303.dtor_assignments;
                } else if (_source303.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6014___mcc_h2280 = _source303.dtor_arguments;
                } else if (_source303.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6015___mcc_h2282 = _source303.dtor_op1;
                  RAST._IExpr _6016___mcc_h2283 = _source303.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6017___mcc_h2284 = _source303.dtor_format;
                  if (object.Equals(_6015___mcc_h2282, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source304 = _6016___mcc_h2283;
                    if (_source304.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6018___mcc_h2288 = _source304.dtor_content;
                    } else if (_source304.is_ExprFromType) {
                      RAST._IType _6019___mcc_h2290 = _source304.dtor_tpe;
                    } else if (_source304.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6020___mcc_h2292 = _source304.dtor_name;
                      if (object.Equals(_6020___mcc_h2292, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source304.is_Match) {
                      RAST._IExpr _6021___mcc_h2294 = _source304.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6022___mcc_h2295 = _source304.dtor_cases;
                    } else if (_source304.is_StmtExpr) {
                      RAST._IExpr _6023___mcc_h2298 = _source304.dtor_stmt;
                      RAST._IExpr _6024___mcc_h2299 = _source304.dtor_rhs;
                    } else if (_source304.is_Block) {
                      RAST._IExpr _6025___mcc_h2302 = _source304.dtor_underlying;
                    } else if (_source304.is_StructBuild) {
                      RAST._IExpr _6026___mcc_h2304 = _source304.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6027___mcc_h2305 = _source304.dtor_assignments;
                    } else if (_source304.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6028___mcc_h2308 = _source304.dtor_arguments;
                    } else if (_source304.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6029___mcc_h2310 = _source304.dtor_op1;
                      RAST._IExpr _6030___mcc_h2311 = _source304.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6031___mcc_h2312 = _source304.dtor_format;
                    } else if (_source304.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6032___mcc_h2316 = _source304.dtor_op2;
                      RAST._IExpr _6033___mcc_h2317 = _source304.dtor_left;
                      RAST._IExpr _6034___mcc_h2318 = _source304.dtor_right;
                      DAST.Format._IBinaryOpFormat _6035___mcc_h2319 = _source304.dtor_format2;
                    } else if (_source304.is_TypeAscription) {
                      RAST._IExpr _6036___mcc_h2324 = _source304.dtor_left;
                      RAST._IType _6037___mcc_h2325 = _source304.dtor_tpe;
                    } else if (_source304.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6038___mcc_h2328 = _source304.dtor_value;
                    } else if (_source304.is_LiteralBool) {
                      bool _6039___mcc_h2330 = _source304.dtor_bvalue;
                    } else if (_source304.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6040___mcc_h2332 = _source304.dtor_value;
                      bool _6041___mcc_h2333 = _source304.dtor_binary;
                    } else if (_source304.is_DeclareVar) {
                      RAST._IDeclareType _6042___mcc_h2336 = _source304.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6043___mcc_h2337 = _source304.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6044___mcc_h2338 = _source304.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6045___mcc_h2339 = _source304.dtor_optRhs;
                    } else if (_source304.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6046___mcc_h2344 = _source304.dtor_names;
                      RAST._IExpr _6047___mcc_h2345 = _source304.dtor_rhs;
                    } else if (_source304.is_IfExpr) {
                      RAST._IExpr _6048___mcc_h2348 = _source304.dtor_cond;
                      RAST._IExpr _6049___mcc_h2349 = _source304.dtor_thn;
                      RAST._IExpr _6050___mcc_h2350 = _source304.dtor_els;
                    } else if (_source304.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6051___mcc_h2354 = _source304.dtor_optCond;
                      RAST._IExpr _6052___mcc_h2355 = _source304.dtor_underlying;
                    } else if (_source304.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6053___mcc_h2358 = _source304.dtor_name;
                      RAST._IExpr _6054___mcc_h2359 = _source304.dtor_range;
                      RAST._IExpr _6055___mcc_h2360 = _source304.dtor_body;
                    } else if (_source304.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6056___mcc_h2364 = _source304.dtor_lbl;
                      RAST._IExpr _6057___mcc_h2365 = _source304.dtor_underlying;
                    } else if (_source304.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6058___mcc_h2368 = _source304.dtor_optLbl;
                    } else if (_source304.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6059___mcc_h2370 = _source304.dtor_optLbl;
                    } else if (_source304.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6060___mcc_h2372 = _source304.dtor_optExpr;
                    } else if (_source304.is_CallType) {
                      RAST._IExpr _6061___mcc_h2374 = _source304.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6062___mcc_h2375 = _source304.dtor_typeParameters;
                    } else if (_source304.is_Call) {
                      RAST._IExpr _6063___mcc_h2378 = _source304.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6064___mcc_h2379 = _source304.dtor_arguments;
                    } else if (_source304.is_Select) {
                      RAST._IExpr _6065___mcc_h2382 = _source304.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6066___mcc_h2383 = _source304.dtor_name;
                    } else if (_source304.is_MemberSelect) {
                      RAST._IExpr _6067___mcc_h2386 = _source304.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6068___mcc_h2387 = _source304.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6069___mcc_h2390 = _source304.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6070___mcc_h2391 = _source304.dtor_retType;
                      RAST._IExpr _6071___mcc_h2392 = _source304.dtor_body;
                    }
                  } else {
                  }
                } else if (_source303.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6072___mcc_h2396 = _source303.dtor_op2;
                  RAST._IExpr _6073___mcc_h2397 = _source303.dtor_left;
                  RAST._IExpr _6074___mcc_h2398 = _source303.dtor_right;
                  DAST.Format._IBinaryOpFormat _6075___mcc_h2399 = _source303.dtor_format2;
                } else if (_source303.is_TypeAscription) {
                  RAST._IExpr _6076___mcc_h2404 = _source303.dtor_left;
                  RAST._IType _6077___mcc_h2405 = _source303.dtor_tpe;
                } else if (_source303.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6078___mcc_h2408 = _source303.dtor_value;
                } else if (_source303.is_LiteralBool) {
                  bool _6079___mcc_h2410 = _source303.dtor_bvalue;
                } else if (_source303.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6080___mcc_h2412 = _source303.dtor_value;
                  bool _6081___mcc_h2413 = _source303.dtor_binary;
                } else if (_source303.is_DeclareVar) {
                  RAST._IDeclareType _6082___mcc_h2416 = _source303.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6083___mcc_h2417 = _source303.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6084___mcc_h2418 = _source303.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6085___mcc_h2419 = _source303.dtor_optRhs;
                } else if (_source303.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6086___mcc_h2424 = _source303.dtor_names;
                  RAST._IExpr _6087___mcc_h2425 = _source303.dtor_rhs;
                } else if (_source303.is_IfExpr) {
                  RAST._IExpr _6088___mcc_h2428 = _source303.dtor_cond;
                  RAST._IExpr _6089___mcc_h2429 = _source303.dtor_thn;
                  RAST._IExpr _6090___mcc_h2430 = _source303.dtor_els;
                } else if (_source303.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6091___mcc_h2434 = _source303.dtor_optCond;
                  RAST._IExpr _6092___mcc_h2435 = _source303.dtor_underlying;
                } else if (_source303.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6093___mcc_h2438 = _source303.dtor_name;
                  RAST._IExpr _6094___mcc_h2439 = _source303.dtor_range;
                  RAST._IExpr _6095___mcc_h2440 = _source303.dtor_body;
                } else if (_source303.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6096___mcc_h2444 = _source303.dtor_lbl;
                  RAST._IExpr _6097___mcc_h2445 = _source303.dtor_underlying;
                } else if (_source303.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6098___mcc_h2448 = _source303.dtor_optLbl;
                } else if (_source303.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6099___mcc_h2450 = _source303.dtor_optLbl;
                } else if (_source303.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6100___mcc_h2452 = _source303.dtor_optExpr;
                } else if (_source303.is_CallType) {
                  RAST._IExpr _6101___mcc_h2454 = _source303.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6102___mcc_h2455 = _source303.dtor_typeParameters;
                } else if (_source303.is_Call) {
                  RAST._IExpr _6103___mcc_h2458 = _source303.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6104___mcc_h2459 = _source303.dtor_arguments;
                } else if (_source303.is_Select) {
                  RAST._IExpr _6105___mcc_h2462 = _source303.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6106___mcc_h2463 = _source303.dtor_name;
                } else if (_source303.is_MemberSelect) {
                  RAST._IExpr _6107___mcc_h2466 = _source303.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6108___mcc_h2467 = _source303.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6109___mcc_h2470 = _source303.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6110___mcc_h2471 = _source303.dtor_retType;
                  RAST._IExpr _6111___mcc_h2472 = _source303.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5995_field));
              if (_5994_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6112_fromOwnership;
              _6112_fromOwnership = ((_5994_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1766;
              DCOMP._IOwnership _out1767;
              DCOMP.COMP.FromOwnership(r, _6112_fromOwnership, expectedOwnership, out _out1766, out _out1767);
              r = _out1766;
              resultingOwnership = _out1767;
              readIdents = _6003_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _6113___mcc_h102 = _source284.dtor_elements;
          DAST._IType _6114___mcc_h103 = _source284.dtor_typ;
          DAST._IType _6115_fieldType = _4872___mcc_h57;
          bool _6116_isDatatype = _4871___mcc_h56;
          bool _6117_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6118_field = _4869___mcc_h54;
          DAST._IExpression _6119_on = _4868___mcc_h53;
          {
            if (_6116_isDatatype) {
              RAST._IExpr _6120_onExpr;
              DCOMP._IOwnership _6121_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6122_recIdents;
              RAST._IExpr _out1768;
              DCOMP._IOwnership _out1769;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1770;
              (this).GenExpr(_6119_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1768, out _out1769, out _out1770);
              _6120_onExpr = _out1768;
              _6121_onOwned = _out1769;
              _6122_recIdents = _out1770;
              r = ((_6120_onExpr).Sel(DCOMP.__default.escapeName(_6118_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6123_typ;
              RAST._IType _out1771;
              _out1771 = (this).GenType(_6115_fieldType, false, false);
              _6123_typ = _out1771;
              if (((_6123_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1772;
                DCOMP._IOwnership _out1773;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1772, out _out1773);
                r = _out1772;
                resultingOwnership = _out1773;
              }
              readIdents = _6122_recIdents;
            } else {
              RAST._IExpr _6124_onExpr;
              DCOMP._IOwnership _6125_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6126_recIdents;
              RAST._IExpr _out1774;
              DCOMP._IOwnership _out1775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1776;
              (this).GenExpr(_6119_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1774, out _out1775, out _out1776);
              _6124_onExpr = _out1774;
              _6125_onOwned = _out1775;
              _6126_recIdents = _out1776;
              r = _6124_onExpr;
              if (!object.Equals(_6124_onExpr, RAST.__default.self)) {
                RAST._IExpr _source305 = _6124_onExpr;
                if (_source305.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6127___mcc_h2476 = _source305.dtor_content;
                } else if (_source305.is_ExprFromType) {
                  RAST._IType _6128___mcc_h2478 = _source305.dtor_tpe;
                } else if (_source305.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6129___mcc_h2480 = _source305.dtor_name;
                } else if (_source305.is_Match) {
                  RAST._IExpr _6130___mcc_h2482 = _source305.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6131___mcc_h2483 = _source305.dtor_cases;
                } else if (_source305.is_StmtExpr) {
                  RAST._IExpr _6132___mcc_h2486 = _source305.dtor_stmt;
                  RAST._IExpr _6133___mcc_h2487 = _source305.dtor_rhs;
                } else if (_source305.is_Block) {
                  RAST._IExpr _6134___mcc_h2490 = _source305.dtor_underlying;
                } else if (_source305.is_StructBuild) {
                  RAST._IExpr _6135___mcc_h2492 = _source305.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6136___mcc_h2493 = _source305.dtor_assignments;
                } else if (_source305.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6137___mcc_h2496 = _source305.dtor_arguments;
                } else if (_source305.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6138___mcc_h2498 = _source305.dtor_op1;
                  RAST._IExpr _6139___mcc_h2499 = _source305.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6140___mcc_h2500 = _source305.dtor_format;
                  if (object.Equals(_6138___mcc_h2498, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source306 = _6139___mcc_h2499;
                    if (_source306.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6141___mcc_h2504 = _source306.dtor_content;
                    } else if (_source306.is_ExprFromType) {
                      RAST._IType _6142___mcc_h2506 = _source306.dtor_tpe;
                    } else if (_source306.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6143___mcc_h2508 = _source306.dtor_name;
                      if (object.Equals(_6143___mcc_h2508, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source306.is_Match) {
                      RAST._IExpr _6144___mcc_h2510 = _source306.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6145___mcc_h2511 = _source306.dtor_cases;
                    } else if (_source306.is_StmtExpr) {
                      RAST._IExpr _6146___mcc_h2514 = _source306.dtor_stmt;
                      RAST._IExpr _6147___mcc_h2515 = _source306.dtor_rhs;
                    } else if (_source306.is_Block) {
                      RAST._IExpr _6148___mcc_h2518 = _source306.dtor_underlying;
                    } else if (_source306.is_StructBuild) {
                      RAST._IExpr _6149___mcc_h2520 = _source306.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6150___mcc_h2521 = _source306.dtor_assignments;
                    } else if (_source306.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6151___mcc_h2524 = _source306.dtor_arguments;
                    } else if (_source306.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6152___mcc_h2526 = _source306.dtor_op1;
                      RAST._IExpr _6153___mcc_h2527 = _source306.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6154___mcc_h2528 = _source306.dtor_format;
                    } else if (_source306.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6155___mcc_h2532 = _source306.dtor_op2;
                      RAST._IExpr _6156___mcc_h2533 = _source306.dtor_left;
                      RAST._IExpr _6157___mcc_h2534 = _source306.dtor_right;
                      DAST.Format._IBinaryOpFormat _6158___mcc_h2535 = _source306.dtor_format2;
                    } else if (_source306.is_TypeAscription) {
                      RAST._IExpr _6159___mcc_h2540 = _source306.dtor_left;
                      RAST._IType _6160___mcc_h2541 = _source306.dtor_tpe;
                    } else if (_source306.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6161___mcc_h2544 = _source306.dtor_value;
                    } else if (_source306.is_LiteralBool) {
                      bool _6162___mcc_h2546 = _source306.dtor_bvalue;
                    } else if (_source306.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6163___mcc_h2548 = _source306.dtor_value;
                      bool _6164___mcc_h2549 = _source306.dtor_binary;
                    } else if (_source306.is_DeclareVar) {
                      RAST._IDeclareType _6165___mcc_h2552 = _source306.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6166___mcc_h2553 = _source306.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6167___mcc_h2554 = _source306.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6168___mcc_h2555 = _source306.dtor_optRhs;
                    } else if (_source306.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6169___mcc_h2560 = _source306.dtor_names;
                      RAST._IExpr _6170___mcc_h2561 = _source306.dtor_rhs;
                    } else if (_source306.is_IfExpr) {
                      RAST._IExpr _6171___mcc_h2564 = _source306.dtor_cond;
                      RAST._IExpr _6172___mcc_h2565 = _source306.dtor_thn;
                      RAST._IExpr _6173___mcc_h2566 = _source306.dtor_els;
                    } else if (_source306.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6174___mcc_h2570 = _source306.dtor_optCond;
                      RAST._IExpr _6175___mcc_h2571 = _source306.dtor_underlying;
                    } else if (_source306.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6176___mcc_h2574 = _source306.dtor_name;
                      RAST._IExpr _6177___mcc_h2575 = _source306.dtor_range;
                      RAST._IExpr _6178___mcc_h2576 = _source306.dtor_body;
                    } else if (_source306.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6179___mcc_h2580 = _source306.dtor_lbl;
                      RAST._IExpr _6180___mcc_h2581 = _source306.dtor_underlying;
                    } else if (_source306.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6181___mcc_h2584 = _source306.dtor_optLbl;
                    } else if (_source306.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6182___mcc_h2586 = _source306.dtor_optLbl;
                    } else if (_source306.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6183___mcc_h2588 = _source306.dtor_optExpr;
                    } else if (_source306.is_CallType) {
                      RAST._IExpr _6184___mcc_h2590 = _source306.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6185___mcc_h2591 = _source306.dtor_typeParameters;
                    } else if (_source306.is_Call) {
                      RAST._IExpr _6186___mcc_h2594 = _source306.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6187___mcc_h2595 = _source306.dtor_arguments;
                    } else if (_source306.is_Select) {
                      RAST._IExpr _6188___mcc_h2598 = _source306.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6189___mcc_h2599 = _source306.dtor_name;
                    } else if (_source306.is_MemberSelect) {
                      RAST._IExpr _6190___mcc_h2602 = _source306.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6191___mcc_h2603 = _source306.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6192___mcc_h2606 = _source306.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6193___mcc_h2607 = _source306.dtor_retType;
                      RAST._IExpr _6194___mcc_h2608 = _source306.dtor_body;
                    }
                  } else {
                  }
                } else if (_source305.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6195___mcc_h2612 = _source305.dtor_op2;
                  RAST._IExpr _6196___mcc_h2613 = _source305.dtor_left;
                  RAST._IExpr _6197___mcc_h2614 = _source305.dtor_right;
                  DAST.Format._IBinaryOpFormat _6198___mcc_h2615 = _source305.dtor_format2;
                } else if (_source305.is_TypeAscription) {
                  RAST._IExpr _6199___mcc_h2620 = _source305.dtor_left;
                  RAST._IType _6200___mcc_h2621 = _source305.dtor_tpe;
                } else if (_source305.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6201___mcc_h2624 = _source305.dtor_value;
                } else if (_source305.is_LiteralBool) {
                  bool _6202___mcc_h2626 = _source305.dtor_bvalue;
                } else if (_source305.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6203___mcc_h2628 = _source305.dtor_value;
                  bool _6204___mcc_h2629 = _source305.dtor_binary;
                } else if (_source305.is_DeclareVar) {
                  RAST._IDeclareType _6205___mcc_h2632 = _source305.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6206___mcc_h2633 = _source305.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6207___mcc_h2634 = _source305.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6208___mcc_h2635 = _source305.dtor_optRhs;
                } else if (_source305.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6209___mcc_h2640 = _source305.dtor_names;
                  RAST._IExpr _6210___mcc_h2641 = _source305.dtor_rhs;
                } else if (_source305.is_IfExpr) {
                  RAST._IExpr _6211___mcc_h2644 = _source305.dtor_cond;
                  RAST._IExpr _6212___mcc_h2645 = _source305.dtor_thn;
                  RAST._IExpr _6213___mcc_h2646 = _source305.dtor_els;
                } else if (_source305.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6214___mcc_h2650 = _source305.dtor_optCond;
                  RAST._IExpr _6215___mcc_h2651 = _source305.dtor_underlying;
                } else if (_source305.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6216___mcc_h2654 = _source305.dtor_name;
                  RAST._IExpr _6217___mcc_h2655 = _source305.dtor_range;
                  RAST._IExpr _6218___mcc_h2656 = _source305.dtor_body;
                } else if (_source305.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6219___mcc_h2660 = _source305.dtor_lbl;
                  RAST._IExpr _6220___mcc_h2661 = _source305.dtor_underlying;
                } else if (_source305.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6221___mcc_h2664 = _source305.dtor_optLbl;
                } else if (_source305.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6222___mcc_h2666 = _source305.dtor_optLbl;
                } else if (_source305.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6223___mcc_h2668 = _source305.dtor_optExpr;
                } else if (_source305.is_CallType) {
                  RAST._IExpr _6224___mcc_h2670 = _source305.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6225___mcc_h2671 = _source305.dtor_typeParameters;
                } else if (_source305.is_Call) {
                  RAST._IExpr _6226___mcc_h2674 = _source305.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6227___mcc_h2675 = _source305.dtor_arguments;
                } else if (_source305.is_Select) {
                  RAST._IExpr _6228___mcc_h2678 = _source305.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6229___mcc_h2679 = _source305.dtor_name;
                } else if (_source305.is_MemberSelect) {
                  RAST._IExpr _6230___mcc_h2682 = _source305.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6231___mcc_h2683 = _source305.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6232___mcc_h2686 = _source305.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6233___mcc_h2687 = _source305.dtor_retType;
                  RAST._IExpr _6234___mcc_h2688 = _source305.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6118_field));
              if (_6117_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6235_fromOwnership;
              _6235_fromOwnership = ((_6117_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1777;
              DCOMP._IOwnership _out1778;
              DCOMP.COMP.FromOwnership(r, _6235_fromOwnership, expectedOwnership, out _out1777, out _out1778);
              r = _out1777;
              resultingOwnership = _out1778;
              readIdents = _6126_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _6236___mcc_h106 = _source284.dtor_elements;
          DAST._IType _6237_fieldType = _4872___mcc_h57;
          bool _6238_isDatatype = _4871___mcc_h56;
          bool _6239_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6240_field = _4869___mcc_h54;
          DAST._IExpression _6241_on = _4868___mcc_h53;
          {
            if (_6238_isDatatype) {
              RAST._IExpr _6242_onExpr;
              DCOMP._IOwnership _6243_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6244_recIdents;
              RAST._IExpr _out1779;
              DCOMP._IOwnership _out1780;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1781;
              (this).GenExpr(_6241_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1779, out _out1780, out _out1781);
              _6242_onExpr = _out1779;
              _6243_onOwned = _out1780;
              _6244_recIdents = _out1781;
              r = ((_6242_onExpr).Sel(DCOMP.__default.escapeName(_6240_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6245_typ;
              RAST._IType _out1782;
              _out1782 = (this).GenType(_6237_fieldType, false, false);
              _6245_typ = _out1782;
              if (((_6245_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1783;
                DCOMP._IOwnership _out1784;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1783, out _out1784);
                r = _out1783;
                resultingOwnership = _out1784;
              }
              readIdents = _6244_recIdents;
            } else {
              RAST._IExpr _6246_onExpr;
              DCOMP._IOwnership _6247_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6248_recIdents;
              RAST._IExpr _out1785;
              DCOMP._IOwnership _out1786;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1787;
              (this).GenExpr(_6241_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1785, out _out1786, out _out1787);
              _6246_onExpr = _out1785;
              _6247_onOwned = _out1786;
              _6248_recIdents = _out1787;
              r = _6246_onExpr;
              if (!object.Equals(_6246_onExpr, RAST.__default.self)) {
                RAST._IExpr _source307 = _6246_onExpr;
                if (_source307.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6249___mcc_h2692 = _source307.dtor_content;
                } else if (_source307.is_ExprFromType) {
                  RAST._IType _6250___mcc_h2694 = _source307.dtor_tpe;
                } else if (_source307.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6251___mcc_h2696 = _source307.dtor_name;
                } else if (_source307.is_Match) {
                  RAST._IExpr _6252___mcc_h2698 = _source307.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6253___mcc_h2699 = _source307.dtor_cases;
                } else if (_source307.is_StmtExpr) {
                  RAST._IExpr _6254___mcc_h2702 = _source307.dtor_stmt;
                  RAST._IExpr _6255___mcc_h2703 = _source307.dtor_rhs;
                } else if (_source307.is_Block) {
                  RAST._IExpr _6256___mcc_h2706 = _source307.dtor_underlying;
                } else if (_source307.is_StructBuild) {
                  RAST._IExpr _6257___mcc_h2708 = _source307.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6258___mcc_h2709 = _source307.dtor_assignments;
                } else if (_source307.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6259___mcc_h2712 = _source307.dtor_arguments;
                } else if (_source307.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6260___mcc_h2714 = _source307.dtor_op1;
                  RAST._IExpr _6261___mcc_h2715 = _source307.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6262___mcc_h2716 = _source307.dtor_format;
                  if (object.Equals(_6260___mcc_h2714, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source308 = _6261___mcc_h2715;
                    if (_source308.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6263___mcc_h2720 = _source308.dtor_content;
                    } else if (_source308.is_ExprFromType) {
                      RAST._IType _6264___mcc_h2722 = _source308.dtor_tpe;
                    } else if (_source308.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6265___mcc_h2724 = _source308.dtor_name;
                      if (object.Equals(_6265___mcc_h2724, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source308.is_Match) {
                      RAST._IExpr _6266___mcc_h2726 = _source308.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6267___mcc_h2727 = _source308.dtor_cases;
                    } else if (_source308.is_StmtExpr) {
                      RAST._IExpr _6268___mcc_h2730 = _source308.dtor_stmt;
                      RAST._IExpr _6269___mcc_h2731 = _source308.dtor_rhs;
                    } else if (_source308.is_Block) {
                      RAST._IExpr _6270___mcc_h2734 = _source308.dtor_underlying;
                    } else if (_source308.is_StructBuild) {
                      RAST._IExpr _6271___mcc_h2736 = _source308.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6272___mcc_h2737 = _source308.dtor_assignments;
                    } else if (_source308.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6273___mcc_h2740 = _source308.dtor_arguments;
                    } else if (_source308.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6274___mcc_h2742 = _source308.dtor_op1;
                      RAST._IExpr _6275___mcc_h2743 = _source308.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6276___mcc_h2744 = _source308.dtor_format;
                    } else if (_source308.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6277___mcc_h2748 = _source308.dtor_op2;
                      RAST._IExpr _6278___mcc_h2749 = _source308.dtor_left;
                      RAST._IExpr _6279___mcc_h2750 = _source308.dtor_right;
                      DAST.Format._IBinaryOpFormat _6280___mcc_h2751 = _source308.dtor_format2;
                    } else if (_source308.is_TypeAscription) {
                      RAST._IExpr _6281___mcc_h2756 = _source308.dtor_left;
                      RAST._IType _6282___mcc_h2757 = _source308.dtor_tpe;
                    } else if (_source308.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6283___mcc_h2760 = _source308.dtor_value;
                    } else if (_source308.is_LiteralBool) {
                      bool _6284___mcc_h2762 = _source308.dtor_bvalue;
                    } else if (_source308.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6285___mcc_h2764 = _source308.dtor_value;
                      bool _6286___mcc_h2765 = _source308.dtor_binary;
                    } else if (_source308.is_DeclareVar) {
                      RAST._IDeclareType _6287___mcc_h2768 = _source308.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6288___mcc_h2769 = _source308.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6289___mcc_h2770 = _source308.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6290___mcc_h2771 = _source308.dtor_optRhs;
                    } else if (_source308.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6291___mcc_h2776 = _source308.dtor_names;
                      RAST._IExpr _6292___mcc_h2777 = _source308.dtor_rhs;
                    } else if (_source308.is_IfExpr) {
                      RAST._IExpr _6293___mcc_h2780 = _source308.dtor_cond;
                      RAST._IExpr _6294___mcc_h2781 = _source308.dtor_thn;
                      RAST._IExpr _6295___mcc_h2782 = _source308.dtor_els;
                    } else if (_source308.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6296___mcc_h2786 = _source308.dtor_optCond;
                      RAST._IExpr _6297___mcc_h2787 = _source308.dtor_underlying;
                    } else if (_source308.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6298___mcc_h2790 = _source308.dtor_name;
                      RAST._IExpr _6299___mcc_h2791 = _source308.dtor_range;
                      RAST._IExpr _6300___mcc_h2792 = _source308.dtor_body;
                    } else if (_source308.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6301___mcc_h2796 = _source308.dtor_lbl;
                      RAST._IExpr _6302___mcc_h2797 = _source308.dtor_underlying;
                    } else if (_source308.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6303___mcc_h2800 = _source308.dtor_optLbl;
                    } else if (_source308.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6304___mcc_h2802 = _source308.dtor_optLbl;
                    } else if (_source308.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6305___mcc_h2804 = _source308.dtor_optExpr;
                    } else if (_source308.is_CallType) {
                      RAST._IExpr _6306___mcc_h2806 = _source308.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6307___mcc_h2807 = _source308.dtor_typeParameters;
                    } else if (_source308.is_Call) {
                      RAST._IExpr _6308___mcc_h2810 = _source308.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6309___mcc_h2811 = _source308.dtor_arguments;
                    } else if (_source308.is_Select) {
                      RAST._IExpr _6310___mcc_h2814 = _source308.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6311___mcc_h2815 = _source308.dtor_name;
                    } else if (_source308.is_MemberSelect) {
                      RAST._IExpr _6312___mcc_h2818 = _source308.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6313___mcc_h2819 = _source308.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6314___mcc_h2822 = _source308.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6315___mcc_h2823 = _source308.dtor_retType;
                      RAST._IExpr _6316___mcc_h2824 = _source308.dtor_body;
                    }
                  } else {
                  }
                } else if (_source307.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6317___mcc_h2828 = _source307.dtor_op2;
                  RAST._IExpr _6318___mcc_h2829 = _source307.dtor_left;
                  RAST._IExpr _6319___mcc_h2830 = _source307.dtor_right;
                  DAST.Format._IBinaryOpFormat _6320___mcc_h2831 = _source307.dtor_format2;
                } else if (_source307.is_TypeAscription) {
                  RAST._IExpr _6321___mcc_h2836 = _source307.dtor_left;
                  RAST._IType _6322___mcc_h2837 = _source307.dtor_tpe;
                } else if (_source307.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6323___mcc_h2840 = _source307.dtor_value;
                } else if (_source307.is_LiteralBool) {
                  bool _6324___mcc_h2842 = _source307.dtor_bvalue;
                } else if (_source307.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6325___mcc_h2844 = _source307.dtor_value;
                  bool _6326___mcc_h2845 = _source307.dtor_binary;
                } else if (_source307.is_DeclareVar) {
                  RAST._IDeclareType _6327___mcc_h2848 = _source307.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6328___mcc_h2849 = _source307.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6329___mcc_h2850 = _source307.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6330___mcc_h2851 = _source307.dtor_optRhs;
                } else if (_source307.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6331___mcc_h2856 = _source307.dtor_names;
                  RAST._IExpr _6332___mcc_h2857 = _source307.dtor_rhs;
                } else if (_source307.is_IfExpr) {
                  RAST._IExpr _6333___mcc_h2860 = _source307.dtor_cond;
                  RAST._IExpr _6334___mcc_h2861 = _source307.dtor_thn;
                  RAST._IExpr _6335___mcc_h2862 = _source307.dtor_els;
                } else if (_source307.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6336___mcc_h2866 = _source307.dtor_optCond;
                  RAST._IExpr _6337___mcc_h2867 = _source307.dtor_underlying;
                } else if (_source307.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6338___mcc_h2870 = _source307.dtor_name;
                  RAST._IExpr _6339___mcc_h2871 = _source307.dtor_range;
                  RAST._IExpr _6340___mcc_h2872 = _source307.dtor_body;
                } else if (_source307.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6341___mcc_h2876 = _source307.dtor_lbl;
                  RAST._IExpr _6342___mcc_h2877 = _source307.dtor_underlying;
                } else if (_source307.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6343___mcc_h2880 = _source307.dtor_optLbl;
                } else if (_source307.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6344___mcc_h2882 = _source307.dtor_optLbl;
                } else if (_source307.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6345___mcc_h2884 = _source307.dtor_optExpr;
                } else if (_source307.is_CallType) {
                  RAST._IExpr _6346___mcc_h2886 = _source307.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6347___mcc_h2887 = _source307.dtor_typeParameters;
                } else if (_source307.is_Call) {
                  RAST._IExpr _6348___mcc_h2890 = _source307.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6349___mcc_h2891 = _source307.dtor_arguments;
                } else if (_source307.is_Select) {
                  RAST._IExpr _6350___mcc_h2894 = _source307.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6351___mcc_h2895 = _source307.dtor_name;
                } else if (_source307.is_MemberSelect) {
                  RAST._IExpr _6352___mcc_h2898 = _source307.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6353___mcc_h2899 = _source307.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6354___mcc_h2902 = _source307.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6355___mcc_h2903 = _source307.dtor_retType;
                  RAST._IExpr _6356___mcc_h2904 = _source307.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6240_field));
              if (_6239_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6357_fromOwnership;
              _6357_fromOwnership = ((_6239_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1788;
              DCOMP._IOwnership _out1789;
              DCOMP.COMP.FromOwnership(r, _6357_fromOwnership, expectedOwnership, out _out1788, out _out1789);
              r = _out1788;
              resultingOwnership = _out1789;
              readIdents = _6248_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _6358___mcc_h108 = _source284.dtor_elements;
          DAST._IType _6359_fieldType = _4872___mcc_h57;
          bool _6360_isDatatype = _4871___mcc_h56;
          bool _6361_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6362_field = _4869___mcc_h54;
          DAST._IExpression _6363_on = _4868___mcc_h53;
          {
            if (_6360_isDatatype) {
              RAST._IExpr _6364_onExpr;
              DCOMP._IOwnership _6365_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6366_recIdents;
              RAST._IExpr _out1790;
              DCOMP._IOwnership _out1791;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1792;
              (this).GenExpr(_6363_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1790, out _out1791, out _out1792);
              _6364_onExpr = _out1790;
              _6365_onOwned = _out1791;
              _6366_recIdents = _out1792;
              r = ((_6364_onExpr).Sel(DCOMP.__default.escapeName(_6362_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6367_typ;
              RAST._IType _out1793;
              _out1793 = (this).GenType(_6359_fieldType, false, false);
              _6367_typ = _out1793;
              if (((_6367_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1794;
                DCOMP._IOwnership _out1795;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1794, out _out1795);
                r = _out1794;
                resultingOwnership = _out1795;
              }
              readIdents = _6366_recIdents;
            } else {
              RAST._IExpr _6368_onExpr;
              DCOMP._IOwnership _6369_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6370_recIdents;
              RAST._IExpr _out1796;
              DCOMP._IOwnership _out1797;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1798;
              (this).GenExpr(_6363_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1796, out _out1797, out _out1798);
              _6368_onExpr = _out1796;
              _6369_onOwned = _out1797;
              _6370_recIdents = _out1798;
              r = _6368_onExpr;
              if (!object.Equals(_6368_onExpr, RAST.__default.self)) {
                RAST._IExpr _source309 = _6368_onExpr;
                if (_source309.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6371___mcc_h2908 = _source309.dtor_content;
                } else if (_source309.is_ExprFromType) {
                  RAST._IType _6372___mcc_h2910 = _source309.dtor_tpe;
                } else if (_source309.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6373___mcc_h2912 = _source309.dtor_name;
                } else if (_source309.is_Match) {
                  RAST._IExpr _6374___mcc_h2914 = _source309.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6375___mcc_h2915 = _source309.dtor_cases;
                } else if (_source309.is_StmtExpr) {
                  RAST._IExpr _6376___mcc_h2918 = _source309.dtor_stmt;
                  RAST._IExpr _6377___mcc_h2919 = _source309.dtor_rhs;
                } else if (_source309.is_Block) {
                  RAST._IExpr _6378___mcc_h2922 = _source309.dtor_underlying;
                } else if (_source309.is_StructBuild) {
                  RAST._IExpr _6379___mcc_h2924 = _source309.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6380___mcc_h2925 = _source309.dtor_assignments;
                } else if (_source309.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6381___mcc_h2928 = _source309.dtor_arguments;
                } else if (_source309.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6382___mcc_h2930 = _source309.dtor_op1;
                  RAST._IExpr _6383___mcc_h2931 = _source309.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6384___mcc_h2932 = _source309.dtor_format;
                  if (object.Equals(_6382___mcc_h2930, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source310 = _6383___mcc_h2931;
                    if (_source310.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6385___mcc_h2936 = _source310.dtor_content;
                    } else if (_source310.is_ExprFromType) {
                      RAST._IType _6386___mcc_h2938 = _source310.dtor_tpe;
                    } else if (_source310.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6387___mcc_h2940 = _source310.dtor_name;
                      if (object.Equals(_6387___mcc_h2940, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source310.is_Match) {
                      RAST._IExpr _6388___mcc_h2942 = _source310.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6389___mcc_h2943 = _source310.dtor_cases;
                    } else if (_source310.is_StmtExpr) {
                      RAST._IExpr _6390___mcc_h2946 = _source310.dtor_stmt;
                      RAST._IExpr _6391___mcc_h2947 = _source310.dtor_rhs;
                    } else if (_source310.is_Block) {
                      RAST._IExpr _6392___mcc_h2950 = _source310.dtor_underlying;
                    } else if (_source310.is_StructBuild) {
                      RAST._IExpr _6393___mcc_h2952 = _source310.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6394___mcc_h2953 = _source310.dtor_assignments;
                    } else if (_source310.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6395___mcc_h2956 = _source310.dtor_arguments;
                    } else if (_source310.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6396___mcc_h2958 = _source310.dtor_op1;
                      RAST._IExpr _6397___mcc_h2959 = _source310.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6398___mcc_h2960 = _source310.dtor_format;
                    } else if (_source310.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6399___mcc_h2964 = _source310.dtor_op2;
                      RAST._IExpr _6400___mcc_h2965 = _source310.dtor_left;
                      RAST._IExpr _6401___mcc_h2966 = _source310.dtor_right;
                      DAST.Format._IBinaryOpFormat _6402___mcc_h2967 = _source310.dtor_format2;
                    } else if (_source310.is_TypeAscription) {
                      RAST._IExpr _6403___mcc_h2972 = _source310.dtor_left;
                      RAST._IType _6404___mcc_h2973 = _source310.dtor_tpe;
                    } else if (_source310.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6405___mcc_h2976 = _source310.dtor_value;
                    } else if (_source310.is_LiteralBool) {
                      bool _6406___mcc_h2978 = _source310.dtor_bvalue;
                    } else if (_source310.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6407___mcc_h2980 = _source310.dtor_value;
                      bool _6408___mcc_h2981 = _source310.dtor_binary;
                    } else if (_source310.is_DeclareVar) {
                      RAST._IDeclareType _6409___mcc_h2984 = _source310.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6410___mcc_h2985 = _source310.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6411___mcc_h2986 = _source310.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6412___mcc_h2987 = _source310.dtor_optRhs;
                    } else if (_source310.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6413___mcc_h2992 = _source310.dtor_names;
                      RAST._IExpr _6414___mcc_h2993 = _source310.dtor_rhs;
                    } else if (_source310.is_IfExpr) {
                      RAST._IExpr _6415___mcc_h2996 = _source310.dtor_cond;
                      RAST._IExpr _6416___mcc_h2997 = _source310.dtor_thn;
                      RAST._IExpr _6417___mcc_h2998 = _source310.dtor_els;
                    } else if (_source310.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6418___mcc_h3002 = _source310.dtor_optCond;
                      RAST._IExpr _6419___mcc_h3003 = _source310.dtor_underlying;
                    } else if (_source310.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6420___mcc_h3006 = _source310.dtor_name;
                      RAST._IExpr _6421___mcc_h3007 = _source310.dtor_range;
                      RAST._IExpr _6422___mcc_h3008 = _source310.dtor_body;
                    } else if (_source310.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6423___mcc_h3012 = _source310.dtor_lbl;
                      RAST._IExpr _6424___mcc_h3013 = _source310.dtor_underlying;
                    } else if (_source310.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6425___mcc_h3016 = _source310.dtor_optLbl;
                    } else if (_source310.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6426___mcc_h3018 = _source310.dtor_optLbl;
                    } else if (_source310.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6427___mcc_h3020 = _source310.dtor_optExpr;
                    } else if (_source310.is_CallType) {
                      RAST._IExpr _6428___mcc_h3022 = _source310.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6429___mcc_h3023 = _source310.dtor_typeParameters;
                    } else if (_source310.is_Call) {
                      RAST._IExpr _6430___mcc_h3026 = _source310.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6431___mcc_h3027 = _source310.dtor_arguments;
                    } else if (_source310.is_Select) {
                      RAST._IExpr _6432___mcc_h3030 = _source310.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6433___mcc_h3031 = _source310.dtor_name;
                    } else if (_source310.is_MemberSelect) {
                      RAST._IExpr _6434___mcc_h3034 = _source310.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6435___mcc_h3035 = _source310.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6436___mcc_h3038 = _source310.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6437___mcc_h3039 = _source310.dtor_retType;
                      RAST._IExpr _6438___mcc_h3040 = _source310.dtor_body;
                    }
                  } else {
                  }
                } else if (_source309.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6439___mcc_h3044 = _source309.dtor_op2;
                  RAST._IExpr _6440___mcc_h3045 = _source309.dtor_left;
                  RAST._IExpr _6441___mcc_h3046 = _source309.dtor_right;
                  DAST.Format._IBinaryOpFormat _6442___mcc_h3047 = _source309.dtor_format2;
                } else if (_source309.is_TypeAscription) {
                  RAST._IExpr _6443___mcc_h3052 = _source309.dtor_left;
                  RAST._IType _6444___mcc_h3053 = _source309.dtor_tpe;
                } else if (_source309.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6445___mcc_h3056 = _source309.dtor_value;
                } else if (_source309.is_LiteralBool) {
                  bool _6446___mcc_h3058 = _source309.dtor_bvalue;
                } else if (_source309.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6447___mcc_h3060 = _source309.dtor_value;
                  bool _6448___mcc_h3061 = _source309.dtor_binary;
                } else if (_source309.is_DeclareVar) {
                  RAST._IDeclareType _6449___mcc_h3064 = _source309.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6450___mcc_h3065 = _source309.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6451___mcc_h3066 = _source309.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6452___mcc_h3067 = _source309.dtor_optRhs;
                } else if (_source309.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6453___mcc_h3072 = _source309.dtor_names;
                  RAST._IExpr _6454___mcc_h3073 = _source309.dtor_rhs;
                } else if (_source309.is_IfExpr) {
                  RAST._IExpr _6455___mcc_h3076 = _source309.dtor_cond;
                  RAST._IExpr _6456___mcc_h3077 = _source309.dtor_thn;
                  RAST._IExpr _6457___mcc_h3078 = _source309.dtor_els;
                } else if (_source309.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6458___mcc_h3082 = _source309.dtor_optCond;
                  RAST._IExpr _6459___mcc_h3083 = _source309.dtor_underlying;
                } else if (_source309.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6460___mcc_h3086 = _source309.dtor_name;
                  RAST._IExpr _6461___mcc_h3087 = _source309.dtor_range;
                  RAST._IExpr _6462___mcc_h3088 = _source309.dtor_body;
                } else if (_source309.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6463___mcc_h3092 = _source309.dtor_lbl;
                  RAST._IExpr _6464___mcc_h3093 = _source309.dtor_underlying;
                } else if (_source309.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6465___mcc_h3096 = _source309.dtor_optLbl;
                } else if (_source309.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6466___mcc_h3098 = _source309.dtor_optLbl;
                } else if (_source309.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6467___mcc_h3100 = _source309.dtor_optExpr;
                } else if (_source309.is_CallType) {
                  RAST._IExpr _6468___mcc_h3102 = _source309.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6469___mcc_h3103 = _source309.dtor_typeParameters;
                } else if (_source309.is_Call) {
                  RAST._IExpr _6470___mcc_h3106 = _source309.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6471___mcc_h3107 = _source309.dtor_arguments;
                } else if (_source309.is_Select) {
                  RAST._IExpr _6472___mcc_h3110 = _source309.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6473___mcc_h3111 = _source309.dtor_name;
                } else if (_source309.is_MemberSelect) {
                  RAST._IExpr _6474___mcc_h3114 = _source309.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6475___mcc_h3115 = _source309.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6476___mcc_h3118 = _source309.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6477___mcc_h3119 = _source309.dtor_retType;
                  RAST._IExpr _6478___mcc_h3120 = _source309.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6362_field));
              if (_6361_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6479_fromOwnership;
              _6479_fromOwnership = ((_6361_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1799;
              DCOMP._IOwnership _out1800;
              DCOMP.COMP.FromOwnership(r, _6479_fromOwnership, expectedOwnership, out _out1799, out _out1800);
              r = _out1799;
              resultingOwnership = _out1800;
              readIdents = _6370_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _6480___mcc_h110 = _source284.dtor_mapElems;
          DAST._IType _6481_fieldType = _4872___mcc_h57;
          bool _6482_isDatatype = _4871___mcc_h56;
          bool _6483_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6484_field = _4869___mcc_h54;
          DAST._IExpression _6485_on = _4868___mcc_h53;
          {
            if (_6482_isDatatype) {
              RAST._IExpr _6486_onExpr;
              DCOMP._IOwnership _6487_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6488_recIdents;
              RAST._IExpr _out1801;
              DCOMP._IOwnership _out1802;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1803;
              (this).GenExpr(_6485_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1801, out _out1802, out _out1803);
              _6486_onExpr = _out1801;
              _6487_onOwned = _out1802;
              _6488_recIdents = _out1803;
              r = ((_6486_onExpr).Sel(DCOMP.__default.escapeName(_6484_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6489_typ;
              RAST._IType _out1804;
              _out1804 = (this).GenType(_6481_fieldType, false, false);
              _6489_typ = _out1804;
              if (((_6489_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1805;
                DCOMP._IOwnership _out1806;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1805, out _out1806);
                r = _out1805;
                resultingOwnership = _out1806;
              }
              readIdents = _6488_recIdents;
            } else {
              RAST._IExpr _6490_onExpr;
              DCOMP._IOwnership _6491_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6492_recIdents;
              RAST._IExpr _out1807;
              DCOMP._IOwnership _out1808;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1809;
              (this).GenExpr(_6485_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1807, out _out1808, out _out1809);
              _6490_onExpr = _out1807;
              _6491_onOwned = _out1808;
              _6492_recIdents = _out1809;
              r = _6490_onExpr;
              if (!object.Equals(_6490_onExpr, RAST.__default.self)) {
                RAST._IExpr _source311 = _6490_onExpr;
                if (_source311.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6493___mcc_h3124 = _source311.dtor_content;
                } else if (_source311.is_ExprFromType) {
                  RAST._IType _6494___mcc_h3126 = _source311.dtor_tpe;
                } else if (_source311.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6495___mcc_h3128 = _source311.dtor_name;
                } else if (_source311.is_Match) {
                  RAST._IExpr _6496___mcc_h3130 = _source311.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6497___mcc_h3131 = _source311.dtor_cases;
                } else if (_source311.is_StmtExpr) {
                  RAST._IExpr _6498___mcc_h3134 = _source311.dtor_stmt;
                  RAST._IExpr _6499___mcc_h3135 = _source311.dtor_rhs;
                } else if (_source311.is_Block) {
                  RAST._IExpr _6500___mcc_h3138 = _source311.dtor_underlying;
                } else if (_source311.is_StructBuild) {
                  RAST._IExpr _6501___mcc_h3140 = _source311.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6502___mcc_h3141 = _source311.dtor_assignments;
                } else if (_source311.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6503___mcc_h3144 = _source311.dtor_arguments;
                } else if (_source311.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6504___mcc_h3146 = _source311.dtor_op1;
                  RAST._IExpr _6505___mcc_h3147 = _source311.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6506___mcc_h3148 = _source311.dtor_format;
                  if (object.Equals(_6504___mcc_h3146, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source312 = _6505___mcc_h3147;
                    if (_source312.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6507___mcc_h3152 = _source312.dtor_content;
                    } else if (_source312.is_ExprFromType) {
                      RAST._IType _6508___mcc_h3154 = _source312.dtor_tpe;
                    } else if (_source312.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6509___mcc_h3156 = _source312.dtor_name;
                      if (object.Equals(_6509___mcc_h3156, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source312.is_Match) {
                      RAST._IExpr _6510___mcc_h3158 = _source312.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6511___mcc_h3159 = _source312.dtor_cases;
                    } else if (_source312.is_StmtExpr) {
                      RAST._IExpr _6512___mcc_h3162 = _source312.dtor_stmt;
                      RAST._IExpr _6513___mcc_h3163 = _source312.dtor_rhs;
                    } else if (_source312.is_Block) {
                      RAST._IExpr _6514___mcc_h3166 = _source312.dtor_underlying;
                    } else if (_source312.is_StructBuild) {
                      RAST._IExpr _6515___mcc_h3168 = _source312.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6516___mcc_h3169 = _source312.dtor_assignments;
                    } else if (_source312.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6517___mcc_h3172 = _source312.dtor_arguments;
                    } else if (_source312.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6518___mcc_h3174 = _source312.dtor_op1;
                      RAST._IExpr _6519___mcc_h3175 = _source312.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6520___mcc_h3176 = _source312.dtor_format;
                    } else if (_source312.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6521___mcc_h3180 = _source312.dtor_op2;
                      RAST._IExpr _6522___mcc_h3181 = _source312.dtor_left;
                      RAST._IExpr _6523___mcc_h3182 = _source312.dtor_right;
                      DAST.Format._IBinaryOpFormat _6524___mcc_h3183 = _source312.dtor_format2;
                    } else if (_source312.is_TypeAscription) {
                      RAST._IExpr _6525___mcc_h3188 = _source312.dtor_left;
                      RAST._IType _6526___mcc_h3189 = _source312.dtor_tpe;
                    } else if (_source312.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6527___mcc_h3192 = _source312.dtor_value;
                    } else if (_source312.is_LiteralBool) {
                      bool _6528___mcc_h3194 = _source312.dtor_bvalue;
                    } else if (_source312.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6529___mcc_h3196 = _source312.dtor_value;
                      bool _6530___mcc_h3197 = _source312.dtor_binary;
                    } else if (_source312.is_DeclareVar) {
                      RAST._IDeclareType _6531___mcc_h3200 = _source312.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6532___mcc_h3201 = _source312.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6533___mcc_h3202 = _source312.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6534___mcc_h3203 = _source312.dtor_optRhs;
                    } else if (_source312.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6535___mcc_h3208 = _source312.dtor_names;
                      RAST._IExpr _6536___mcc_h3209 = _source312.dtor_rhs;
                    } else if (_source312.is_IfExpr) {
                      RAST._IExpr _6537___mcc_h3212 = _source312.dtor_cond;
                      RAST._IExpr _6538___mcc_h3213 = _source312.dtor_thn;
                      RAST._IExpr _6539___mcc_h3214 = _source312.dtor_els;
                    } else if (_source312.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6540___mcc_h3218 = _source312.dtor_optCond;
                      RAST._IExpr _6541___mcc_h3219 = _source312.dtor_underlying;
                    } else if (_source312.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6542___mcc_h3222 = _source312.dtor_name;
                      RAST._IExpr _6543___mcc_h3223 = _source312.dtor_range;
                      RAST._IExpr _6544___mcc_h3224 = _source312.dtor_body;
                    } else if (_source312.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6545___mcc_h3228 = _source312.dtor_lbl;
                      RAST._IExpr _6546___mcc_h3229 = _source312.dtor_underlying;
                    } else if (_source312.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6547___mcc_h3232 = _source312.dtor_optLbl;
                    } else if (_source312.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6548___mcc_h3234 = _source312.dtor_optLbl;
                    } else if (_source312.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6549___mcc_h3236 = _source312.dtor_optExpr;
                    } else if (_source312.is_CallType) {
                      RAST._IExpr _6550___mcc_h3238 = _source312.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6551___mcc_h3239 = _source312.dtor_typeParameters;
                    } else if (_source312.is_Call) {
                      RAST._IExpr _6552___mcc_h3242 = _source312.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6553___mcc_h3243 = _source312.dtor_arguments;
                    } else if (_source312.is_Select) {
                      RAST._IExpr _6554___mcc_h3246 = _source312.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6555___mcc_h3247 = _source312.dtor_name;
                    } else if (_source312.is_MemberSelect) {
                      RAST._IExpr _6556___mcc_h3250 = _source312.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6557___mcc_h3251 = _source312.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6558___mcc_h3254 = _source312.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6559___mcc_h3255 = _source312.dtor_retType;
                      RAST._IExpr _6560___mcc_h3256 = _source312.dtor_body;
                    }
                  } else {
                  }
                } else if (_source311.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6561___mcc_h3260 = _source311.dtor_op2;
                  RAST._IExpr _6562___mcc_h3261 = _source311.dtor_left;
                  RAST._IExpr _6563___mcc_h3262 = _source311.dtor_right;
                  DAST.Format._IBinaryOpFormat _6564___mcc_h3263 = _source311.dtor_format2;
                } else if (_source311.is_TypeAscription) {
                  RAST._IExpr _6565___mcc_h3268 = _source311.dtor_left;
                  RAST._IType _6566___mcc_h3269 = _source311.dtor_tpe;
                } else if (_source311.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6567___mcc_h3272 = _source311.dtor_value;
                } else if (_source311.is_LiteralBool) {
                  bool _6568___mcc_h3274 = _source311.dtor_bvalue;
                } else if (_source311.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6569___mcc_h3276 = _source311.dtor_value;
                  bool _6570___mcc_h3277 = _source311.dtor_binary;
                } else if (_source311.is_DeclareVar) {
                  RAST._IDeclareType _6571___mcc_h3280 = _source311.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6572___mcc_h3281 = _source311.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6573___mcc_h3282 = _source311.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6574___mcc_h3283 = _source311.dtor_optRhs;
                } else if (_source311.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6575___mcc_h3288 = _source311.dtor_names;
                  RAST._IExpr _6576___mcc_h3289 = _source311.dtor_rhs;
                } else if (_source311.is_IfExpr) {
                  RAST._IExpr _6577___mcc_h3292 = _source311.dtor_cond;
                  RAST._IExpr _6578___mcc_h3293 = _source311.dtor_thn;
                  RAST._IExpr _6579___mcc_h3294 = _source311.dtor_els;
                } else if (_source311.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6580___mcc_h3298 = _source311.dtor_optCond;
                  RAST._IExpr _6581___mcc_h3299 = _source311.dtor_underlying;
                } else if (_source311.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6582___mcc_h3302 = _source311.dtor_name;
                  RAST._IExpr _6583___mcc_h3303 = _source311.dtor_range;
                  RAST._IExpr _6584___mcc_h3304 = _source311.dtor_body;
                } else if (_source311.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6585___mcc_h3308 = _source311.dtor_lbl;
                  RAST._IExpr _6586___mcc_h3309 = _source311.dtor_underlying;
                } else if (_source311.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6587___mcc_h3312 = _source311.dtor_optLbl;
                } else if (_source311.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6588___mcc_h3314 = _source311.dtor_optLbl;
                } else if (_source311.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6589___mcc_h3316 = _source311.dtor_optExpr;
                } else if (_source311.is_CallType) {
                  RAST._IExpr _6590___mcc_h3318 = _source311.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6591___mcc_h3319 = _source311.dtor_typeParameters;
                } else if (_source311.is_Call) {
                  RAST._IExpr _6592___mcc_h3322 = _source311.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6593___mcc_h3323 = _source311.dtor_arguments;
                } else if (_source311.is_Select) {
                  RAST._IExpr _6594___mcc_h3326 = _source311.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6595___mcc_h3327 = _source311.dtor_name;
                } else if (_source311.is_MemberSelect) {
                  RAST._IExpr _6596___mcc_h3330 = _source311.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6597___mcc_h3331 = _source311.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6598___mcc_h3334 = _source311.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6599___mcc_h3335 = _source311.dtor_retType;
                  RAST._IExpr _6600___mcc_h3336 = _source311.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6484_field));
              if (_6483_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6601_fromOwnership;
              _6601_fromOwnership = ((_6483_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1810;
              DCOMP._IOwnership _out1811;
              DCOMP.COMP.FromOwnership(r, _6601_fromOwnership, expectedOwnership, out _out1810, out _out1811);
              r = _out1810;
              resultingOwnership = _out1811;
              readIdents = _6492_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MapBuilder) {
          DAST._IType _6602___mcc_h112 = _source284.dtor_keyType;
          DAST._IType _6603___mcc_h113 = _source284.dtor_valueType;
          DAST._IType _6604_fieldType = _4872___mcc_h57;
          bool _6605_isDatatype = _4871___mcc_h56;
          bool _6606_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6607_field = _4869___mcc_h54;
          DAST._IExpression _6608_on = _4868___mcc_h53;
          {
            if (_6605_isDatatype) {
              RAST._IExpr _6609_onExpr;
              DCOMP._IOwnership _6610_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6611_recIdents;
              RAST._IExpr _out1812;
              DCOMP._IOwnership _out1813;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1814;
              (this).GenExpr(_6608_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1812, out _out1813, out _out1814);
              _6609_onExpr = _out1812;
              _6610_onOwned = _out1813;
              _6611_recIdents = _out1814;
              r = ((_6609_onExpr).Sel(DCOMP.__default.escapeName(_6607_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6612_typ;
              RAST._IType _out1815;
              _out1815 = (this).GenType(_6604_fieldType, false, false);
              _6612_typ = _out1815;
              if (((_6612_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1816;
                DCOMP._IOwnership _out1817;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1816, out _out1817);
                r = _out1816;
                resultingOwnership = _out1817;
              }
              readIdents = _6611_recIdents;
            } else {
              RAST._IExpr _6613_onExpr;
              DCOMP._IOwnership _6614_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6615_recIdents;
              RAST._IExpr _out1818;
              DCOMP._IOwnership _out1819;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1820;
              (this).GenExpr(_6608_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1818, out _out1819, out _out1820);
              _6613_onExpr = _out1818;
              _6614_onOwned = _out1819;
              _6615_recIdents = _out1820;
              r = _6613_onExpr;
              if (!object.Equals(_6613_onExpr, RAST.__default.self)) {
                RAST._IExpr _source313 = _6613_onExpr;
                if (_source313.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6616___mcc_h3340 = _source313.dtor_content;
                } else if (_source313.is_ExprFromType) {
                  RAST._IType _6617___mcc_h3342 = _source313.dtor_tpe;
                } else if (_source313.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6618___mcc_h3344 = _source313.dtor_name;
                } else if (_source313.is_Match) {
                  RAST._IExpr _6619___mcc_h3346 = _source313.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6620___mcc_h3347 = _source313.dtor_cases;
                } else if (_source313.is_StmtExpr) {
                  RAST._IExpr _6621___mcc_h3350 = _source313.dtor_stmt;
                  RAST._IExpr _6622___mcc_h3351 = _source313.dtor_rhs;
                } else if (_source313.is_Block) {
                  RAST._IExpr _6623___mcc_h3354 = _source313.dtor_underlying;
                } else if (_source313.is_StructBuild) {
                  RAST._IExpr _6624___mcc_h3356 = _source313.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6625___mcc_h3357 = _source313.dtor_assignments;
                } else if (_source313.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6626___mcc_h3360 = _source313.dtor_arguments;
                } else if (_source313.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6627___mcc_h3362 = _source313.dtor_op1;
                  RAST._IExpr _6628___mcc_h3363 = _source313.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6629___mcc_h3364 = _source313.dtor_format;
                  if (object.Equals(_6627___mcc_h3362, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source314 = _6628___mcc_h3363;
                    if (_source314.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6630___mcc_h3368 = _source314.dtor_content;
                    } else if (_source314.is_ExprFromType) {
                      RAST._IType _6631___mcc_h3370 = _source314.dtor_tpe;
                    } else if (_source314.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6632___mcc_h3372 = _source314.dtor_name;
                      if (object.Equals(_6632___mcc_h3372, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source314.is_Match) {
                      RAST._IExpr _6633___mcc_h3374 = _source314.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6634___mcc_h3375 = _source314.dtor_cases;
                    } else if (_source314.is_StmtExpr) {
                      RAST._IExpr _6635___mcc_h3378 = _source314.dtor_stmt;
                      RAST._IExpr _6636___mcc_h3379 = _source314.dtor_rhs;
                    } else if (_source314.is_Block) {
                      RAST._IExpr _6637___mcc_h3382 = _source314.dtor_underlying;
                    } else if (_source314.is_StructBuild) {
                      RAST._IExpr _6638___mcc_h3384 = _source314.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6639___mcc_h3385 = _source314.dtor_assignments;
                    } else if (_source314.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6640___mcc_h3388 = _source314.dtor_arguments;
                    } else if (_source314.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6641___mcc_h3390 = _source314.dtor_op1;
                      RAST._IExpr _6642___mcc_h3391 = _source314.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6643___mcc_h3392 = _source314.dtor_format;
                    } else if (_source314.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6644___mcc_h3396 = _source314.dtor_op2;
                      RAST._IExpr _6645___mcc_h3397 = _source314.dtor_left;
                      RAST._IExpr _6646___mcc_h3398 = _source314.dtor_right;
                      DAST.Format._IBinaryOpFormat _6647___mcc_h3399 = _source314.dtor_format2;
                    } else if (_source314.is_TypeAscription) {
                      RAST._IExpr _6648___mcc_h3404 = _source314.dtor_left;
                      RAST._IType _6649___mcc_h3405 = _source314.dtor_tpe;
                    } else if (_source314.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6650___mcc_h3408 = _source314.dtor_value;
                    } else if (_source314.is_LiteralBool) {
                      bool _6651___mcc_h3410 = _source314.dtor_bvalue;
                    } else if (_source314.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6652___mcc_h3412 = _source314.dtor_value;
                      bool _6653___mcc_h3413 = _source314.dtor_binary;
                    } else if (_source314.is_DeclareVar) {
                      RAST._IDeclareType _6654___mcc_h3416 = _source314.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6655___mcc_h3417 = _source314.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6656___mcc_h3418 = _source314.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6657___mcc_h3419 = _source314.dtor_optRhs;
                    } else if (_source314.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6658___mcc_h3424 = _source314.dtor_names;
                      RAST._IExpr _6659___mcc_h3425 = _source314.dtor_rhs;
                    } else if (_source314.is_IfExpr) {
                      RAST._IExpr _6660___mcc_h3428 = _source314.dtor_cond;
                      RAST._IExpr _6661___mcc_h3429 = _source314.dtor_thn;
                      RAST._IExpr _6662___mcc_h3430 = _source314.dtor_els;
                    } else if (_source314.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6663___mcc_h3434 = _source314.dtor_optCond;
                      RAST._IExpr _6664___mcc_h3435 = _source314.dtor_underlying;
                    } else if (_source314.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6665___mcc_h3438 = _source314.dtor_name;
                      RAST._IExpr _6666___mcc_h3439 = _source314.dtor_range;
                      RAST._IExpr _6667___mcc_h3440 = _source314.dtor_body;
                    } else if (_source314.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6668___mcc_h3444 = _source314.dtor_lbl;
                      RAST._IExpr _6669___mcc_h3445 = _source314.dtor_underlying;
                    } else if (_source314.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6670___mcc_h3448 = _source314.dtor_optLbl;
                    } else if (_source314.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6671___mcc_h3450 = _source314.dtor_optLbl;
                    } else if (_source314.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6672___mcc_h3452 = _source314.dtor_optExpr;
                    } else if (_source314.is_CallType) {
                      RAST._IExpr _6673___mcc_h3454 = _source314.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6674___mcc_h3455 = _source314.dtor_typeParameters;
                    } else if (_source314.is_Call) {
                      RAST._IExpr _6675___mcc_h3458 = _source314.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6676___mcc_h3459 = _source314.dtor_arguments;
                    } else if (_source314.is_Select) {
                      RAST._IExpr _6677___mcc_h3462 = _source314.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6678___mcc_h3463 = _source314.dtor_name;
                    } else if (_source314.is_MemberSelect) {
                      RAST._IExpr _6679___mcc_h3466 = _source314.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6680___mcc_h3467 = _source314.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6681___mcc_h3470 = _source314.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6682___mcc_h3471 = _source314.dtor_retType;
                      RAST._IExpr _6683___mcc_h3472 = _source314.dtor_body;
                    }
                  } else {
                  }
                } else if (_source313.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6684___mcc_h3476 = _source313.dtor_op2;
                  RAST._IExpr _6685___mcc_h3477 = _source313.dtor_left;
                  RAST._IExpr _6686___mcc_h3478 = _source313.dtor_right;
                  DAST.Format._IBinaryOpFormat _6687___mcc_h3479 = _source313.dtor_format2;
                } else if (_source313.is_TypeAscription) {
                  RAST._IExpr _6688___mcc_h3484 = _source313.dtor_left;
                  RAST._IType _6689___mcc_h3485 = _source313.dtor_tpe;
                } else if (_source313.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6690___mcc_h3488 = _source313.dtor_value;
                } else if (_source313.is_LiteralBool) {
                  bool _6691___mcc_h3490 = _source313.dtor_bvalue;
                } else if (_source313.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6692___mcc_h3492 = _source313.dtor_value;
                  bool _6693___mcc_h3493 = _source313.dtor_binary;
                } else if (_source313.is_DeclareVar) {
                  RAST._IDeclareType _6694___mcc_h3496 = _source313.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6695___mcc_h3497 = _source313.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6696___mcc_h3498 = _source313.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6697___mcc_h3499 = _source313.dtor_optRhs;
                } else if (_source313.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6698___mcc_h3504 = _source313.dtor_names;
                  RAST._IExpr _6699___mcc_h3505 = _source313.dtor_rhs;
                } else if (_source313.is_IfExpr) {
                  RAST._IExpr _6700___mcc_h3508 = _source313.dtor_cond;
                  RAST._IExpr _6701___mcc_h3509 = _source313.dtor_thn;
                  RAST._IExpr _6702___mcc_h3510 = _source313.dtor_els;
                } else if (_source313.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6703___mcc_h3514 = _source313.dtor_optCond;
                  RAST._IExpr _6704___mcc_h3515 = _source313.dtor_underlying;
                } else if (_source313.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6705___mcc_h3518 = _source313.dtor_name;
                  RAST._IExpr _6706___mcc_h3519 = _source313.dtor_range;
                  RAST._IExpr _6707___mcc_h3520 = _source313.dtor_body;
                } else if (_source313.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6708___mcc_h3524 = _source313.dtor_lbl;
                  RAST._IExpr _6709___mcc_h3525 = _source313.dtor_underlying;
                } else if (_source313.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6710___mcc_h3528 = _source313.dtor_optLbl;
                } else if (_source313.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6711___mcc_h3530 = _source313.dtor_optLbl;
                } else if (_source313.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6712___mcc_h3532 = _source313.dtor_optExpr;
                } else if (_source313.is_CallType) {
                  RAST._IExpr _6713___mcc_h3534 = _source313.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6714___mcc_h3535 = _source313.dtor_typeParameters;
                } else if (_source313.is_Call) {
                  RAST._IExpr _6715___mcc_h3538 = _source313.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6716___mcc_h3539 = _source313.dtor_arguments;
                } else if (_source313.is_Select) {
                  RAST._IExpr _6717___mcc_h3542 = _source313.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6718___mcc_h3543 = _source313.dtor_name;
                } else if (_source313.is_MemberSelect) {
                  RAST._IExpr _6719___mcc_h3546 = _source313.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6720___mcc_h3547 = _source313.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6721___mcc_h3550 = _source313.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6722___mcc_h3551 = _source313.dtor_retType;
                  RAST._IExpr _6723___mcc_h3552 = _source313.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6607_field));
              if (_6606_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6724_fromOwnership;
              _6724_fromOwnership = ((_6606_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1821;
              DCOMP._IOwnership _out1822;
              DCOMP.COMP.FromOwnership(r, _6724_fromOwnership, expectedOwnership, out _out1821, out _out1822);
              r = _out1821;
              resultingOwnership = _out1822;
              readIdents = _6615_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SeqUpdate) {
          DAST._IExpression _6725___mcc_h116 = _source284.dtor_expr;
          DAST._IExpression _6726___mcc_h117 = _source284.dtor_indexExpr;
          DAST._IExpression _6727___mcc_h118 = _source284.dtor_value;
          DAST._IType _6728_fieldType = _4872___mcc_h57;
          bool _6729_isDatatype = _4871___mcc_h56;
          bool _6730_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6731_field = _4869___mcc_h54;
          DAST._IExpression _6732_on = _4868___mcc_h53;
          {
            if (_6729_isDatatype) {
              RAST._IExpr _6733_onExpr;
              DCOMP._IOwnership _6734_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6735_recIdents;
              RAST._IExpr _out1823;
              DCOMP._IOwnership _out1824;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1825;
              (this).GenExpr(_6732_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1823, out _out1824, out _out1825);
              _6733_onExpr = _out1823;
              _6734_onOwned = _out1824;
              _6735_recIdents = _out1825;
              r = ((_6733_onExpr).Sel(DCOMP.__default.escapeName(_6731_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6736_typ;
              RAST._IType _out1826;
              _out1826 = (this).GenType(_6728_fieldType, false, false);
              _6736_typ = _out1826;
              if (((_6736_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1827;
                DCOMP._IOwnership _out1828;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1827, out _out1828);
                r = _out1827;
                resultingOwnership = _out1828;
              }
              readIdents = _6735_recIdents;
            } else {
              RAST._IExpr _6737_onExpr;
              DCOMP._IOwnership _6738_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6739_recIdents;
              RAST._IExpr _out1829;
              DCOMP._IOwnership _out1830;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1831;
              (this).GenExpr(_6732_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1829, out _out1830, out _out1831);
              _6737_onExpr = _out1829;
              _6738_onOwned = _out1830;
              _6739_recIdents = _out1831;
              r = _6737_onExpr;
              if (!object.Equals(_6737_onExpr, RAST.__default.self)) {
                RAST._IExpr _source315 = _6737_onExpr;
                if (_source315.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6740___mcc_h3556 = _source315.dtor_content;
                } else if (_source315.is_ExprFromType) {
                  RAST._IType _6741___mcc_h3558 = _source315.dtor_tpe;
                } else if (_source315.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6742___mcc_h3560 = _source315.dtor_name;
                } else if (_source315.is_Match) {
                  RAST._IExpr _6743___mcc_h3562 = _source315.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6744___mcc_h3563 = _source315.dtor_cases;
                } else if (_source315.is_StmtExpr) {
                  RAST._IExpr _6745___mcc_h3566 = _source315.dtor_stmt;
                  RAST._IExpr _6746___mcc_h3567 = _source315.dtor_rhs;
                } else if (_source315.is_Block) {
                  RAST._IExpr _6747___mcc_h3570 = _source315.dtor_underlying;
                } else if (_source315.is_StructBuild) {
                  RAST._IExpr _6748___mcc_h3572 = _source315.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6749___mcc_h3573 = _source315.dtor_assignments;
                } else if (_source315.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6750___mcc_h3576 = _source315.dtor_arguments;
                } else if (_source315.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6751___mcc_h3578 = _source315.dtor_op1;
                  RAST._IExpr _6752___mcc_h3579 = _source315.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6753___mcc_h3580 = _source315.dtor_format;
                  if (object.Equals(_6751___mcc_h3578, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source316 = _6752___mcc_h3579;
                    if (_source316.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6754___mcc_h3584 = _source316.dtor_content;
                    } else if (_source316.is_ExprFromType) {
                      RAST._IType _6755___mcc_h3586 = _source316.dtor_tpe;
                    } else if (_source316.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6756___mcc_h3588 = _source316.dtor_name;
                      if (object.Equals(_6756___mcc_h3588, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source316.is_Match) {
                      RAST._IExpr _6757___mcc_h3590 = _source316.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6758___mcc_h3591 = _source316.dtor_cases;
                    } else if (_source316.is_StmtExpr) {
                      RAST._IExpr _6759___mcc_h3594 = _source316.dtor_stmt;
                      RAST._IExpr _6760___mcc_h3595 = _source316.dtor_rhs;
                    } else if (_source316.is_Block) {
                      RAST._IExpr _6761___mcc_h3598 = _source316.dtor_underlying;
                    } else if (_source316.is_StructBuild) {
                      RAST._IExpr _6762___mcc_h3600 = _source316.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6763___mcc_h3601 = _source316.dtor_assignments;
                    } else if (_source316.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6764___mcc_h3604 = _source316.dtor_arguments;
                    } else if (_source316.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6765___mcc_h3606 = _source316.dtor_op1;
                      RAST._IExpr _6766___mcc_h3607 = _source316.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6767___mcc_h3608 = _source316.dtor_format;
                    } else if (_source316.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6768___mcc_h3612 = _source316.dtor_op2;
                      RAST._IExpr _6769___mcc_h3613 = _source316.dtor_left;
                      RAST._IExpr _6770___mcc_h3614 = _source316.dtor_right;
                      DAST.Format._IBinaryOpFormat _6771___mcc_h3615 = _source316.dtor_format2;
                    } else if (_source316.is_TypeAscription) {
                      RAST._IExpr _6772___mcc_h3620 = _source316.dtor_left;
                      RAST._IType _6773___mcc_h3621 = _source316.dtor_tpe;
                    } else if (_source316.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6774___mcc_h3624 = _source316.dtor_value;
                    } else if (_source316.is_LiteralBool) {
                      bool _6775___mcc_h3626 = _source316.dtor_bvalue;
                    } else if (_source316.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6776___mcc_h3628 = _source316.dtor_value;
                      bool _6777___mcc_h3629 = _source316.dtor_binary;
                    } else if (_source316.is_DeclareVar) {
                      RAST._IDeclareType _6778___mcc_h3632 = _source316.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6779___mcc_h3633 = _source316.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6780___mcc_h3634 = _source316.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6781___mcc_h3635 = _source316.dtor_optRhs;
                    } else if (_source316.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6782___mcc_h3640 = _source316.dtor_names;
                      RAST._IExpr _6783___mcc_h3641 = _source316.dtor_rhs;
                    } else if (_source316.is_IfExpr) {
                      RAST._IExpr _6784___mcc_h3644 = _source316.dtor_cond;
                      RAST._IExpr _6785___mcc_h3645 = _source316.dtor_thn;
                      RAST._IExpr _6786___mcc_h3646 = _source316.dtor_els;
                    } else if (_source316.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6787___mcc_h3650 = _source316.dtor_optCond;
                      RAST._IExpr _6788___mcc_h3651 = _source316.dtor_underlying;
                    } else if (_source316.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6789___mcc_h3654 = _source316.dtor_name;
                      RAST._IExpr _6790___mcc_h3655 = _source316.dtor_range;
                      RAST._IExpr _6791___mcc_h3656 = _source316.dtor_body;
                    } else if (_source316.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6792___mcc_h3660 = _source316.dtor_lbl;
                      RAST._IExpr _6793___mcc_h3661 = _source316.dtor_underlying;
                    } else if (_source316.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6794___mcc_h3664 = _source316.dtor_optLbl;
                    } else if (_source316.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6795___mcc_h3666 = _source316.dtor_optLbl;
                    } else if (_source316.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6796___mcc_h3668 = _source316.dtor_optExpr;
                    } else if (_source316.is_CallType) {
                      RAST._IExpr _6797___mcc_h3670 = _source316.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6798___mcc_h3671 = _source316.dtor_typeParameters;
                    } else if (_source316.is_Call) {
                      RAST._IExpr _6799___mcc_h3674 = _source316.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6800___mcc_h3675 = _source316.dtor_arguments;
                    } else if (_source316.is_Select) {
                      RAST._IExpr _6801___mcc_h3678 = _source316.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6802___mcc_h3679 = _source316.dtor_name;
                    } else if (_source316.is_MemberSelect) {
                      RAST._IExpr _6803___mcc_h3682 = _source316.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6804___mcc_h3683 = _source316.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6805___mcc_h3686 = _source316.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6806___mcc_h3687 = _source316.dtor_retType;
                      RAST._IExpr _6807___mcc_h3688 = _source316.dtor_body;
                    }
                  } else {
                  }
                } else if (_source315.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6808___mcc_h3692 = _source315.dtor_op2;
                  RAST._IExpr _6809___mcc_h3693 = _source315.dtor_left;
                  RAST._IExpr _6810___mcc_h3694 = _source315.dtor_right;
                  DAST.Format._IBinaryOpFormat _6811___mcc_h3695 = _source315.dtor_format2;
                } else if (_source315.is_TypeAscription) {
                  RAST._IExpr _6812___mcc_h3700 = _source315.dtor_left;
                  RAST._IType _6813___mcc_h3701 = _source315.dtor_tpe;
                } else if (_source315.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6814___mcc_h3704 = _source315.dtor_value;
                } else if (_source315.is_LiteralBool) {
                  bool _6815___mcc_h3706 = _source315.dtor_bvalue;
                } else if (_source315.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6816___mcc_h3708 = _source315.dtor_value;
                  bool _6817___mcc_h3709 = _source315.dtor_binary;
                } else if (_source315.is_DeclareVar) {
                  RAST._IDeclareType _6818___mcc_h3712 = _source315.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6819___mcc_h3713 = _source315.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6820___mcc_h3714 = _source315.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6821___mcc_h3715 = _source315.dtor_optRhs;
                } else if (_source315.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6822___mcc_h3720 = _source315.dtor_names;
                  RAST._IExpr _6823___mcc_h3721 = _source315.dtor_rhs;
                } else if (_source315.is_IfExpr) {
                  RAST._IExpr _6824___mcc_h3724 = _source315.dtor_cond;
                  RAST._IExpr _6825___mcc_h3725 = _source315.dtor_thn;
                  RAST._IExpr _6826___mcc_h3726 = _source315.dtor_els;
                } else if (_source315.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6827___mcc_h3730 = _source315.dtor_optCond;
                  RAST._IExpr _6828___mcc_h3731 = _source315.dtor_underlying;
                } else if (_source315.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6829___mcc_h3734 = _source315.dtor_name;
                  RAST._IExpr _6830___mcc_h3735 = _source315.dtor_range;
                  RAST._IExpr _6831___mcc_h3736 = _source315.dtor_body;
                } else if (_source315.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6832___mcc_h3740 = _source315.dtor_lbl;
                  RAST._IExpr _6833___mcc_h3741 = _source315.dtor_underlying;
                } else if (_source315.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6834___mcc_h3744 = _source315.dtor_optLbl;
                } else if (_source315.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6835___mcc_h3746 = _source315.dtor_optLbl;
                } else if (_source315.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6836___mcc_h3748 = _source315.dtor_optExpr;
                } else if (_source315.is_CallType) {
                  RAST._IExpr _6837___mcc_h3750 = _source315.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6838___mcc_h3751 = _source315.dtor_typeParameters;
                } else if (_source315.is_Call) {
                  RAST._IExpr _6839___mcc_h3754 = _source315.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6840___mcc_h3755 = _source315.dtor_arguments;
                } else if (_source315.is_Select) {
                  RAST._IExpr _6841___mcc_h3758 = _source315.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6842___mcc_h3759 = _source315.dtor_name;
                } else if (_source315.is_MemberSelect) {
                  RAST._IExpr _6843___mcc_h3762 = _source315.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6844___mcc_h3763 = _source315.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6845___mcc_h3766 = _source315.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6846___mcc_h3767 = _source315.dtor_retType;
                  RAST._IExpr _6847___mcc_h3768 = _source315.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6731_field));
              if (_6730_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6848_fromOwnership;
              _6848_fromOwnership = ((_6730_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1832;
              DCOMP._IOwnership _out1833;
              DCOMP.COMP.FromOwnership(r, _6848_fromOwnership, expectedOwnership, out _out1832, out _out1833);
              r = _out1832;
              resultingOwnership = _out1833;
              readIdents = _6739_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MapUpdate) {
          DAST._IExpression _6849___mcc_h122 = _source284.dtor_expr;
          DAST._IExpression _6850___mcc_h123 = _source284.dtor_indexExpr;
          DAST._IExpression _6851___mcc_h124 = _source284.dtor_value;
          DAST._IType _6852_fieldType = _4872___mcc_h57;
          bool _6853_isDatatype = _4871___mcc_h56;
          bool _6854_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6855_field = _4869___mcc_h54;
          DAST._IExpression _6856_on = _4868___mcc_h53;
          {
            if (_6853_isDatatype) {
              RAST._IExpr _6857_onExpr;
              DCOMP._IOwnership _6858_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6859_recIdents;
              RAST._IExpr _out1834;
              DCOMP._IOwnership _out1835;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1836;
              (this).GenExpr(_6856_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1834, out _out1835, out _out1836);
              _6857_onExpr = _out1834;
              _6858_onOwned = _out1835;
              _6859_recIdents = _out1836;
              r = ((_6857_onExpr).Sel(DCOMP.__default.escapeName(_6855_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6860_typ;
              RAST._IType _out1837;
              _out1837 = (this).GenType(_6852_fieldType, false, false);
              _6860_typ = _out1837;
              if (((_6860_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1838;
                DCOMP._IOwnership _out1839;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1838, out _out1839);
                r = _out1838;
                resultingOwnership = _out1839;
              }
              readIdents = _6859_recIdents;
            } else {
              RAST._IExpr _6861_onExpr;
              DCOMP._IOwnership _6862_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6863_recIdents;
              RAST._IExpr _out1840;
              DCOMP._IOwnership _out1841;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1842;
              (this).GenExpr(_6856_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1840, out _out1841, out _out1842);
              _6861_onExpr = _out1840;
              _6862_onOwned = _out1841;
              _6863_recIdents = _out1842;
              r = _6861_onExpr;
              if (!object.Equals(_6861_onExpr, RAST.__default.self)) {
                RAST._IExpr _source317 = _6861_onExpr;
                if (_source317.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6864___mcc_h3772 = _source317.dtor_content;
                } else if (_source317.is_ExprFromType) {
                  RAST._IType _6865___mcc_h3774 = _source317.dtor_tpe;
                } else if (_source317.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6866___mcc_h3776 = _source317.dtor_name;
                } else if (_source317.is_Match) {
                  RAST._IExpr _6867___mcc_h3778 = _source317.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6868___mcc_h3779 = _source317.dtor_cases;
                } else if (_source317.is_StmtExpr) {
                  RAST._IExpr _6869___mcc_h3782 = _source317.dtor_stmt;
                  RAST._IExpr _6870___mcc_h3783 = _source317.dtor_rhs;
                } else if (_source317.is_Block) {
                  RAST._IExpr _6871___mcc_h3786 = _source317.dtor_underlying;
                } else if (_source317.is_StructBuild) {
                  RAST._IExpr _6872___mcc_h3788 = _source317.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6873___mcc_h3789 = _source317.dtor_assignments;
                } else if (_source317.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6874___mcc_h3792 = _source317.dtor_arguments;
                } else if (_source317.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6875___mcc_h3794 = _source317.dtor_op1;
                  RAST._IExpr _6876___mcc_h3795 = _source317.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6877___mcc_h3796 = _source317.dtor_format;
                  if (object.Equals(_6875___mcc_h3794, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source318 = _6876___mcc_h3795;
                    if (_source318.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6878___mcc_h3800 = _source318.dtor_content;
                    } else if (_source318.is_ExprFromType) {
                      RAST._IType _6879___mcc_h3802 = _source318.dtor_tpe;
                    } else if (_source318.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6880___mcc_h3804 = _source318.dtor_name;
                      if (object.Equals(_6880___mcc_h3804, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source318.is_Match) {
                      RAST._IExpr _6881___mcc_h3806 = _source318.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6882___mcc_h3807 = _source318.dtor_cases;
                    } else if (_source318.is_StmtExpr) {
                      RAST._IExpr _6883___mcc_h3810 = _source318.dtor_stmt;
                      RAST._IExpr _6884___mcc_h3811 = _source318.dtor_rhs;
                    } else if (_source318.is_Block) {
                      RAST._IExpr _6885___mcc_h3814 = _source318.dtor_underlying;
                    } else if (_source318.is_StructBuild) {
                      RAST._IExpr _6886___mcc_h3816 = _source318.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6887___mcc_h3817 = _source318.dtor_assignments;
                    } else if (_source318.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6888___mcc_h3820 = _source318.dtor_arguments;
                    } else if (_source318.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6889___mcc_h3822 = _source318.dtor_op1;
                      RAST._IExpr _6890___mcc_h3823 = _source318.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6891___mcc_h3824 = _source318.dtor_format;
                    } else if (_source318.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6892___mcc_h3828 = _source318.dtor_op2;
                      RAST._IExpr _6893___mcc_h3829 = _source318.dtor_left;
                      RAST._IExpr _6894___mcc_h3830 = _source318.dtor_right;
                      DAST.Format._IBinaryOpFormat _6895___mcc_h3831 = _source318.dtor_format2;
                    } else if (_source318.is_TypeAscription) {
                      RAST._IExpr _6896___mcc_h3836 = _source318.dtor_left;
                      RAST._IType _6897___mcc_h3837 = _source318.dtor_tpe;
                    } else if (_source318.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6898___mcc_h3840 = _source318.dtor_value;
                    } else if (_source318.is_LiteralBool) {
                      bool _6899___mcc_h3842 = _source318.dtor_bvalue;
                    } else if (_source318.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6900___mcc_h3844 = _source318.dtor_value;
                      bool _6901___mcc_h3845 = _source318.dtor_binary;
                    } else if (_source318.is_DeclareVar) {
                      RAST._IDeclareType _6902___mcc_h3848 = _source318.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6903___mcc_h3849 = _source318.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6904___mcc_h3850 = _source318.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6905___mcc_h3851 = _source318.dtor_optRhs;
                    } else if (_source318.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6906___mcc_h3856 = _source318.dtor_names;
                      RAST._IExpr _6907___mcc_h3857 = _source318.dtor_rhs;
                    } else if (_source318.is_IfExpr) {
                      RAST._IExpr _6908___mcc_h3860 = _source318.dtor_cond;
                      RAST._IExpr _6909___mcc_h3861 = _source318.dtor_thn;
                      RAST._IExpr _6910___mcc_h3862 = _source318.dtor_els;
                    } else if (_source318.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6911___mcc_h3866 = _source318.dtor_optCond;
                      RAST._IExpr _6912___mcc_h3867 = _source318.dtor_underlying;
                    } else if (_source318.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6913___mcc_h3870 = _source318.dtor_name;
                      RAST._IExpr _6914___mcc_h3871 = _source318.dtor_range;
                      RAST._IExpr _6915___mcc_h3872 = _source318.dtor_body;
                    } else if (_source318.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6916___mcc_h3876 = _source318.dtor_lbl;
                      RAST._IExpr _6917___mcc_h3877 = _source318.dtor_underlying;
                    } else if (_source318.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6918___mcc_h3880 = _source318.dtor_optLbl;
                    } else if (_source318.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6919___mcc_h3882 = _source318.dtor_optLbl;
                    } else if (_source318.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6920___mcc_h3884 = _source318.dtor_optExpr;
                    } else if (_source318.is_CallType) {
                      RAST._IExpr _6921___mcc_h3886 = _source318.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6922___mcc_h3887 = _source318.dtor_typeParameters;
                    } else if (_source318.is_Call) {
                      RAST._IExpr _6923___mcc_h3890 = _source318.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6924___mcc_h3891 = _source318.dtor_arguments;
                    } else if (_source318.is_Select) {
                      RAST._IExpr _6925___mcc_h3894 = _source318.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6926___mcc_h3895 = _source318.dtor_name;
                    } else if (_source318.is_MemberSelect) {
                      RAST._IExpr _6927___mcc_h3898 = _source318.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6928___mcc_h3899 = _source318.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6929___mcc_h3902 = _source318.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6930___mcc_h3903 = _source318.dtor_retType;
                      RAST._IExpr _6931___mcc_h3904 = _source318.dtor_body;
                    }
                  } else {
                  }
                } else if (_source317.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6932___mcc_h3908 = _source317.dtor_op2;
                  RAST._IExpr _6933___mcc_h3909 = _source317.dtor_left;
                  RAST._IExpr _6934___mcc_h3910 = _source317.dtor_right;
                  DAST.Format._IBinaryOpFormat _6935___mcc_h3911 = _source317.dtor_format2;
                } else if (_source317.is_TypeAscription) {
                  RAST._IExpr _6936___mcc_h3916 = _source317.dtor_left;
                  RAST._IType _6937___mcc_h3917 = _source317.dtor_tpe;
                } else if (_source317.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6938___mcc_h3920 = _source317.dtor_value;
                } else if (_source317.is_LiteralBool) {
                  bool _6939___mcc_h3922 = _source317.dtor_bvalue;
                } else if (_source317.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6940___mcc_h3924 = _source317.dtor_value;
                  bool _6941___mcc_h3925 = _source317.dtor_binary;
                } else if (_source317.is_DeclareVar) {
                  RAST._IDeclareType _6942___mcc_h3928 = _source317.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6943___mcc_h3929 = _source317.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6944___mcc_h3930 = _source317.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6945___mcc_h3931 = _source317.dtor_optRhs;
                } else if (_source317.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6946___mcc_h3936 = _source317.dtor_names;
                  RAST._IExpr _6947___mcc_h3937 = _source317.dtor_rhs;
                } else if (_source317.is_IfExpr) {
                  RAST._IExpr _6948___mcc_h3940 = _source317.dtor_cond;
                  RAST._IExpr _6949___mcc_h3941 = _source317.dtor_thn;
                  RAST._IExpr _6950___mcc_h3942 = _source317.dtor_els;
                } else if (_source317.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6951___mcc_h3946 = _source317.dtor_optCond;
                  RAST._IExpr _6952___mcc_h3947 = _source317.dtor_underlying;
                } else if (_source317.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6953___mcc_h3950 = _source317.dtor_name;
                  RAST._IExpr _6954___mcc_h3951 = _source317.dtor_range;
                  RAST._IExpr _6955___mcc_h3952 = _source317.dtor_body;
                } else if (_source317.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6956___mcc_h3956 = _source317.dtor_lbl;
                  RAST._IExpr _6957___mcc_h3957 = _source317.dtor_underlying;
                } else if (_source317.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6958___mcc_h3960 = _source317.dtor_optLbl;
                } else if (_source317.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6959___mcc_h3962 = _source317.dtor_optLbl;
                } else if (_source317.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6960___mcc_h3964 = _source317.dtor_optExpr;
                } else if (_source317.is_CallType) {
                  RAST._IExpr _6961___mcc_h3966 = _source317.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6962___mcc_h3967 = _source317.dtor_typeParameters;
                } else if (_source317.is_Call) {
                  RAST._IExpr _6963___mcc_h3970 = _source317.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6964___mcc_h3971 = _source317.dtor_arguments;
                } else if (_source317.is_Select) {
                  RAST._IExpr _6965___mcc_h3974 = _source317.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6966___mcc_h3975 = _source317.dtor_name;
                } else if (_source317.is_MemberSelect) {
                  RAST._IExpr _6967___mcc_h3978 = _source317.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6968___mcc_h3979 = _source317.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6969___mcc_h3982 = _source317.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6970___mcc_h3983 = _source317.dtor_retType;
                  RAST._IExpr _6971___mcc_h3984 = _source317.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6855_field));
              if (_6854_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _6972_fromOwnership;
              _6972_fromOwnership = ((_6854_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1843;
              DCOMP._IOwnership _out1844;
              DCOMP.COMP.FromOwnership(r, _6972_fromOwnership, expectedOwnership, out _out1843, out _out1844);
              r = _out1843;
              resultingOwnership = _out1844;
              readIdents = _6863_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SetBuilder) {
          DAST._IType _6973___mcc_h128 = _source284.dtor_elemType;
          DAST._IType _6974_fieldType = _4872___mcc_h57;
          bool _6975_isDatatype = _4871___mcc_h56;
          bool _6976_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _6977_field = _4869___mcc_h54;
          DAST._IExpression _6978_on = _4868___mcc_h53;
          {
            if (_6975_isDatatype) {
              RAST._IExpr _6979_onExpr;
              DCOMP._IOwnership _6980_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6981_recIdents;
              RAST._IExpr _out1845;
              DCOMP._IOwnership _out1846;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1847;
              (this).GenExpr(_6978_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1845, out _out1846, out _out1847);
              _6979_onExpr = _out1845;
              _6980_onOwned = _out1846;
              _6981_recIdents = _out1847;
              r = ((_6979_onExpr).Sel(DCOMP.__default.escapeName(_6977_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6982_typ;
              RAST._IType _out1848;
              _out1848 = (this).GenType(_6974_fieldType, false, false);
              _6982_typ = _out1848;
              if (((_6982_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1849;
                DCOMP._IOwnership _out1850;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1849, out _out1850);
                r = _out1849;
                resultingOwnership = _out1850;
              }
              readIdents = _6981_recIdents;
            } else {
              RAST._IExpr _6983_onExpr;
              DCOMP._IOwnership _6984_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6985_recIdents;
              RAST._IExpr _out1851;
              DCOMP._IOwnership _out1852;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1853;
              (this).GenExpr(_6978_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1851, out _out1852, out _out1853);
              _6983_onExpr = _out1851;
              _6984_onOwned = _out1852;
              _6985_recIdents = _out1853;
              r = _6983_onExpr;
              if (!object.Equals(_6983_onExpr, RAST.__default.self)) {
                RAST._IExpr _source319 = _6983_onExpr;
                if (_source319.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6986___mcc_h3988 = _source319.dtor_content;
                } else if (_source319.is_ExprFromType) {
                  RAST._IType _6987___mcc_h3990 = _source319.dtor_tpe;
                } else if (_source319.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6988___mcc_h3992 = _source319.dtor_name;
                } else if (_source319.is_Match) {
                  RAST._IExpr _6989___mcc_h3994 = _source319.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6990___mcc_h3995 = _source319.dtor_cases;
                } else if (_source319.is_StmtExpr) {
                  RAST._IExpr _6991___mcc_h3998 = _source319.dtor_stmt;
                  RAST._IExpr _6992___mcc_h3999 = _source319.dtor_rhs;
                } else if (_source319.is_Block) {
                  RAST._IExpr _6993___mcc_h4002 = _source319.dtor_underlying;
                } else if (_source319.is_StructBuild) {
                  RAST._IExpr _6994___mcc_h4004 = _source319.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6995___mcc_h4005 = _source319.dtor_assignments;
                } else if (_source319.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6996___mcc_h4008 = _source319.dtor_arguments;
                } else if (_source319.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6997___mcc_h4010 = _source319.dtor_op1;
                  RAST._IExpr _6998___mcc_h4011 = _source319.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6999___mcc_h4012 = _source319.dtor_format;
                  if (object.Equals(_6997___mcc_h4010, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source320 = _6998___mcc_h4011;
                    if (_source320.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7000___mcc_h4016 = _source320.dtor_content;
                    } else if (_source320.is_ExprFromType) {
                      RAST._IType _7001___mcc_h4018 = _source320.dtor_tpe;
                    } else if (_source320.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7002___mcc_h4020 = _source320.dtor_name;
                      if (object.Equals(_7002___mcc_h4020, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source320.is_Match) {
                      RAST._IExpr _7003___mcc_h4022 = _source320.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7004___mcc_h4023 = _source320.dtor_cases;
                    } else if (_source320.is_StmtExpr) {
                      RAST._IExpr _7005___mcc_h4026 = _source320.dtor_stmt;
                      RAST._IExpr _7006___mcc_h4027 = _source320.dtor_rhs;
                    } else if (_source320.is_Block) {
                      RAST._IExpr _7007___mcc_h4030 = _source320.dtor_underlying;
                    } else if (_source320.is_StructBuild) {
                      RAST._IExpr _7008___mcc_h4032 = _source320.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7009___mcc_h4033 = _source320.dtor_assignments;
                    } else if (_source320.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7010___mcc_h4036 = _source320.dtor_arguments;
                    } else if (_source320.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7011___mcc_h4038 = _source320.dtor_op1;
                      RAST._IExpr _7012___mcc_h4039 = _source320.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7013___mcc_h4040 = _source320.dtor_format;
                    } else if (_source320.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7014___mcc_h4044 = _source320.dtor_op2;
                      RAST._IExpr _7015___mcc_h4045 = _source320.dtor_left;
                      RAST._IExpr _7016___mcc_h4046 = _source320.dtor_right;
                      DAST.Format._IBinaryOpFormat _7017___mcc_h4047 = _source320.dtor_format2;
                    } else if (_source320.is_TypeAscription) {
                      RAST._IExpr _7018___mcc_h4052 = _source320.dtor_left;
                      RAST._IType _7019___mcc_h4053 = _source320.dtor_tpe;
                    } else if (_source320.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7020___mcc_h4056 = _source320.dtor_value;
                    } else if (_source320.is_LiteralBool) {
                      bool _7021___mcc_h4058 = _source320.dtor_bvalue;
                    } else if (_source320.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7022___mcc_h4060 = _source320.dtor_value;
                      bool _7023___mcc_h4061 = _source320.dtor_binary;
                    } else if (_source320.is_DeclareVar) {
                      RAST._IDeclareType _7024___mcc_h4064 = _source320.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7025___mcc_h4065 = _source320.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7026___mcc_h4066 = _source320.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7027___mcc_h4067 = _source320.dtor_optRhs;
                    } else if (_source320.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7028___mcc_h4072 = _source320.dtor_names;
                      RAST._IExpr _7029___mcc_h4073 = _source320.dtor_rhs;
                    } else if (_source320.is_IfExpr) {
                      RAST._IExpr _7030___mcc_h4076 = _source320.dtor_cond;
                      RAST._IExpr _7031___mcc_h4077 = _source320.dtor_thn;
                      RAST._IExpr _7032___mcc_h4078 = _source320.dtor_els;
                    } else if (_source320.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7033___mcc_h4082 = _source320.dtor_optCond;
                      RAST._IExpr _7034___mcc_h4083 = _source320.dtor_underlying;
                    } else if (_source320.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7035___mcc_h4086 = _source320.dtor_name;
                      RAST._IExpr _7036___mcc_h4087 = _source320.dtor_range;
                      RAST._IExpr _7037___mcc_h4088 = _source320.dtor_body;
                    } else if (_source320.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7038___mcc_h4092 = _source320.dtor_lbl;
                      RAST._IExpr _7039___mcc_h4093 = _source320.dtor_underlying;
                    } else if (_source320.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7040___mcc_h4096 = _source320.dtor_optLbl;
                    } else if (_source320.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7041___mcc_h4098 = _source320.dtor_optLbl;
                    } else if (_source320.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7042___mcc_h4100 = _source320.dtor_optExpr;
                    } else if (_source320.is_CallType) {
                      RAST._IExpr _7043___mcc_h4102 = _source320.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7044___mcc_h4103 = _source320.dtor_typeParameters;
                    } else if (_source320.is_Call) {
                      RAST._IExpr _7045___mcc_h4106 = _source320.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7046___mcc_h4107 = _source320.dtor_arguments;
                    } else if (_source320.is_Select) {
                      RAST._IExpr _7047___mcc_h4110 = _source320.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7048___mcc_h4111 = _source320.dtor_name;
                    } else if (_source320.is_MemberSelect) {
                      RAST._IExpr _7049___mcc_h4114 = _source320.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7050___mcc_h4115 = _source320.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7051___mcc_h4118 = _source320.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7052___mcc_h4119 = _source320.dtor_retType;
                      RAST._IExpr _7053___mcc_h4120 = _source320.dtor_body;
                    }
                  } else {
                  }
                } else if (_source319.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7054___mcc_h4124 = _source319.dtor_op2;
                  RAST._IExpr _7055___mcc_h4125 = _source319.dtor_left;
                  RAST._IExpr _7056___mcc_h4126 = _source319.dtor_right;
                  DAST.Format._IBinaryOpFormat _7057___mcc_h4127 = _source319.dtor_format2;
                } else if (_source319.is_TypeAscription) {
                  RAST._IExpr _7058___mcc_h4132 = _source319.dtor_left;
                  RAST._IType _7059___mcc_h4133 = _source319.dtor_tpe;
                } else if (_source319.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7060___mcc_h4136 = _source319.dtor_value;
                } else if (_source319.is_LiteralBool) {
                  bool _7061___mcc_h4138 = _source319.dtor_bvalue;
                } else if (_source319.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7062___mcc_h4140 = _source319.dtor_value;
                  bool _7063___mcc_h4141 = _source319.dtor_binary;
                } else if (_source319.is_DeclareVar) {
                  RAST._IDeclareType _7064___mcc_h4144 = _source319.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7065___mcc_h4145 = _source319.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7066___mcc_h4146 = _source319.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7067___mcc_h4147 = _source319.dtor_optRhs;
                } else if (_source319.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7068___mcc_h4152 = _source319.dtor_names;
                  RAST._IExpr _7069___mcc_h4153 = _source319.dtor_rhs;
                } else if (_source319.is_IfExpr) {
                  RAST._IExpr _7070___mcc_h4156 = _source319.dtor_cond;
                  RAST._IExpr _7071___mcc_h4157 = _source319.dtor_thn;
                  RAST._IExpr _7072___mcc_h4158 = _source319.dtor_els;
                } else if (_source319.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7073___mcc_h4162 = _source319.dtor_optCond;
                  RAST._IExpr _7074___mcc_h4163 = _source319.dtor_underlying;
                } else if (_source319.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7075___mcc_h4166 = _source319.dtor_name;
                  RAST._IExpr _7076___mcc_h4167 = _source319.dtor_range;
                  RAST._IExpr _7077___mcc_h4168 = _source319.dtor_body;
                } else if (_source319.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7078___mcc_h4172 = _source319.dtor_lbl;
                  RAST._IExpr _7079___mcc_h4173 = _source319.dtor_underlying;
                } else if (_source319.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7080___mcc_h4176 = _source319.dtor_optLbl;
                } else if (_source319.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7081___mcc_h4178 = _source319.dtor_optLbl;
                } else if (_source319.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7082___mcc_h4180 = _source319.dtor_optExpr;
                } else if (_source319.is_CallType) {
                  RAST._IExpr _7083___mcc_h4182 = _source319.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7084___mcc_h4183 = _source319.dtor_typeParameters;
                } else if (_source319.is_Call) {
                  RAST._IExpr _7085___mcc_h4186 = _source319.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7086___mcc_h4187 = _source319.dtor_arguments;
                } else if (_source319.is_Select) {
                  RAST._IExpr _7087___mcc_h4190 = _source319.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7088___mcc_h4191 = _source319.dtor_name;
                } else if (_source319.is_MemberSelect) {
                  RAST._IExpr _7089___mcc_h4194 = _source319.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7090___mcc_h4195 = _source319.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7091___mcc_h4198 = _source319.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7092___mcc_h4199 = _source319.dtor_retType;
                  RAST._IExpr _7093___mcc_h4200 = _source319.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6977_field));
              if (_6976_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7094_fromOwnership;
              _7094_fromOwnership = ((_6976_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1854;
              DCOMP._IOwnership _out1855;
              DCOMP.COMP.FromOwnership(r, _7094_fromOwnership, expectedOwnership, out _out1854, out _out1855);
              r = _out1854;
              resultingOwnership = _out1855;
              readIdents = _6985_recIdents;
            }
            return ;
          }
        } else if (_source284.is_ToMultiset) {
          DAST._IExpression _7095___mcc_h130 = _source284.dtor_ToMultiset_i_a0;
          DAST._IType _7096_fieldType = _4872___mcc_h57;
          bool _7097_isDatatype = _4871___mcc_h56;
          bool _7098_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7099_field = _4869___mcc_h54;
          DAST._IExpression _7100_on = _4868___mcc_h53;
          {
            if (_7097_isDatatype) {
              RAST._IExpr _7101_onExpr;
              DCOMP._IOwnership _7102_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7103_recIdents;
              RAST._IExpr _out1856;
              DCOMP._IOwnership _out1857;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1858;
              (this).GenExpr(_7100_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1856, out _out1857, out _out1858);
              _7101_onExpr = _out1856;
              _7102_onOwned = _out1857;
              _7103_recIdents = _out1858;
              r = ((_7101_onExpr).Sel(DCOMP.__default.escapeName(_7099_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7104_typ;
              RAST._IType _out1859;
              _out1859 = (this).GenType(_7096_fieldType, false, false);
              _7104_typ = _out1859;
              if (((_7104_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1860;
                DCOMP._IOwnership _out1861;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1860, out _out1861);
                r = _out1860;
                resultingOwnership = _out1861;
              }
              readIdents = _7103_recIdents;
            } else {
              RAST._IExpr _7105_onExpr;
              DCOMP._IOwnership _7106_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7107_recIdents;
              RAST._IExpr _out1862;
              DCOMP._IOwnership _out1863;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1864;
              (this).GenExpr(_7100_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1862, out _out1863, out _out1864);
              _7105_onExpr = _out1862;
              _7106_onOwned = _out1863;
              _7107_recIdents = _out1864;
              r = _7105_onExpr;
              if (!object.Equals(_7105_onExpr, RAST.__default.self)) {
                RAST._IExpr _source321 = _7105_onExpr;
                if (_source321.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7108___mcc_h4204 = _source321.dtor_content;
                } else if (_source321.is_ExprFromType) {
                  RAST._IType _7109___mcc_h4206 = _source321.dtor_tpe;
                } else if (_source321.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7110___mcc_h4208 = _source321.dtor_name;
                } else if (_source321.is_Match) {
                  RAST._IExpr _7111___mcc_h4210 = _source321.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7112___mcc_h4211 = _source321.dtor_cases;
                } else if (_source321.is_StmtExpr) {
                  RAST._IExpr _7113___mcc_h4214 = _source321.dtor_stmt;
                  RAST._IExpr _7114___mcc_h4215 = _source321.dtor_rhs;
                } else if (_source321.is_Block) {
                  RAST._IExpr _7115___mcc_h4218 = _source321.dtor_underlying;
                } else if (_source321.is_StructBuild) {
                  RAST._IExpr _7116___mcc_h4220 = _source321.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7117___mcc_h4221 = _source321.dtor_assignments;
                } else if (_source321.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7118___mcc_h4224 = _source321.dtor_arguments;
                } else if (_source321.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7119___mcc_h4226 = _source321.dtor_op1;
                  RAST._IExpr _7120___mcc_h4227 = _source321.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7121___mcc_h4228 = _source321.dtor_format;
                  if (object.Equals(_7119___mcc_h4226, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source322 = _7120___mcc_h4227;
                    if (_source322.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7122___mcc_h4232 = _source322.dtor_content;
                    } else if (_source322.is_ExprFromType) {
                      RAST._IType _7123___mcc_h4234 = _source322.dtor_tpe;
                    } else if (_source322.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7124___mcc_h4236 = _source322.dtor_name;
                      if (object.Equals(_7124___mcc_h4236, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source322.is_Match) {
                      RAST._IExpr _7125___mcc_h4238 = _source322.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7126___mcc_h4239 = _source322.dtor_cases;
                    } else if (_source322.is_StmtExpr) {
                      RAST._IExpr _7127___mcc_h4242 = _source322.dtor_stmt;
                      RAST._IExpr _7128___mcc_h4243 = _source322.dtor_rhs;
                    } else if (_source322.is_Block) {
                      RAST._IExpr _7129___mcc_h4246 = _source322.dtor_underlying;
                    } else if (_source322.is_StructBuild) {
                      RAST._IExpr _7130___mcc_h4248 = _source322.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7131___mcc_h4249 = _source322.dtor_assignments;
                    } else if (_source322.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7132___mcc_h4252 = _source322.dtor_arguments;
                    } else if (_source322.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7133___mcc_h4254 = _source322.dtor_op1;
                      RAST._IExpr _7134___mcc_h4255 = _source322.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7135___mcc_h4256 = _source322.dtor_format;
                    } else if (_source322.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7136___mcc_h4260 = _source322.dtor_op2;
                      RAST._IExpr _7137___mcc_h4261 = _source322.dtor_left;
                      RAST._IExpr _7138___mcc_h4262 = _source322.dtor_right;
                      DAST.Format._IBinaryOpFormat _7139___mcc_h4263 = _source322.dtor_format2;
                    } else if (_source322.is_TypeAscription) {
                      RAST._IExpr _7140___mcc_h4268 = _source322.dtor_left;
                      RAST._IType _7141___mcc_h4269 = _source322.dtor_tpe;
                    } else if (_source322.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7142___mcc_h4272 = _source322.dtor_value;
                    } else if (_source322.is_LiteralBool) {
                      bool _7143___mcc_h4274 = _source322.dtor_bvalue;
                    } else if (_source322.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7144___mcc_h4276 = _source322.dtor_value;
                      bool _7145___mcc_h4277 = _source322.dtor_binary;
                    } else if (_source322.is_DeclareVar) {
                      RAST._IDeclareType _7146___mcc_h4280 = _source322.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7147___mcc_h4281 = _source322.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7148___mcc_h4282 = _source322.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7149___mcc_h4283 = _source322.dtor_optRhs;
                    } else if (_source322.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7150___mcc_h4288 = _source322.dtor_names;
                      RAST._IExpr _7151___mcc_h4289 = _source322.dtor_rhs;
                    } else if (_source322.is_IfExpr) {
                      RAST._IExpr _7152___mcc_h4292 = _source322.dtor_cond;
                      RAST._IExpr _7153___mcc_h4293 = _source322.dtor_thn;
                      RAST._IExpr _7154___mcc_h4294 = _source322.dtor_els;
                    } else if (_source322.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7155___mcc_h4298 = _source322.dtor_optCond;
                      RAST._IExpr _7156___mcc_h4299 = _source322.dtor_underlying;
                    } else if (_source322.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7157___mcc_h4302 = _source322.dtor_name;
                      RAST._IExpr _7158___mcc_h4303 = _source322.dtor_range;
                      RAST._IExpr _7159___mcc_h4304 = _source322.dtor_body;
                    } else if (_source322.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7160___mcc_h4308 = _source322.dtor_lbl;
                      RAST._IExpr _7161___mcc_h4309 = _source322.dtor_underlying;
                    } else if (_source322.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7162___mcc_h4312 = _source322.dtor_optLbl;
                    } else if (_source322.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7163___mcc_h4314 = _source322.dtor_optLbl;
                    } else if (_source322.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7164___mcc_h4316 = _source322.dtor_optExpr;
                    } else if (_source322.is_CallType) {
                      RAST._IExpr _7165___mcc_h4318 = _source322.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7166___mcc_h4319 = _source322.dtor_typeParameters;
                    } else if (_source322.is_Call) {
                      RAST._IExpr _7167___mcc_h4322 = _source322.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7168___mcc_h4323 = _source322.dtor_arguments;
                    } else if (_source322.is_Select) {
                      RAST._IExpr _7169___mcc_h4326 = _source322.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7170___mcc_h4327 = _source322.dtor_name;
                    } else if (_source322.is_MemberSelect) {
                      RAST._IExpr _7171___mcc_h4330 = _source322.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7172___mcc_h4331 = _source322.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7173___mcc_h4334 = _source322.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7174___mcc_h4335 = _source322.dtor_retType;
                      RAST._IExpr _7175___mcc_h4336 = _source322.dtor_body;
                    }
                  } else {
                  }
                } else if (_source321.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7176___mcc_h4340 = _source321.dtor_op2;
                  RAST._IExpr _7177___mcc_h4341 = _source321.dtor_left;
                  RAST._IExpr _7178___mcc_h4342 = _source321.dtor_right;
                  DAST.Format._IBinaryOpFormat _7179___mcc_h4343 = _source321.dtor_format2;
                } else if (_source321.is_TypeAscription) {
                  RAST._IExpr _7180___mcc_h4348 = _source321.dtor_left;
                  RAST._IType _7181___mcc_h4349 = _source321.dtor_tpe;
                } else if (_source321.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7182___mcc_h4352 = _source321.dtor_value;
                } else if (_source321.is_LiteralBool) {
                  bool _7183___mcc_h4354 = _source321.dtor_bvalue;
                } else if (_source321.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7184___mcc_h4356 = _source321.dtor_value;
                  bool _7185___mcc_h4357 = _source321.dtor_binary;
                } else if (_source321.is_DeclareVar) {
                  RAST._IDeclareType _7186___mcc_h4360 = _source321.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7187___mcc_h4361 = _source321.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7188___mcc_h4362 = _source321.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7189___mcc_h4363 = _source321.dtor_optRhs;
                } else if (_source321.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7190___mcc_h4368 = _source321.dtor_names;
                  RAST._IExpr _7191___mcc_h4369 = _source321.dtor_rhs;
                } else if (_source321.is_IfExpr) {
                  RAST._IExpr _7192___mcc_h4372 = _source321.dtor_cond;
                  RAST._IExpr _7193___mcc_h4373 = _source321.dtor_thn;
                  RAST._IExpr _7194___mcc_h4374 = _source321.dtor_els;
                } else if (_source321.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7195___mcc_h4378 = _source321.dtor_optCond;
                  RAST._IExpr _7196___mcc_h4379 = _source321.dtor_underlying;
                } else if (_source321.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7197___mcc_h4382 = _source321.dtor_name;
                  RAST._IExpr _7198___mcc_h4383 = _source321.dtor_range;
                  RAST._IExpr _7199___mcc_h4384 = _source321.dtor_body;
                } else if (_source321.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7200___mcc_h4388 = _source321.dtor_lbl;
                  RAST._IExpr _7201___mcc_h4389 = _source321.dtor_underlying;
                } else if (_source321.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7202___mcc_h4392 = _source321.dtor_optLbl;
                } else if (_source321.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7203___mcc_h4394 = _source321.dtor_optLbl;
                } else if (_source321.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7204___mcc_h4396 = _source321.dtor_optExpr;
                } else if (_source321.is_CallType) {
                  RAST._IExpr _7205___mcc_h4398 = _source321.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7206___mcc_h4399 = _source321.dtor_typeParameters;
                } else if (_source321.is_Call) {
                  RAST._IExpr _7207___mcc_h4402 = _source321.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7208___mcc_h4403 = _source321.dtor_arguments;
                } else if (_source321.is_Select) {
                  RAST._IExpr _7209___mcc_h4406 = _source321.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7210___mcc_h4407 = _source321.dtor_name;
                } else if (_source321.is_MemberSelect) {
                  RAST._IExpr _7211___mcc_h4410 = _source321.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7212___mcc_h4411 = _source321.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7213___mcc_h4414 = _source321.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7214___mcc_h4415 = _source321.dtor_retType;
                  RAST._IExpr _7215___mcc_h4416 = _source321.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7099_field));
              if (_7098_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7216_fromOwnership;
              _7216_fromOwnership = ((_7098_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1865;
              DCOMP._IOwnership _out1866;
              DCOMP.COMP.FromOwnership(r, _7216_fromOwnership, expectedOwnership, out _out1865, out _out1866);
              r = _out1865;
              resultingOwnership = _out1866;
              readIdents = _7107_recIdents;
            }
            return ;
          }
        } else if (_source284.is_This) {
          DAST._IType _7217_fieldType = _4872___mcc_h57;
          bool _7218_isDatatype = _4871___mcc_h56;
          bool _7219_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7220_field = _4869___mcc_h54;
          DAST._IExpression _7221_on = _4868___mcc_h53;
          {
            if (_7218_isDatatype) {
              RAST._IExpr _7222_onExpr;
              DCOMP._IOwnership _7223_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7224_recIdents;
              RAST._IExpr _out1867;
              DCOMP._IOwnership _out1868;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1869;
              (this).GenExpr(_7221_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1867, out _out1868, out _out1869);
              _7222_onExpr = _out1867;
              _7223_onOwned = _out1868;
              _7224_recIdents = _out1869;
              r = ((_7222_onExpr).Sel(DCOMP.__default.escapeName(_7220_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7225_typ;
              RAST._IType _out1870;
              _out1870 = (this).GenType(_7217_fieldType, false, false);
              _7225_typ = _out1870;
              if (((_7225_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1871;
                DCOMP._IOwnership _out1872;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1871, out _out1872);
                r = _out1871;
                resultingOwnership = _out1872;
              }
              readIdents = _7224_recIdents;
            } else {
              RAST._IExpr _7226_onExpr;
              DCOMP._IOwnership _7227_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7228_recIdents;
              RAST._IExpr _out1873;
              DCOMP._IOwnership _out1874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1875;
              (this).GenExpr(_7221_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1873, out _out1874, out _out1875);
              _7226_onExpr = _out1873;
              _7227_onOwned = _out1874;
              _7228_recIdents = _out1875;
              r = _7226_onExpr;
              if (!object.Equals(_7226_onExpr, RAST.__default.self)) {
                RAST._IExpr _source323 = _7226_onExpr;
                if (_source323.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7229___mcc_h4420 = _source323.dtor_content;
                } else if (_source323.is_ExprFromType) {
                  RAST._IType _7230___mcc_h4422 = _source323.dtor_tpe;
                } else if (_source323.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7231___mcc_h4424 = _source323.dtor_name;
                } else if (_source323.is_Match) {
                  RAST._IExpr _7232___mcc_h4426 = _source323.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7233___mcc_h4427 = _source323.dtor_cases;
                } else if (_source323.is_StmtExpr) {
                  RAST._IExpr _7234___mcc_h4430 = _source323.dtor_stmt;
                  RAST._IExpr _7235___mcc_h4431 = _source323.dtor_rhs;
                } else if (_source323.is_Block) {
                  RAST._IExpr _7236___mcc_h4434 = _source323.dtor_underlying;
                } else if (_source323.is_StructBuild) {
                  RAST._IExpr _7237___mcc_h4436 = _source323.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7238___mcc_h4437 = _source323.dtor_assignments;
                } else if (_source323.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7239___mcc_h4440 = _source323.dtor_arguments;
                } else if (_source323.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7240___mcc_h4442 = _source323.dtor_op1;
                  RAST._IExpr _7241___mcc_h4443 = _source323.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7242___mcc_h4444 = _source323.dtor_format;
                  if (object.Equals(_7240___mcc_h4442, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source324 = _7241___mcc_h4443;
                    if (_source324.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7243___mcc_h4448 = _source324.dtor_content;
                    } else if (_source324.is_ExprFromType) {
                      RAST._IType _7244___mcc_h4450 = _source324.dtor_tpe;
                    } else if (_source324.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7245___mcc_h4452 = _source324.dtor_name;
                      if (object.Equals(_7245___mcc_h4452, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source324.is_Match) {
                      RAST._IExpr _7246___mcc_h4454 = _source324.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7247___mcc_h4455 = _source324.dtor_cases;
                    } else if (_source324.is_StmtExpr) {
                      RAST._IExpr _7248___mcc_h4458 = _source324.dtor_stmt;
                      RAST._IExpr _7249___mcc_h4459 = _source324.dtor_rhs;
                    } else if (_source324.is_Block) {
                      RAST._IExpr _7250___mcc_h4462 = _source324.dtor_underlying;
                    } else if (_source324.is_StructBuild) {
                      RAST._IExpr _7251___mcc_h4464 = _source324.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7252___mcc_h4465 = _source324.dtor_assignments;
                    } else if (_source324.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7253___mcc_h4468 = _source324.dtor_arguments;
                    } else if (_source324.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7254___mcc_h4470 = _source324.dtor_op1;
                      RAST._IExpr _7255___mcc_h4471 = _source324.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7256___mcc_h4472 = _source324.dtor_format;
                    } else if (_source324.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7257___mcc_h4476 = _source324.dtor_op2;
                      RAST._IExpr _7258___mcc_h4477 = _source324.dtor_left;
                      RAST._IExpr _7259___mcc_h4478 = _source324.dtor_right;
                      DAST.Format._IBinaryOpFormat _7260___mcc_h4479 = _source324.dtor_format2;
                    } else if (_source324.is_TypeAscription) {
                      RAST._IExpr _7261___mcc_h4484 = _source324.dtor_left;
                      RAST._IType _7262___mcc_h4485 = _source324.dtor_tpe;
                    } else if (_source324.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7263___mcc_h4488 = _source324.dtor_value;
                    } else if (_source324.is_LiteralBool) {
                      bool _7264___mcc_h4490 = _source324.dtor_bvalue;
                    } else if (_source324.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7265___mcc_h4492 = _source324.dtor_value;
                      bool _7266___mcc_h4493 = _source324.dtor_binary;
                    } else if (_source324.is_DeclareVar) {
                      RAST._IDeclareType _7267___mcc_h4496 = _source324.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7268___mcc_h4497 = _source324.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7269___mcc_h4498 = _source324.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7270___mcc_h4499 = _source324.dtor_optRhs;
                    } else if (_source324.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7271___mcc_h4504 = _source324.dtor_names;
                      RAST._IExpr _7272___mcc_h4505 = _source324.dtor_rhs;
                    } else if (_source324.is_IfExpr) {
                      RAST._IExpr _7273___mcc_h4508 = _source324.dtor_cond;
                      RAST._IExpr _7274___mcc_h4509 = _source324.dtor_thn;
                      RAST._IExpr _7275___mcc_h4510 = _source324.dtor_els;
                    } else if (_source324.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7276___mcc_h4514 = _source324.dtor_optCond;
                      RAST._IExpr _7277___mcc_h4515 = _source324.dtor_underlying;
                    } else if (_source324.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7278___mcc_h4518 = _source324.dtor_name;
                      RAST._IExpr _7279___mcc_h4519 = _source324.dtor_range;
                      RAST._IExpr _7280___mcc_h4520 = _source324.dtor_body;
                    } else if (_source324.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7281___mcc_h4524 = _source324.dtor_lbl;
                      RAST._IExpr _7282___mcc_h4525 = _source324.dtor_underlying;
                    } else if (_source324.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7283___mcc_h4528 = _source324.dtor_optLbl;
                    } else if (_source324.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7284___mcc_h4530 = _source324.dtor_optLbl;
                    } else if (_source324.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7285___mcc_h4532 = _source324.dtor_optExpr;
                    } else if (_source324.is_CallType) {
                      RAST._IExpr _7286___mcc_h4534 = _source324.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7287___mcc_h4535 = _source324.dtor_typeParameters;
                    } else if (_source324.is_Call) {
                      RAST._IExpr _7288___mcc_h4538 = _source324.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7289___mcc_h4539 = _source324.dtor_arguments;
                    } else if (_source324.is_Select) {
                      RAST._IExpr _7290___mcc_h4542 = _source324.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7291___mcc_h4543 = _source324.dtor_name;
                    } else if (_source324.is_MemberSelect) {
                      RAST._IExpr _7292___mcc_h4546 = _source324.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7293___mcc_h4547 = _source324.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7294___mcc_h4550 = _source324.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7295___mcc_h4551 = _source324.dtor_retType;
                      RAST._IExpr _7296___mcc_h4552 = _source324.dtor_body;
                    }
                  } else {
                  }
                } else if (_source323.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7297___mcc_h4556 = _source323.dtor_op2;
                  RAST._IExpr _7298___mcc_h4557 = _source323.dtor_left;
                  RAST._IExpr _7299___mcc_h4558 = _source323.dtor_right;
                  DAST.Format._IBinaryOpFormat _7300___mcc_h4559 = _source323.dtor_format2;
                } else if (_source323.is_TypeAscription) {
                  RAST._IExpr _7301___mcc_h4564 = _source323.dtor_left;
                  RAST._IType _7302___mcc_h4565 = _source323.dtor_tpe;
                } else if (_source323.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7303___mcc_h4568 = _source323.dtor_value;
                } else if (_source323.is_LiteralBool) {
                  bool _7304___mcc_h4570 = _source323.dtor_bvalue;
                } else if (_source323.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7305___mcc_h4572 = _source323.dtor_value;
                  bool _7306___mcc_h4573 = _source323.dtor_binary;
                } else if (_source323.is_DeclareVar) {
                  RAST._IDeclareType _7307___mcc_h4576 = _source323.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7308___mcc_h4577 = _source323.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7309___mcc_h4578 = _source323.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7310___mcc_h4579 = _source323.dtor_optRhs;
                } else if (_source323.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7311___mcc_h4584 = _source323.dtor_names;
                  RAST._IExpr _7312___mcc_h4585 = _source323.dtor_rhs;
                } else if (_source323.is_IfExpr) {
                  RAST._IExpr _7313___mcc_h4588 = _source323.dtor_cond;
                  RAST._IExpr _7314___mcc_h4589 = _source323.dtor_thn;
                  RAST._IExpr _7315___mcc_h4590 = _source323.dtor_els;
                } else if (_source323.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7316___mcc_h4594 = _source323.dtor_optCond;
                  RAST._IExpr _7317___mcc_h4595 = _source323.dtor_underlying;
                } else if (_source323.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7318___mcc_h4598 = _source323.dtor_name;
                  RAST._IExpr _7319___mcc_h4599 = _source323.dtor_range;
                  RAST._IExpr _7320___mcc_h4600 = _source323.dtor_body;
                } else if (_source323.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7321___mcc_h4604 = _source323.dtor_lbl;
                  RAST._IExpr _7322___mcc_h4605 = _source323.dtor_underlying;
                } else if (_source323.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7323___mcc_h4608 = _source323.dtor_optLbl;
                } else if (_source323.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7324___mcc_h4610 = _source323.dtor_optLbl;
                } else if (_source323.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7325___mcc_h4612 = _source323.dtor_optExpr;
                } else if (_source323.is_CallType) {
                  RAST._IExpr _7326___mcc_h4614 = _source323.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7327___mcc_h4615 = _source323.dtor_typeParameters;
                } else if (_source323.is_Call) {
                  RAST._IExpr _7328___mcc_h4618 = _source323.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7329___mcc_h4619 = _source323.dtor_arguments;
                } else if (_source323.is_Select) {
                  RAST._IExpr _7330___mcc_h4622 = _source323.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7331___mcc_h4623 = _source323.dtor_name;
                } else if (_source323.is_MemberSelect) {
                  RAST._IExpr _7332___mcc_h4626 = _source323.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7333___mcc_h4627 = _source323.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7334___mcc_h4630 = _source323.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7335___mcc_h4631 = _source323.dtor_retType;
                  RAST._IExpr _7336___mcc_h4632 = _source323.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7220_field));
              if (_7219_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7337_fromOwnership;
              _7337_fromOwnership = ((_7219_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1876;
              DCOMP._IOwnership _out1877;
              DCOMP.COMP.FromOwnership(r, _7337_fromOwnership, expectedOwnership, out _out1876, out _out1877);
              r = _out1876;
              resultingOwnership = _out1877;
              readIdents = _7228_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Ite) {
          DAST._IExpression _7338___mcc_h132 = _source284.dtor_cond;
          DAST._IExpression _7339___mcc_h133 = _source284.dtor_thn;
          DAST._IExpression _7340___mcc_h134 = _source284.dtor_els;
          DAST._IType _7341_fieldType = _4872___mcc_h57;
          bool _7342_isDatatype = _4871___mcc_h56;
          bool _7343_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7344_field = _4869___mcc_h54;
          DAST._IExpression _7345_on = _4868___mcc_h53;
          {
            if (_7342_isDatatype) {
              RAST._IExpr _7346_onExpr;
              DCOMP._IOwnership _7347_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7348_recIdents;
              RAST._IExpr _out1878;
              DCOMP._IOwnership _out1879;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1880;
              (this).GenExpr(_7345_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1878, out _out1879, out _out1880);
              _7346_onExpr = _out1878;
              _7347_onOwned = _out1879;
              _7348_recIdents = _out1880;
              r = ((_7346_onExpr).Sel(DCOMP.__default.escapeName(_7344_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7349_typ;
              RAST._IType _out1881;
              _out1881 = (this).GenType(_7341_fieldType, false, false);
              _7349_typ = _out1881;
              if (((_7349_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1882;
                DCOMP._IOwnership _out1883;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1882, out _out1883);
                r = _out1882;
                resultingOwnership = _out1883;
              }
              readIdents = _7348_recIdents;
            } else {
              RAST._IExpr _7350_onExpr;
              DCOMP._IOwnership _7351_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7352_recIdents;
              RAST._IExpr _out1884;
              DCOMP._IOwnership _out1885;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1886;
              (this).GenExpr(_7345_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1884, out _out1885, out _out1886);
              _7350_onExpr = _out1884;
              _7351_onOwned = _out1885;
              _7352_recIdents = _out1886;
              r = _7350_onExpr;
              if (!object.Equals(_7350_onExpr, RAST.__default.self)) {
                RAST._IExpr _source325 = _7350_onExpr;
                if (_source325.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7353___mcc_h4636 = _source325.dtor_content;
                } else if (_source325.is_ExprFromType) {
                  RAST._IType _7354___mcc_h4638 = _source325.dtor_tpe;
                } else if (_source325.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7355___mcc_h4640 = _source325.dtor_name;
                } else if (_source325.is_Match) {
                  RAST._IExpr _7356___mcc_h4642 = _source325.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7357___mcc_h4643 = _source325.dtor_cases;
                } else if (_source325.is_StmtExpr) {
                  RAST._IExpr _7358___mcc_h4646 = _source325.dtor_stmt;
                  RAST._IExpr _7359___mcc_h4647 = _source325.dtor_rhs;
                } else if (_source325.is_Block) {
                  RAST._IExpr _7360___mcc_h4650 = _source325.dtor_underlying;
                } else if (_source325.is_StructBuild) {
                  RAST._IExpr _7361___mcc_h4652 = _source325.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7362___mcc_h4653 = _source325.dtor_assignments;
                } else if (_source325.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7363___mcc_h4656 = _source325.dtor_arguments;
                } else if (_source325.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7364___mcc_h4658 = _source325.dtor_op1;
                  RAST._IExpr _7365___mcc_h4659 = _source325.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7366___mcc_h4660 = _source325.dtor_format;
                  if (object.Equals(_7364___mcc_h4658, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source326 = _7365___mcc_h4659;
                    if (_source326.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7367___mcc_h4664 = _source326.dtor_content;
                    } else if (_source326.is_ExprFromType) {
                      RAST._IType _7368___mcc_h4666 = _source326.dtor_tpe;
                    } else if (_source326.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7369___mcc_h4668 = _source326.dtor_name;
                      if (object.Equals(_7369___mcc_h4668, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source326.is_Match) {
                      RAST._IExpr _7370___mcc_h4670 = _source326.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7371___mcc_h4671 = _source326.dtor_cases;
                    } else if (_source326.is_StmtExpr) {
                      RAST._IExpr _7372___mcc_h4674 = _source326.dtor_stmt;
                      RAST._IExpr _7373___mcc_h4675 = _source326.dtor_rhs;
                    } else if (_source326.is_Block) {
                      RAST._IExpr _7374___mcc_h4678 = _source326.dtor_underlying;
                    } else if (_source326.is_StructBuild) {
                      RAST._IExpr _7375___mcc_h4680 = _source326.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7376___mcc_h4681 = _source326.dtor_assignments;
                    } else if (_source326.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7377___mcc_h4684 = _source326.dtor_arguments;
                    } else if (_source326.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7378___mcc_h4686 = _source326.dtor_op1;
                      RAST._IExpr _7379___mcc_h4687 = _source326.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7380___mcc_h4688 = _source326.dtor_format;
                    } else if (_source326.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7381___mcc_h4692 = _source326.dtor_op2;
                      RAST._IExpr _7382___mcc_h4693 = _source326.dtor_left;
                      RAST._IExpr _7383___mcc_h4694 = _source326.dtor_right;
                      DAST.Format._IBinaryOpFormat _7384___mcc_h4695 = _source326.dtor_format2;
                    } else if (_source326.is_TypeAscription) {
                      RAST._IExpr _7385___mcc_h4700 = _source326.dtor_left;
                      RAST._IType _7386___mcc_h4701 = _source326.dtor_tpe;
                    } else if (_source326.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7387___mcc_h4704 = _source326.dtor_value;
                    } else if (_source326.is_LiteralBool) {
                      bool _7388___mcc_h4706 = _source326.dtor_bvalue;
                    } else if (_source326.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7389___mcc_h4708 = _source326.dtor_value;
                      bool _7390___mcc_h4709 = _source326.dtor_binary;
                    } else if (_source326.is_DeclareVar) {
                      RAST._IDeclareType _7391___mcc_h4712 = _source326.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7392___mcc_h4713 = _source326.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7393___mcc_h4714 = _source326.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7394___mcc_h4715 = _source326.dtor_optRhs;
                    } else if (_source326.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7395___mcc_h4720 = _source326.dtor_names;
                      RAST._IExpr _7396___mcc_h4721 = _source326.dtor_rhs;
                    } else if (_source326.is_IfExpr) {
                      RAST._IExpr _7397___mcc_h4724 = _source326.dtor_cond;
                      RAST._IExpr _7398___mcc_h4725 = _source326.dtor_thn;
                      RAST._IExpr _7399___mcc_h4726 = _source326.dtor_els;
                    } else if (_source326.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7400___mcc_h4730 = _source326.dtor_optCond;
                      RAST._IExpr _7401___mcc_h4731 = _source326.dtor_underlying;
                    } else if (_source326.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7402___mcc_h4734 = _source326.dtor_name;
                      RAST._IExpr _7403___mcc_h4735 = _source326.dtor_range;
                      RAST._IExpr _7404___mcc_h4736 = _source326.dtor_body;
                    } else if (_source326.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7405___mcc_h4740 = _source326.dtor_lbl;
                      RAST._IExpr _7406___mcc_h4741 = _source326.dtor_underlying;
                    } else if (_source326.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7407___mcc_h4744 = _source326.dtor_optLbl;
                    } else if (_source326.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7408___mcc_h4746 = _source326.dtor_optLbl;
                    } else if (_source326.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7409___mcc_h4748 = _source326.dtor_optExpr;
                    } else if (_source326.is_CallType) {
                      RAST._IExpr _7410___mcc_h4750 = _source326.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7411___mcc_h4751 = _source326.dtor_typeParameters;
                    } else if (_source326.is_Call) {
                      RAST._IExpr _7412___mcc_h4754 = _source326.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7413___mcc_h4755 = _source326.dtor_arguments;
                    } else if (_source326.is_Select) {
                      RAST._IExpr _7414___mcc_h4758 = _source326.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7415___mcc_h4759 = _source326.dtor_name;
                    } else if (_source326.is_MemberSelect) {
                      RAST._IExpr _7416___mcc_h4762 = _source326.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7417___mcc_h4763 = _source326.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7418___mcc_h4766 = _source326.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7419___mcc_h4767 = _source326.dtor_retType;
                      RAST._IExpr _7420___mcc_h4768 = _source326.dtor_body;
                    }
                  } else {
                  }
                } else if (_source325.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7421___mcc_h4772 = _source325.dtor_op2;
                  RAST._IExpr _7422___mcc_h4773 = _source325.dtor_left;
                  RAST._IExpr _7423___mcc_h4774 = _source325.dtor_right;
                  DAST.Format._IBinaryOpFormat _7424___mcc_h4775 = _source325.dtor_format2;
                } else if (_source325.is_TypeAscription) {
                  RAST._IExpr _7425___mcc_h4780 = _source325.dtor_left;
                  RAST._IType _7426___mcc_h4781 = _source325.dtor_tpe;
                } else if (_source325.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7427___mcc_h4784 = _source325.dtor_value;
                } else if (_source325.is_LiteralBool) {
                  bool _7428___mcc_h4786 = _source325.dtor_bvalue;
                } else if (_source325.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7429___mcc_h4788 = _source325.dtor_value;
                  bool _7430___mcc_h4789 = _source325.dtor_binary;
                } else if (_source325.is_DeclareVar) {
                  RAST._IDeclareType _7431___mcc_h4792 = _source325.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7432___mcc_h4793 = _source325.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7433___mcc_h4794 = _source325.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7434___mcc_h4795 = _source325.dtor_optRhs;
                } else if (_source325.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7435___mcc_h4800 = _source325.dtor_names;
                  RAST._IExpr _7436___mcc_h4801 = _source325.dtor_rhs;
                } else if (_source325.is_IfExpr) {
                  RAST._IExpr _7437___mcc_h4804 = _source325.dtor_cond;
                  RAST._IExpr _7438___mcc_h4805 = _source325.dtor_thn;
                  RAST._IExpr _7439___mcc_h4806 = _source325.dtor_els;
                } else if (_source325.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7440___mcc_h4810 = _source325.dtor_optCond;
                  RAST._IExpr _7441___mcc_h4811 = _source325.dtor_underlying;
                } else if (_source325.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7442___mcc_h4814 = _source325.dtor_name;
                  RAST._IExpr _7443___mcc_h4815 = _source325.dtor_range;
                  RAST._IExpr _7444___mcc_h4816 = _source325.dtor_body;
                } else if (_source325.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7445___mcc_h4820 = _source325.dtor_lbl;
                  RAST._IExpr _7446___mcc_h4821 = _source325.dtor_underlying;
                } else if (_source325.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7447___mcc_h4824 = _source325.dtor_optLbl;
                } else if (_source325.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7448___mcc_h4826 = _source325.dtor_optLbl;
                } else if (_source325.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7449___mcc_h4828 = _source325.dtor_optExpr;
                } else if (_source325.is_CallType) {
                  RAST._IExpr _7450___mcc_h4830 = _source325.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7451___mcc_h4831 = _source325.dtor_typeParameters;
                } else if (_source325.is_Call) {
                  RAST._IExpr _7452___mcc_h4834 = _source325.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7453___mcc_h4835 = _source325.dtor_arguments;
                } else if (_source325.is_Select) {
                  RAST._IExpr _7454___mcc_h4838 = _source325.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7455___mcc_h4839 = _source325.dtor_name;
                } else if (_source325.is_MemberSelect) {
                  RAST._IExpr _7456___mcc_h4842 = _source325.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7457___mcc_h4843 = _source325.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7458___mcc_h4846 = _source325.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7459___mcc_h4847 = _source325.dtor_retType;
                  RAST._IExpr _7460___mcc_h4848 = _source325.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7344_field));
              if (_7343_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7461_fromOwnership;
              _7461_fromOwnership = ((_7343_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1887;
              DCOMP._IOwnership _out1888;
              DCOMP.COMP.FromOwnership(r, _7461_fromOwnership, expectedOwnership, out _out1887, out _out1888);
              r = _out1887;
              resultingOwnership = _out1888;
              readIdents = _7352_recIdents;
            }
            return ;
          }
        } else if (_source284.is_UnOp) {
          DAST._IUnaryOp _7462___mcc_h138 = _source284.dtor_unOp;
          DAST._IExpression _7463___mcc_h139 = _source284.dtor_expr;
          DAST.Format._IUnaryOpFormat _7464___mcc_h140 = _source284.dtor_format1;
          DAST._IType _7465_fieldType = _4872___mcc_h57;
          bool _7466_isDatatype = _4871___mcc_h56;
          bool _7467_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7468_field = _4869___mcc_h54;
          DAST._IExpression _7469_on = _4868___mcc_h53;
          {
            if (_7466_isDatatype) {
              RAST._IExpr _7470_onExpr;
              DCOMP._IOwnership _7471_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7472_recIdents;
              RAST._IExpr _out1889;
              DCOMP._IOwnership _out1890;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1891;
              (this).GenExpr(_7469_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1889, out _out1890, out _out1891);
              _7470_onExpr = _out1889;
              _7471_onOwned = _out1890;
              _7472_recIdents = _out1891;
              r = ((_7470_onExpr).Sel(DCOMP.__default.escapeName(_7468_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7473_typ;
              RAST._IType _out1892;
              _out1892 = (this).GenType(_7465_fieldType, false, false);
              _7473_typ = _out1892;
              if (((_7473_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1893;
                DCOMP._IOwnership _out1894;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1893, out _out1894);
                r = _out1893;
                resultingOwnership = _out1894;
              }
              readIdents = _7472_recIdents;
            } else {
              RAST._IExpr _7474_onExpr;
              DCOMP._IOwnership _7475_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7476_recIdents;
              RAST._IExpr _out1895;
              DCOMP._IOwnership _out1896;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1897;
              (this).GenExpr(_7469_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1895, out _out1896, out _out1897);
              _7474_onExpr = _out1895;
              _7475_onOwned = _out1896;
              _7476_recIdents = _out1897;
              r = _7474_onExpr;
              if (!object.Equals(_7474_onExpr, RAST.__default.self)) {
                RAST._IExpr _source327 = _7474_onExpr;
                if (_source327.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7477___mcc_h4852 = _source327.dtor_content;
                } else if (_source327.is_ExprFromType) {
                  RAST._IType _7478___mcc_h4854 = _source327.dtor_tpe;
                } else if (_source327.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7479___mcc_h4856 = _source327.dtor_name;
                } else if (_source327.is_Match) {
                  RAST._IExpr _7480___mcc_h4858 = _source327.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7481___mcc_h4859 = _source327.dtor_cases;
                } else if (_source327.is_StmtExpr) {
                  RAST._IExpr _7482___mcc_h4862 = _source327.dtor_stmt;
                  RAST._IExpr _7483___mcc_h4863 = _source327.dtor_rhs;
                } else if (_source327.is_Block) {
                  RAST._IExpr _7484___mcc_h4866 = _source327.dtor_underlying;
                } else if (_source327.is_StructBuild) {
                  RAST._IExpr _7485___mcc_h4868 = _source327.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7486___mcc_h4869 = _source327.dtor_assignments;
                } else if (_source327.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7487___mcc_h4872 = _source327.dtor_arguments;
                } else if (_source327.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7488___mcc_h4874 = _source327.dtor_op1;
                  RAST._IExpr _7489___mcc_h4875 = _source327.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7490___mcc_h4876 = _source327.dtor_format;
                  if (object.Equals(_7488___mcc_h4874, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source328 = _7489___mcc_h4875;
                    if (_source328.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7491___mcc_h4880 = _source328.dtor_content;
                    } else if (_source328.is_ExprFromType) {
                      RAST._IType _7492___mcc_h4882 = _source328.dtor_tpe;
                    } else if (_source328.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7493___mcc_h4884 = _source328.dtor_name;
                      if (object.Equals(_7493___mcc_h4884, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source328.is_Match) {
                      RAST._IExpr _7494___mcc_h4886 = _source328.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7495___mcc_h4887 = _source328.dtor_cases;
                    } else if (_source328.is_StmtExpr) {
                      RAST._IExpr _7496___mcc_h4890 = _source328.dtor_stmt;
                      RAST._IExpr _7497___mcc_h4891 = _source328.dtor_rhs;
                    } else if (_source328.is_Block) {
                      RAST._IExpr _7498___mcc_h4894 = _source328.dtor_underlying;
                    } else if (_source328.is_StructBuild) {
                      RAST._IExpr _7499___mcc_h4896 = _source328.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7500___mcc_h4897 = _source328.dtor_assignments;
                    } else if (_source328.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7501___mcc_h4900 = _source328.dtor_arguments;
                    } else if (_source328.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7502___mcc_h4902 = _source328.dtor_op1;
                      RAST._IExpr _7503___mcc_h4903 = _source328.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7504___mcc_h4904 = _source328.dtor_format;
                    } else if (_source328.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7505___mcc_h4908 = _source328.dtor_op2;
                      RAST._IExpr _7506___mcc_h4909 = _source328.dtor_left;
                      RAST._IExpr _7507___mcc_h4910 = _source328.dtor_right;
                      DAST.Format._IBinaryOpFormat _7508___mcc_h4911 = _source328.dtor_format2;
                    } else if (_source328.is_TypeAscription) {
                      RAST._IExpr _7509___mcc_h4916 = _source328.dtor_left;
                      RAST._IType _7510___mcc_h4917 = _source328.dtor_tpe;
                    } else if (_source328.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7511___mcc_h4920 = _source328.dtor_value;
                    } else if (_source328.is_LiteralBool) {
                      bool _7512___mcc_h4922 = _source328.dtor_bvalue;
                    } else if (_source328.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7513___mcc_h4924 = _source328.dtor_value;
                      bool _7514___mcc_h4925 = _source328.dtor_binary;
                    } else if (_source328.is_DeclareVar) {
                      RAST._IDeclareType _7515___mcc_h4928 = _source328.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7516___mcc_h4929 = _source328.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7517___mcc_h4930 = _source328.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7518___mcc_h4931 = _source328.dtor_optRhs;
                    } else if (_source328.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7519___mcc_h4936 = _source328.dtor_names;
                      RAST._IExpr _7520___mcc_h4937 = _source328.dtor_rhs;
                    } else if (_source328.is_IfExpr) {
                      RAST._IExpr _7521___mcc_h4940 = _source328.dtor_cond;
                      RAST._IExpr _7522___mcc_h4941 = _source328.dtor_thn;
                      RAST._IExpr _7523___mcc_h4942 = _source328.dtor_els;
                    } else if (_source328.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7524___mcc_h4946 = _source328.dtor_optCond;
                      RAST._IExpr _7525___mcc_h4947 = _source328.dtor_underlying;
                    } else if (_source328.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7526___mcc_h4950 = _source328.dtor_name;
                      RAST._IExpr _7527___mcc_h4951 = _source328.dtor_range;
                      RAST._IExpr _7528___mcc_h4952 = _source328.dtor_body;
                    } else if (_source328.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7529___mcc_h4956 = _source328.dtor_lbl;
                      RAST._IExpr _7530___mcc_h4957 = _source328.dtor_underlying;
                    } else if (_source328.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7531___mcc_h4960 = _source328.dtor_optLbl;
                    } else if (_source328.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7532___mcc_h4962 = _source328.dtor_optLbl;
                    } else if (_source328.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7533___mcc_h4964 = _source328.dtor_optExpr;
                    } else if (_source328.is_CallType) {
                      RAST._IExpr _7534___mcc_h4966 = _source328.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7535___mcc_h4967 = _source328.dtor_typeParameters;
                    } else if (_source328.is_Call) {
                      RAST._IExpr _7536___mcc_h4970 = _source328.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7537___mcc_h4971 = _source328.dtor_arguments;
                    } else if (_source328.is_Select) {
                      RAST._IExpr _7538___mcc_h4974 = _source328.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7539___mcc_h4975 = _source328.dtor_name;
                    } else if (_source328.is_MemberSelect) {
                      RAST._IExpr _7540___mcc_h4978 = _source328.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7541___mcc_h4979 = _source328.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7542___mcc_h4982 = _source328.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7543___mcc_h4983 = _source328.dtor_retType;
                      RAST._IExpr _7544___mcc_h4984 = _source328.dtor_body;
                    }
                  } else {
                  }
                } else if (_source327.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7545___mcc_h4988 = _source327.dtor_op2;
                  RAST._IExpr _7546___mcc_h4989 = _source327.dtor_left;
                  RAST._IExpr _7547___mcc_h4990 = _source327.dtor_right;
                  DAST.Format._IBinaryOpFormat _7548___mcc_h4991 = _source327.dtor_format2;
                } else if (_source327.is_TypeAscription) {
                  RAST._IExpr _7549___mcc_h4996 = _source327.dtor_left;
                  RAST._IType _7550___mcc_h4997 = _source327.dtor_tpe;
                } else if (_source327.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7551___mcc_h5000 = _source327.dtor_value;
                } else if (_source327.is_LiteralBool) {
                  bool _7552___mcc_h5002 = _source327.dtor_bvalue;
                } else if (_source327.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7553___mcc_h5004 = _source327.dtor_value;
                  bool _7554___mcc_h5005 = _source327.dtor_binary;
                } else if (_source327.is_DeclareVar) {
                  RAST._IDeclareType _7555___mcc_h5008 = _source327.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7556___mcc_h5009 = _source327.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7557___mcc_h5010 = _source327.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7558___mcc_h5011 = _source327.dtor_optRhs;
                } else if (_source327.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7559___mcc_h5016 = _source327.dtor_names;
                  RAST._IExpr _7560___mcc_h5017 = _source327.dtor_rhs;
                } else if (_source327.is_IfExpr) {
                  RAST._IExpr _7561___mcc_h5020 = _source327.dtor_cond;
                  RAST._IExpr _7562___mcc_h5021 = _source327.dtor_thn;
                  RAST._IExpr _7563___mcc_h5022 = _source327.dtor_els;
                } else if (_source327.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7564___mcc_h5026 = _source327.dtor_optCond;
                  RAST._IExpr _7565___mcc_h5027 = _source327.dtor_underlying;
                } else if (_source327.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7566___mcc_h5030 = _source327.dtor_name;
                  RAST._IExpr _7567___mcc_h5031 = _source327.dtor_range;
                  RAST._IExpr _7568___mcc_h5032 = _source327.dtor_body;
                } else if (_source327.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7569___mcc_h5036 = _source327.dtor_lbl;
                  RAST._IExpr _7570___mcc_h5037 = _source327.dtor_underlying;
                } else if (_source327.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7571___mcc_h5040 = _source327.dtor_optLbl;
                } else if (_source327.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7572___mcc_h5042 = _source327.dtor_optLbl;
                } else if (_source327.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7573___mcc_h5044 = _source327.dtor_optExpr;
                } else if (_source327.is_CallType) {
                  RAST._IExpr _7574___mcc_h5046 = _source327.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7575___mcc_h5047 = _source327.dtor_typeParameters;
                } else if (_source327.is_Call) {
                  RAST._IExpr _7576___mcc_h5050 = _source327.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7577___mcc_h5051 = _source327.dtor_arguments;
                } else if (_source327.is_Select) {
                  RAST._IExpr _7578___mcc_h5054 = _source327.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7579___mcc_h5055 = _source327.dtor_name;
                } else if (_source327.is_MemberSelect) {
                  RAST._IExpr _7580___mcc_h5058 = _source327.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7581___mcc_h5059 = _source327.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7582___mcc_h5062 = _source327.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7583___mcc_h5063 = _source327.dtor_retType;
                  RAST._IExpr _7584___mcc_h5064 = _source327.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7468_field));
              if (_7467_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7585_fromOwnership;
              _7585_fromOwnership = ((_7467_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1898;
              DCOMP._IOwnership _out1899;
              DCOMP.COMP.FromOwnership(r, _7585_fromOwnership, expectedOwnership, out _out1898, out _out1899);
              r = _out1898;
              resultingOwnership = _out1899;
              readIdents = _7476_recIdents;
            }
            return ;
          }
        } else if (_source284.is_BinOp) {
          DAST._IBinOp _7586___mcc_h144 = _source284.dtor_op;
          DAST._IExpression _7587___mcc_h145 = _source284.dtor_left;
          DAST._IExpression _7588___mcc_h146 = _source284.dtor_right;
          DAST.Format._IBinaryOpFormat _7589___mcc_h147 = _source284.dtor_format2;
          DAST._IType _7590_fieldType = _4872___mcc_h57;
          bool _7591_isDatatype = _4871___mcc_h56;
          bool _7592_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7593_field = _4869___mcc_h54;
          DAST._IExpression _7594_on = _4868___mcc_h53;
          {
            if (_7591_isDatatype) {
              RAST._IExpr _7595_onExpr;
              DCOMP._IOwnership _7596_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7597_recIdents;
              RAST._IExpr _out1900;
              DCOMP._IOwnership _out1901;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1902;
              (this).GenExpr(_7594_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1900, out _out1901, out _out1902);
              _7595_onExpr = _out1900;
              _7596_onOwned = _out1901;
              _7597_recIdents = _out1902;
              r = ((_7595_onExpr).Sel(DCOMP.__default.escapeName(_7593_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7598_typ;
              RAST._IType _out1903;
              _out1903 = (this).GenType(_7590_fieldType, false, false);
              _7598_typ = _out1903;
              if (((_7598_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1904;
                DCOMP._IOwnership _out1905;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1904, out _out1905);
                r = _out1904;
                resultingOwnership = _out1905;
              }
              readIdents = _7597_recIdents;
            } else {
              RAST._IExpr _7599_onExpr;
              DCOMP._IOwnership _7600_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7601_recIdents;
              RAST._IExpr _out1906;
              DCOMP._IOwnership _out1907;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1908;
              (this).GenExpr(_7594_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1906, out _out1907, out _out1908);
              _7599_onExpr = _out1906;
              _7600_onOwned = _out1907;
              _7601_recIdents = _out1908;
              r = _7599_onExpr;
              if (!object.Equals(_7599_onExpr, RAST.__default.self)) {
                RAST._IExpr _source329 = _7599_onExpr;
                if (_source329.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7602___mcc_h5068 = _source329.dtor_content;
                } else if (_source329.is_ExprFromType) {
                  RAST._IType _7603___mcc_h5070 = _source329.dtor_tpe;
                } else if (_source329.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7604___mcc_h5072 = _source329.dtor_name;
                } else if (_source329.is_Match) {
                  RAST._IExpr _7605___mcc_h5074 = _source329.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7606___mcc_h5075 = _source329.dtor_cases;
                } else if (_source329.is_StmtExpr) {
                  RAST._IExpr _7607___mcc_h5078 = _source329.dtor_stmt;
                  RAST._IExpr _7608___mcc_h5079 = _source329.dtor_rhs;
                } else if (_source329.is_Block) {
                  RAST._IExpr _7609___mcc_h5082 = _source329.dtor_underlying;
                } else if (_source329.is_StructBuild) {
                  RAST._IExpr _7610___mcc_h5084 = _source329.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7611___mcc_h5085 = _source329.dtor_assignments;
                } else if (_source329.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7612___mcc_h5088 = _source329.dtor_arguments;
                } else if (_source329.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7613___mcc_h5090 = _source329.dtor_op1;
                  RAST._IExpr _7614___mcc_h5091 = _source329.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7615___mcc_h5092 = _source329.dtor_format;
                  if (object.Equals(_7613___mcc_h5090, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source330 = _7614___mcc_h5091;
                    if (_source330.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7616___mcc_h5096 = _source330.dtor_content;
                    } else if (_source330.is_ExprFromType) {
                      RAST._IType _7617___mcc_h5098 = _source330.dtor_tpe;
                    } else if (_source330.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7618___mcc_h5100 = _source330.dtor_name;
                      if (object.Equals(_7618___mcc_h5100, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source330.is_Match) {
                      RAST._IExpr _7619___mcc_h5102 = _source330.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7620___mcc_h5103 = _source330.dtor_cases;
                    } else if (_source330.is_StmtExpr) {
                      RAST._IExpr _7621___mcc_h5106 = _source330.dtor_stmt;
                      RAST._IExpr _7622___mcc_h5107 = _source330.dtor_rhs;
                    } else if (_source330.is_Block) {
                      RAST._IExpr _7623___mcc_h5110 = _source330.dtor_underlying;
                    } else if (_source330.is_StructBuild) {
                      RAST._IExpr _7624___mcc_h5112 = _source330.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7625___mcc_h5113 = _source330.dtor_assignments;
                    } else if (_source330.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7626___mcc_h5116 = _source330.dtor_arguments;
                    } else if (_source330.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7627___mcc_h5118 = _source330.dtor_op1;
                      RAST._IExpr _7628___mcc_h5119 = _source330.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7629___mcc_h5120 = _source330.dtor_format;
                    } else if (_source330.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7630___mcc_h5124 = _source330.dtor_op2;
                      RAST._IExpr _7631___mcc_h5125 = _source330.dtor_left;
                      RAST._IExpr _7632___mcc_h5126 = _source330.dtor_right;
                      DAST.Format._IBinaryOpFormat _7633___mcc_h5127 = _source330.dtor_format2;
                    } else if (_source330.is_TypeAscription) {
                      RAST._IExpr _7634___mcc_h5132 = _source330.dtor_left;
                      RAST._IType _7635___mcc_h5133 = _source330.dtor_tpe;
                    } else if (_source330.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7636___mcc_h5136 = _source330.dtor_value;
                    } else if (_source330.is_LiteralBool) {
                      bool _7637___mcc_h5138 = _source330.dtor_bvalue;
                    } else if (_source330.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7638___mcc_h5140 = _source330.dtor_value;
                      bool _7639___mcc_h5141 = _source330.dtor_binary;
                    } else if (_source330.is_DeclareVar) {
                      RAST._IDeclareType _7640___mcc_h5144 = _source330.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7641___mcc_h5145 = _source330.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7642___mcc_h5146 = _source330.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7643___mcc_h5147 = _source330.dtor_optRhs;
                    } else if (_source330.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7644___mcc_h5152 = _source330.dtor_names;
                      RAST._IExpr _7645___mcc_h5153 = _source330.dtor_rhs;
                    } else if (_source330.is_IfExpr) {
                      RAST._IExpr _7646___mcc_h5156 = _source330.dtor_cond;
                      RAST._IExpr _7647___mcc_h5157 = _source330.dtor_thn;
                      RAST._IExpr _7648___mcc_h5158 = _source330.dtor_els;
                    } else if (_source330.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7649___mcc_h5162 = _source330.dtor_optCond;
                      RAST._IExpr _7650___mcc_h5163 = _source330.dtor_underlying;
                    } else if (_source330.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7651___mcc_h5166 = _source330.dtor_name;
                      RAST._IExpr _7652___mcc_h5167 = _source330.dtor_range;
                      RAST._IExpr _7653___mcc_h5168 = _source330.dtor_body;
                    } else if (_source330.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7654___mcc_h5172 = _source330.dtor_lbl;
                      RAST._IExpr _7655___mcc_h5173 = _source330.dtor_underlying;
                    } else if (_source330.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7656___mcc_h5176 = _source330.dtor_optLbl;
                    } else if (_source330.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7657___mcc_h5178 = _source330.dtor_optLbl;
                    } else if (_source330.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7658___mcc_h5180 = _source330.dtor_optExpr;
                    } else if (_source330.is_CallType) {
                      RAST._IExpr _7659___mcc_h5182 = _source330.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7660___mcc_h5183 = _source330.dtor_typeParameters;
                    } else if (_source330.is_Call) {
                      RAST._IExpr _7661___mcc_h5186 = _source330.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7662___mcc_h5187 = _source330.dtor_arguments;
                    } else if (_source330.is_Select) {
                      RAST._IExpr _7663___mcc_h5190 = _source330.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7664___mcc_h5191 = _source330.dtor_name;
                    } else if (_source330.is_MemberSelect) {
                      RAST._IExpr _7665___mcc_h5194 = _source330.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7666___mcc_h5195 = _source330.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7667___mcc_h5198 = _source330.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7668___mcc_h5199 = _source330.dtor_retType;
                      RAST._IExpr _7669___mcc_h5200 = _source330.dtor_body;
                    }
                  } else {
                  }
                } else if (_source329.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7670___mcc_h5204 = _source329.dtor_op2;
                  RAST._IExpr _7671___mcc_h5205 = _source329.dtor_left;
                  RAST._IExpr _7672___mcc_h5206 = _source329.dtor_right;
                  DAST.Format._IBinaryOpFormat _7673___mcc_h5207 = _source329.dtor_format2;
                } else if (_source329.is_TypeAscription) {
                  RAST._IExpr _7674___mcc_h5212 = _source329.dtor_left;
                  RAST._IType _7675___mcc_h5213 = _source329.dtor_tpe;
                } else if (_source329.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7676___mcc_h5216 = _source329.dtor_value;
                } else if (_source329.is_LiteralBool) {
                  bool _7677___mcc_h5218 = _source329.dtor_bvalue;
                } else if (_source329.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7678___mcc_h5220 = _source329.dtor_value;
                  bool _7679___mcc_h5221 = _source329.dtor_binary;
                } else if (_source329.is_DeclareVar) {
                  RAST._IDeclareType _7680___mcc_h5224 = _source329.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7681___mcc_h5225 = _source329.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7682___mcc_h5226 = _source329.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7683___mcc_h5227 = _source329.dtor_optRhs;
                } else if (_source329.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7684___mcc_h5232 = _source329.dtor_names;
                  RAST._IExpr _7685___mcc_h5233 = _source329.dtor_rhs;
                } else if (_source329.is_IfExpr) {
                  RAST._IExpr _7686___mcc_h5236 = _source329.dtor_cond;
                  RAST._IExpr _7687___mcc_h5237 = _source329.dtor_thn;
                  RAST._IExpr _7688___mcc_h5238 = _source329.dtor_els;
                } else if (_source329.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7689___mcc_h5242 = _source329.dtor_optCond;
                  RAST._IExpr _7690___mcc_h5243 = _source329.dtor_underlying;
                } else if (_source329.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7691___mcc_h5246 = _source329.dtor_name;
                  RAST._IExpr _7692___mcc_h5247 = _source329.dtor_range;
                  RAST._IExpr _7693___mcc_h5248 = _source329.dtor_body;
                } else if (_source329.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7694___mcc_h5252 = _source329.dtor_lbl;
                  RAST._IExpr _7695___mcc_h5253 = _source329.dtor_underlying;
                } else if (_source329.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7696___mcc_h5256 = _source329.dtor_optLbl;
                } else if (_source329.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7697___mcc_h5258 = _source329.dtor_optLbl;
                } else if (_source329.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7698___mcc_h5260 = _source329.dtor_optExpr;
                } else if (_source329.is_CallType) {
                  RAST._IExpr _7699___mcc_h5262 = _source329.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7700___mcc_h5263 = _source329.dtor_typeParameters;
                } else if (_source329.is_Call) {
                  RAST._IExpr _7701___mcc_h5266 = _source329.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7702___mcc_h5267 = _source329.dtor_arguments;
                } else if (_source329.is_Select) {
                  RAST._IExpr _7703___mcc_h5270 = _source329.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7704___mcc_h5271 = _source329.dtor_name;
                } else if (_source329.is_MemberSelect) {
                  RAST._IExpr _7705___mcc_h5274 = _source329.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7706___mcc_h5275 = _source329.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7707___mcc_h5278 = _source329.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7708___mcc_h5279 = _source329.dtor_retType;
                  RAST._IExpr _7709___mcc_h5280 = _source329.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7593_field));
              if (_7592_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7710_fromOwnership;
              _7710_fromOwnership = ((_7592_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1909;
              DCOMP._IOwnership _out1910;
              DCOMP.COMP.FromOwnership(r, _7710_fromOwnership, expectedOwnership, out _out1909, out _out1910);
              r = _out1909;
              resultingOwnership = _out1910;
              readIdents = _7601_recIdents;
            }
            return ;
          }
        } else if (_source284.is_ArrayLen) {
          DAST._IExpression _7711___mcc_h152 = _source284.dtor_expr;
          DAST._IType _7712___mcc_h153 = _source284.dtor_exprType;
          BigInteger _7713___mcc_h154 = _source284.dtor_dim;
          bool _7714___mcc_h155 = _source284.dtor_native;
          DAST._IType _7715_fieldType = _4872___mcc_h57;
          bool _7716_isDatatype = _4871___mcc_h56;
          bool _7717_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7718_field = _4869___mcc_h54;
          DAST._IExpression _7719_on = _4868___mcc_h53;
          {
            if (_7716_isDatatype) {
              RAST._IExpr _7720_onExpr;
              DCOMP._IOwnership _7721_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7722_recIdents;
              RAST._IExpr _out1911;
              DCOMP._IOwnership _out1912;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1913;
              (this).GenExpr(_7719_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1911, out _out1912, out _out1913);
              _7720_onExpr = _out1911;
              _7721_onOwned = _out1912;
              _7722_recIdents = _out1913;
              r = ((_7720_onExpr).Sel(DCOMP.__default.escapeName(_7718_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7723_typ;
              RAST._IType _out1914;
              _out1914 = (this).GenType(_7715_fieldType, false, false);
              _7723_typ = _out1914;
              if (((_7723_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1915;
                DCOMP._IOwnership _out1916;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1915, out _out1916);
                r = _out1915;
                resultingOwnership = _out1916;
              }
              readIdents = _7722_recIdents;
            } else {
              RAST._IExpr _7724_onExpr;
              DCOMP._IOwnership _7725_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7726_recIdents;
              RAST._IExpr _out1917;
              DCOMP._IOwnership _out1918;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1919;
              (this).GenExpr(_7719_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1917, out _out1918, out _out1919);
              _7724_onExpr = _out1917;
              _7725_onOwned = _out1918;
              _7726_recIdents = _out1919;
              r = _7724_onExpr;
              if (!object.Equals(_7724_onExpr, RAST.__default.self)) {
                RAST._IExpr _source331 = _7724_onExpr;
                if (_source331.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7727___mcc_h5284 = _source331.dtor_content;
                } else if (_source331.is_ExprFromType) {
                  RAST._IType _7728___mcc_h5286 = _source331.dtor_tpe;
                } else if (_source331.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7729___mcc_h5288 = _source331.dtor_name;
                } else if (_source331.is_Match) {
                  RAST._IExpr _7730___mcc_h5290 = _source331.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7731___mcc_h5291 = _source331.dtor_cases;
                } else if (_source331.is_StmtExpr) {
                  RAST._IExpr _7732___mcc_h5294 = _source331.dtor_stmt;
                  RAST._IExpr _7733___mcc_h5295 = _source331.dtor_rhs;
                } else if (_source331.is_Block) {
                  RAST._IExpr _7734___mcc_h5298 = _source331.dtor_underlying;
                } else if (_source331.is_StructBuild) {
                  RAST._IExpr _7735___mcc_h5300 = _source331.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7736___mcc_h5301 = _source331.dtor_assignments;
                } else if (_source331.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7737___mcc_h5304 = _source331.dtor_arguments;
                } else if (_source331.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7738___mcc_h5306 = _source331.dtor_op1;
                  RAST._IExpr _7739___mcc_h5307 = _source331.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7740___mcc_h5308 = _source331.dtor_format;
                  if (object.Equals(_7738___mcc_h5306, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source332 = _7739___mcc_h5307;
                    if (_source332.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7741___mcc_h5312 = _source332.dtor_content;
                    } else if (_source332.is_ExprFromType) {
                      RAST._IType _7742___mcc_h5314 = _source332.dtor_tpe;
                    } else if (_source332.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7743___mcc_h5316 = _source332.dtor_name;
                      if (object.Equals(_7743___mcc_h5316, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source332.is_Match) {
                      RAST._IExpr _7744___mcc_h5318 = _source332.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7745___mcc_h5319 = _source332.dtor_cases;
                    } else if (_source332.is_StmtExpr) {
                      RAST._IExpr _7746___mcc_h5322 = _source332.dtor_stmt;
                      RAST._IExpr _7747___mcc_h5323 = _source332.dtor_rhs;
                    } else if (_source332.is_Block) {
                      RAST._IExpr _7748___mcc_h5326 = _source332.dtor_underlying;
                    } else if (_source332.is_StructBuild) {
                      RAST._IExpr _7749___mcc_h5328 = _source332.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7750___mcc_h5329 = _source332.dtor_assignments;
                    } else if (_source332.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7751___mcc_h5332 = _source332.dtor_arguments;
                    } else if (_source332.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7752___mcc_h5334 = _source332.dtor_op1;
                      RAST._IExpr _7753___mcc_h5335 = _source332.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7754___mcc_h5336 = _source332.dtor_format;
                    } else if (_source332.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7755___mcc_h5340 = _source332.dtor_op2;
                      RAST._IExpr _7756___mcc_h5341 = _source332.dtor_left;
                      RAST._IExpr _7757___mcc_h5342 = _source332.dtor_right;
                      DAST.Format._IBinaryOpFormat _7758___mcc_h5343 = _source332.dtor_format2;
                    } else if (_source332.is_TypeAscription) {
                      RAST._IExpr _7759___mcc_h5348 = _source332.dtor_left;
                      RAST._IType _7760___mcc_h5349 = _source332.dtor_tpe;
                    } else if (_source332.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7761___mcc_h5352 = _source332.dtor_value;
                    } else if (_source332.is_LiteralBool) {
                      bool _7762___mcc_h5354 = _source332.dtor_bvalue;
                    } else if (_source332.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7763___mcc_h5356 = _source332.dtor_value;
                      bool _7764___mcc_h5357 = _source332.dtor_binary;
                    } else if (_source332.is_DeclareVar) {
                      RAST._IDeclareType _7765___mcc_h5360 = _source332.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7766___mcc_h5361 = _source332.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7767___mcc_h5362 = _source332.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7768___mcc_h5363 = _source332.dtor_optRhs;
                    } else if (_source332.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7769___mcc_h5368 = _source332.dtor_names;
                      RAST._IExpr _7770___mcc_h5369 = _source332.dtor_rhs;
                    } else if (_source332.is_IfExpr) {
                      RAST._IExpr _7771___mcc_h5372 = _source332.dtor_cond;
                      RAST._IExpr _7772___mcc_h5373 = _source332.dtor_thn;
                      RAST._IExpr _7773___mcc_h5374 = _source332.dtor_els;
                    } else if (_source332.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7774___mcc_h5378 = _source332.dtor_optCond;
                      RAST._IExpr _7775___mcc_h5379 = _source332.dtor_underlying;
                    } else if (_source332.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7776___mcc_h5382 = _source332.dtor_name;
                      RAST._IExpr _7777___mcc_h5383 = _source332.dtor_range;
                      RAST._IExpr _7778___mcc_h5384 = _source332.dtor_body;
                    } else if (_source332.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7779___mcc_h5388 = _source332.dtor_lbl;
                      RAST._IExpr _7780___mcc_h5389 = _source332.dtor_underlying;
                    } else if (_source332.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7781___mcc_h5392 = _source332.dtor_optLbl;
                    } else if (_source332.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7782___mcc_h5394 = _source332.dtor_optLbl;
                    } else if (_source332.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7783___mcc_h5396 = _source332.dtor_optExpr;
                    } else if (_source332.is_CallType) {
                      RAST._IExpr _7784___mcc_h5398 = _source332.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7785___mcc_h5399 = _source332.dtor_typeParameters;
                    } else if (_source332.is_Call) {
                      RAST._IExpr _7786___mcc_h5402 = _source332.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7787___mcc_h5403 = _source332.dtor_arguments;
                    } else if (_source332.is_Select) {
                      RAST._IExpr _7788___mcc_h5406 = _source332.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7789___mcc_h5407 = _source332.dtor_name;
                    } else if (_source332.is_MemberSelect) {
                      RAST._IExpr _7790___mcc_h5410 = _source332.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7791___mcc_h5411 = _source332.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7792___mcc_h5414 = _source332.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7793___mcc_h5415 = _source332.dtor_retType;
                      RAST._IExpr _7794___mcc_h5416 = _source332.dtor_body;
                    }
                  } else {
                  }
                } else if (_source331.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7795___mcc_h5420 = _source331.dtor_op2;
                  RAST._IExpr _7796___mcc_h5421 = _source331.dtor_left;
                  RAST._IExpr _7797___mcc_h5422 = _source331.dtor_right;
                  DAST.Format._IBinaryOpFormat _7798___mcc_h5423 = _source331.dtor_format2;
                } else if (_source331.is_TypeAscription) {
                  RAST._IExpr _7799___mcc_h5428 = _source331.dtor_left;
                  RAST._IType _7800___mcc_h5429 = _source331.dtor_tpe;
                } else if (_source331.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7801___mcc_h5432 = _source331.dtor_value;
                } else if (_source331.is_LiteralBool) {
                  bool _7802___mcc_h5434 = _source331.dtor_bvalue;
                } else if (_source331.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7803___mcc_h5436 = _source331.dtor_value;
                  bool _7804___mcc_h5437 = _source331.dtor_binary;
                } else if (_source331.is_DeclareVar) {
                  RAST._IDeclareType _7805___mcc_h5440 = _source331.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7806___mcc_h5441 = _source331.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7807___mcc_h5442 = _source331.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7808___mcc_h5443 = _source331.dtor_optRhs;
                } else if (_source331.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7809___mcc_h5448 = _source331.dtor_names;
                  RAST._IExpr _7810___mcc_h5449 = _source331.dtor_rhs;
                } else if (_source331.is_IfExpr) {
                  RAST._IExpr _7811___mcc_h5452 = _source331.dtor_cond;
                  RAST._IExpr _7812___mcc_h5453 = _source331.dtor_thn;
                  RAST._IExpr _7813___mcc_h5454 = _source331.dtor_els;
                } else if (_source331.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7814___mcc_h5458 = _source331.dtor_optCond;
                  RAST._IExpr _7815___mcc_h5459 = _source331.dtor_underlying;
                } else if (_source331.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7816___mcc_h5462 = _source331.dtor_name;
                  RAST._IExpr _7817___mcc_h5463 = _source331.dtor_range;
                  RAST._IExpr _7818___mcc_h5464 = _source331.dtor_body;
                } else if (_source331.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7819___mcc_h5468 = _source331.dtor_lbl;
                  RAST._IExpr _7820___mcc_h5469 = _source331.dtor_underlying;
                } else if (_source331.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7821___mcc_h5472 = _source331.dtor_optLbl;
                } else if (_source331.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7822___mcc_h5474 = _source331.dtor_optLbl;
                } else if (_source331.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7823___mcc_h5476 = _source331.dtor_optExpr;
                } else if (_source331.is_CallType) {
                  RAST._IExpr _7824___mcc_h5478 = _source331.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7825___mcc_h5479 = _source331.dtor_typeParameters;
                } else if (_source331.is_Call) {
                  RAST._IExpr _7826___mcc_h5482 = _source331.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7827___mcc_h5483 = _source331.dtor_arguments;
                } else if (_source331.is_Select) {
                  RAST._IExpr _7828___mcc_h5486 = _source331.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7829___mcc_h5487 = _source331.dtor_name;
                } else if (_source331.is_MemberSelect) {
                  RAST._IExpr _7830___mcc_h5490 = _source331.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7831___mcc_h5491 = _source331.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7832___mcc_h5494 = _source331.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7833___mcc_h5495 = _source331.dtor_retType;
                  RAST._IExpr _7834___mcc_h5496 = _source331.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7718_field));
              if (_7717_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7835_fromOwnership;
              _7835_fromOwnership = ((_7717_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1920;
              DCOMP._IOwnership _out1921;
              DCOMP.COMP.FromOwnership(r, _7835_fromOwnership, expectedOwnership, out _out1920, out _out1921);
              r = _out1920;
              resultingOwnership = _out1921;
              readIdents = _7726_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MapKeys) {
          DAST._IExpression _7836___mcc_h160 = _source284.dtor_expr;
          DAST._IType _7837_fieldType = _4872___mcc_h57;
          bool _7838_isDatatype = _4871___mcc_h56;
          bool _7839_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7840_field = _4869___mcc_h54;
          DAST._IExpression _7841_on = _4868___mcc_h53;
          {
            if (_7838_isDatatype) {
              RAST._IExpr _7842_onExpr;
              DCOMP._IOwnership _7843_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7844_recIdents;
              RAST._IExpr _out1922;
              DCOMP._IOwnership _out1923;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1924;
              (this).GenExpr(_7841_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1922, out _out1923, out _out1924);
              _7842_onExpr = _out1922;
              _7843_onOwned = _out1923;
              _7844_recIdents = _out1924;
              r = ((_7842_onExpr).Sel(DCOMP.__default.escapeName(_7840_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7845_typ;
              RAST._IType _out1925;
              _out1925 = (this).GenType(_7837_fieldType, false, false);
              _7845_typ = _out1925;
              if (((_7845_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1926;
                DCOMP._IOwnership _out1927;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1926, out _out1927);
                r = _out1926;
                resultingOwnership = _out1927;
              }
              readIdents = _7844_recIdents;
            } else {
              RAST._IExpr _7846_onExpr;
              DCOMP._IOwnership _7847_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7848_recIdents;
              RAST._IExpr _out1928;
              DCOMP._IOwnership _out1929;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1930;
              (this).GenExpr(_7841_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1928, out _out1929, out _out1930);
              _7846_onExpr = _out1928;
              _7847_onOwned = _out1929;
              _7848_recIdents = _out1930;
              r = _7846_onExpr;
              if (!object.Equals(_7846_onExpr, RAST.__default.self)) {
                RAST._IExpr _source333 = _7846_onExpr;
                if (_source333.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7849___mcc_h5500 = _source333.dtor_content;
                } else if (_source333.is_ExprFromType) {
                  RAST._IType _7850___mcc_h5502 = _source333.dtor_tpe;
                } else if (_source333.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7851___mcc_h5504 = _source333.dtor_name;
                } else if (_source333.is_Match) {
                  RAST._IExpr _7852___mcc_h5506 = _source333.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7853___mcc_h5507 = _source333.dtor_cases;
                } else if (_source333.is_StmtExpr) {
                  RAST._IExpr _7854___mcc_h5510 = _source333.dtor_stmt;
                  RAST._IExpr _7855___mcc_h5511 = _source333.dtor_rhs;
                } else if (_source333.is_Block) {
                  RAST._IExpr _7856___mcc_h5514 = _source333.dtor_underlying;
                } else if (_source333.is_StructBuild) {
                  RAST._IExpr _7857___mcc_h5516 = _source333.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7858___mcc_h5517 = _source333.dtor_assignments;
                } else if (_source333.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7859___mcc_h5520 = _source333.dtor_arguments;
                } else if (_source333.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7860___mcc_h5522 = _source333.dtor_op1;
                  RAST._IExpr _7861___mcc_h5523 = _source333.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7862___mcc_h5524 = _source333.dtor_format;
                  if (object.Equals(_7860___mcc_h5522, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source334 = _7861___mcc_h5523;
                    if (_source334.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7863___mcc_h5528 = _source334.dtor_content;
                    } else if (_source334.is_ExprFromType) {
                      RAST._IType _7864___mcc_h5530 = _source334.dtor_tpe;
                    } else if (_source334.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7865___mcc_h5532 = _source334.dtor_name;
                      if (object.Equals(_7865___mcc_h5532, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source334.is_Match) {
                      RAST._IExpr _7866___mcc_h5534 = _source334.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7867___mcc_h5535 = _source334.dtor_cases;
                    } else if (_source334.is_StmtExpr) {
                      RAST._IExpr _7868___mcc_h5538 = _source334.dtor_stmt;
                      RAST._IExpr _7869___mcc_h5539 = _source334.dtor_rhs;
                    } else if (_source334.is_Block) {
                      RAST._IExpr _7870___mcc_h5542 = _source334.dtor_underlying;
                    } else if (_source334.is_StructBuild) {
                      RAST._IExpr _7871___mcc_h5544 = _source334.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7872___mcc_h5545 = _source334.dtor_assignments;
                    } else if (_source334.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7873___mcc_h5548 = _source334.dtor_arguments;
                    } else if (_source334.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7874___mcc_h5550 = _source334.dtor_op1;
                      RAST._IExpr _7875___mcc_h5551 = _source334.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7876___mcc_h5552 = _source334.dtor_format;
                    } else if (_source334.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7877___mcc_h5556 = _source334.dtor_op2;
                      RAST._IExpr _7878___mcc_h5557 = _source334.dtor_left;
                      RAST._IExpr _7879___mcc_h5558 = _source334.dtor_right;
                      DAST.Format._IBinaryOpFormat _7880___mcc_h5559 = _source334.dtor_format2;
                    } else if (_source334.is_TypeAscription) {
                      RAST._IExpr _7881___mcc_h5564 = _source334.dtor_left;
                      RAST._IType _7882___mcc_h5565 = _source334.dtor_tpe;
                    } else if (_source334.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7883___mcc_h5568 = _source334.dtor_value;
                    } else if (_source334.is_LiteralBool) {
                      bool _7884___mcc_h5570 = _source334.dtor_bvalue;
                    } else if (_source334.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7885___mcc_h5572 = _source334.dtor_value;
                      bool _7886___mcc_h5573 = _source334.dtor_binary;
                    } else if (_source334.is_DeclareVar) {
                      RAST._IDeclareType _7887___mcc_h5576 = _source334.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7888___mcc_h5577 = _source334.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7889___mcc_h5578 = _source334.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7890___mcc_h5579 = _source334.dtor_optRhs;
                    } else if (_source334.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7891___mcc_h5584 = _source334.dtor_names;
                      RAST._IExpr _7892___mcc_h5585 = _source334.dtor_rhs;
                    } else if (_source334.is_IfExpr) {
                      RAST._IExpr _7893___mcc_h5588 = _source334.dtor_cond;
                      RAST._IExpr _7894___mcc_h5589 = _source334.dtor_thn;
                      RAST._IExpr _7895___mcc_h5590 = _source334.dtor_els;
                    } else if (_source334.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7896___mcc_h5594 = _source334.dtor_optCond;
                      RAST._IExpr _7897___mcc_h5595 = _source334.dtor_underlying;
                    } else if (_source334.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7898___mcc_h5598 = _source334.dtor_name;
                      RAST._IExpr _7899___mcc_h5599 = _source334.dtor_range;
                      RAST._IExpr _7900___mcc_h5600 = _source334.dtor_body;
                    } else if (_source334.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7901___mcc_h5604 = _source334.dtor_lbl;
                      RAST._IExpr _7902___mcc_h5605 = _source334.dtor_underlying;
                    } else if (_source334.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7903___mcc_h5608 = _source334.dtor_optLbl;
                    } else if (_source334.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7904___mcc_h5610 = _source334.dtor_optLbl;
                    } else if (_source334.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7905___mcc_h5612 = _source334.dtor_optExpr;
                    } else if (_source334.is_CallType) {
                      RAST._IExpr _7906___mcc_h5614 = _source334.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7907___mcc_h5615 = _source334.dtor_typeParameters;
                    } else if (_source334.is_Call) {
                      RAST._IExpr _7908___mcc_h5618 = _source334.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7909___mcc_h5619 = _source334.dtor_arguments;
                    } else if (_source334.is_Select) {
                      RAST._IExpr _7910___mcc_h5622 = _source334.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7911___mcc_h5623 = _source334.dtor_name;
                    } else if (_source334.is_MemberSelect) {
                      RAST._IExpr _7912___mcc_h5626 = _source334.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7913___mcc_h5627 = _source334.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7914___mcc_h5630 = _source334.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7915___mcc_h5631 = _source334.dtor_retType;
                      RAST._IExpr _7916___mcc_h5632 = _source334.dtor_body;
                    }
                  } else {
                  }
                } else if (_source333.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7917___mcc_h5636 = _source333.dtor_op2;
                  RAST._IExpr _7918___mcc_h5637 = _source333.dtor_left;
                  RAST._IExpr _7919___mcc_h5638 = _source333.dtor_right;
                  DAST.Format._IBinaryOpFormat _7920___mcc_h5639 = _source333.dtor_format2;
                } else if (_source333.is_TypeAscription) {
                  RAST._IExpr _7921___mcc_h5644 = _source333.dtor_left;
                  RAST._IType _7922___mcc_h5645 = _source333.dtor_tpe;
                } else if (_source333.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7923___mcc_h5648 = _source333.dtor_value;
                } else if (_source333.is_LiteralBool) {
                  bool _7924___mcc_h5650 = _source333.dtor_bvalue;
                } else if (_source333.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7925___mcc_h5652 = _source333.dtor_value;
                  bool _7926___mcc_h5653 = _source333.dtor_binary;
                } else if (_source333.is_DeclareVar) {
                  RAST._IDeclareType _7927___mcc_h5656 = _source333.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7928___mcc_h5657 = _source333.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7929___mcc_h5658 = _source333.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7930___mcc_h5659 = _source333.dtor_optRhs;
                } else if (_source333.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7931___mcc_h5664 = _source333.dtor_names;
                  RAST._IExpr _7932___mcc_h5665 = _source333.dtor_rhs;
                } else if (_source333.is_IfExpr) {
                  RAST._IExpr _7933___mcc_h5668 = _source333.dtor_cond;
                  RAST._IExpr _7934___mcc_h5669 = _source333.dtor_thn;
                  RAST._IExpr _7935___mcc_h5670 = _source333.dtor_els;
                } else if (_source333.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7936___mcc_h5674 = _source333.dtor_optCond;
                  RAST._IExpr _7937___mcc_h5675 = _source333.dtor_underlying;
                } else if (_source333.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7938___mcc_h5678 = _source333.dtor_name;
                  RAST._IExpr _7939___mcc_h5679 = _source333.dtor_range;
                  RAST._IExpr _7940___mcc_h5680 = _source333.dtor_body;
                } else if (_source333.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7941___mcc_h5684 = _source333.dtor_lbl;
                  RAST._IExpr _7942___mcc_h5685 = _source333.dtor_underlying;
                } else if (_source333.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7943___mcc_h5688 = _source333.dtor_optLbl;
                } else if (_source333.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7944___mcc_h5690 = _source333.dtor_optLbl;
                } else if (_source333.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7945___mcc_h5692 = _source333.dtor_optExpr;
                } else if (_source333.is_CallType) {
                  RAST._IExpr _7946___mcc_h5694 = _source333.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7947___mcc_h5695 = _source333.dtor_typeParameters;
                } else if (_source333.is_Call) {
                  RAST._IExpr _7948___mcc_h5698 = _source333.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7949___mcc_h5699 = _source333.dtor_arguments;
                } else if (_source333.is_Select) {
                  RAST._IExpr _7950___mcc_h5702 = _source333.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7951___mcc_h5703 = _source333.dtor_name;
                } else if (_source333.is_MemberSelect) {
                  RAST._IExpr _7952___mcc_h5706 = _source333.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7953___mcc_h5707 = _source333.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7954___mcc_h5710 = _source333.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7955___mcc_h5711 = _source333.dtor_retType;
                  RAST._IExpr _7956___mcc_h5712 = _source333.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7840_field));
              if (_7839_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _7957_fromOwnership;
              _7957_fromOwnership = ((_7839_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1931;
              DCOMP._IOwnership _out1932;
              DCOMP.COMP.FromOwnership(r, _7957_fromOwnership, expectedOwnership, out _out1931, out _out1932);
              r = _out1931;
              resultingOwnership = _out1932;
              readIdents = _7848_recIdents;
            }
            return ;
          }
        } else if (_source284.is_MapValues) {
          DAST._IExpression _7958___mcc_h162 = _source284.dtor_expr;
          DAST._IType _7959_fieldType = _4872___mcc_h57;
          bool _7960_isDatatype = _4871___mcc_h56;
          bool _7961_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _7962_field = _4869___mcc_h54;
          DAST._IExpression _7963_on = _4868___mcc_h53;
          {
            if (_7960_isDatatype) {
              RAST._IExpr _7964_onExpr;
              DCOMP._IOwnership _7965_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7966_recIdents;
              RAST._IExpr _out1933;
              DCOMP._IOwnership _out1934;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1935;
              (this).GenExpr(_7963_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1933, out _out1934, out _out1935);
              _7964_onExpr = _out1933;
              _7965_onOwned = _out1934;
              _7966_recIdents = _out1935;
              r = ((_7964_onExpr).Sel(DCOMP.__default.escapeName(_7962_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7967_typ;
              RAST._IType _out1936;
              _out1936 = (this).GenType(_7959_fieldType, false, false);
              _7967_typ = _out1936;
              if (((_7967_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1937;
                DCOMP._IOwnership _out1938;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1937, out _out1938);
                r = _out1937;
                resultingOwnership = _out1938;
              }
              readIdents = _7966_recIdents;
            } else {
              RAST._IExpr _7968_onExpr;
              DCOMP._IOwnership _7969_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7970_recIdents;
              RAST._IExpr _out1939;
              DCOMP._IOwnership _out1940;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1941;
              (this).GenExpr(_7963_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1939, out _out1940, out _out1941);
              _7968_onExpr = _out1939;
              _7969_onOwned = _out1940;
              _7970_recIdents = _out1941;
              r = _7968_onExpr;
              if (!object.Equals(_7968_onExpr, RAST.__default.self)) {
                RAST._IExpr _source335 = _7968_onExpr;
                if (_source335.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7971___mcc_h5716 = _source335.dtor_content;
                } else if (_source335.is_ExprFromType) {
                  RAST._IType _7972___mcc_h5718 = _source335.dtor_tpe;
                } else if (_source335.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7973___mcc_h5720 = _source335.dtor_name;
                } else if (_source335.is_Match) {
                  RAST._IExpr _7974___mcc_h5722 = _source335.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7975___mcc_h5723 = _source335.dtor_cases;
                } else if (_source335.is_StmtExpr) {
                  RAST._IExpr _7976___mcc_h5726 = _source335.dtor_stmt;
                  RAST._IExpr _7977___mcc_h5727 = _source335.dtor_rhs;
                } else if (_source335.is_Block) {
                  RAST._IExpr _7978___mcc_h5730 = _source335.dtor_underlying;
                } else if (_source335.is_StructBuild) {
                  RAST._IExpr _7979___mcc_h5732 = _source335.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7980___mcc_h5733 = _source335.dtor_assignments;
                } else if (_source335.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7981___mcc_h5736 = _source335.dtor_arguments;
                } else if (_source335.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7982___mcc_h5738 = _source335.dtor_op1;
                  RAST._IExpr _7983___mcc_h5739 = _source335.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7984___mcc_h5740 = _source335.dtor_format;
                  if (object.Equals(_7982___mcc_h5738, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source336 = _7983___mcc_h5739;
                    if (_source336.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7985___mcc_h5744 = _source336.dtor_content;
                    } else if (_source336.is_ExprFromType) {
                      RAST._IType _7986___mcc_h5746 = _source336.dtor_tpe;
                    } else if (_source336.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7987___mcc_h5748 = _source336.dtor_name;
                      if (object.Equals(_7987___mcc_h5748, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source336.is_Match) {
                      RAST._IExpr _7988___mcc_h5750 = _source336.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7989___mcc_h5751 = _source336.dtor_cases;
                    } else if (_source336.is_StmtExpr) {
                      RAST._IExpr _7990___mcc_h5754 = _source336.dtor_stmt;
                      RAST._IExpr _7991___mcc_h5755 = _source336.dtor_rhs;
                    } else if (_source336.is_Block) {
                      RAST._IExpr _7992___mcc_h5758 = _source336.dtor_underlying;
                    } else if (_source336.is_StructBuild) {
                      RAST._IExpr _7993___mcc_h5760 = _source336.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7994___mcc_h5761 = _source336.dtor_assignments;
                    } else if (_source336.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7995___mcc_h5764 = _source336.dtor_arguments;
                    } else if (_source336.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7996___mcc_h5766 = _source336.dtor_op1;
                      RAST._IExpr _7997___mcc_h5767 = _source336.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7998___mcc_h5768 = _source336.dtor_format;
                    } else if (_source336.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7999___mcc_h5772 = _source336.dtor_op2;
                      RAST._IExpr _8000___mcc_h5773 = _source336.dtor_left;
                      RAST._IExpr _8001___mcc_h5774 = _source336.dtor_right;
                      DAST.Format._IBinaryOpFormat _8002___mcc_h5775 = _source336.dtor_format2;
                    } else if (_source336.is_TypeAscription) {
                      RAST._IExpr _8003___mcc_h5780 = _source336.dtor_left;
                      RAST._IType _8004___mcc_h5781 = _source336.dtor_tpe;
                    } else if (_source336.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8005___mcc_h5784 = _source336.dtor_value;
                    } else if (_source336.is_LiteralBool) {
                      bool _8006___mcc_h5786 = _source336.dtor_bvalue;
                    } else if (_source336.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8007___mcc_h5788 = _source336.dtor_value;
                      bool _8008___mcc_h5789 = _source336.dtor_binary;
                    } else if (_source336.is_DeclareVar) {
                      RAST._IDeclareType _8009___mcc_h5792 = _source336.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8010___mcc_h5793 = _source336.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8011___mcc_h5794 = _source336.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8012___mcc_h5795 = _source336.dtor_optRhs;
                    } else if (_source336.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8013___mcc_h5800 = _source336.dtor_names;
                      RAST._IExpr _8014___mcc_h5801 = _source336.dtor_rhs;
                    } else if (_source336.is_IfExpr) {
                      RAST._IExpr _8015___mcc_h5804 = _source336.dtor_cond;
                      RAST._IExpr _8016___mcc_h5805 = _source336.dtor_thn;
                      RAST._IExpr _8017___mcc_h5806 = _source336.dtor_els;
                    } else if (_source336.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8018___mcc_h5810 = _source336.dtor_optCond;
                      RAST._IExpr _8019___mcc_h5811 = _source336.dtor_underlying;
                    } else if (_source336.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8020___mcc_h5814 = _source336.dtor_name;
                      RAST._IExpr _8021___mcc_h5815 = _source336.dtor_range;
                      RAST._IExpr _8022___mcc_h5816 = _source336.dtor_body;
                    } else if (_source336.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8023___mcc_h5820 = _source336.dtor_lbl;
                      RAST._IExpr _8024___mcc_h5821 = _source336.dtor_underlying;
                    } else if (_source336.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8025___mcc_h5824 = _source336.dtor_optLbl;
                    } else if (_source336.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8026___mcc_h5826 = _source336.dtor_optLbl;
                    } else if (_source336.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8027___mcc_h5828 = _source336.dtor_optExpr;
                    } else if (_source336.is_CallType) {
                      RAST._IExpr _8028___mcc_h5830 = _source336.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8029___mcc_h5831 = _source336.dtor_typeParameters;
                    } else if (_source336.is_Call) {
                      RAST._IExpr _8030___mcc_h5834 = _source336.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8031___mcc_h5835 = _source336.dtor_arguments;
                    } else if (_source336.is_Select) {
                      RAST._IExpr _8032___mcc_h5838 = _source336.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8033___mcc_h5839 = _source336.dtor_name;
                    } else if (_source336.is_MemberSelect) {
                      RAST._IExpr _8034___mcc_h5842 = _source336.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8035___mcc_h5843 = _source336.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8036___mcc_h5846 = _source336.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8037___mcc_h5847 = _source336.dtor_retType;
                      RAST._IExpr _8038___mcc_h5848 = _source336.dtor_body;
                    }
                  } else {
                  }
                } else if (_source335.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8039___mcc_h5852 = _source335.dtor_op2;
                  RAST._IExpr _8040___mcc_h5853 = _source335.dtor_left;
                  RAST._IExpr _8041___mcc_h5854 = _source335.dtor_right;
                  DAST.Format._IBinaryOpFormat _8042___mcc_h5855 = _source335.dtor_format2;
                } else if (_source335.is_TypeAscription) {
                  RAST._IExpr _8043___mcc_h5860 = _source335.dtor_left;
                  RAST._IType _8044___mcc_h5861 = _source335.dtor_tpe;
                } else if (_source335.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8045___mcc_h5864 = _source335.dtor_value;
                } else if (_source335.is_LiteralBool) {
                  bool _8046___mcc_h5866 = _source335.dtor_bvalue;
                } else if (_source335.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8047___mcc_h5868 = _source335.dtor_value;
                  bool _8048___mcc_h5869 = _source335.dtor_binary;
                } else if (_source335.is_DeclareVar) {
                  RAST._IDeclareType _8049___mcc_h5872 = _source335.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8050___mcc_h5873 = _source335.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8051___mcc_h5874 = _source335.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8052___mcc_h5875 = _source335.dtor_optRhs;
                } else if (_source335.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8053___mcc_h5880 = _source335.dtor_names;
                  RAST._IExpr _8054___mcc_h5881 = _source335.dtor_rhs;
                } else if (_source335.is_IfExpr) {
                  RAST._IExpr _8055___mcc_h5884 = _source335.dtor_cond;
                  RAST._IExpr _8056___mcc_h5885 = _source335.dtor_thn;
                  RAST._IExpr _8057___mcc_h5886 = _source335.dtor_els;
                } else if (_source335.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8058___mcc_h5890 = _source335.dtor_optCond;
                  RAST._IExpr _8059___mcc_h5891 = _source335.dtor_underlying;
                } else if (_source335.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8060___mcc_h5894 = _source335.dtor_name;
                  RAST._IExpr _8061___mcc_h5895 = _source335.dtor_range;
                  RAST._IExpr _8062___mcc_h5896 = _source335.dtor_body;
                } else if (_source335.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8063___mcc_h5900 = _source335.dtor_lbl;
                  RAST._IExpr _8064___mcc_h5901 = _source335.dtor_underlying;
                } else if (_source335.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8065___mcc_h5904 = _source335.dtor_optLbl;
                } else if (_source335.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8066___mcc_h5906 = _source335.dtor_optLbl;
                } else if (_source335.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8067___mcc_h5908 = _source335.dtor_optExpr;
                } else if (_source335.is_CallType) {
                  RAST._IExpr _8068___mcc_h5910 = _source335.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8069___mcc_h5911 = _source335.dtor_typeParameters;
                } else if (_source335.is_Call) {
                  RAST._IExpr _8070___mcc_h5914 = _source335.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8071___mcc_h5915 = _source335.dtor_arguments;
                } else if (_source335.is_Select) {
                  RAST._IExpr _8072___mcc_h5918 = _source335.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8073___mcc_h5919 = _source335.dtor_name;
                } else if (_source335.is_MemberSelect) {
                  RAST._IExpr _8074___mcc_h5922 = _source335.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8075___mcc_h5923 = _source335.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8076___mcc_h5926 = _source335.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8077___mcc_h5927 = _source335.dtor_retType;
                  RAST._IExpr _8078___mcc_h5928 = _source335.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7962_field));
              if (_7961_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8079_fromOwnership;
              _8079_fromOwnership = ((_7961_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1942;
              DCOMP._IOwnership _out1943;
              DCOMP.COMP.FromOwnership(r, _8079_fromOwnership, expectedOwnership, out _out1942, out _out1943);
              r = _out1942;
              resultingOwnership = _out1943;
              readIdents = _7970_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Select) {
          DAST._IExpression _8080___mcc_h164 = _source284.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _8081___mcc_h165 = _source284.dtor_field;
          bool _8082___mcc_h166 = _source284.dtor_isConstant;
          bool _8083___mcc_h167 = _source284.dtor_onDatatype;
          DAST._IType _8084___mcc_h168 = _source284.dtor_fieldType;
          DAST._IType _8085_fieldType = _4872___mcc_h57;
          bool _8086_isDatatype = _4871___mcc_h56;
          bool _8087_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8088_field = _4869___mcc_h54;
          DAST._IExpression _8089_on = _4868___mcc_h53;
          {
            if (_8086_isDatatype) {
              RAST._IExpr _8090_onExpr;
              DCOMP._IOwnership _8091_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8092_recIdents;
              RAST._IExpr _out1944;
              DCOMP._IOwnership _out1945;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1946;
              (this).GenExpr(_8089_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1944, out _out1945, out _out1946);
              _8090_onExpr = _out1944;
              _8091_onOwned = _out1945;
              _8092_recIdents = _out1946;
              r = ((_8090_onExpr).Sel(DCOMP.__default.escapeName(_8088_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8093_typ;
              RAST._IType _out1947;
              _out1947 = (this).GenType(_8085_fieldType, false, false);
              _8093_typ = _out1947;
              if (((_8093_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1948;
                DCOMP._IOwnership _out1949;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1948, out _out1949);
                r = _out1948;
                resultingOwnership = _out1949;
              }
              readIdents = _8092_recIdents;
            } else {
              RAST._IExpr _8094_onExpr;
              DCOMP._IOwnership _8095_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8096_recIdents;
              RAST._IExpr _out1950;
              DCOMP._IOwnership _out1951;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1952;
              (this).GenExpr(_8089_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1950, out _out1951, out _out1952);
              _8094_onExpr = _out1950;
              _8095_onOwned = _out1951;
              _8096_recIdents = _out1952;
              r = _8094_onExpr;
              if (!object.Equals(_8094_onExpr, RAST.__default.self)) {
                RAST._IExpr _source337 = _8094_onExpr;
                if (_source337.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8097___mcc_h5932 = _source337.dtor_content;
                } else if (_source337.is_ExprFromType) {
                  RAST._IType _8098___mcc_h5934 = _source337.dtor_tpe;
                } else if (_source337.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8099___mcc_h5936 = _source337.dtor_name;
                } else if (_source337.is_Match) {
                  RAST._IExpr _8100___mcc_h5938 = _source337.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8101___mcc_h5939 = _source337.dtor_cases;
                } else if (_source337.is_StmtExpr) {
                  RAST._IExpr _8102___mcc_h5942 = _source337.dtor_stmt;
                  RAST._IExpr _8103___mcc_h5943 = _source337.dtor_rhs;
                } else if (_source337.is_Block) {
                  RAST._IExpr _8104___mcc_h5946 = _source337.dtor_underlying;
                } else if (_source337.is_StructBuild) {
                  RAST._IExpr _8105___mcc_h5948 = _source337.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8106___mcc_h5949 = _source337.dtor_assignments;
                } else if (_source337.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8107___mcc_h5952 = _source337.dtor_arguments;
                } else if (_source337.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8108___mcc_h5954 = _source337.dtor_op1;
                  RAST._IExpr _8109___mcc_h5955 = _source337.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8110___mcc_h5956 = _source337.dtor_format;
                  if (object.Equals(_8108___mcc_h5954, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source338 = _8109___mcc_h5955;
                    if (_source338.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8111___mcc_h5960 = _source338.dtor_content;
                    } else if (_source338.is_ExprFromType) {
                      RAST._IType _8112___mcc_h5962 = _source338.dtor_tpe;
                    } else if (_source338.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8113___mcc_h5964 = _source338.dtor_name;
                      if (object.Equals(_8113___mcc_h5964, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source338.is_Match) {
                      RAST._IExpr _8114___mcc_h5966 = _source338.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8115___mcc_h5967 = _source338.dtor_cases;
                    } else if (_source338.is_StmtExpr) {
                      RAST._IExpr _8116___mcc_h5970 = _source338.dtor_stmt;
                      RAST._IExpr _8117___mcc_h5971 = _source338.dtor_rhs;
                    } else if (_source338.is_Block) {
                      RAST._IExpr _8118___mcc_h5974 = _source338.dtor_underlying;
                    } else if (_source338.is_StructBuild) {
                      RAST._IExpr _8119___mcc_h5976 = _source338.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8120___mcc_h5977 = _source338.dtor_assignments;
                    } else if (_source338.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8121___mcc_h5980 = _source338.dtor_arguments;
                    } else if (_source338.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8122___mcc_h5982 = _source338.dtor_op1;
                      RAST._IExpr _8123___mcc_h5983 = _source338.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8124___mcc_h5984 = _source338.dtor_format;
                    } else if (_source338.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8125___mcc_h5988 = _source338.dtor_op2;
                      RAST._IExpr _8126___mcc_h5989 = _source338.dtor_left;
                      RAST._IExpr _8127___mcc_h5990 = _source338.dtor_right;
                      DAST.Format._IBinaryOpFormat _8128___mcc_h5991 = _source338.dtor_format2;
                    } else if (_source338.is_TypeAscription) {
                      RAST._IExpr _8129___mcc_h5996 = _source338.dtor_left;
                      RAST._IType _8130___mcc_h5997 = _source338.dtor_tpe;
                    } else if (_source338.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8131___mcc_h6000 = _source338.dtor_value;
                    } else if (_source338.is_LiteralBool) {
                      bool _8132___mcc_h6002 = _source338.dtor_bvalue;
                    } else if (_source338.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8133___mcc_h6004 = _source338.dtor_value;
                      bool _8134___mcc_h6005 = _source338.dtor_binary;
                    } else if (_source338.is_DeclareVar) {
                      RAST._IDeclareType _8135___mcc_h6008 = _source338.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8136___mcc_h6009 = _source338.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8137___mcc_h6010 = _source338.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8138___mcc_h6011 = _source338.dtor_optRhs;
                    } else if (_source338.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8139___mcc_h6016 = _source338.dtor_names;
                      RAST._IExpr _8140___mcc_h6017 = _source338.dtor_rhs;
                    } else if (_source338.is_IfExpr) {
                      RAST._IExpr _8141___mcc_h6020 = _source338.dtor_cond;
                      RAST._IExpr _8142___mcc_h6021 = _source338.dtor_thn;
                      RAST._IExpr _8143___mcc_h6022 = _source338.dtor_els;
                    } else if (_source338.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8144___mcc_h6026 = _source338.dtor_optCond;
                      RAST._IExpr _8145___mcc_h6027 = _source338.dtor_underlying;
                    } else if (_source338.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8146___mcc_h6030 = _source338.dtor_name;
                      RAST._IExpr _8147___mcc_h6031 = _source338.dtor_range;
                      RAST._IExpr _8148___mcc_h6032 = _source338.dtor_body;
                    } else if (_source338.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8149___mcc_h6036 = _source338.dtor_lbl;
                      RAST._IExpr _8150___mcc_h6037 = _source338.dtor_underlying;
                    } else if (_source338.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8151___mcc_h6040 = _source338.dtor_optLbl;
                    } else if (_source338.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8152___mcc_h6042 = _source338.dtor_optLbl;
                    } else if (_source338.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8153___mcc_h6044 = _source338.dtor_optExpr;
                    } else if (_source338.is_CallType) {
                      RAST._IExpr _8154___mcc_h6046 = _source338.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8155___mcc_h6047 = _source338.dtor_typeParameters;
                    } else if (_source338.is_Call) {
                      RAST._IExpr _8156___mcc_h6050 = _source338.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8157___mcc_h6051 = _source338.dtor_arguments;
                    } else if (_source338.is_Select) {
                      RAST._IExpr _8158___mcc_h6054 = _source338.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8159___mcc_h6055 = _source338.dtor_name;
                    } else if (_source338.is_MemberSelect) {
                      RAST._IExpr _8160___mcc_h6058 = _source338.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8161___mcc_h6059 = _source338.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8162___mcc_h6062 = _source338.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8163___mcc_h6063 = _source338.dtor_retType;
                      RAST._IExpr _8164___mcc_h6064 = _source338.dtor_body;
                    }
                  } else {
                  }
                } else if (_source337.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8165___mcc_h6068 = _source337.dtor_op2;
                  RAST._IExpr _8166___mcc_h6069 = _source337.dtor_left;
                  RAST._IExpr _8167___mcc_h6070 = _source337.dtor_right;
                  DAST.Format._IBinaryOpFormat _8168___mcc_h6071 = _source337.dtor_format2;
                } else if (_source337.is_TypeAscription) {
                  RAST._IExpr _8169___mcc_h6076 = _source337.dtor_left;
                  RAST._IType _8170___mcc_h6077 = _source337.dtor_tpe;
                } else if (_source337.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8171___mcc_h6080 = _source337.dtor_value;
                } else if (_source337.is_LiteralBool) {
                  bool _8172___mcc_h6082 = _source337.dtor_bvalue;
                } else if (_source337.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8173___mcc_h6084 = _source337.dtor_value;
                  bool _8174___mcc_h6085 = _source337.dtor_binary;
                } else if (_source337.is_DeclareVar) {
                  RAST._IDeclareType _8175___mcc_h6088 = _source337.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8176___mcc_h6089 = _source337.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8177___mcc_h6090 = _source337.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8178___mcc_h6091 = _source337.dtor_optRhs;
                } else if (_source337.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8179___mcc_h6096 = _source337.dtor_names;
                  RAST._IExpr _8180___mcc_h6097 = _source337.dtor_rhs;
                } else if (_source337.is_IfExpr) {
                  RAST._IExpr _8181___mcc_h6100 = _source337.dtor_cond;
                  RAST._IExpr _8182___mcc_h6101 = _source337.dtor_thn;
                  RAST._IExpr _8183___mcc_h6102 = _source337.dtor_els;
                } else if (_source337.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8184___mcc_h6106 = _source337.dtor_optCond;
                  RAST._IExpr _8185___mcc_h6107 = _source337.dtor_underlying;
                } else if (_source337.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8186___mcc_h6110 = _source337.dtor_name;
                  RAST._IExpr _8187___mcc_h6111 = _source337.dtor_range;
                  RAST._IExpr _8188___mcc_h6112 = _source337.dtor_body;
                } else if (_source337.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8189___mcc_h6116 = _source337.dtor_lbl;
                  RAST._IExpr _8190___mcc_h6117 = _source337.dtor_underlying;
                } else if (_source337.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8191___mcc_h6120 = _source337.dtor_optLbl;
                } else if (_source337.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8192___mcc_h6122 = _source337.dtor_optLbl;
                } else if (_source337.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8193___mcc_h6124 = _source337.dtor_optExpr;
                } else if (_source337.is_CallType) {
                  RAST._IExpr _8194___mcc_h6126 = _source337.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8195___mcc_h6127 = _source337.dtor_typeParameters;
                } else if (_source337.is_Call) {
                  RAST._IExpr _8196___mcc_h6130 = _source337.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8197___mcc_h6131 = _source337.dtor_arguments;
                } else if (_source337.is_Select) {
                  RAST._IExpr _8198___mcc_h6134 = _source337.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8199___mcc_h6135 = _source337.dtor_name;
                } else if (_source337.is_MemberSelect) {
                  RAST._IExpr _8200___mcc_h6138 = _source337.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8201___mcc_h6139 = _source337.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8202___mcc_h6142 = _source337.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8203___mcc_h6143 = _source337.dtor_retType;
                  RAST._IExpr _8204___mcc_h6144 = _source337.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8088_field));
              if (_8087_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8205_fromOwnership;
              _8205_fromOwnership = ((_8087_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1953;
              DCOMP._IOwnership _out1954;
              DCOMP.COMP.FromOwnership(r, _8205_fromOwnership, expectedOwnership, out _out1953, out _out1954);
              r = _out1953;
              resultingOwnership = _out1954;
              readIdents = _8096_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SelectFn) {
          DAST._IExpression _8206___mcc_h174 = _source284.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _8207___mcc_h175 = _source284.dtor_field;
          bool _8208___mcc_h176 = _source284.dtor_onDatatype;
          bool _8209___mcc_h177 = _source284.dtor_isStatic;
          BigInteger _8210___mcc_h178 = _source284.dtor_arity;
          DAST._IType _8211_fieldType = _4872___mcc_h57;
          bool _8212_isDatatype = _4871___mcc_h56;
          bool _8213_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8214_field = _4869___mcc_h54;
          DAST._IExpression _8215_on = _4868___mcc_h53;
          {
            if (_8212_isDatatype) {
              RAST._IExpr _8216_onExpr;
              DCOMP._IOwnership _8217_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8218_recIdents;
              RAST._IExpr _out1955;
              DCOMP._IOwnership _out1956;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1957;
              (this).GenExpr(_8215_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1955, out _out1956, out _out1957);
              _8216_onExpr = _out1955;
              _8217_onOwned = _out1956;
              _8218_recIdents = _out1957;
              r = ((_8216_onExpr).Sel(DCOMP.__default.escapeName(_8214_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8219_typ;
              RAST._IType _out1958;
              _out1958 = (this).GenType(_8211_fieldType, false, false);
              _8219_typ = _out1958;
              if (((_8219_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1959;
                DCOMP._IOwnership _out1960;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1959, out _out1960);
                r = _out1959;
                resultingOwnership = _out1960;
              }
              readIdents = _8218_recIdents;
            } else {
              RAST._IExpr _8220_onExpr;
              DCOMP._IOwnership _8221_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8222_recIdents;
              RAST._IExpr _out1961;
              DCOMP._IOwnership _out1962;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1963;
              (this).GenExpr(_8215_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1961, out _out1962, out _out1963);
              _8220_onExpr = _out1961;
              _8221_onOwned = _out1962;
              _8222_recIdents = _out1963;
              r = _8220_onExpr;
              if (!object.Equals(_8220_onExpr, RAST.__default.self)) {
                RAST._IExpr _source339 = _8220_onExpr;
                if (_source339.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8223___mcc_h6148 = _source339.dtor_content;
                } else if (_source339.is_ExprFromType) {
                  RAST._IType _8224___mcc_h6150 = _source339.dtor_tpe;
                } else if (_source339.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8225___mcc_h6152 = _source339.dtor_name;
                } else if (_source339.is_Match) {
                  RAST._IExpr _8226___mcc_h6154 = _source339.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8227___mcc_h6155 = _source339.dtor_cases;
                } else if (_source339.is_StmtExpr) {
                  RAST._IExpr _8228___mcc_h6158 = _source339.dtor_stmt;
                  RAST._IExpr _8229___mcc_h6159 = _source339.dtor_rhs;
                } else if (_source339.is_Block) {
                  RAST._IExpr _8230___mcc_h6162 = _source339.dtor_underlying;
                } else if (_source339.is_StructBuild) {
                  RAST._IExpr _8231___mcc_h6164 = _source339.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8232___mcc_h6165 = _source339.dtor_assignments;
                } else if (_source339.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8233___mcc_h6168 = _source339.dtor_arguments;
                } else if (_source339.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8234___mcc_h6170 = _source339.dtor_op1;
                  RAST._IExpr _8235___mcc_h6171 = _source339.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8236___mcc_h6172 = _source339.dtor_format;
                  if (object.Equals(_8234___mcc_h6170, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source340 = _8235___mcc_h6171;
                    if (_source340.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8237___mcc_h6176 = _source340.dtor_content;
                    } else if (_source340.is_ExprFromType) {
                      RAST._IType _8238___mcc_h6178 = _source340.dtor_tpe;
                    } else if (_source340.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8239___mcc_h6180 = _source340.dtor_name;
                      if (object.Equals(_8239___mcc_h6180, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source340.is_Match) {
                      RAST._IExpr _8240___mcc_h6182 = _source340.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8241___mcc_h6183 = _source340.dtor_cases;
                    } else if (_source340.is_StmtExpr) {
                      RAST._IExpr _8242___mcc_h6186 = _source340.dtor_stmt;
                      RAST._IExpr _8243___mcc_h6187 = _source340.dtor_rhs;
                    } else if (_source340.is_Block) {
                      RAST._IExpr _8244___mcc_h6190 = _source340.dtor_underlying;
                    } else if (_source340.is_StructBuild) {
                      RAST._IExpr _8245___mcc_h6192 = _source340.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8246___mcc_h6193 = _source340.dtor_assignments;
                    } else if (_source340.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8247___mcc_h6196 = _source340.dtor_arguments;
                    } else if (_source340.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8248___mcc_h6198 = _source340.dtor_op1;
                      RAST._IExpr _8249___mcc_h6199 = _source340.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8250___mcc_h6200 = _source340.dtor_format;
                    } else if (_source340.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8251___mcc_h6204 = _source340.dtor_op2;
                      RAST._IExpr _8252___mcc_h6205 = _source340.dtor_left;
                      RAST._IExpr _8253___mcc_h6206 = _source340.dtor_right;
                      DAST.Format._IBinaryOpFormat _8254___mcc_h6207 = _source340.dtor_format2;
                    } else if (_source340.is_TypeAscription) {
                      RAST._IExpr _8255___mcc_h6212 = _source340.dtor_left;
                      RAST._IType _8256___mcc_h6213 = _source340.dtor_tpe;
                    } else if (_source340.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8257___mcc_h6216 = _source340.dtor_value;
                    } else if (_source340.is_LiteralBool) {
                      bool _8258___mcc_h6218 = _source340.dtor_bvalue;
                    } else if (_source340.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8259___mcc_h6220 = _source340.dtor_value;
                      bool _8260___mcc_h6221 = _source340.dtor_binary;
                    } else if (_source340.is_DeclareVar) {
                      RAST._IDeclareType _8261___mcc_h6224 = _source340.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8262___mcc_h6225 = _source340.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8263___mcc_h6226 = _source340.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8264___mcc_h6227 = _source340.dtor_optRhs;
                    } else if (_source340.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8265___mcc_h6232 = _source340.dtor_names;
                      RAST._IExpr _8266___mcc_h6233 = _source340.dtor_rhs;
                    } else if (_source340.is_IfExpr) {
                      RAST._IExpr _8267___mcc_h6236 = _source340.dtor_cond;
                      RAST._IExpr _8268___mcc_h6237 = _source340.dtor_thn;
                      RAST._IExpr _8269___mcc_h6238 = _source340.dtor_els;
                    } else if (_source340.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8270___mcc_h6242 = _source340.dtor_optCond;
                      RAST._IExpr _8271___mcc_h6243 = _source340.dtor_underlying;
                    } else if (_source340.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8272___mcc_h6246 = _source340.dtor_name;
                      RAST._IExpr _8273___mcc_h6247 = _source340.dtor_range;
                      RAST._IExpr _8274___mcc_h6248 = _source340.dtor_body;
                    } else if (_source340.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8275___mcc_h6252 = _source340.dtor_lbl;
                      RAST._IExpr _8276___mcc_h6253 = _source340.dtor_underlying;
                    } else if (_source340.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8277___mcc_h6256 = _source340.dtor_optLbl;
                    } else if (_source340.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8278___mcc_h6258 = _source340.dtor_optLbl;
                    } else if (_source340.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8279___mcc_h6260 = _source340.dtor_optExpr;
                    } else if (_source340.is_CallType) {
                      RAST._IExpr _8280___mcc_h6262 = _source340.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8281___mcc_h6263 = _source340.dtor_typeParameters;
                    } else if (_source340.is_Call) {
                      RAST._IExpr _8282___mcc_h6266 = _source340.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8283___mcc_h6267 = _source340.dtor_arguments;
                    } else if (_source340.is_Select) {
                      RAST._IExpr _8284___mcc_h6270 = _source340.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8285___mcc_h6271 = _source340.dtor_name;
                    } else if (_source340.is_MemberSelect) {
                      RAST._IExpr _8286___mcc_h6274 = _source340.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8287___mcc_h6275 = _source340.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8288___mcc_h6278 = _source340.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8289___mcc_h6279 = _source340.dtor_retType;
                      RAST._IExpr _8290___mcc_h6280 = _source340.dtor_body;
                    }
                  } else {
                  }
                } else if (_source339.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8291___mcc_h6284 = _source339.dtor_op2;
                  RAST._IExpr _8292___mcc_h6285 = _source339.dtor_left;
                  RAST._IExpr _8293___mcc_h6286 = _source339.dtor_right;
                  DAST.Format._IBinaryOpFormat _8294___mcc_h6287 = _source339.dtor_format2;
                } else if (_source339.is_TypeAscription) {
                  RAST._IExpr _8295___mcc_h6292 = _source339.dtor_left;
                  RAST._IType _8296___mcc_h6293 = _source339.dtor_tpe;
                } else if (_source339.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8297___mcc_h6296 = _source339.dtor_value;
                } else if (_source339.is_LiteralBool) {
                  bool _8298___mcc_h6298 = _source339.dtor_bvalue;
                } else if (_source339.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8299___mcc_h6300 = _source339.dtor_value;
                  bool _8300___mcc_h6301 = _source339.dtor_binary;
                } else if (_source339.is_DeclareVar) {
                  RAST._IDeclareType _8301___mcc_h6304 = _source339.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8302___mcc_h6305 = _source339.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8303___mcc_h6306 = _source339.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8304___mcc_h6307 = _source339.dtor_optRhs;
                } else if (_source339.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8305___mcc_h6312 = _source339.dtor_names;
                  RAST._IExpr _8306___mcc_h6313 = _source339.dtor_rhs;
                } else if (_source339.is_IfExpr) {
                  RAST._IExpr _8307___mcc_h6316 = _source339.dtor_cond;
                  RAST._IExpr _8308___mcc_h6317 = _source339.dtor_thn;
                  RAST._IExpr _8309___mcc_h6318 = _source339.dtor_els;
                } else if (_source339.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8310___mcc_h6322 = _source339.dtor_optCond;
                  RAST._IExpr _8311___mcc_h6323 = _source339.dtor_underlying;
                } else if (_source339.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8312___mcc_h6326 = _source339.dtor_name;
                  RAST._IExpr _8313___mcc_h6327 = _source339.dtor_range;
                  RAST._IExpr _8314___mcc_h6328 = _source339.dtor_body;
                } else if (_source339.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8315___mcc_h6332 = _source339.dtor_lbl;
                  RAST._IExpr _8316___mcc_h6333 = _source339.dtor_underlying;
                } else if (_source339.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8317___mcc_h6336 = _source339.dtor_optLbl;
                } else if (_source339.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8318___mcc_h6338 = _source339.dtor_optLbl;
                } else if (_source339.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8319___mcc_h6340 = _source339.dtor_optExpr;
                } else if (_source339.is_CallType) {
                  RAST._IExpr _8320___mcc_h6342 = _source339.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8321___mcc_h6343 = _source339.dtor_typeParameters;
                } else if (_source339.is_Call) {
                  RAST._IExpr _8322___mcc_h6346 = _source339.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8323___mcc_h6347 = _source339.dtor_arguments;
                } else if (_source339.is_Select) {
                  RAST._IExpr _8324___mcc_h6350 = _source339.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8325___mcc_h6351 = _source339.dtor_name;
                } else if (_source339.is_MemberSelect) {
                  RAST._IExpr _8326___mcc_h6354 = _source339.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8327___mcc_h6355 = _source339.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8328___mcc_h6358 = _source339.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8329___mcc_h6359 = _source339.dtor_retType;
                  RAST._IExpr _8330___mcc_h6360 = _source339.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8214_field));
              if (_8213_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8331_fromOwnership;
              _8331_fromOwnership = ((_8213_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1964;
              DCOMP._IOwnership _out1965;
              DCOMP.COMP.FromOwnership(r, _8331_fromOwnership, expectedOwnership, out _out1964, out _out1965);
              r = _out1964;
              resultingOwnership = _out1965;
              readIdents = _8222_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Index) {
          DAST._IExpression _8332___mcc_h184 = _source284.dtor_expr;
          DAST._ICollKind _8333___mcc_h185 = _source284.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _8334___mcc_h186 = _source284.dtor_indices;
          DAST._IType _8335_fieldType = _4872___mcc_h57;
          bool _8336_isDatatype = _4871___mcc_h56;
          bool _8337_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8338_field = _4869___mcc_h54;
          DAST._IExpression _8339_on = _4868___mcc_h53;
          {
            if (_8336_isDatatype) {
              RAST._IExpr _8340_onExpr;
              DCOMP._IOwnership _8341_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8342_recIdents;
              RAST._IExpr _out1966;
              DCOMP._IOwnership _out1967;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1968;
              (this).GenExpr(_8339_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1966, out _out1967, out _out1968);
              _8340_onExpr = _out1966;
              _8341_onOwned = _out1967;
              _8342_recIdents = _out1968;
              r = ((_8340_onExpr).Sel(DCOMP.__default.escapeName(_8338_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8343_typ;
              RAST._IType _out1969;
              _out1969 = (this).GenType(_8335_fieldType, false, false);
              _8343_typ = _out1969;
              if (((_8343_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1970;
                DCOMP._IOwnership _out1971;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1970, out _out1971);
                r = _out1970;
                resultingOwnership = _out1971;
              }
              readIdents = _8342_recIdents;
            } else {
              RAST._IExpr _8344_onExpr;
              DCOMP._IOwnership _8345_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8346_recIdents;
              RAST._IExpr _out1972;
              DCOMP._IOwnership _out1973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1974;
              (this).GenExpr(_8339_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1972, out _out1973, out _out1974);
              _8344_onExpr = _out1972;
              _8345_onOwned = _out1973;
              _8346_recIdents = _out1974;
              r = _8344_onExpr;
              if (!object.Equals(_8344_onExpr, RAST.__default.self)) {
                RAST._IExpr _source341 = _8344_onExpr;
                if (_source341.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8347___mcc_h6364 = _source341.dtor_content;
                } else if (_source341.is_ExprFromType) {
                  RAST._IType _8348___mcc_h6366 = _source341.dtor_tpe;
                } else if (_source341.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8349___mcc_h6368 = _source341.dtor_name;
                } else if (_source341.is_Match) {
                  RAST._IExpr _8350___mcc_h6370 = _source341.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8351___mcc_h6371 = _source341.dtor_cases;
                } else if (_source341.is_StmtExpr) {
                  RAST._IExpr _8352___mcc_h6374 = _source341.dtor_stmt;
                  RAST._IExpr _8353___mcc_h6375 = _source341.dtor_rhs;
                } else if (_source341.is_Block) {
                  RAST._IExpr _8354___mcc_h6378 = _source341.dtor_underlying;
                } else if (_source341.is_StructBuild) {
                  RAST._IExpr _8355___mcc_h6380 = _source341.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8356___mcc_h6381 = _source341.dtor_assignments;
                } else if (_source341.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8357___mcc_h6384 = _source341.dtor_arguments;
                } else if (_source341.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8358___mcc_h6386 = _source341.dtor_op1;
                  RAST._IExpr _8359___mcc_h6387 = _source341.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8360___mcc_h6388 = _source341.dtor_format;
                  if (object.Equals(_8358___mcc_h6386, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source342 = _8359___mcc_h6387;
                    if (_source342.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8361___mcc_h6392 = _source342.dtor_content;
                    } else if (_source342.is_ExprFromType) {
                      RAST._IType _8362___mcc_h6394 = _source342.dtor_tpe;
                    } else if (_source342.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8363___mcc_h6396 = _source342.dtor_name;
                      if (object.Equals(_8363___mcc_h6396, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source342.is_Match) {
                      RAST._IExpr _8364___mcc_h6398 = _source342.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8365___mcc_h6399 = _source342.dtor_cases;
                    } else if (_source342.is_StmtExpr) {
                      RAST._IExpr _8366___mcc_h6402 = _source342.dtor_stmt;
                      RAST._IExpr _8367___mcc_h6403 = _source342.dtor_rhs;
                    } else if (_source342.is_Block) {
                      RAST._IExpr _8368___mcc_h6406 = _source342.dtor_underlying;
                    } else if (_source342.is_StructBuild) {
                      RAST._IExpr _8369___mcc_h6408 = _source342.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8370___mcc_h6409 = _source342.dtor_assignments;
                    } else if (_source342.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8371___mcc_h6412 = _source342.dtor_arguments;
                    } else if (_source342.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8372___mcc_h6414 = _source342.dtor_op1;
                      RAST._IExpr _8373___mcc_h6415 = _source342.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8374___mcc_h6416 = _source342.dtor_format;
                    } else if (_source342.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8375___mcc_h6420 = _source342.dtor_op2;
                      RAST._IExpr _8376___mcc_h6421 = _source342.dtor_left;
                      RAST._IExpr _8377___mcc_h6422 = _source342.dtor_right;
                      DAST.Format._IBinaryOpFormat _8378___mcc_h6423 = _source342.dtor_format2;
                    } else if (_source342.is_TypeAscription) {
                      RAST._IExpr _8379___mcc_h6428 = _source342.dtor_left;
                      RAST._IType _8380___mcc_h6429 = _source342.dtor_tpe;
                    } else if (_source342.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8381___mcc_h6432 = _source342.dtor_value;
                    } else if (_source342.is_LiteralBool) {
                      bool _8382___mcc_h6434 = _source342.dtor_bvalue;
                    } else if (_source342.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8383___mcc_h6436 = _source342.dtor_value;
                      bool _8384___mcc_h6437 = _source342.dtor_binary;
                    } else if (_source342.is_DeclareVar) {
                      RAST._IDeclareType _8385___mcc_h6440 = _source342.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8386___mcc_h6441 = _source342.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8387___mcc_h6442 = _source342.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8388___mcc_h6443 = _source342.dtor_optRhs;
                    } else if (_source342.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8389___mcc_h6448 = _source342.dtor_names;
                      RAST._IExpr _8390___mcc_h6449 = _source342.dtor_rhs;
                    } else if (_source342.is_IfExpr) {
                      RAST._IExpr _8391___mcc_h6452 = _source342.dtor_cond;
                      RAST._IExpr _8392___mcc_h6453 = _source342.dtor_thn;
                      RAST._IExpr _8393___mcc_h6454 = _source342.dtor_els;
                    } else if (_source342.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8394___mcc_h6458 = _source342.dtor_optCond;
                      RAST._IExpr _8395___mcc_h6459 = _source342.dtor_underlying;
                    } else if (_source342.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8396___mcc_h6462 = _source342.dtor_name;
                      RAST._IExpr _8397___mcc_h6463 = _source342.dtor_range;
                      RAST._IExpr _8398___mcc_h6464 = _source342.dtor_body;
                    } else if (_source342.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8399___mcc_h6468 = _source342.dtor_lbl;
                      RAST._IExpr _8400___mcc_h6469 = _source342.dtor_underlying;
                    } else if (_source342.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8401___mcc_h6472 = _source342.dtor_optLbl;
                    } else if (_source342.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8402___mcc_h6474 = _source342.dtor_optLbl;
                    } else if (_source342.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8403___mcc_h6476 = _source342.dtor_optExpr;
                    } else if (_source342.is_CallType) {
                      RAST._IExpr _8404___mcc_h6478 = _source342.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8405___mcc_h6479 = _source342.dtor_typeParameters;
                    } else if (_source342.is_Call) {
                      RAST._IExpr _8406___mcc_h6482 = _source342.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8407___mcc_h6483 = _source342.dtor_arguments;
                    } else if (_source342.is_Select) {
                      RAST._IExpr _8408___mcc_h6486 = _source342.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8409___mcc_h6487 = _source342.dtor_name;
                    } else if (_source342.is_MemberSelect) {
                      RAST._IExpr _8410___mcc_h6490 = _source342.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8411___mcc_h6491 = _source342.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8412___mcc_h6494 = _source342.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8413___mcc_h6495 = _source342.dtor_retType;
                      RAST._IExpr _8414___mcc_h6496 = _source342.dtor_body;
                    }
                  } else {
                  }
                } else if (_source341.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8415___mcc_h6500 = _source341.dtor_op2;
                  RAST._IExpr _8416___mcc_h6501 = _source341.dtor_left;
                  RAST._IExpr _8417___mcc_h6502 = _source341.dtor_right;
                  DAST.Format._IBinaryOpFormat _8418___mcc_h6503 = _source341.dtor_format2;
                } else if (_source341.is_TypeAscription) {
                  RAST._IExpr _8419___mcc_h6508 = _source341.dtor_left;
                  RAST._IType _8420___mcc_h6509 = _source341.dtor_tpe;
                } else if (_source341.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8421___mcc_h6512 = _source341.dtor_value;
                } else if (_source341.is_LiteralBool) {
                  bool _8422___mcc_h6514 = _source341.dtor_bvalue;
                } else if (_source341.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8423___mcc_h6516 = _source341.dtor_value;
                  bool _8424___mcc_h6517 = _source341.dtor_binary;
                } else if (_source341.is_DeclareVar) {
                  RAST._IDeclareType _8425___mcc_h6520 = _source341.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8426___mcc_h6521 = _source341.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8427___mcc_h6522 = _source341.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8428___mcc_h6523 = _source341.dtor_optRhs;
                } else if (_source341.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8429___mcc_h6528 = _source341.dtor_names;
                  RAST._IExpr _8430___mcc_h6529 = _source341.dtor_rhs;
                } else if (_source341.is_IfExpr) {
                  RAST._IExpr _8431___mcc_h6532 = _source341.dtor_cond;
                  RAST._IExpr _8432___mcc_h6533 = _source341.dtor_thn;
                  RAST._IExpr _8433___mcc_h6534 = _source341.dtor_els;
                } else if (_source341.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8434___mcc_h6538 = _source341.dtor_optCond;
                  RAST._IExpr _8435___mcc_h6539 = _source341.dtor_underlying;
                } else if (_source341.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8436___mcc_h6542 = _source341.dtor_name;
                  RAST._IExpr _8437___mcc_h6543 = _source341.dtor_range;
                  RAST._IExpr _8438___mcc_h6544 = _source341.dtor_body;
                } else if (_source341.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8439___mcc_h6548 = _source341.dtor_lbl;
                  RAST._IExpr _8440___mcc_h6549 = _source341.dtor_underlying;
                } else if (_source341.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8441___mcc_h6552 = _source341.dtor_optLbl;
                } else if (_source341.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8442___mcc_h6554 = _source341.dtor_optLbl;
                } else if (_source341.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8443___mcc_h6556 = _source341.dtor_optExpr;
                } else if (_source341.is_CallType) {
                  RAST._IExpr _8444___mcc_h6558 = _source341.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8445___mcc_h6559 = _source341.dtor_typeParameters;
                } else if (_source341.is_Call) {
                  RAST._IExpr _8446___mcc_h6562 = _source341.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8447___mcc_h6563 = _source341.dtor_arguments;
                } else if (_source341.is_Select) {
                  RAST._IExpr _8448___mcc_h6566 = _source341.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8449___mcc_h6567 = _source341.dtor_name;
                } else if (_source341.is_MemberSelect) {
                  RAST._IExpr _8450___mcc_h6570 = _source341.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8451___mcc_h6571 = _source341.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8452___mcc_h6574 = _source341.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8453___mcc_h6575 = _source341.dtor_retType;
                  RAST._IExpr _8454___mcc_h6576 = _source341.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8338_field));
              if (_8337_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8455_fromOwnership;
              _8455_fromOwnership = ((_8337_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1975;
              DCOMP._IOwnership _out1976;
              DCOMP.COMP.FromOwnership(r, _8455_fromOwnership, expectedOwnership, out _out1975, out _out1976);
              r = _out1975;
              resultingOwnership = _out1976;
              readIdents = _8346_recIdents;
            }
            return ;
          }
        } else if (_source284.is_IndexRange) {
          DAST._IExpression _8456___mcc_h190 = _source284.dtor_expr;
          bool _8457___mcc_h191 = _source284.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _8458___mcc_h192 = _source284.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _8459___mcc_h193 = _source284.dtor_high;
          DAST._IType _8460_fieldType = _4872___mcc_h57;
          bool _8461_isDatatype = _4871___mcc_h56;
          bool _8462_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8463_field = _4869___mcc_h54;
          DAST._IExpression _8464_on = _4868___mcc_h53;
          {
            if (_8461_isDatatype) {
              RAST._IExpr _8465_onExpr;
              DCOMP._IOwnership _8466_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8467_recIdents;
              RAST._IExpr _out1977;
              DCOMP._IOwnership _out1978;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1979;
              (this).GenExpr(_8464_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1977, out _out1978, out _out1979);
              _8465_onExpr = _out1977;
              _8466_onOwned = _out1978;
              _8467_recIdents = _out1979;
              r = ((_8465_onExpr).Sel(DCOMP.__default.escapeName(_8463_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8468_typ;
              RAST._IType _out1980;
              _out1980 = (this).GenType(_8460_fieldType, false, false);
              _8468_typ = _out1980;
              if (((_8468_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1981;
                DCOMP._IOwnership _out1982;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1981, out _out1982);
                r = _out1981;
                resultingOwnership = _out1982;
              }
              readIdents = _8467_recIdents;
            } else {
              RAST._IExpr _8469_onExpr;
              DCOMP._IOwnership _8470_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8471_recIdents;
              RAST._IExpr _out1983;
              DCOMP._IOwnership _out1984;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1985;
              (this).GenExpr(_8464_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1983, out _out1984, out _out1985);
              _8469_onExpr = _out1983;
              _8470_onOwned = _out1984;
              _8471_recIdents = _out1985;
              r = _8469_onExpr;
              if (!object.Equals(_8469_onExpr, RAST.__default.self)) {
                RAST._IExpr _source343 = _8469_onExpr;
                if (_source343.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8472___mcc_h6580 = _source343.dtor_content;
                } else if (_source343.is_ExprFromType) {
                  RAST._IType _8473___mcc_h6582 = _source343.dtor_tpe;
                } else if (_source343.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8474___mcc_h6584 = _source343.dtor_name;
                } else if (_source343.is_Match) {
                  RAST._IExpr _8475___mcc_h6586 = _source343.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8476___mcc_h6587 = _source343.dtor_cases;
                } else if (_source343.is_StmtExpr) {
                  RAST._IExpr _8477___mcc_h6590 = _source343.dtor_stmt;
                  RAST._IExpr _8478___mcc_h6591 = _source343.dtor_rhs;
                } else if (_source343.is_Block) {
                  RAST._IExpr _8479___mcc_h6594 = _source343.dtor_underlying;
                } else if (_source343.is_StructBuild) {
                  RAST._IExpr _8480___mcc_h6596 = _source343.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8481___mcc_h6597 = _source343.dtor_assignments;
                } else if (_source343.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8482___mcc_h6600 = _source343.dtor_arguments;
                } else if (_source343.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8483___mcc_h6602 = _source343.dtor_op1;
                  RAST._IExpr _8484___mcc_h6603 = _source343.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8485___mcc_h6604 = _source343.dtor_format;
                  if (object.Equals(_8483___mcc_h6602, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source344 = _8484___mcc_h6603;
                    if (_source344.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8486___mcc_h6608 = _source344.dtor_content;
                    } else if (_source344.is_ExprFromType) {
                      RAST._IType _8487___mcc_h6610 = _source344.dtor_tpe;
                    } else if (_source344.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8488___mcc_h6612 = _source344.dtor_name;
                      if (object.Equals(_8488___mcc_h6612, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source344.is_Match) {
                      RAST._IExpr _8489___mcc_h6614 = _source344.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8490___mcc_h6615 = _source344.dtor_cases;
                    } else if (_source344.is_StmtExpr) {
                      RAST._IExpr _8491___mcc_h6618 = _source344.dtor_stmt;
                      RAST._IExpr _8492___mcc_h6619 = _source344.dtor_rhs;
                    } else if (_source344.is_Block) {
                      RAST._IExpr _8493___mcc_h6622 = _source344.dtor_underlying;
                    } else if (_source344.is_StructBuild) {
                      RAST._IExpr _8494___mcc_h6624 = _source344.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8495___mcc_h6625 = _source344.dtor_assignments;
                    } else if (_source344.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8496___mcc_h6628 = _source344.dtor_arguments;
                    } else if (_source344.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8497___mcc_h6630 = _source344.dtor_op1;
                      RAST._IExpr _8498___mcc_h6631 = _source344.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8499___mcc_h6632 = _source344.dtor_format;
                    } else if (_source344.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8500___mcc_h6636 = _source344.dtor_op2;
                      RAST._IExpr _8501___mcc_h6637 = _source344.dtor_left;
                      RAST._IExpr _8502___mcc_h6638 = _source344.dtor_right;
                      DAST.Format._IBinaryOpFormat _8503___mcc_h6639 = _source344.dtor_format2;
                    } else if (_source344.is_TypeAscription) {
                      RAST._IExpr _8504___mcc_h6644 = _source344.dtor_left;
                      RAST._IType _8505___mcc_h6645 = _source344.dtor_tpe;
                    } else if (_source344.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8506___mcc_h6648 = _source344.dtor_value;
                    } else if (_source344.is_LiteralBool) {
                      bool _8507___mcc_h6650 = _source344.dtor_bvalue;
                    } else if (_source344.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8508___mcc_h6652 = _source344.dtor_value;
                      bool _8509___mcc_h6653 = _source344.dtor_binary;
                    } else if (_source344.is_DeclareVar) {
                      RAST._IDeclareType _8510___mcc_h6656 = _source344.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8511___mcc_h6657 = _source344.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8512___mcc_h6658 = _source344.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8513___mcc_h6659 = _source344.dtor_optRhs;
                    } else if (_source344.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8514___mcc_h6664 = _source344.dtor_names;
                      RAST._IExpr _8515___mcc_h6665 = _source344.dtor_rhs;
                    } else if (_source344.is_IfExpr) {
                      RAST._IExpr _8516___mcc_h6668 = _source344.dtor_cond;
                      RAST._IExpr _8517___mcc_h6669 = _source344.dtor_thn;
                      RAST._IExpr _8518___mcc_h6670 = _source344.dtor_els;
                    } else if (_source344.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8519___mcc_h6674 = _source344.dtor_optCond;
                      RAST._IExpr _8520___mcc_h6675 = _source344.dtor_underlying;
                    } else if (_source344.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8521___mcc_h6678 = _source344.dtor_name;
                      RAST._IExpr _8522___mcc_h6679 = _source344.dtor_range;
                      RAST._IExpr _8523___mcc_h6680 = _source344.dtor_body;
                    } else if (_source344.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8524___mcc_h6684 = _source344.dtor_lbl;
                      RAST._IExpr _8525___mcc_h6685 = _source344.dtor_underlying;
                    } else if (_source344.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8526___mcc_h6688 = _source344.dtor_optLbl;
                    } else if (_source344.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8527___mcc_h6690 = _source344.dtor_optLbl;
                    } else if (_source344.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8528___mcc_h6692 = _source344.dtor_optExpr;
                    } else if (_source344.is_CallType) {
                      RAST._IExpr _8529___mcc_h6694 = _source344.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8530___mcc_h6695 = _source344.dtor_typeParameters;
                    } else if (_source344.is_Call) {
                      RAST._IExpr _8531___mcc_h6698 = _source344.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8532___mcc_h6699 = _source344.dtor_arguments;
                    } else if (_source344.is_Select) {
                      RAST._IExpr _8533___mcc_h6702 = _source344.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8534___mcc_h6703 = _source344.dtor_name;
                    } else if (_source344.is_MemberSelect) {
                      RAST._IExpr _8535___mcc_h6706 = _source344.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8536___mcc_h6707 = _source344.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8537___mcc_h6710 = _source344.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8538___mcc_h6711 = _source344.dtor_retType;
                      RAST._IExpr _8539___mcc_h6712 = _source344.dtor_body;
                    }
                  } else {
                  }
                } else if (_source343.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8540___mcc_h6716 = _source343.dtor_op2;
                  RAST._IExpr _8541___mcc_h6717 = _source343.dtor_left;
                  RAST._IExpr _8542___mcc_h6718 = _source343.dtor_right;
                  DAST.Format._IBinaryOpFormat _8543___mcc_h6719 = _source343.dtor_format2;
                } else if (_source343.is_TypeAscription) {
                  RAST._IExpr _8544___mcc_h6724 = _source343.dtor_left;
                  RAST._IType _8545___mcc_h6725 = _source343.dtor_tpe;
                } else if (_source343.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8546___mcc_h6728 = _source343.dtor_value;
                } else if (_source343.is_LiteralBool) {
                  bool _8547___mcc_h6730 = _source343.dtor_bvalue;
                } else if (_source343.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8548___mcc_h6732 = _source343.dtor_value;
                  bool _8549___mcc_h6733 = _source343.dtor_binary;
                } else if (_source343.is_DeclareVar) {
                  RAST._IDeclareType _8550___mcc_h6736 = _source343.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8551___mcc_h6737 = _source343.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8552___mcc_h6738 = _source343.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8553___mcc_h6739 = _source343.dtor_optRhs;
                } else if (_source343.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8554___mcc_h6744 = _source343.dtor_names;
                  RAST._IExpr _8555___mcc_h6745 = _source343.dtor_rhs;
                } else if (_source343.is_IfExpr) {
                  RAST._IExpr _8556___mcc_h6748 = _source343.dtor_cond;
                  RAST._IExpr _8557___mcc_h6749 = _source343.dtor_thn;
                  RAST._IExpr _8558___mcc_h6750 = _source343.dtor_els;
                } else if (_source343.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8559___mcc_h6754 = _source343.dtor_optCond;
                  RAST._IExpr _8560___mcc_h6755 = _source343.dtor_underlying;
                } else if (_source343.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8561___mcc_h6758 = _source343.dtor_name;
                  RAST._IExpr _8562___mcc_h6759 = _source343.dtor_range;
                  RAST._IExpr _8563___mcc_h6760 = _source343.dtor_body;
                } else if (_source343.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8564___mcc_h6764 = _source343.dtor_lbl;
                  RAST._IExpr _8565___mcc_h6765 = _source343.dtor_underlying;
                } else if (_source343.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8566___mcc_h6768 = _source343.dtor_optLbl;
                } else if (_source343.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8567___mcc_h6770 = _source343.dtor_optLbl;
                } else if (_source343.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8568___mcc_h6772 = _source343.dtor_optExpr;
                } else if (_source343.is_CallType) {
                  RAST._IExpr _8569___mcc_h6774 = _source343.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8570___mcc_h6775 = _source343.dtor_typeParameters;
                } else if (_source343.is_Call) {
                  RAST._IExpr _8571___mcc_h6778 = _source343.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8572___mcc_h6779 = _source343.dtor_arguments;
                } else if (_source343.is_Select) {
                  RAST._IExpr _8573___mcc_h6782 = _source343.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8574___mcc_h6783 = _source343.dtor_name;
                } else if (_source343.is_MemberSelect) {
                  RAST._IExpr _8575___mcc_h6786 = _source343.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8576___mcc_h6787 = _source343.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8577___mcc_h6790 = _source343.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8578___mcc_h6791 = _source343.dtor_retType;
                  RAST._IExpr _8579___mcc_h6792 = _source343.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8463_field));
              if (_8462_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8580_fromOwnership;
              _8580_fromOwnership = ((_8462_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1986;
              DCOMP._IOwnership _out1987;
              DCOMP.COMP.FromOwnership(r, _8580_fromOwnership, expectedOwnership, out _out1986, out _out1987);
              r = _out1986;
              resultingOwnership = _out1987;
              readIdents = _8471_recIdents;
            }
            return ;
          }
        } else if (_source284.is_TupleSelect) {
          DAST._IExpression _8581___mcc_h198 = _source284.dtor_expr;
          BigInteger _8582___mcc_h199 = _source284.dtor_index;
          DAST._IType _8583___mcc_h200 = _source284.dtor_fieldType;
          DAST._IType _8584_fieldType = _4872___mcc_h57;
          bool _8585_isDatatype = _4871___mcc_h56;
          bool _8586_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8587_field = _4869___mcc_h54;
          DAST._IExpression _8588_on = _4868___mcc_h53;
          {
            if (_8585_isDatatype) {
              RAST._IExpr _8589_onExpr;
              DCOMP._IOwnership _8590_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8591_recIdents;
              RAST._IExpr _out1988;
              DCOMP._IOwnership _out1989;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1990;
              (this).GenExpr(_8588_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1988, out _out1989, out _out1990);
              _8589_onExpr = _out1988;
              _8590_onOwned = _out1989;
              _8591_recIdents = _out1990;
              r = ((_8589_onExpr).Sel(DCOMP.__default.escapeName(_8587_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8592_typ;
              RAST._IType _out1991;
              _out1991 = (this).GenType(_8584_fieldType, false, false);
              _8592_typ = _out1991;
              if (((_8592_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out1992;
                DCOMP._IOwnership _out1993;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1992, out _out1993);
                r = _out1992;
                resultingOwnership = _out1993;
              }
              readIdents = _8591_recIdents;
            } else {
              RAST._IExpr _8593_onExpr;
              DCOMP._IOwnership _8594_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8595_recIdents;
              RAST._IExpr _out1994;
              DCOMP._IOwnership _out1995;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1996;
              (this).GenExpr(_8588_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1994, out _out1995, out _out1996);
              _8593_onExpr = _out1994;
              _8594_onOwned = _out1995;
              _8595_recIdents = _out1996;
              r = _8593_onExpr;
              if (!object.Equals(_8593_onExpr, RAST.__default.self)) {
                RAST._IExpr _source345 = _8593_onExpr;
                if (_source345.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8596___mcc_h6796 = _source345.dtor_content;
                } else if (_source345.is_ExprFromType) {
                  RAST._IType _8597___mcc_h6798 = _source345.dtor_tpe;
                } else if (_source345.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8598___mcc_h6800 = _source345.dtor_name;
                } else if (_source345.is_Match) {
                  RAST._IExpr _8599___mcc_h6802 = _source345.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8600___mcc_h6803 = _source345.dtor_cases;
                } else if (_source345.is_StmtExpr) {
                  RAST._IExpr _8601___mcc_h6806 = _source345.dtor_stmt;
                  RAST._IExpr _8602___mcc_h6807 = _source345.dtor_rhs;
                } else if (_source345.is_Block) {
                  RAST._IExpr _8603___mcc_h6810 = _source345.dtor_underlying;
                } else if (_source345.is_StructBuild) {
                  RAST._IExpr _8604___mcc_h6812 = _source345.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8605___mcc_h6813 = _source345.dtor_assignments;
                } else if (_source345.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8606___mcc_h6816 = _source345.dtor_arguments;
                } else if (_source345.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8607___mcc_h6818 = _source345.dtor_op1;
                  RAST._IExpr _8608___mcc_h6819 = _source345.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8609___mcc_h6820 = _source345.dtor_format;
                  if (object.Equals(_8607___mcc_h6818, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source346 = _8608___mcc_h6819;
                    if (_source346.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8610___mcc_h6824 = _source346.dtor_content;
                    } else if (_source346.is_ExprFromType) {
                      RAST._IType _8611___mcc_h6826 = _source346.dtor_tpe;
                    } else if (_source346.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8612___mcc_h6828 = _source346.dtor_name;
                      if (object.Equals(_8612___mcc_h6828, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source346.is_Match) {
                      RAST._IExpr _8613___mcc_h6830 = _source346.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8614___mcc_h6831 = _source346.dtor_cases;
                    } else if (_source346.is_StmtExpr) {
                      RAST._IExpr _8615___mcc_h6834 = _source346.dtor_stmt;
                      RAST._IExpr _8616___mcc_h6835 = _source346.dtor_rhs;
                    } else if (_source346.is_Block) {
                      RAST._IExpr _8617___mcc_h6838 = _source346.dtor_underlying;
                    } else if (_source346.is_StructBuild) {
                      RAST._IExpr _8618___mcc_h6840 = _source346.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8619___mcc_h6841 = _source346.dtor_assignments;
                    } else if (_source346.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8620___mcc_h6844 = _source346.dtor_arguments;
                    } else if (_source346.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8621___mcc_h6846 = _source346.dtor_op1;
                      RAST._IExpr _8622___mcc_h6847 = _source346.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8623___mcc_h6848 = _source346.dtor_format;
                    } else if (_source346.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8624___mcc_h6852 = _source346.dtor_op2;
                      RAST._IExpr _8625___mcc_h6853 = _source346.dtor_left;
                      RAST._IExpr _8626___mcc_h6854 = _source346.dtor_right;
                      DAST.Format._IBinaryOpFormat _8627___mcc_h6855 = _source346.dtor_format2;
                    } else if (_source346.is_TypeAscription) {
                      RAST._IExpr _8628___mcc_h6860 = _source346.dtor_left;
                      RAST._IType _8629___mcc_h6861 = _source346.dtor_tpe;
                    } else if (_source346.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8630___mcc_h6864 = _source346.dtor_value;
                    } else if (_source346.is_LiteralBool) {
                      bool _8631___mcc_h6866 = _source346.dtor_bvalue;
                    } else if (_source346.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8632___mcc_h6868 = _source346.dtor_value;
                      bool _8633___mcc_h6869 = _source346.dtor_binary;
                    } else if (_source346.is_DeclareVar) {
                      RAST._IDeclareType _8634___mcc_h6872 = _source346.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8635___mcc_h6873 = _source346.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8636___mcc_h6874 = _source346.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8637___mcc_h6875 = _source346.dtor_optRhs;
                    } else if (_source346.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8638___mcc_h6880 = _source346.dtor_names;
                      RAST._IExpr _8639___mcc_h6881 = _source346.dtor_rhs;
                    } else if (_source346.is_IfExpr) {
                      RAST._IExpr _8640___mcc_h6884 = _source346.dtor_cond;
                      RAST._IExpr _8641___mcc_h6885 = _source346.dtor_thn;
                      RAST._IExpr _8642___mcc_h6886 = _source346.dtor_els;
                    } else if (_source346.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8643___mcc_h6890 = _source346.dtor_optCond;
                      RAST._IExpr _8644___mcc_h6891 = _source346.dtor_underlying;
                    } else if (_source346.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8645___mcc_h6894 = _source346.dtor_name;
                      RAST._IExpr _8646___mcc_h6895 = _source346.dtor_range;
                      RAST._IExpr _8647___mcc_h6896 = _source346.dtor_body;
                    } else if (_source346.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8648___mcc_h6900 = _source346.dtor_lbl;
                      RAST._IExpr _8649___mcc_h6901 = _source346.dtor_underlying;
                    } else if (_source346.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8650___mcc_h6904 = _source346.dtor_optLbl;
                    } else if (_source346.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8651___mcc_h6906 = _source346.dtor_optLbl;
                    } else if (_source346.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8652___mcc_h6908 = _source346.dtor_optExpr;
                    } else if (_source346.is_CallType) {
                      RAST._IExpr _8653___mcc_h6910 = _source346.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8654___mcc_h6911 = _source346.dtor_typeParameters;
                    } else if (_source346.is_Call) {
                      RAST._IExpr _8655___mcc_h6914 = _source346.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8656___mcc_h6915 = _source346.dtor_arguments;
                    } else if (_source346.is_Select) {
                      RAST._IExpr _8657___mcc_h6918 = _source346.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8658___mcc_h6919 = _source346.dtor_name;
                    } else if (_source346.is_MemberSelect) {
                      RAST._IExpr _8659___mcc_h6922 = _source346.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8660___mcc_h6923 = _source346.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8661___mcc_h6926 = _source346.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8662___mcc_h6927 = _source346.dtor_retType;
                      RAST._IExpr _8663___mcc_h6928 = _source346.dtor_body;
                    }
                  } else {
                  }
                } else if (_source345.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8664___mcc_h6932 = _source345.dtor_op2;
                  RAST._IExpr _8665___mcc_h6933 = _source345.dtor_left;
                  RAST._IExpr _8666___mcc_h6934 = _source345.dtor_right;
                  DAST.Format._IBinaryOpFormat _8667___mcc_h6935 = _source345.dtor_format2;
                } else if (_source345.is_TypeAscription) {
                  RAST._IExpr _8668___mcc_h6940 = _source345.dtor_left;
                  RAST._IType _8669___mcc_h6941 = _source345.dtor_tpe;
                } else if (_source345.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8670___mcc_h6944 = _source345.dtor_value;
                } else if (_source345.is_LiteralBool) {
                  bool _8671___mcc_h6946 = _source345.dtor_bvalue;
                } else if (_source345.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8672___mcc_h6948 = _source345.dtor_value;
                  bool _8673___mcc_h6949 = _source345.dtor_binary;
                } else if (_source345.is_DeclareVar) {
                  RAST._IDeclareType _8674___mcc_h6952 = _source345.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8675___mcc_h6953 = _source345.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8676___mcc_h6954 = _source345.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8677___mcc_h6955 = _source345.dtor_optRhs;
                } else if (_source345.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8678___mcc_h6960 = _source345.dtor_names;
                  RAST._IExpr _8679___mcc_h6961 = _source345.dtor_rhs;
                } else if (_source345.is_IfExpr) {
                  RAST._IExpr _8680___mcc_h6964 = _source345.dtor_cond;
                  RAST._IExpr _8681___mcc_h6965 = _source345.dtor_thn;
                  RAST._IExpr _8682___mcc_h6966 = _source345.dtor_els;
                } else if (_source345.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8683___mcc_h6970 = _source345.dtor_optCond;
                  RAST._IExpr _8684___mcc_h6971 = _source345.dtor_underlying;
                } else if (_source345.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8685___mcc_h6974 = _source345.dtor_name;
                  RAST._IExpr _8686___mcc_h6975 = _source345.dtor_range;
                  RAST._IExpr _8687___mcc_h6976 = _source345.dtor_body;
                } else if (_source345.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8688___mcc_h6980 = _source345.dtor_lbl;
                  RAST._IExpr _8689___mcc_h6981 = _source345.dtor_underlying;
                } else if (_source345.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8690___mcc_h6984 = _source345.dtor_optLbl;
                } else if (_source345.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8691___mcc_h6986 = _source345.dtor_optLbl;
                } else if (_source345.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8692___mcc_h6988 = _source345.dtor_optExpr;
                } else if (_source345.is_CallType) {
                  RAST._IExpr _8693___mcc_h6990 = _source345.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8694___mcc_h6991 = _source345.dtor_typeParameters;
                } else if (_source345.is_Call) {
                  RAST._IExpr _8695___mcc_h6994 = _source345.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8696___mcc_h6995 = _source345.dtor_arguments;
                } else if (_source345.is_Select) {
                  RAST._IExpr _8697___mcc_h6998 = _source345.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8698___mcc_h6999 = _source345.dtor_name;
                } else if (_source345.is_MemberSelect) {
                  RAST._IExpr _8699___mcc_h7002 = _source345.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8700___mcc_h7003 = _source345.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8701___mcc_h7006 = _source345.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8702___mcc_h7007 = _source345.dtor_retType;
                  RAST._IExpr _8703___mcc_h7008 = _source345.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8587_field));
              if (_8586_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8704_fromOwnership;
              _8704_fromOwnership = ((_8586_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out1997;
              DCOMP._IOwnership _out1998;
              DCOMP.COMP.FromOwnership(r, _8704_fromOwnership, expectedOwnership, out _out1997, out _out1998);
              r = _out1997;
              resultingOwnership = _out1998;
              readIdents = _8595_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Call) {
          DAST._IExpression _8705___mcc_h204 = _source284.dtor_on;
          DAST._ICallName _8706___mcc_h205 = _source284.dtor_callName;
          Dafny.ISequence<DAST._IType> _8707___mcc_h206 = _source284.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8708___mcc_h207 = _source284.dtor_args;
          DAST._IType _8709_fieldType = _4872___mcc_h57;
          bool _8710_isDatatype = _4871___mcc_h56;
          bool _8711_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8712_field = _4869___mcc_h54;
          DAST._IExpression _8713_on = _4868___mcc_h53;
          {
            if (_8710_isDatatype) {
              RAST._IExpr _8714_onExpr;
              DCOMP._IOwnership _8715_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8716_recIdents;
              RAST._IExpr _out1999;
              DCOMP._IOwnership _out2000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2001;
              (this).GenExpr(_8713_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1999, out _out2000, out _out2001);
              _8714_onExpr = _out1999;
              _8715_onOwned = _out2000;
              _8716_recIdents = _out2001;
              r = ((_8714_onExpr).Sel(DCOMP.__default.escapeName(_8712_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8717_typ;
              RAST._IType _out2002;
              _out2002 = (this).GenType(_8709_fieldType, false, false);
              _8717_typ = _out2002;
              if (((_8717_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2003;
                DCOMP._IOwnership _out2004;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2003, out _out2004);
                r = _out2003;
                resultingOwnership = _out2004;
              }
              readIdents = _8716_recIdents;
            } else {
              RAST._IExpr _8718_onExpr;
              DCOMP._IOwnership _8719_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8720_recIdents;
              RAST._IExpr _out2005;
              DCOMP._IOwnership _out2006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2007;
              (this).GenExpr(_8713_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2005, out _out2006, out _out2007);
              _8718_onExpr = _out2005;
              _8719_onOwned = _out2006;
              _8720_recIdents = _out2007;
              r = _8718_onExpr;
              if (!object.Equals(_8718_onExpr, RAST.__default.self)) {
                RAST._IExpr _source347 = _8718_onExpr;
                if (_source347.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8721___mcc_h7012 = _source347.dtor_content;
                } else if (_source347.is_ExprFromType) {
                  RAST._IType _8722___mcc_h7014 = _source347.dtor_tpe;
                } else if (_source347.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8723___mcc_h7016 = _source347.dtor_name;
                } else if (_source347.is_Match) {
                  RAST._IExpr _8724___mcc_h7018 = _source347.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8725___mcc_h7019 = _source347.dtor_cases;
                } else if (_source347.is_StmtExpr) {
                  RAST._IExpr _8726___mcc_h7022 = _source347.dtor_stmt;
                  RAST._IExpr _8727___mcc_h7023 = _source347.dtor_rhs;
                } else if (_source347.is_Block) {
                  RAST._IExpr _8728___mcc_h7026 = _source347.dtor_underlying;
                } else if (_source347.is_StructBuild) {
                  RAST._IExpr _8729___mcc_h7028 = _source347.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8730___mcc_h7029 = _source347.dtor_assignments;
                } else if (_source347.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8731___mcc_h7032 = _source347.dtor_arguments;
                } else if (_source347.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8732___mcc_h7034 = _source347.dtor_op1;
                  RAST._IExpr _8733___mcc_h7035 = _source347.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8734___mcc_h7036 = _source347.dtor_format;
                  if (object.Equals(_8732___mcc_h7034, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source348 = _8733___mcc_h7035;
                    if (_source348.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8735___mcc_h7040 = _source348.dtor_content;
                    } else if (_source348.is_ExprFromType) {
                      RAST._IType _8736___mcc_h7042 = _source348.dtor_tpe;
                    } else if (_source348.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8737___mcc_h7044 = _source348.dtor_name;
                      if (object.Equals(_8737___mcc_h7044, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source348.is_Match) {
                      RAST._IExpr _8738___mcc_h7046 = _source348.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8739___mcc_h7047 = _source348.dtor_cases;
                    } else if (_source348.is_StmtExpr) {
                      RAST._IExpr _8740___mcc_h7050 = _source348.dtor_stmt;
                      RAST._IExpr _8741___mcc_h7051 = _source348.dtor_rhs;
                    } else if (_source348.is_Block) {
                      RAST._IExpr _8742___mcc_h7054 = _source348.dtor_underlying;
                    } else if (_source348.is_StructBuild) {
                      RAST._IExpr _8743___mcc_h7056 = _source348.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8744___mcc_h7057 = _source348.dtor_assignments;
                    } else if (_source348.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8745___mcc_h7060 = _source348.dtor_arguments;
                    } else if (_source348.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8746___mcc_h7062 = _source348.dtor_op1;
                      RAST._IExpr _8747___mcc_h7063 = _source348.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8748___mcc_h7064 = _source348.dtor_format;
                    } else if (_source348.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8749___mcc_h7068 = _source348.dtor_op2;
                      RAST._IExpr _8750___mcc_h7069 = _source348.dtor_left;
                      RAST._IExpr _8751___mcc_h7070 = _source348.dtor_right;
                      DAST.Format._IBinaryOpFormat _8752___mcc_h7071 = _source348.dtor_format2;
                    } else if (_source348.is_TypeAscription) {
                      RAST._IExpr _8753___mcc_h7076 = _source348.dtor_left;
                      RAST._IType _8754___mcc_h7077 = _source348.dtor_tpe;
                    } else if (_source348.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8755___mcc_h7080 = _source348.dtor_value;
                    } else if (_source348.is_LiteralBool) {
                      bool _8756___mcc_h7082 = _source348.dtor_bvalue;
                    } else if (_source348.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8757___mcc_h7084 = _source348.dtor_value;
                      bool _8758___mcc_h7085 = _source348.dtor_binary;
                    } else if (_source348.is_DeclareVar) {
                      RAST._IDeclareType _8759___mcc_h7088 = _source348.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8760___mcc_h7089 = _source348.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8761___mcc_h7090 = _source348.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8762___mcc_h7091 = _source348.dtor_optRhs;
                    } else if (_source348.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8763___mcc_h7096 = _source348.dtor_names;
                      RAST._IExpr _8764___mcc_h7097 = _source348.dtor_rhs;
                    } else if (_source348.is_IfExpr) {
                      RAST._IExpr _8765___mcc_h7100 = _source348.dtor_cond;
                      RAST._IExpr _8766___mcc_h7101 = _source348.dtor_thn;
                      RAST._IExpr _8767___mcc_h7102 = _source348.dtor_els;
                    } else if (_source348.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8768___mcc_h7106 = _source348.dtor_optCond;
                      RAST._IExpr _8769___mcc_h7107 = _source348.dtor_underlying;
                    } else if (_source348.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8770___mcc_h7110 = _source348.dtor_name;
                      RAST._IExpr _8771___mcc_h7111 = _source348.dtor_range;
                      RAST._IExpr _8772___mcc_h7112 = _source348.dtor_body;
                    } else if (_source348.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8773___mcc_h7116 = _source348.dtor_lbl;
                      RAST._IExpr _8774___mcc_h7117 = _source348.dtor_underlying;
                    } else if (_source348.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8775___mcc_h7120 = _source348.dtor_optLbl;
                    } else if (_source348.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8776___mcc_h7122 = _source348.dtor_optLbl;
                    } else if (_source348.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8777___mcc_h7124 = _source348.dtor_optExpr;
                    } else if (_source348.is_CallType) {
                      RAST._IExpr _8778___mcc_h7126 = _source348.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8779___mcc_h7127 = _source348.dtor_typeParameters;
                    } else if (_source348.is_Call) {
                      RAST._IExpr _8780___mcc_h7130 = _source348.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8781___mcc_h7131 = _source348.dtor_arguments;
                    } else if (_source348.is_Select) {
                      RAST._IExpr _8782___mcc_h7134 = _source348.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8783___mcc_h7135 = _source348.dtor_name;
                    } else if (_source348.is_MemberSelect) {
                      RAST._IExpr _8784___mcc_h7138 = _source348.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8785___mcc_h7139 = _source348.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8786___mcc_h7142 = _source348.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8787___mcc_h7143 = _source348.dtor_retType;
                      RAST._IExpr _8788___mcc_h7144 = _source348.dtor_body;
                    }
                  } else {
                  }
                } else if (_source347.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8789___mcc_h7148 = _source347.dtor_op2;
                  RAST._IExpr _8790___mcc_h7149 = _source347.dtor_left;
                  RAST._IExpr _8791___mcc_h7150 = _source347.dtor_right;
                  DAST.Format._IBinaryOpFormat _8792___mcc_h7151 = _source347.dtor_format2;
                } else if (_source347.is_TypeAscription) {
                  RAST._IExpr _8793___mcc_h7156 = _source347.dtor_left;
                  RAST._IType _8794___mcc_h7157 = _source347.dtor_tpe;
                } else if (_source347.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8795___mcc_h7160 = _source347.dtor_value;
                } else if (_source347.is_LiteralBool) {
                  bool _8796___mcc_h7162 = _source347.dtor_bvalue;
                } else if (_source347.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8797___mcc_h7164 = _source347.dtor_value;
                  bool _8798___mcc_h7165 = _source347.dtor_binary;
                } else if (_source347.is_DeclareVar) {
                  RAST._IDeclareType _8799___mcc_h7168 = _source347.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8800___mcc_h7169 = _source347.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8801___mcc_h7170 = _source347.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8802___mcc_h7171 = _source347.dtor_optRhs;
                } else if (_source347.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8803___mcc_h7176 = _source347.dtor_names;
                  RAST._IExpr _8804___mcc_h7177 = _source347.dtor_rhs;
                } else if (_source347.is_IfExpr) {
                  RAST._IExpr _8805___mcc_h7180 = _source347.dtor_cond;
                  RAST._IExpr _8806___mcc_h7181 = _source347.dtor_thn;
                  RAST._IExpr _8807___mcc_h7182 = _source347.dtor_els;
                } else if (_source347.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8808___mcc_h7186 = _source347.dtor_optCond;
                  RAST._IExpr _8809___mcc_h7187 = _source347.dtor_underlying;
                } else if (_source347.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8810___mcc_h7190 = _source347.dtor_name;
                  RAST._IExpr _8811___mcc_h7191 = _source347.dtor_range;
                  RAST._IExpr _8812___mcc_h7192 = _source347.dtor_body;
                } else if (_source347.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8813___mcc_h7196 = _source347.dtor_lbl;
                  RAST._IExpr _8814___mcc_h7197 = _source347.dtor_underlying;
                } else if (_source347.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8815___mcc_h7200 = _source347.dtor_optLbl;
                } else if (_source347.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8816___mcc_h7202 = _source347.dtor_optLbl;
                } else if (_source347.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8817___mcc_h7204 = _source347.dtor_optExpr;
                } else if (_source347.is_CallType) {
                  RAST._IExpr _8818___mcc_h7206 = _source347.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8819___mcc_h7207 = _source347.dtor_typeParameters;
                } else if (_source347.is_Call) {
                  RAST._IExpr _8820___mcc_h7210 = _source347.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8821___mcc_h7211 = _source347.dtor_arguments;
                } else if (_source347.is_Select) {
                  RAST._IExpr _8822___mcc_h7214 = _source347.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8823___mcc_h7215 = _source347.dtor_name;
                } else if (_source347.is_MemberSelect) {
                  RAST._IExpr _8824___mcc_h7218 = _source347.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8825___mcc_h7219 = _source347.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8826___mcc_h7222 = _source347.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8827___mcc_h7223 = _source347.dtor_retType;
                  RAST._IExpr _8828___mcc_h7224 = _source347.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8712_field));
              if (_8711_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8829_fromOwnership;
              _8829_fromOwnership = ((_8711_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2008;
              DCOMP._IOwnership _out2009;
              DCOMP.COMP.FromOwnership(r, _8829_fromOwnership, expectedOwnership, out _out2008, out _out2009);
              r = _out2008;
              resultingOwnership = _out2009;
              readIdents = _8720_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _8830___mcc_h212 = _source284.dtor_params;
          DAST._IType _8831___mcc_h213 = _source284.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _8832___mcc_h214 = _source284.dtor_body;
          DAST._IType _8833_fieldType = _4872___mcc_h57;
          bool _8834_isDatatype = _4871___mcc_h56;
          bool _8835_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8836_field = _4869___mcc_h54;
          DAST._IExpression _8837_on = _4868___mcc_h53;
          {
            if (_8834_isDatatype) {
              RAST._IExpr _8838_onExpr;
              DCOMP._IOwnership _8839_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8840_recIdents;
              RAST._IExpr _out2010;
              DCOMP._IOwnership _out2011;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2012;
              (this).GenExpr(_8837_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2010, out _out2011, out _out2012);
              _8838_onExpr = _out2010;
              _8839_onOwned = _out2011;
              _8840_recIdents = _out2012;
              r = ((_8838_onExpr).Sel(DCOMP.__default.escapeName(_8836_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8841_typ;
              RAST._IType _out2013;
              _out2013 = (this).GenType(_8833_fieldType, false, false);
              _8841_typ = _out2013;
              if (((_8841_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2014;
                DCOMP._IOwnership _out2015;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2014, out _out2015);
                r = _out2014;
                resultingOwnership = _out2015;
              }
              readIdents = _8840_recIdents;
            } else {
              RAST._IExpr _8842_onExpr;
              DCOMP._IOwnership _8843_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8844_recIdents;
              RAST._IExpr _out2016;
              DCOMP._IOwnership _out2017;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2018;
              (this).GenExpr(_8837_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2016, out _out2017, out _out2018);
              _8842_onExpr = _out2016;
              _8843_onOwned = _out2017;
              _8844_recIdents = _out2018;
              r = _8842_onExpr;
              if (!object.Equals(_8842_onExpr, RAST.__default.self)) {
                RAST._IExpr _source349 = _8842_onExpr;
                if (_source349.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8845___mcc_h7228 = _source349.dtor_content;
                } else if (_source349.is_ExprFromType) {
                  RAST._IType _8846___mcc_h7230 = _source349.dtor_tpe;
                } else if (_source349.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8847___mcc_h7232 = _source349.dtor_name;
                } else if (_source349.is_Match) {
                  RAST._IExpr _8848___mcc_h7234 = _source349.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8849___mcc_h7235 = _source349.dtor_cases;
                } else if (_source349.is_StmtExpr) {
                  RAST._IExpr _8850___mcc_h7238 = _source349.dtor_stmt;
                  RAST._IExpr _8851___mcc_h7239 = _source349.dtor_rhs;
                } else if (_source349.is_Block) {
                  RAST._IExpr _8852___mcc_h7242 = _source349.dtor_underlying;
                } else if (_source349.is_StructBuild) {
                  RAST._IExpr _8853___mcc_h7244 = _source349.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8854___mcc_h7245 = _source349.dtor_assignments;
                } else if (_source349.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8855___mcc_h7248 = _source349.dtor_arguments;
                } else if (_source349.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8856___mcc_h7250 = _source349.dtor_op1;
                  RAST._IExpr _8857___mcc_h7251 = _source349.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8858___mcc_h7252 = _source349.dtor_format;
                  if (object.Equals(_8856___mcc_h7250, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source350 = _8857___mcc_h7251;
                    if (_source350.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8859___mcc_h7256 = _source350.dtor_content;
                    } else if (_source350.is_ExprFromType) {
                      RAST._IType _8860___mcc_h7258 = _source350.dtor_tpe;
                    } else if (_source350.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8861___mcc_h7260 = _source350.dtor_name;
                      if (object.Equals(_8861___mcc_h7260, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source350.is_Match) {
                      RAST._IExpr _8862___mcc_h7262 = _source350.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8863___mcc_h7263 = _source350.dtor_cases;
                    } else if (_source350.is_StmtExpr) {
                      RAST._IExpr _8864___mcc_h7266 = _source350.dtor_stmt;
                      RAST._IExpr _8865___mcc_h7267 = _source350.dtor_rhs;
                    } else if (_source350.is_Block) {
                      RAST._IExpr _8866___mcc_h7270 = _source350.dtor_underlying;
                    } else if (_source350.is_StructBuild) {
                      RAST._IExpr _8867___mcc_h7272 = _source350.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8868___mcc_h7273 = _source350.dtor_assignments;
                    } else if (_source350.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8869___mcc_h7276 = _source350.dtor_arguments;
                    } else if (_source350.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8870___mcc_h7278 = _source350.dtor_op1;
                      RAST._IExpr _8871___mcc_h7279 = _source350.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8872___mcc_h7280 = _source350.dtor_format;
                    } else if (_source350.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8873___mcc_h7284 = _source350.dtor_op2;
                      RAST._IExpr _8874___mcc_h7285 = _source350.dtor_left;
                      RAST._IExpr _8875___mcc_h7286 = _source350.dtor_right;
                      DAST.Format._IBinaryOpFormat _8876___mcc_h7287 = _source350.dtor_format2;
                    } else if (_source350.is_TypeAscription) {
                      RAST._IExpr _8877___mcc_h7292 = _source350.dtor_left;
                      RAST._IType _8878___mcc_h7293 = _source350.dtor_tpe;
                    } else if (_source350.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8879___mcc_h7296 = _source350.dtor_value;
                    } else if (_source350.is_LiteralBool) {
                      bool _8880___mcc_h7298 = _source350.dtor_bvalue;
                    } else if (_source350.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8881___mcc_h7300 = _source350.dtor_value;
                      bool _8882___mcc_h7301 = _source350.dtor_binary;
                    } else if (_source350.is_DeclareVar) {
                      RAST._IDeclareType _8883___mcc_h7304 = _source350.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8884___mcc_h7305 = _source350.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8885___mcc_h7306 = _source350.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8886___mcc_h7307 = _source350.dtor_optRhs;
                    } else if (_source350.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8887___mcc_h7312 = _source350.dtor_names;
                      RAST._IExpr _8888___mcc_h7313 = _source350.dtor_rhs;
                    } else if (_source350.is_IfExpr) {
                      RAST._IExpr _8889___mcc_h7316 = _source350.dtor_cond;
                      RAST._IExpr _8890___mcc_h7317 = _source350.dtor_thn;
                      RAST._IExpr _8891___mcc_h7318 = _source350.dtor_els;
                    } else if (_source350.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8892___mcc_h7322 = _source350.dtor_optCond;
                      RAST._IExpr _8893___mcc_h7323 = _source350.dtor_underlying;
                    } else if (_source350.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8894___mcc_h7326 = _source350.dtor_name;
                      RAST._IExpr _8895___mcc_h7327 = _source350.dtor_range;
                      RAST._IExpr _8896___mcc_h7328 = _source350.dtor_body;
                    } else if (_source350.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8897___mcc_h7332 = _source350.dtor_lbl;
                      RAST._IExpr _8898___mcc_h7333 = _source350.dtor_underlying;
                    } else if (_source350.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8899___mcc_h7336 = _source350.dtor_optLbl;
                    } else if (_source350.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8900___mcc_h7338 = _source350.dtor_optLbl;
                    } else if (_source350.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8901___mcc_h7340 = _source350.dtor_optExpr;
                    } else if (_source350.is_CallType) {
                      RAST._IExpr _8902___mcc_h7342 = _source350.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8903___mcc_h7343 = _source350.dtor_typeParameters;
                    } else if (_source350.is_Call) {
                      RAST._IExpr _8904___mcc_h7346 = _source350.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8905___mcc_h7347 = _source350.dtor_arguments;
                    } else if (_source350.is_Select) {
                      RAST._IExpr _8906___mcc_h7350 = _source350.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8907___mcc_h7351 = _source350.dtor_name;
                    } else if (_source350.is_MemberSelect) {
                      RAST._IExpr _8908___mcc_h7354 = _source350.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8909___mcc_h7355 = _source350.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8910___mcc_h7358 = _source350.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8911___mcc_h7359 = _source350.dtor_retType;
                      RAST._IExpr _8912___mcc_h7360 = _source350.dtor_body;
                    }
                  } else {
                  }
                } else if (_source349.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8913___mcc_h7364 = _source349.dtor_op2;
                  RAST._IExpr _8914___mcc_h7365 = _source349.dtor_left;
                  RAST._IExpr _8915___mcc_h7366 = _source349.dtor_right;
                  DAST.Format._IBinaryOpFormat _8916___mcc_h7367 = _source349.dtor_format2;
                } else if (_source349.is_TypeAscription) {
                  RAST._IExpr _8917___mcc_h7372 = _source349.dtor_left;
                  RAST._IType _8918___mcc_h7373 = _source349.dtor_tpe;
                } else if (_source349.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8919___mcc_h7376 = _source349.dtor_value;
                } else if (_source349.is_LiteralBool) {
                  bool _8920___mcc_h7378 = _source349.dtor_bvalue;
                } else if (_source349.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8921___mcc_h7380 = _source349.dtor_value;
                  bool _8922___mcc_h7381 = _source349.dtor_binary;
                } else if (_source349.is_DeclareVar) {
                  RAST._IDeclareType _8923___mcc_h7384 = _source349.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8924___mcc_h7385 = _source349.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8925___mcc_h7386 = _source349.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8926___mcc_h7387 = _source349.dtor_optRhs;
                } else if (_source349.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8927___mcc_h7392 = _source349.dtor_names;
                  RAST._IExpr _8928___mcc_h7393 = _source349.dtor_rhs;
                } else if (_source349.is_IfExpr) {
                  RAST._IExpr _8929___mcc_h7396 = _source349.dtor_cond;
                  RAST._IExpr _8930___mcc_h7397 = _source349.dtor_thn;
                  RAST._IExpr _8931___mcc_h7398 = _source349.dtor_els;
                } else if (_source349.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8932___mcc_h7402 = _source349.dtor_optCond;
                  RAST._IExpr _8933___mcc_h7403 = _source349.dtor_underlying;
                } else if (_source349.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8934___mcc_h7406 = _source349.dtor_name;
                  RAST._IExpr _8935___mcc_h7407 = _source349.dtor_range;
                  RAST._IExpr _8936___mcc_h7408 = _source349.dtor_body;
                } else if (_source349.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8937___mcc_h7412 = _source349.dtor_lbl;
                  RAST._IExpr _8938___mcc_h7413 = _source349.dtor_underlying;
                } else if (_source349.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8939___mcc_h7416 = _source349.dtor_optLbl;
                } else if (_source349.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8940___mcc_h7418 = _source349.dtor_optLbl;
                } else if (_source349.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8941___mcc_h7420 = _source349.dtor_optExpr;
                } else if (_source349.is_CallType) {
                  RAST._IExpr _8942___mcc_h7422 = _source349.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8943___mcc_h7423 = _source349.dtor_typeParameters;
                } else if (_source349.is_Call) {
                  RAST._IExpr _8944___mcc_h7426 = _source349.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8945___mcc_h7427 = _source349.dtor_arguments;
                } else if (_source349.is_Select) {
                  RAST._IExpr _8946___mcc_h7430 = _source349.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8947___mcc_h7431 = _source349.dtor_name;
                } else if (_source349.is_MemberSelect) {
                  RAST._IExpr _8948___mcc_h7434 = _source349.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8949___mcc_h7435 = _source349.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8950___mcc_h7438 = _source349.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8951___mcc_h7439 = _source349.dtor_retType;
                  RAST._IExpr _8952___mcc_h7440 = _source349.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8836_field));
              if (_8835_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _8953_fromOwnership;
              _8953_fromOwnership = ((_8835_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2019;
              DCOMP._IOwnership _out2020;
              DCOMP.COMP.FromOwnership(r, _8953_fromOwnership, expectedOwnership, out _out2019, out _out2020);
              r = _out2019;
              resultingOwnership = _out2020;
              readIdents = _8844_recIdents;
            }
            return ;
          }
        } else if (_source284.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _8954___mcc_h218 = _source284.dtor_values;
          DAST._IType _8955___mcc_h219 = _source284.dtor_retType;
          DAST._IExpression _8956___mcc_h220 = _source284.dtor_expr;
          DAST._IType _8957_fieldType = _4872___mcc_h57;
          bool _8958_isDatatype = _4871___mcc_h56;
          bool _8959_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _8960_field = _4869___mcc_h54;
          DAST._IExpression _8961_on = _4868___mcc_h53;
          {
            if (_8958_isDatatype) {
              RAST._IExpr _8962_onExpr;
              DCOMP._IOwnership _8963_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8964_recIdents;
              RAST._IExpr _out2021;
              DCOMP._IOwnership _out2022;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2023;
              (this).GenExpr(_8961_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2021, out _out2022, out _out2023);
              _8962_onExpr = _out2021;
              _8963_onOwned = _out2022;
              _8964_recIdents = _out2023;
              r = ((_8962_onExpr).Sel(DCOMP.__default.escapeName(_8960_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8965_typ;
              RAST._IType _out2024;
              _out2024 = (this).GenType(_8957_fieldType, false, false);
              _8965_typ = _out2024;
              if (((_8965_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2025;
                DCOMP._IOwnership _out2026;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2025, out _out2026);
                r = _out2025;
                resultingOwnership = _out2026;
              }
              readIdents = _8964_recIdents;
            } else {
              RAST._IExpr _8966_onExpr;
              DCOMP._IOwnership _8967_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8968_recIdents;
              RAST._IExpr _out2027;
              DCOMP._IOwnership _out2028;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2029;
              (this).GenExpr(_8961_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2027, out _out2028, out _out2029);
              _8966_onExpr = _out2027;
              _8967_onOwned = _out2028;
              _8968_recIdents = _out2029;
              r = _8966_onExpr;
              if (!object.Equals(_8966_onExpr, RAST.__default.self)) {
                RAST._IExpr _source351 = _8966_onExpr;
                if (_source351.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8969___mcc_h7444 = _source351.dtor_content;
                } else if (_source351.is_ExprFromType) {
                  RAST._IType _8970___mcc_h7446 = _source351.dtor_tpe;
                } else if (_source351.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8971___mcc_h7448 = _source351.dtor_name;
                } else if (_source351.is_Match) {
                  RAST._IExpr _8972___mcc_h7450 = _source351.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8973___mcc_h7451 = _source351.dtor_cases;
                } else if (_source351.is_StmtExpr) {
                  RAST._IExpr _8974___mcc_h7454 = _source351.dtor_stmt;
                  RAST._IExpr _8975___mcc_h7455 = _source351.dtor_rhs;
                } else if (_source351.is_Block) {
                  RAST._IExpr _8976___mcc_h7458 = _source351.dtor_underlying;
                } else if (_source351.is_StructBuild) {
                  RAST._IExpr _8977___mcc_h7460 = _source351.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8978___mcc_h7461 = _source351.dtor_assignments;
                } else if (_source351.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8979___mcc_h7464 = _source351.dtor_arguments;
                } else if (_source351.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8980___mcc_h7466 = _source351.dtor_op1;
                  RAST._IExpr _8981___mcc_h7467 = _source351.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8982___mcc_h7468 = _source351.dtor_format;
                  if (object.Equals(_8980___mcc_h7466, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source352 = _8981___mcc_h7467;
                    if (_source352.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8983___mcc_h7472 = _source352.dtor_content;
                    } else if (_source352.is_ExprFromType) {
                      RAST._IType _8984___mcc_h7474 = _source352.dtor_tpe;
                    } else if (_source352.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8985___mcc_h7476 = _source352.dtor_name;
                      if (object.Equals(_8985___mcc_h7476, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source352.is_Match) {
                      RAST._IExpr _8986___mcc_h7478 = _source352.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8987___mcc_h7479 = _source352.dtor_cases;
                    } else if (_source352.is_StmtExpr) {
                      RAST._IExpr _8988___mcc_h7482 = _source352.dtor_stmt;
                      RAST._IExpr _8989___mcc_h7483 = _source352.dtor_rhs;
                    } else if (_source352.is_Block) {
                      RAST._IExpr _8990___mcc_h7486 = _source352.dtor_underlying;
                    } else if (_source352.is_StructBuild) {
                      RAST._IExpr _8991___mcc_h7488 = _source352.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8992___mcc_h7489 = _source352.dtor_assignments;
                    } else if (_source352.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8993___mcc_h7492 = _source352.dtor_arguments;
                    } else if (_source352.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8994___mcc_h7494 = _source352.dtor_op1;
                      RAST._IExpr _8995___mcc_h7495 = _source352.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8996___mcc_h7496 = _source352.dtor_format;
                    } else if (_source352.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8997___mcc_h7500 = _source352.dtor_op2;
                      RAST._IExpr _8998___mcc_h7501 = _source352.dtor_left;
                      RAST._IExpr _8999___mcc_h7502 = _source352.dtor_right;
                      DAST.Format._IBinaryOpFormat _9000___mcc_h7503 = _source352.dtor_format2;
                    } else if (_source352.is_TypeAscription) {
                      RAST._IExpr _9001___mcc_h7508 = _source352.dtor_left;
                      RAST._IType _9002___mcc_h7509 = _source352.dtor_tpe;
                    } else if (_source352.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9003___mcc_h7512 = _source352.dtor_value;
                    } else if (_source352.is_LiteralBool) {
                      bool _9004___mcc_h7514 = _source352.dtor_bvalue;
                    } else if (_source352.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9005___mcc_h7516 = _source352.dtor_value;
                      bool _9006___mcc_h7517 = _source352.dtor_binary;
                    } else if (_source352.is_DeclareVar) {
                      RAST._IDeclareType _9007___mcc_h7520 = _source352.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9008___mcc_h7521 = _source352.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9009___mcc_h7522 = _source352.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9010___mcc_h7523 = _source352.dtor_optRhs;
                    } else if (_source352.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9011___mcc_h7528 = _source352.dtor_names;
                      RAST._IExpr _9012___mcc_h7529 = _source352.dtor_rhs;
                    } else if (_source352.is_IfExpr) {
                      RAST._IExpr _9013___mcc_h7532 = _source352.dtor_cond;
                      RAST._IExpr _9014___mcc_h7533 = _source352.dtor_thn;
                      RAST._IExpr _9015___mcc_h7534 = _source352.dtor_els;
                    } else if (_source352.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9016___mcc_h7538 = _source352.dtor_optCond;
                      RAST._IExpr _9017___mcc_h7539 = _source352.dtor_underlying;
                    } else if (_source352.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9018___mcc_h7542 = _source352.dtor_name;
                      RAST._IExpr _9019___mcc_h7543 = _source352.dtor_range;
                      RAST._IExpr _9020___mcc_h7544 = _source352.dtor_body;
                    } else if (_source352.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9021___mcc_h7548 = _source352.dtor_lbl;
                      RAST._IExpr _9022___mcc_h7549 = _source352.dtor_underlying;
                    } else if (_source352.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9023___mcc_h7552 = _source352.dtor_optLbl;
                    } else if (_source352.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9024___mcc_h7554 = _source352.dtor_optLbl;
                    } else if (_source352.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9025___mcc_h7556 = _source352.dtor_optExpr;
                    } else if (_source352.is_CallType) {
                      RAST._IExpr _9026___mcc_h7558 = _source352.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9027___mcc_h7559 = _source352.dtor_typeParameters;
                    } else if (_source352.is_Call) {
                      RAST._IExpr _9028___mcc_h7562 = _source352.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9029___mcc_h7563 = _source352.dtor_arguments;
                    } else if (_source352.is_Select) {
                      RAST._IExpr _9030___mcc_h7566 = _source352.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9031___mcc_h7567 = _source352.dtor_name;
                    } else if (_source352.is_MemberSelect) {
                      RAST._IExpr _9032___mcc_h7570 = _source352.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9033___mcc_h7571 = _source352.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9034___mcc_h7574 = _source352.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9035___mcc_h7575 = _source352.dtor_retType;
                      RAST._IExpr _9036___mcc_h7576 = _source352.dtor_body;
                    }
                  } else {
                  }
                } else if (_source351.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9037___mcc_h7580 = _source351.dtor_op2;
                  RAST._IExpr _9038___mcc_h7581 = _source351.dtor_left;
                  RAST._IExpr _9039___mcc_h7582 = _source351.dtor_right;
                  DAST.Format._IBinaryOpFormat _9040___mcc_h7583 = _source351.dtor_format2;
                } else if (_source351.is_TypeAscription) {
                  RAST._IExpr _9041___mcc_h7588 = _source351.dtor_left;
                  RAST._IType _9042___mcc_h7589 = _source351.dtor_tpe;
                } else if (_source351.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9043___mcc_h7592 = _source351.dtor_value;
                } else if (_source351.is_LiteralBool) {
                  bool _9044___mcc_h7594 = _source351.dtor_bvalue;
                } else if (_source351.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9045___mcc_h7596 = _source351.dtor_value;
                  bool _9046___mcc_h7597 = _source351.dtor_binary;
                } else if (_source351.is_DeclareVar) {
                  RAST._IDeclareType _9047___mcc_h7600 = _source351.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9048___mcc_h7601 = _source351.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9049___mcc_h7602 = _source351.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9050___mcc_h7603 = _source351.dtor_optRhs;
                } else if (_source351.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9051___mcc_h7608 = _source351.dtor_names;
                  RAST._IExpr _9052___mcc_h7609 = _source351.dtor_rhs;
                } else if (_source351.is_IfExpr) {
                  RAST._IExpr _9053___mcc_h7612 = _source351.dtor_cond;
                  RAST._IExpr _9054___mcc_h7613 = _source351.dtor_thn;
                  RAST._IExpr _9055___mcc_h7614 = _source351.dtor_els;
                } else if (_source351.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9056___mcc_h7618 = _source351.dtor_optCond;
                  RAST._IExpr _9057___mcc_h7619 = _source351.dtor_underlying;
                } else if (_source351.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9058___mcc_h7622 = _source351.dtor_name;
                  RAST._IExpr _9059___mcc_h7623 = _source351.dtor_range;
                  RAST._IExpr _9060___mcc_h7624 = _source351.dtor_body;
                } else if (_source351.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9061___mcc_h7628 = _source351.dtor_lbl;
                  RAST._IExpr _9062___mcc_h7629 = _source351.dtor_underlying;
                } else if (_source351.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9063___mcc_h7632 = _source351.dtor_optLbl;
                } else if (_source351.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9064___mcc_h7634 = _source351.dtor_optLbl;
                } else if (_source351.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9065___mcc_h7636 = _source351.dtor_optExpr;
                } else if (_source351.is_CallType) {
                  RAST._IExpr _9066___mcc_h7638 = _source351.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9067___mcc_h7639 = _source351.dtor_typeParameters;
                } else if (_source351.is_Call) {
                  RAST._IExpr _9068___mcc_h7642 = _source351.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9069___mcc_h7643 = _source351.dtor_arguments;
                } else if (_source351.is_Select) {
                  RAST._IExpr _9070___mcc_h7646 = _source351.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9071___mcc_h7647 = _source351.dtor_name;
                } else if (_source351.is_MemberSelect) {
                  RAST._IExpr _9072___mcc_h7650 = _source351.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9073___mcc_h7651 = _source351.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9074___mcc_h7654 = _source351.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9075___mcc_h7655 = _source351.dtor_retType;
                  RAST._IExpr _9076___mcc_h7656 = _source351.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8960_field));
              if (_8959_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9077_fromOwnership;
              _9077_fromOwnership = ((_8959_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2030;
              DCOMP._IOwnership _out2031;
              DCOMP.COMP.FromOwnership(r, _9077_fromOwnership, expectedOwnership, out _out2030, out _out2031);
              r = _out2030;
              resultingOwnership = _out2031;
              readIdents = _8968_recIdents;
            }
            return ;
          }
        } else if (_source284.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _9078___mcc_h224 = _source284.dtor_name;
          DAST._IType _9079___mcc_h225 = _source284.dtor_typ;
          DAST._IExpression _9080___mcc_h226 = _source284.dtor_value;
          DAST._IExpression _9081___mcc_h227 = _source284.dtor_iifeBody;
          DAST._IType _9082_fieldType = _4872___mcc_h57;
          bool _9083_isDatatype = _4871___mcc_h56;
          bool _9084_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9085_field = _4869___mcc_h54;
          DAST._IExpression _9086_on = _4868___mcc_h53;
          {
            if (_9083_isDatatype) {
              RAST._IExpr _9087_onExpr;
              DCOMP._IOwnership _9088_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9089_recIdents;
              RAST._IExpr _out2032;
              DCOMP._IOwnership _out2033;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2034;
              (this).GenExpr(_9086_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2032, out _out2033, out _out2034);
              _9087_onExpr = _out2032;
              _9088_onOwned = _out2033;
              _9089_recIdents = _out2034;
              r = ((_9087_onExpr).Sel(DCOMP.__default.escapeName(_9085_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9090_typ;
              RAST._IType _out2035;
              _out2035 = (this).GenType(_9082_fieldType, false, false);
              _9090_typ = _out2035;
              if (((_9090_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2036;
                DCOMP._IOwnership _out2037;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2036, out _out2037);
                r = _out2036;
                resultingOwnership = _out2037;
              }
              readIdents = _9089_recIdents;
            } else {
              RAST._IExpr _9091_onExpr;
              DCOMP._IOwnership _9092_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9093_recIdents;
              RAST._IExpr _out2038;
              DCOMP._IOwnership _out2039;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2040;
              (this).GenExpr(_9086_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2038, out _out2039, out _out2040);
              _9091_onExpr = _out2038;
              _9092_onOwned = _out2039;
              _9093_recIdents = _out2040;
              r = _9091_onExpr;
              if (!object.Equals(_9091_onExpr, RAST.__default.self)) {
                RAST._IExpr _source353 = _9091_onExpr;
                if (_source353.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9094___mcc_h7660 = _source353.dtor_content;
                } else if (_source353.is_ExprFromType) {
                  RAST._IType _9095___mcc_h7662 = _source353.dtor_tpe;
                } else if (_source353.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9096___mcc_h7664 = _source353.dtor_name;
                } else if (_source353.is_Match) {
                  RAST._IExpr _9097___mcc_h7666 = _source353.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9098___mcc_h7667 = _source353.dtor_cases;
                } else if (_source353.is_StmtExpr) {
                  RAST._IExpr _9099___mcc_h7670 = _source353.dtor_stmt;
                  RAST._IExpr _9100___mcc_h7671 = _source353.dtor_rhs;
                } else if (_source353.is_Block) {
                  RAST._IExpr _9101___mcc_h7674 = _source353.dtor_underlying;
                } else if (_source353.is_StructBuild) {
                  RAST._IExpr _9102___mcc_h7676 = _source353.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9103___mcc_h7677 = _source353.dtor_assignments;
                } else if (_source353.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9104___mcc_h7680 = _source353.dtor_arguments;
                } else if (_source353.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9105___mcc_h7682 = _source353.dtor_op1;
                  RAST._IExpr _9106___mcc_h7683 = _source353.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9107___mcc_h7684 = _source353.dtor_format;
                  if (object.Equals(_9105___mcc_h7682, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source354 = _9106___mcc_h7683;
                    if (_source354.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9108___mcc_h7688 = _source354.dtor_content;
                    } else if (_source354.is_ExprFromType) {
                      RAST._IType _9109___mcc_h7690 = _source354.dtor_tpe;
                    } else if (_source354.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9110___mcc_h7692 = _source354.dtor_name;
                      if (object.Equals(_9110___mcc_h7692, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source354.is_Match) {
                      RAST._IExpr _9111___mcc_h7694 = _source354.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9112___mcc_h7695 = _source354.dtor_cases;
                    } else if (_source354.is_StmtExpr) {
                      RAST._IExpr _9113___mcc_h7698 = _source354.dtor_stmt;
                      RAST._IExpr _9114___mcc_h7699 = _source354.dtor_rhs;
                    } else if (_source354.is_Block) {
                      RAST._IExpr _9115___mcc_h7702 = _source354.dtor_underlying;
                    } else if (_source354.is_StructBuild) {
                      RAST._IExpr _9116___mcc_h7704 = _source354.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9117___mcc_h7705 = _source354.dtor_assignments;
                    } else if (_source354.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9118___mcc_h7708 = _source354.dtor_arguments;
                    } else if (_source354.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9119___mcc_h7710 = _source354.dtor_op1;
                      RAST._IExpr _9120___mcc_h7711 = _source354.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9121___mcc_h7712 = _source354.dtor_format;
                    } else if (_source354.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9122___mcc_h7716 = _source354.dtor_op2;
                      RAST._IExpr _9123___mcc_h7717 = _source354.dtor_left;
                      RAST._IExpr _9124___mcc_h7718 = _source354.dtor_right;
                      DAST.Format._IBinaryOpFormat _9125___mcc_h7719 = _source354.dtor_format2;
                    } else if (_source354.is_TypeAscription) {
                      RAST._IExpr _9126___mcc_h7724 = _source354.dtor_left;
                      RAST._IType _9127___mcc_h7725 = _source354.dtor_tpe;
                    } else if (_source354.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9128___mcc_h7728 = _source354.dtor_value;
                    } else if (_source354.is_LiteralBool) {
                      bool _9129___mcc_h7730 = _source354.dtor_bvalue;
                    } else if (_source354.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9130___mcc_h7732 = _source354.dtor_value;
                      bool _9131___mcc_h7733 = _source354.dtor_binary;
                    } else if (_source354.is_DeclareVar) {
                      RAST._IDeclareType _9132___mcc_h7736 = _source354.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9133___mcc_h7737 = _source354.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9134___mcc_h7738 = _source354.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9135___mcc_h7739 = _source354.dtor_optRhs;
                    } else if (_source354.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9136___mcc_h7744 = _source354.dtor_names;
                      RAST._IExpr _9137___mcc_h7745 = _source354.dtor_rhs;
                    } else if (_source354.is_IfExpr) {
                      RAST._IExpr _9138___mcc_h7748 = _source354.dtor_cond;
                      RAST._IExpr _9139___mcc_h7749 = _source354.dtor_thn;
                      RAST._IExpr _9140___mcc_h7750 = _source354.dtor_els;
                    } else if (_source354.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9141___mcc_h7754 = _source354.dtor_optCond;
                      RAST._IExpr _9142___mcc_h7755 = _source354.dtor_underlying;
                    } else if (_source354.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9143___mcc_h7758 = _source354.dtor_name;
                      RAST._IExpr _9144___mcc_h7759 = _source354.dtor_range;
                      RAST._IExpr _9145___mcc_h7760 = _source354.dtor_body;
                    } else if (_source354.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9146___mcc_h7764 = _source354.dtor_lbl;
                      RAST._IExpr _9147___mcc_h7765 = _source354.dtor_underlying;
                    } else if (_source354.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9148___mcc_h7768 = _source354.dtor_optLbl;
                    } else if (_source354.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9149___mcc_h7770 = _source354.dtor_optLbl;
                    } else if (_source354.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9150___mcc_h7772 = _source354.dtor_optExpr;
                    } else if (_source354.is_CallType) {
                      RAST._IExpr _9151___mcc_h7774 = _source354.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9152___mcc_h7775 = _source354.dtor_typeParameters;
                    } else if (_source354.is_Call) {
                      RAST._IExpr _9153___mcc_h7778 = _source354.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9154___mcc_h7779 = _source354.dtor_arguments;
                    } else if (_source354.is_Select) {
                      RAST._IExpr _9155___mcc_h7782 = _source354.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9156___mcc_h7783 = _source354.dtor_name;
                    } else if (_source354.is_MemberSelect) {
                      RAST._IExpr _9157___mcc_h7786 = _source354.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9158___mcc_h7787 = _source354.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9159___mcc_h7790 = _source354.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9160___mcc_h7791 = _source354.dtor_retType;
                      RAST._IExpr _9161___mcc_h7792 = _source354.dtor_body;
                    }
                  } else {
                  }
                } else if (_source353.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9162___mcc_h7796 = _source353.dtor_op2;
                  RAST._IExpr _9163___mcc_h7797 = _source353.dtor_left;
                  RAST._IExpr _9164___mcc_h7798 = _source353.dtor_right;
                  DAST.Format._IBinaryOpFormat _9165___mcc_h7799 = _source353.dtor_format2;
                } else if (_source353.is_TypeAscription) {
                  RAST._IExpr _9166___mcc_h7804 = _source353.dtor_left;
                  RAST._IType _9167___mcc_h7805 = _source353.dtor_tpe;
                } else if (_source353.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9168___mcc_h7808 = _source353.dtor_value;
                } else if (_source353.is_LiteralBool) {
                  bool _9169___mcc_h7810 = _source353.dtor_bvalue;
                } else if (_source353.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9170___mcc_h7812 = _source353.dtor_value;
                  bool _9171___mcc_h7813 = _source353.dtor_binary;
                } else if (_source353.is_DeclareVar) {
                  RAST._IDeclareType _9172___mcc_h7816 = _source353.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9173___mcc_h7817 = _source353.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9174___mcc_h7818 = _source353.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9175___mcc_h7819 = _source353.dtor_optRhs;
                } else if (_source353.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9176___mcc_h7824 = _source353.dtor_names;
                  RAST._IExpr _9177___mcc_h7825 = _source353.dtor_rhs;
                } else if (_source353.is_IfExpr) {
                  RAST._IExpr _9178___mcc_h7828 = _source353.dtor_cond;
                  RAST._IExpr _9179___mcc_h7829 = _source353.dtor_thn;
                  RAST._IExpr _9180___mcc_h7830 = _source353.dtor_els;
                } else if (_source353.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9181___mcc_h7834 = _source353.dtor_optCond;
                  RAST._IExpr _9182___mcc_h7835 = _source353.dtor_underlying;
                } else if (_source353.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9183___mcc_h7838 = _source353.dtor_name;
                  RAST._IExpr _9184___mcc_h7839 = _source353.dtor_range;
                  RAST._IExpr _9185___mcc_h7840 = _source353.dtor_body;
                } else if (_source353.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9186___mcc_h7844 = _source353.dtor_lbl;
                  RAST._IExpr _9187___mcc_h7845 = _source353.dtor_underlying;
                } else if (_source353.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9188___mcc_h7848 = _source353.dtor_optLbl;
                } else if (_source353.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9189___mcc_h7850 = _source353.dtor_optLbl;
                } else if (_source353.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9190___mcc_h7852 = _source353.dtor_optExpr;
                } else if (_source353.is_CallType) {
                  RAST._IExpr _9191___mcc_h7854 = _source353.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9192___mcc_h7855 = _source353.dtor_typeParameters;
                } else if (_source353.is_Call) {
                  RAST._IExpr _9193___mcc_h7858 = _source353.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9194___mcc_h7859 = _source353.dtor_arguments;
                } else if (_source353.is_Select) {
                  RAST._IExpr _9195___mcc_h7862 = _source353.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9196___mcc_h7863 = _source353.dtor_name;
                } else if (_source353.is_MemberSelect) {
                  RAST._IExpr _9197___mcc_h7866 = _source353.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9198___mcc_h7867 = _source353.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9199___mcc_h7870 = _source353.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9200___mcc_h7871 = _source353.dtor_retType;
                  RAST._IExpr _9201___mcc_h7872 = _source353.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9085_field));
              if (_9084_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9202_fromOwnership;
              _9202_fromOwnership = ((_9084_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2041;
              DCOMP._IOwnership _out2042;
              DCOMP.COMP.FromOwnership(r, _9202_fromOwnership, expectedOwnership, out _out2041, out _out2042);
              r = _out2041;
              resultingOwnership = _out2042;
              readIdents = _9093_recIdents;
            }
            return ;
          }
        } else if (_source284.is_Apply) {
          DAST._IExpression _9203___mcc_h232 = _source284.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _9204___mcc_h233 = _source284.dtor_args;
          DAST._IType _9205_fieldType = _4872___mcc_h57;
          bool _9206_isDatatype = _4871___mcc_h56;
          bool _9207_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9208_field = _4869___mcc_h54;
          DAST._IExpression _9209_on = _4868___mcc_h53;
          {
            if (_9206_isDatatype) {
              RAST._IExpr _9210_onExpr;
              DCOMP._IOwnership _9211_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9212_recIdents;
              RAST._IExpr _out2043;
              DCOMP._IOwnership _out2044;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2045;
              (this).GenExpr(_9209_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2043, out _out2044, out _out2045);
              _9210_onExpr = _out2043;
              _9211_onOwned = _out2044;
              _9212_recIdents = _out2045;
              r = ((_9210_onExpr).Sel(DCOMP.__default.escapeName(_9208_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9213_typ;
              RAST._IType _out2046;
              _out2046 = (this).GenType(_9205_fieldType, false, false);
              _9213_typ = _out2046;
              if (((_9213_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2047;
                DCOMP._IOwnership _out2048;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2047, out _out2048);
                r = _out2047;
                resultingOwnership = _out2048;
              }
              readIdents = _9212_recIdents;
            } else {
              RAST._IExpr _9214_onExpr;
              DCOMP._IOwnership _9215_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9216_recIdents;
              RAST._IExpr _out2049;
              DCOMP._IOwnership _out2050;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2051;
              (this).GenExpr(_9209_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2049, out _out2050, out _out2051);
              _9214_onExpr = _out2049;
              _9215_onOwned = _out2050;
              _9216_recIdents = _out2051;
              r = _9214_onExpr;
              if (!object.Equals(_9214_onExpr, RAST.__default.self)) {
                RAST._IExpr _source355 = _9214_onExpr;
                if (_source355.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9217___mcc_h7876 = _source355.dtor_content;
                } else if (_source355.is_ExprFromType) {
                  RAST._IType _9218___mcc_h7878 = _source355.dtor_tpe;
                } else if (_source355.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9219___mcc_h7880 = _source355.dtor_name;
                } else if (_source355.is_Match) {
                  RAST._IExpr _9220___mcc_h7882 = _source355.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9221___mcc_h7883 = _source355.dtor_cases;
                } else if (_source355.is_StmtExpr) {
                  RAST._IExpr _9222___mcc_h7886 = _source355.dtor_stmt;
                  RAST._IExpr _9223___mcc_h7887 = _source355.dtor_rhs;
                } else if (_source355.is_Block) {
                  RAST._IExpr _9224___mcc_h7890 = _source355.dtor_underlying;
                } else if (_source355.is_StructBuild) {
                  RAST._IExpr _9225___mcc_h7892 = _source355.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9226___mcc_h7893 = _source355.dtor_assignments;
                } else if (_source355.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9227___mcc_h7896 = _source355.dtor_arguments;
                } else if (_source355.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9228___mcc_h7898 = _source355.dtor_op1;
                  RAST._IExpr _9229___mcc_h7899 = _source355.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9230___mcc_h7900 = _source355.dtor_format;
                  if (object.Equals(_9228___mcc_h7898, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source356 = _9229___mcc_h7899;
                    if (_source356.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9231___mcc_h7904 = _source356.dtor_content;
                    } else if (_source356.is_ExprFromType) {
                      RAST._IType _9232___mcc_h7906 = _source356.dtor_tpe;
                    } else if (_source356.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9233___mcc_h7908 = _source356.dtor_name;
                      if (object.Equals(_9233___mcc_h7908, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source356.is_Match) {
                      RAST._IExpr _9234___mcc_h7910 = _source356.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9235___mcc_h7911 = _source356.dtor_cases;
                    } else if (_source356.is_StmtExpr) {
                      RAST._IExpr _9236___mcc_h7914 = _source356.dtor_stmt;
                      RAST._IExpr _9237___mcc_h7915 = _source356.dtor_rhs;
                    } else if (_source356.is_Block) {
                      RAST._IExpr _9238___mcc_h7918 = _source356.dtor_underlying;
                    } else if (_source356.is_StructBuild) {
                      RAST._IExpr _9239___mcc_h7920 = _source356.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9240___mcc_h7921 = _source356.dtor_assignments;
                    } else if (_source356.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9241___mcc_h7924 = _source356.dtor_arguments;
                    } else if (_source356.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9242___mcc_h7926 = _source356.dtor_op1;
                      RAST._IExpr _9243___mcc_h7927 = _source356.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9244___mcc_h7928 = _source356.dtor_format;
                    } else if (_source356.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9245___mcc_h7932 = _source356.dtor_op2;
                      RAST._IExpr _9246___mcc_h7933 = _source356.dtor_left;
                      RAST._IExpr _9247___mcc_h7934 = _source356.dtor_right;
                      DAST.Format._IBinaryOpFormat _9248___mcc_h7935 = _source356.dtor_format2;
                    } else if (_source356.is_TypeAscription) {
                      RAST._IExpr _9249___mcc_h7940 = _source356.dtor_left;
                      RAST._IType _9250___mcc_h7941 = _source356.dtor_tpe;
                    } else if (_source356.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9251___mcc_h7944 = _source356.dtor_value;
                    } else if (_source356.is_LiteralBool) {
                      bool _9252___mcc_h7946 = _source356.dtor_bvalue;
                    } else if (_source356.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9253___mcc_h7948 = _source356.dtor_value;
                      bool _9254___mcc_h7949 = _source356.dtor_binary;
                    } else if (_source356.is_DeclareVar) {
                      RAST._IDeclareType _9255___mcc_h7952 = _source356.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9256___mcc_h7953 = _source356.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9257___mcc_h7954 = _source356.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9258___mcc_h7955 = _source356.dtor_optRhs;
                    } else if (_source356.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9259___mcc_h7960 = _source356.dtor_names;
                      RAST._IExpr _9260___mcc_h7961 = _source356.dtor_rhs;
                    } else if (_source356.is_IfExpr) {
                      RAST._IExpr _9261___mcc_h7964 = _source356.dtor_cond;
                      RAST._IExpr _9262___mcc_h7965 = _source356.dtor_thn;
                      RAST._IExpr _9263___mcc_h7966 = _source356.dtor_els;
                    } else if (_source356.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9264___mcc_h7970 = _source356.dtor_optCond;
                      RAST._IExpr _9265___mcc_h7971 = _source356.dtor_underlying;
                    } else if (_source356.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9266___mcc_h7974 = _source356.dtor_name;
                      RAST._IExpr _9267___mcc_h7975 = _source356.dtor_range;
                      RAST._IExpr _9268___mcc_h7976 = _source356.dtor_body;
                    } else if (_source356.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9269___mcc_h7980 = _source356.dtor_lbl;
                      RAST._IExpr _9270___mcc_h7981 = _source356.dtor_underlying;
                    } else if (_source356.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9271___mcc_h7984 = _source356.dtor_optLbl;
                    } else if (_source356.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9272___mcc_h7986 = _source356.dtor_optLbl;
                    } else if (_source356.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9273___mcc_h7988 = _source356.dtor_optExpr;
                    } else if (_source356.is_CallType) {
                      RAST._IExpr _9274___mcc_h7990 = _source356.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9275___mcc_h7991 = _source356.dtor_typeParameters;
                    } else if (_source356.is_Call) {
                      RAST._IExpr _9276___mcc_h7994 = _source356.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9277___mcc_h7995 = _source356.dtor_arguments;
                    } else if (_source356.is_Select) {
                      RAST._IExpr _9278___mcc_h7998 = _source356.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9279___mcc_h7999 = _source356.dtor_name;
                    } else if (_source356.is_MemberSelect) {
                      RAST._IExpr _9280___mcc_h8002 = _source356.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9281___mcc_h8003 = _source356.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9282___mcc_h8006 = _source356.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9283___mcc_h8007 = _source356.dtor_retType;
                      RAST._IExpr _9284___mcc_h8008 = _source356.dtor_body;
                    }
                  } else {
                  }
                } else if (_source355.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9285___mcc_h8012 = _source355.dtor_op2;
                  RAST._IExpr _9286___mcc_h8013 = _source355.dtor_left;
                  RAST._IExpr _9287___mcc_h8014 = _source355.dtor_right;
                  DAST.Format._IBinaryOpFormat _9288___mcc_h8015 = _source355.dtor_format2;
                } else if (_source355.is_TypeAscription) {
                  RAST._IExpr _9289___mcc_h8020 = _source355.dtor_left;
                  RAST._IType _9290___mcc_h8021 = _source355.dtor_tpe;
                } else if (_source355.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9291___mcc_h8024 = _source355.dtor_value;
                } else if (_source355.is_LiteralBool) {
                  bool _9292___mcc_h8026 = _source355.dtor_bvalue;
                } else if (_source355.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9293___mcc_h8028 = _source355.dtor_value;
                  bool _9294___mcc_h8029 = _source355.dtor_binary;
                } else if (_source355.is_DeclareVar) {
                  RAST._IDeclareType _9295___mcc_h8032 = _source355.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9296___mcc_h8033 = _source355.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9297___mcc_h8034 = _source355.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9298___mcc_h8035 = _source355.dtor_optRhs;
                } else if (_source355.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9299___mcc_h8040 = _source355.dtor_names;
                  RAST._IExpr _9300___mcc_h8041 = _source355.dtor_rhs;
                } else if (_source355.is_IfExpr) {
                  RAST._IExpr _9301___mcc_h8044 = _source355.dtor_cond;
                  RAST._IExpr _9302___mcc_h8045 = _source355.dtor_thn;
                  RAST._IExpr _9303___mcc_h8046 = _source355.dtor_els;
                } else if (_source355.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9304___mcc_h8050 = _source355.dtor_optCond;
                  RAST._IExpr _9305___mcc_h8051 = _source355.dtor_underlying;
                } else if (_source355.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9306___mcc_h8054 = _source355.dtor_name;
                  RAST._IExpr _9307___mcc_h8055 = _source355.dtor_range;
                  RAST._IExpr _9308___mcc_h8056 = _source355.dtor_body;
                } else if (_source355.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9309___mcc_h8060 = _source355.dtor_lbl;
                  RAST._IExpr _9310___mcc_h8061 = _source355.dtor_underlying;
                } else if (_source355.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9311___mcc_h8064 = _source355.dtor_optLbl;
                } else if (_source355.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9312___mcc_h8066 = _source355.dtor_optLbl;
                } else if (_source355.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9313___mcc_h8068 = _source355.dtor_optExpr;
                } else if (_source355.is_CallType) {
                  RAST._IExpr _9314___mcc_h8070 = _source355.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9315___mcc_h8071 = _source355.dtor_typeParameters;
                } else if (_source355.is_Call) {
                  RAST._IExpr _9316___mcc_h8074 = _source355.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9317___mcc_h8075 = _source355.dtor_arguments;
                } else if (_source355.is_Select) {
                  RAST._IExpr _9318___mcc_h8078 = _source355.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9319___mcc_h8079 = _source355.dtor_name;
                } else if (_source355.is_MemberSelect) {
                  RAST._IExpr _9320___mcc_h8082 = _source355.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9321___mcc_h8083 = _source355.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9322___mcc_h8086 = _source355.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9323___mcc_h8087 = _source355.dtor_retType;
                  RAST._IExpr _9324___mcc_h8088 = _source355.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9208_field));
              if (_9207_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9325_fromOwnership;
              _9325_fromOwnership = ((_9207_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2052;
              DCOMP._IOwnership _out2053;
              DCOMP.COMP.FromOwnership(r, _9325_fromOwnership, expectedOwnership, out _out2052, out _out2053);
              r = _out2052;
              resultingOwnership = _out2053;
              readIdents = _9216_recIdents;
            }
            return ;
          }
        } else if (_source284.is_TypeTest) {
          DAST._IExpression _9326___mcc_h236 = _source284.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9327___mcc_h237 = _source284.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _9328___mcc_h238 = _source284.dtor_variant;
          DAST._IType _9329_fieldType = _4872___mcc_h57;
          bool _9330_isDatatype = _4871___mcc_h56;
          bool _9331_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9332_field = _4869___mcc_h54;
          DAST._IExpression _9333_on = _4868___mcc_h53;
          {
            if (_9330_isDatatype) {
              RAST._IExpr _9334_onExpr;
              DCOMP._IOwnership _9335_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9336_recIdents;
              RAST._IExpr _out2054;
              DCOMP._IOwnership _out2055;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2056;
              (this).GenExpr(_9333_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2054, out _out2055, out _out2056);
              _9334_onExpr = _out2054;
              _9335_onOwned = _out2055;
              _9336_recIdents = _out2056;
              r = ((_9334_onExpr).Sel(DCOMP.__default.escapeName(_9332_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9337_typ;
              RAST._IType _out2057;
              _out2057 = (this).GenType(_9329_fieldType, false, false);
              _9337_typ = _out2057;
              if (((_9337_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2058;
                DCOMP._IOwnership _out2059;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2058, out _out2059);
                r = _out2058;
                resultingOwnership = _out2059;
              }
              readIdents = _9336_recIdents;
            } else {
              RAST._IExpr _9338_onExpr;
              DCOMP._IOwnership _9339_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9340_recIdents;
              RAST._IExpr _out2060;
              DCOMP._IOwnership _out2061;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2062;
              (this).GenExpr(_9333_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2060, out _out2061, out _out2062);
              _9338_onExpr = _out2060;
              _9339_onOwned = _out2061;
              _9340_recIdents = _out2062;
              r = _9338_onExpr;
              if (!object.Equals(_9338_onExpr, RAST.__default.self)) {
                RAST._IExpr _source357 = _9338_onExpr;
                if (_source357.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9341___mcc_h8092 = _source357.dtor_content;
                } else if (_source357.is_ExprFromType) {
                  RAST._IType _9342___mcc_h8094 = _source357.dtor_tpe;
                } else if (_source357.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9343___mcc_h8096 = _source357.dtor_name;
                } else if (_source357.is_Match) {
                  RAST._IExpr _9344___mcc_h8098 = _source357.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9345___mcc_h8099 = _source357.dtor_cases;
                } else if (_source357.is_StmtExpr) {
                  RAST._IExpr _9346___mcc_h8102 = _source357.dtor_stmt;
                  RAST._IExpr _9347___mcc_h8103 = _source357.dtor_rhs;
                } else if (_source357.is_Block) {
                  RAST._IExpr _9348___mcc_h8106 = _source357.dtor_underlying;
                } else if (_source357.is_StructBuild) {
                  RAST._IExpr _9349___mcc_h8108 = _source357.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9350___mcc_h8109 = _source357.dtor_assignments;
                } else if (_source357.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9351___mcc_h8112 = _source357.dtor_arguments;
                } else if (_source357.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9352___mcc_h8114 = _source357.dtor_op1;
                  RAST._IExpr _9353___mcc_h8115 = _source357.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9354___mcc_h8116 = _source357.dtor_format;
                  if (object.Equals(_9352___mcc_h8114, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source358 = _9353___mcc_h8115;
                    if (_source358.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9355___mcc_h8120 = _source358.dtor_content;
                    } else if (_source358.is_ExprFromType) {
                      RAST._IType _9356___mcc_h8122 = _source358.dtor_tpe;
                    } else if (_source358.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9357___mcc_h8124 = _source358.dtor_name;
                      if (object.Equals(_9357___mcc_h8124, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source358.is_Match) {
                      RAST._IExpr _9358___mcc_h8126 = _source358.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9359___mcc_h8127 = _source358.dtor_cases;
                    } else if (_source358.is_StmtExpr) {
                      RAST._IExpr _9360___mcc_h8130 = _source358.dtor_stmt;
                      RAST._IExpr _9361___mcc_h8131 = _source358.dtor_rhs;
                    } else if (_source358.is_Block) {
                      RAST._IExpr _9362___mcc_h8134 = _source358.dtor_underlying;
                    } else if (_source358.is_StructBuild) {
                      RAST._IExpr _9363___mcc_h8136 = _source358.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9364___mcc_h8137 = _source358.dtor_assignments;
                    } else if (_source358.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9365___mcc_h8140 = _source358.dtor_arguments;
                    } else if (_source358.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9366___mcc_h8142 = _source358.dtor_op1;
                      RAST._IExpr _9367___mcc_h8143 = _source358.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9368___mcc_h8144 = _source358.dtor_format;
                    } else if (_source358.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9369___mcc_h8148 = _source358.dtor_op2;
                      RAST._IExpr _9370___mcc_h8149 = _source358.dtor_left;
                      RAST._IExpr _9371___mcc_h8150 = _source358.dtor_right;
                      DAST.Format._IBinaryOpFormat _9372___mcc_h8151 = _source358.dtor_format2;
                    } else if (_source358.is_TypeAscription) {
                      RAST._IExpr _9373___mcc_h8156 = _source358.dtor_left;
                      RAST._IType _9374___mcc_h8157 = _source358.dtor_tpe;
                    } else if (_source358.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9375___mcc_h8160 = _source358.dtor_value;
                    } else if (_source358.is_LiteralBool) {
                      bool _9376___mcc_h8162 = _source358.dtor_bvalue;
                    } else if (_source358.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9377___mcc_h8164 = _source358.dtor_value;
                      bool _9378___mcc_h8165 = _source358.dtor_binary;
                    } else if (_source358.is_DeclareVar) {
                      RAST._IDeclareType _9379___mcc_h8168 = _source358.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9380___mcc_h8169 = _source358.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9381___mcc_h8170 = _source358.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9382___mcc_h8171 = _source358.dtor_optRhs;
                    } else if (_source358.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9383___mcc_h8176 = _source358.dtor_names;
                      RAST._IExpr _9384___mcc_h8177 = _source358.dtor_rhs;
                    } else if (_source358.is_IfExpr) {
                      RAST._IExpr _9385___mcc_h8180 = _source358.dtor_cond;
                      RAST._IExpr _9386___mcc_h8181 = _source358.dtor_thn;
                      RAST._IExpr _9387___mcc_h8182 = _source358.dtor_els;
                    } else if (_source358.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9388___mcc_h8186 = _source358.dtor_optCond;
                      RAST._IExpr _9389___mcc_h8187 = _source358.dtor_underlying;
                    } else if (_source358.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9390___mcc_h8190 = _source358.dtor_name;
                      RAST._IExpr _9391___mcc_h8191 = _source358.dtor_range;
                      RAST._IExpr _9392___mcc_h8192 = _source358.dtor_body;
                    } else if (_source358.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9393___mcc_h8196 = _source358.dtor_lbl;
                      RAST._IExpr _9394___mcc_h8197 = _source358.dtor_underlying;
                    } else if (_source358.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9395___mcc_h8200 = _source358.dtor_optLbl;
                    } else if (_source358.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9396___mcc_h8202 = _source358.dtor_optLbl;
                    } else if (_source358.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9397___mcc_h8204 = _source358.dtor_optExpr;
                    } else if (_source358.is_CallType) {
                      RAST._IExpr _9398___mcc_h8206 = _source358.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9399___mcc_h8207 = _source358.dtor_typeParameters;
                    } else if (_source358.is_Call) {
                      RAST._IExpr _9400___mcc_h8210 = _source358.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9401___mcc_h8211 = _source358.dtor_arguments;
                    } else if (_source358.is_Select) {
                      RAST._IExpr _9402___mcc_h8214 = _source358.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9403___mcc_h8215 = _source358.dtor_name;
                    } else if (_source358.is_MemberSelect) {
                      RAST._IExpr _9404___mcc_h8218 = _source358.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9405___mcc_h8219 = _source358.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9406___mcc_h8222 = _source358.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9407___mcc_h8223 = _source358.dtor_retType;
                      RAST._IExpr _9408___mcc_h8224 = _source358.dtor_body;
                    }
                  } else {
                  }
                } else if (_source357.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9409___mcc_h8228 = _source357.dtor_op2;
                  RAST._IExpr _9410___mcc_h8229 = _source357.dtor_left;
                  RAST._IExpr _9411___mcc_h8230 = _source357.dtor_right;
                  DAST.Format._IBinaryOpFormat _9412___mcc_h8231 = _source357.dtor_format2;
                } else if (_source357.is_TypeAscription) {
                  RAST._IExpr _9413___mcc_h8236 = _source357.dtor_left;
                  RAST._IType _9414___mcc_h8237 = _source357.dtor_tpe;
                } else if (_source357.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9415___mcc_h8240 = _source357.dtor_value;
                } else if (_source357.is_LiteralBool) {
                  bool _9416___mcc_h8242 = _source357.dtor_bvalue;
                } else if (_source357.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9417___mcc_h8244 = _source357.dtor_value;
                  bool _9418___mcc_h8245 = _source357.dtor_binary;
                } else if (_source357.is_DeclareVar) {
                  RAST._IDeclareType _9419___mcc_h8248 = _source357.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9420___mcc_h8249 = _source357.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9421___mcc_h8250 = _source357.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9422___mcc_h8251 = _source357.dtor_optRhs;
                } else if (_source357.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9423___mcc_h8256 = _source357.dtor_names;
                  RAST._IExpr _9424___mcc_h8257 = _source357.dtor_rhs;
                } else if (_source357.is_IfExpr) {
                  RAST._IExpr _9425___mcc_h8260 = _source357.dtor_cond;
                  RAST._IExpr _9426___mcc_h8261 = _source357.dtor_thn;
                  RAST._IExpr _9427___mcc_h8262 = _source357.dtor_els;
                } else if (_source357.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9428___mcc_h8266 = _source357.dtor_optCond;
                  RAST._IExpr _9429___mcc_h8267 = _source357.dtor_underlying;
                } else if (_source357.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9430___mcc_h8270 = _source357.dtor_name;
                  RAST._IExpr _9431___mcc_h8271 = _source357.dtor_range;
                  RAST._IExpr _9432___mcc_h8272 = _source357.dtor_body;
                } else if (_source357.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9433___mcc_h8276 = _source357.dtor_lbl;
                  RAST._IExpr _9434___mcc_h8277 = _source357.dtor_underlying;
                } else if (_source357.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9435___mcc_h8280 = _source357.dtor_optLbl;
                } else if (_source357.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9436___mcc_h8282 = _source357.dtor_optLbl;
                } else if (_source357.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9437___mcc_h8284 = _source357.dtor_optExpr;
                } else if (_source357.is_CallType) {
                  RAST._IExpr _9438___mcc_h8286 = _source357.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9439___mcc_h8287 = _source357.dtor_typeParameters;
                } else if (_source357.is_Call) {
                  RAST._IExpr _9440___mcc_h8290 = _source357.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9441___mcc_h8291 = _source357.dtor_arguments;
                } else if (_source357.is_Select) {
                  RAST._IExpr _9442___mcc_h8294 = _source357.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9443___mcc_h8295 = _source357.dtor_name;
                } else if (_source357.is_MemberSelect) {
                  RAST._IExpr _9444___mcc_h8298 = _source357.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9445___mcc_h8299 = _source357.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9446___mcc_h8302 = _source357.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9447___mcc_h8303 = _source357.dtor_retType;
                  RAST._IExpr _9448___mcc_h8304 = _source357.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9332_field));
              if (_9331_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9449_fromOwnership;
              _9449_fromOwnership = ((_9331_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2063;
              DCOMP._IOwnership _out2064;
              DCOMP.COMP.FromOwnership(r, _9449_fromOwnership, expectedOwnership, out _out2063, out _out2064);
              r = _out2063;
              resultingOwnership = _out2064;
              readIdents = _9340_recIdents;
            }
            return ;
          }
        } else if (_source284.is_InitializationValue) {
          DAST._IType _9450___mcc_h242 = _source284.dtor_typ;
          DAST._IType _9451_fieldType = _4872___mcc_h57;
          bool _9452_isDatatype = _4871___mcc_h56;
          bool _9453_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9454_field = _4869___mcc_h54;
          DAST._IExpression _9455_on = _4868___mcc_h53;
          {
            if (_9452_isDatatype) {
              RAST._IExpr _9456_onExpr;
              DCOMP._IOwnership _9457_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9458_recIdents;
              RAST._IExpr _out2065;
              DCOMP._IOwnership _out2066;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2067;
              (this).GenExpr(_9455_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2065, out _out2066, out _out2067);
              _9456_onExpr = _out2065;
              _9457_onOwned = _out2066;
              _9458_recIdents = _out2067;
              r = ((_9456_onExpr).Sel(DCOMP.__default.escapeName(_9454_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9459_typ;
              RAST._IType _out2068;
              _out2068 = (this).GenType(_9451_fieldType, false, false);
              _9459_typ = _out2068;
              if (((_9459_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2069;
                DCOMP._IOwnership _out2070;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2069, out _out2070);
                r = _out2069;
                resultingOwnership = _out2070;
              }
              readIdents = _9458_recIdents;
            } else {
              RAST._IExpr _9460_onExpr;
              DCOMP._IOwnership _9461_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9462_recIdents;
              RAST._IExpr _out2071;
              DCOMP._IOwnership _out2072;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2073;
              (this).GenExpr(_9455_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2071, out _out2072, out _out2073);
              _9460_onExpr = _out2071;
              _9461_onOwned = _out2072;
              _9462_recIdents = _out2073;
              r = _9460_onExpr;
              if (!object.Equals(_9460_onExpr, RAST.__default.self)) {
                RAST._IExpr _source359 = _9460_onExpr;
                if (_source359.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9463___mcc_h8308 = _source359.dtor_content;
                } else if (_source359.is_ExprFromType) {
                  RAST._IType _9464___mcc_h8310 = _source359.dtor_tpe;
                } else if (_source359.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9465___mcc_h8312 = _source359.dtor_name;
                } else if (_source359.is_Match) {
                  RAST._IExpr _9466___mcc_h8314 = _source359.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9467___mcc_h8315 = _source359.dtor_cases;
                } else if (_source359.is_StmtExpr) {
                  RAST._IExpr _9468___mcc_h8318 = _source359.dtor_stmt;
                  RAST._IExpr _9469___mcc_h8319 = _source359.dtor_rhs;
                } else if (_source359.is_Block) {
                  RAST._IExpr _9470___mcc_h8322 = _source359.dtor_underlying;
                } else if (_source359.is_StructBuild) {
                  RAST._IExpr _9471___mcc_h8324 = _source359.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9472___mcc_h8325 = _source359.dtor_assignments;
                } else if (_source359.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9473___mcc_h8328 = _source359.dtor_arguments;
                } else if (_source359.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9474___mcc_h8330 = _source359.dtor_op1;
                  RAST._IExpr _9475___mcc_h8331 = _source359.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9476___mcc_h8332 = _source359.dtor_format;
                  if (object.Equals(_9474___mcc_h8330, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source360 = _9475___mcc_h8331;
                    if (_source360.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9477___mcc_h8336 = _source360.dtor_content;
                    } else if (_source360.is_ExprFromType) {
                      RAST._IType _9478___mcc_h8338 = _source360.dtor_tpe;
                    } else if (_source360.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9479___mcc_h8340 = _source360.dtor_name;
                      if (object.Equals(_9479___mcc_h8340, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source360.is_Match) {
                      RAST._IExpr _9480___mcc_h8342 = _source360.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9481___mcc_h8343 = _source360.dtor_cases;
                    } else if (_source360.is_StmtExpr) {
                      RAST._IExpr _9482___mcc_h8346 = _source360.dtor_stmt;
                      RAST._IExpr _9483___mcc_h8347 = _source360.dtor_rhs;
                    } else if (_source360.is_Block) {
                      RAST._IExpr _9484___mcc_h8350 = _source360.dtor_underlying;
                    } else if (_source360.is_StructBuild) {
                      RAST._IExpr _9485___mcc_h8352 = _source360.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9486___mcc_h8353 = _source360.dtor_assignments;
                    } else if (_source360.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9487___mcc_h8356 = _source360.dtor_arguments;
                    } else if (_source360.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9488___mcc_h8358 = _source360.dtor_op1;
                      RAST._IExpr _9489___mcc_h8359 = _source360.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9490___mcc_h8360 = _source360.dtor_format;
                    } else if (_source360.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9491___mcc_h8364 = _source360.dtor_op2;
                      RAST._IExpr _9492___mcc_h8365 = _source360.dtor_left;
                      RAST._IExpr _9493___mcc_h8366 = _source360.dtor_right;
                      DAST.Format._IBinaryOpFormat _9494___mcc_h8367 = _source360.dtor_format2;
                    } else if (_source360.is_TypeAscription) {
                      RAST._IExpr _9495___mcc_h8372 = _source360.dtor_left;
                      RAST._IType _9496___mcc_h8373 = _source360.dtor_tpe;
                    } else if (_source360.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9497___mcc_h8376 = _source360.dtor_value;
                    } else if (_source360.is_LiteralBool) {
                      bool _9498___mcc_h8378 = _source360.dtor_bvalue;
                    } else if (_source360.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9499___mcc_h8380 = _source360.dtor_value;
                      bool _9500___mcc_h8381 = _source360.dtor_binary;
                    } else if (_source360.is_DeclareVar) {
                      RAST._IDeclareType _9501___mcc_h8384 = _source360.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9502___mcc_h8385 = _source360.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9503___mcc_h8386 = _source360.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9504___mcc_h8387 = _source360.dtor_optRhs;
                    } else if (_source360.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9505___mcc_h8392 = _source360.dtor_names;
                      RAST._IExpr _9506___mcc_h8393 = _source360.dtor_rhs;
                    } else if (_source360.is_IfExpr) {
                      RAST._IExpr _9507___mcc_h8396 = _source360.dtor_cond;
                      RAST._IExpr _9508___mcc_h8397 = _source360.dtor_thn;
                      RAST._IExpr _9509___mcc_h8398 = _source360.dtor_els;
                    } else if (_source360.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9510___mcc_h8402 = _source360.dtor_optCond;
                      RAST._IExpr _9511___mcc_h8403 = _source360.dtor_underlying;
                    } else if (_source360.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9512___mcc_h8406 = _source360.dtor_name;
                      RAST._IExpr _9513___mcc_h8407 = _source360.dtor_range;
                      RAST._IExpr _9514___mcc_h8408 = _source360.dtor_body;
                    } else if (_source360.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9515___mcc_h8412 = _source360.dtor_lbl;
                      RAST._IExpr _9516___mcc_h8413 = _source360.dtor_underlying;
                    } else if (_source360.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9517___mcc_h8416 = _source360.dtor_optLbl;
                    } else if (_source360.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9518___mcc_h8418 = _source360.dtor_optLbl;
                    } else if (_source360.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9519___mcc_h8420 = _source360.dtor_optExpr;
                    } else if (_source360.is_CallType) {
                      RAST._IExpr _9520___mcc_h8422 = _source360.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9521___mcc_h8423 = _source360.dtor_typeParameters;
                    } else if (_source360.is_Call) {
                      RAST._IExpr _9522___mcc_h8426 = _source360.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9523___mcc_h8427 = _source360.dtor_arguments;
                    } else if (_source360.is_Select) {
                      RAST._IExpr _9524___mcc_h8430 = _source360.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9525___mcc_h8431 = _source360.dtor_name;
                    } else if (_source360.is_MemberSelect) {
                      RAST._IExpr _9526___mcc_h8434 = _source360.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9527___mcc_h8435 = _source360.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9528___mcc_h8438 = _source360.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9529___mcc_h8439 = _source360.dtor_retType;
                      RAST._IExpr _9530___mcc_h8440 = _source360.dtor_body;
                    }
                  } else {
                  }
                } else if (_source359.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9531___mcc_h8444 = _source359.dtor_op2;
                  RAST._IExpr _9532___mcc_h8445 = _source359.dtor_left;
                  RAST._IExpr _9533___mcc_h8446 = _source359.dtor_right;
                  DAST.Format._IBinaryOpFormat _9534___mcc_h8447 = _source359.dtor_format2;
                } else if (_source359.is_TypeAscription) {
                  RAST._IExpr _9535___mcc_h8452 = _source359.dtor_left;
                  RAST._IType _9536___mcc_h8453 = _source359.dtor_tpe;
                } else if (_source359.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9537___mcc_h8456 = _source359.dtor_value;
                } else if (_source359.is_LiteralBool) {
                  bool _9538___mcc_h8458 = _source359.dtor_bvalue;
                } else if (_source359.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9539___mcc_h8460 = _source359.dtor_value;
                  bool _9540___mcc_h8461 = _source359.dtor_binary;
                } else if (_source359.is_DeclareVar) {
                  RAST._IDeclareType _9541___mcc_h8464 = _source359.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9542___mcc_h8465 = _source359.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9543___mcc_h8466 = _source359.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9544___mcc_h8467 = _source359.dtor_optRhs;
                } else if (_source359.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9545___mcc_h8472 = _source359.dtor_names;
                  RAST._IExpr _9546___mcc_h8473 = _source359.dtor_rhs;
                } else if (_source359.is_IfExpr) {
                  RAST._IExpr _9547___mcc_h8476 = _source359.dtor_cond;
                  RAST._IExpr _9548___mcc_h8477 = _source359.dtor_thn;
                  RAST._IExpr _9549___mcc_h8478 = _source359.dtor_els;
                } else if (_source359.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9550___mcc_h8482 = _source359.dtor_optCond;
                  RAST._IExpr _9551___mcc_h8483 = _source359.dtor_underlying;
                } else if (_source359.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9552___mcc_h8486 = _source359.dtor_name;
                  RAST._IExpr _9553___mcc_h8487 = _source359.dtor_range;
                  RAST._IExpr _9554___mcc_h8488 = _source359.dtor_body;
                } else if (_source359.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9555___mcc_h8492 = _source359.dtor_lbl;
                  RAST._IExpr _9556___mcc_h8493 = _source359.dtor_underlying;
                } else if (_source359.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9557___mcc_h8496 = _source359.dtor_optLbl;
                } else if (_source359.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9558___mcc_h8498 = _source359.dtor_optLbl;
                } else if (_source359.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9559___mcc_h8500 = _source359.dtor_optExpr;
                } else if (_source359.is_CallType) {
                  RAST._IExpr _9560___mcc_h8502 = _source359.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9561___mcc_h8503 = _source359.dtor_typeParameters;
                } else if (_source359.is_Call) {
                  RAST._IExpr _9562___mcc_h8506 = _source359.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9563___mcc_h8507 = _source359.dtor_arguments;
                } else if (_source359.is_Select) {
                  RAST._IExpr _9564___mcc_h8510 = _source359.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9565___mcc_h8511 = _source359.dtor_name;
                } else if (_source359.is_MemberSelect) {
                  RAST._IExpr _9566___mcc_h8514 = _source359.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9567___mcc_h8515 = _source359.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9568___mcc_h8518 = _source359.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9569___mcc_h8519 = _source359.dtor_retType;
                  RAST._IExpr _9570___mcc_h8520 = _source359.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9454_field));
              if (_9453_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9571_fromOwnership;
              _9571_fromOwnership = ((_9453_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2074;
              DCOMP._IOwnership _out2075;
              DCOMP.COMP.FromOwnership(r, _9571_fromOwnership, expectedOwnership, out _out2074, out _out2075);
              r = _out2074;
              resultingOwnership = _out2075;
              readIdents = _9462_recIdents;
            }
            return ;
          }
        } else if (_source284.is_BoolBoundedPool) {
          DAST._IType _9572_fieldType = _4872___mcc_h57;
          bool _9573_isDatatype = _4871___mcc_h56;
          bool _9574_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9575_field = _4869___mcc_h54;
          DAST._IExpression _9576_on = _4868___mcc_h53;
          {
            if (_9573_isDatatype) {
              RAST._IExpr _9577_onExpr;
              DCOMP._IOwnership _9578_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9579_recIdents;
              RAST._IExpr _out2076;
              DCOMP._IOwnership _out2077;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2078;
              (this).GenExpr(_9576_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2076, out _out2077, out _out2078);
              _9577_onExpr = _out2076;
              _9578_onOwned = _out2077;
              _9579_recIdents = _out2078;
              r = ((_9577_onExpr).Sel(DCOMP.__default.escapeName(_9575_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9580_typ;
              RAST._IType _out2079;
              _out2079 = (this).GenType(_9572_fieldType, false, false);
              _9580_typ = _out2079;
              if (((_9580_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2080;
                DCOMP._IOwnership _out2081;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2080, out _out2081);
                r = _out2080;
                resultingOwnership = _out2081;
              }
              readIdents = _9579_recIdents;
            } else {
              RAST._IExpr _9581_onExpr;
              DCOMP._IOwnership _9582_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9583_recIdents;
              RAST._IExpr _out2082;
              DCOMP._IOwnership _out2083;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2084;
              (this).GenExpr(_9576_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2082, out _out2083, out _out2084);
              _9581_onExpr = _out2082;
              _9582_onOwned = _out2083;
              _9583_recIdents = _out2084;
              r = _9581_onExpr;
              if (!object.Equals(_9581_onExpr, RAST.__default.self)) {
                RAST._IExpr _source361 = _9581_onExpr;
                if (_source361.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9584___mcc_h8524 = _source361.dtor_content;
                } else if (_source361.is_ExprFromType) {
                  RAST._IType _9585___mcc_h8526 = _source361.dtor_tpe;
                } else if (_source361.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9586___mcc_h8528 = _source361.dtor_name;
                } else if (_source361.is_Match) {
                  RAST._IExpr _9587___mcc_h8530 = _source361.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9588___mcc_h8531 = _source361.dtor_cases;
                } else if (_source361.is_StmtExpr) {
                  RAST._IExpr _9589___mcc_h8534 = _source361.dtor_stmt;
                  RAST._IExpr _9590___mcc_h8535 = _source361.dtor_rhs;
                } else if (_source361.is_Block) {
                  RAST._IExpr _9591___mcc_h8538 = _source361.dtor_underlying;
                } else if (_source361.is_StructBuild) {
                  RAST._IExpr _9592___mcc_h8540 = _source361.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9593___mcc_h8541 = _source361.dtor_assignments;
                } else if (_source361.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9594___mcc_h8544 = _source361.dtor_arguments;
                } else if (_source361.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9595___mcc_h8546 = _source361.dtor_op1;
                  RAST._IExpr _9596___mcc_h8547 = _source361.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9597___mcc_h8548 = _source361.dtor_format;
                  if (object.Equals(_9595___mcc_h8546, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source362 = _9596___mcc_h8547;
                    if (_source362.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9598___mcc_h8552 = _source362.dtor_content;
                    } else if (_source362.is_ExprFromType) {
                      RAST._IType _9599___mcc_h8554 = _source362.dtor_tpe;
                    } else if (_source362.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9600___mcc_h8556 = _source362.dtor_name;
                      if (object.Equals(_9600___mcc_h8556, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source362.is_Match) {
                      RAST._IExpr _9601___mcc_h8558 = _source362.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9602___mcc_h8559 = _source362.dtor_cases;
                    } else if (_source362.is_StmtExpr) {
                      RAST._IExpr _9603___mcc_h8562 = _source362.dtor_stmt;
                      RAST._IExpr _9604___mcc_h8563 = _source362.dtor_rhs;
                    } else if (_source362.is_Block) {
                      RAST._IExpr _9605___mcc_h8566 = _source362.dtor_underlying;
                    } else if (_source362.is_StructBuild) {
                      RAST._IExpr _9606___mcc_h8568 = _source362.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9607___mcc_h8569 = _source362.dtor_assignments;
                    } else if (_source362.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9608___mcc_h8572 = _source362.dtor_arguments;
                    } else if (_source362.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9609___mcc_h8574 = _source362.dtor_op1;
                      RAST._IExpr _9610___mcc_h8575 = _source362.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9611___mcc_h8576 = _source362.dtor_format;
                    } else if (_source362.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9612___mcc_h8580 = _source362.dtor_op2;
                      RAST._IExpr _9613___mcc_h8581 = _source362.dtor_left;
                      RAST._IExpr _9614___mcc_h8582 = _source362.dtor_right;
                      DAST.Format._IBinaryOpFormat _9615___mcc_h8583 = _source362.dtor_format2;
                    } else if (_source362.is_TypeAscription) {
                      RAST._IExpr _9616___mcc_h8588 = _source362.dtor_left;
                      RAST._IType _9617___mcc_h8589 = _source362.dtor_tpe;
                    } else if (_source362.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9618___mcc_h8592 = _source362.dtor_value;
                    } else if (_source362.is_LiteralBool) {
                      bool _9619___mcc_h8594 = _source362.dtor_bvalue;
                    } else if (_source362.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9620___mcc_h8596 = _source362.dtor_value;
                      bool _9621___mcc_h8597 = _source362.dtor_binary;
                    } else if (_source362.is_DeclareVar) {
                      RAST._IDeclareType _9622___mcc_h8600 = _source362.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9623___mcc_h8601 = _source362.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9624___mcc_h8602 = _source362.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9625___mcc_h8603 = _source362.dtor_optRhs;
                    } else if (_source362.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9626___mcc_h8608 = _source362.dtor_names;
                      RAST._IExpr _9627___mcc_h8609 = _source362.dtor_rhs;
                    } else if (_source362.is_IfExpr) {
                      RAST._IExpr _9628___mcc_h8612 = _source362.dtor_cond;
                      RAST._IExpr _9629___mcc_h8613 = _source362.dtor_thn;
                      RAST._IExpr _9630___mcc_h8614 = _source362.dtor_els;
                    } else if (_source362.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9631___mcc_h8618 = _source362.dtor_optCond;
                      RAST._IExpr _9632___mcc_h8619 = _source362.dtor_underlying;
                    } else if (_source362.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9633___mcc_h8622 = _source362.dtor_name;
                      RAST._IExpr _9634___mcc_h8623 = _source362.dtor_range;
                      RAST._IExpr _9635___mcc_h8624 = _source362.dtor_body;
                    } else if (_source362.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9636___mcc_h8628 = _source362.dtor_lbl;
                      RAST._IExpr _9637___mcc_h8629 = _source362.dtor_underlying;
                    } else if (_source362.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9638___mcc_h8632 = _source362.dtor_optLbl;
                    } else if (_source362.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9639___mcc_h8634 = _source362.dtor_optLbl;
                    } else if (_source362.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9640___mcc_h8636 = _source362.dtor_optExpr;
                    } else if (_source362.is_CallType) {
                      RAST._IExpr _9641___mcc_h8638 = _source362.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9642___mcc_h8639 = _source362.dtor_typeParameters;
                    } else if (_source362.is_Call) {
                      RAST._IExpr _9643___mcc_h8642 = _source362.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9644___mcc_h8643 = _source362.dtor_arguments;
                    } else if (_source362.is_Select) {
                      RAST._IExpr _9645___mcc_h8646 = _source362.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9646___mcc_h8647 = _source362.dtor_name;
                    } else if (_source362.is_MemberSelect) {
                      RAST._IExpr _9647___mcc_h8650 = _source362.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9648___mcc_h8651 = _source362.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9649___mcc_h8654 = _source362.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9650___mcc_h8655 = _source362.dtor_retType;
                      RAST._IExpr _9651___mcc_h8656 = _source362.dtor_body;
                    }
                  } else {
                  }
                } else if (_source361.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9652___mcc_h8660 = _source361.dtor_op2;
                  RAST._IExpr _9653___mcc_h8661 = _source361.dtor_left;
                  RAST._IExpr _9654___mcc_h8662 = _source361.dtor_right;
                  DAST.Format._IBinaryOpFormat _9655___mcc_h8663 = _source361.dtor_format2;
                } else if (_source361.is_TypeAscription) {
                  RAST._IExpr _9656___mcc_h8668 = _source361.dtor_left;
                  RAST._IType _9657___mcc_h8669 = _source361.dtor_tpe;
                } else if (_source361.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9658___mcc_h8672 = _source361.dtor_value;
                } else if (_source361.is_LiteralBool) {
                  bool _9659___mcc_h8674 = _source361.dtor_bvalue;
                } else if (_source361.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9660___mcc_h8676 = _source361.dtor_value;
                  bool _9661___mcc_h8677 = _source361.dtor_binary;
                } else if (_source361.is_DeclareVar) {
                  RAST._IDeclareType _9662___mcc_h8680 = _source361.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9663___mcc_h8681 = _source361.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9664___mcc_h8682 = _source361.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9665___mcc_h8683 = _source361.dtor_optRhs;
                } else if (_source361.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9666___mcc_h8688 = _source361.dtor_names;
                  RAST._IExpr _9667___mcc_h8689 = _source361.dtor_rhs;
                } else if (_source361.is_IfExpr) {
                  RAST._IExpr _9668___mcc_h8692 = _source361.dtor_cond;
                  RAST._IExpr _9669___mcc_h8693 = _source361.dtor_thn;
                  RAST._IExpr _9670___mcc_h8694 = _source361.dtor_els;
                } else if (_source361.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9671___mcc_h8698 = _source361.dtor_optCond;
                  RAST._IExpr _9672___mcc_h8699 = _source361.dtor_underlying;
                } else if (_source361.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9673___mcc_h8702 = _source361.dtor_name;
                  RAST._IExpr _9674___mcc_h8703 = _source361.dtor_range;
                  RAST._IExpr _9675___mcc_h8704 = _source361.dtor_body;
                } else if (_source361.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9676___mcc_h8708 = _source361.dtor_lbl;
                  RAST._IExpr _9677___mcc_h8709 = _source361.dtor_underlying;
                } else if (_source361.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9678___mcc_h8712 = _source361.dtor_optLbl;
                } else if (_source361.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9679___mcc_h8714 = _source361.dtor_optLbl;
                } else if (_source361.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9680___mcc_h8716 = _source361.dtor_optExpr;
                } else if (_source361.is_CallType) {
                  RAST._IExpr _9681___mcc_h8718 = _source361.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9682___mcc_h8719 = _source361.dtor_typeParameters;
                } else if (_source361.is_Call) {
                  RAST._IExpr _9683___mcc_h8722 = _source361.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9684___mcc_h8723 = _source361.dtor_arguments;
                } else if (_source361.is_Select) {
                  RAST._IExpr _9685___mcc_h8726 = _source361.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9686___mcc_h8727 = _source361.dtor_name;
                } else if (_source361.is_MemberSelect) {
                  RAST._IExpr _9687___mcc_h8730 = _source361.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9688___mcc_h8731 = _source361.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9689___mcc_h8734 = _source361.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9690___mcc_h8735 = _source361.dtor_retType;
                  RAST._IExpr _9691___mcc_h8736 = _source361.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9575_field));
              if (_9574_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9692_fromOwnership;
              _9692_fromOwnership = ((_9574_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2085;
              DCOMP._IOwnership _out2086;
              DCOMP.COMP.FromOwnership(r, _9692_fromOwnership, expectedOwnership, out _out2085, out _out2086);
              r = _out2085;
              resultingOwnership = _out2086;
              readIdents = _9583_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SetBoundedPool) {
          DAST._IExpression _9693___mcc_h244 = _source284.dtor_of;
          DAST._IType _9694_fieldType = _4872___mcc_h57;
          bool _9695_isDatatype = _4871___mcc_h56;
          bool _9696_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9697_field = _4869___mcc_h54;
          DAST._IExpression _9698_on = _4868___mcc_h53;
          {
            if (_9695_isDatatype) {
              RAST._IExpr _9699_onExpr;
              DCOMP._IOwnership _9700_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9701_recIdents;
              RAST._IExpr _out2087;
              DCOMP._IOwnership _out2088;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2089;
              (this).GenExpr(_9698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2087, out _out2088, out _out2089);
              _9699_onExpr = _out2087;
              _9700_onOwned = _out2088;
              _9701_recIdents = _out2089;
              r = ((_9699_onExpr).Sel(DCOMP.__default.escapeName(_9697_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9702_typ;
              RAST._IType _out2090;
              _out2090 = (this).GenType(_9694_fieldType, false, false);
              _9702_typ = _out2090;
              if (((_9702_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2091;
                DCOMP._IOwnership _out2092;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2091, out _out2092);
                r = _out2091;
                resultingOwnership = _out2092;
              }
              readIdents = _9701_recIdents;
            } else {
              RAST._IExpr _9703_onExpr;
              DCOMP._IOwnership _9704_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9705_recIdents;
              RAST._IExpr _out2093;
              DCOMP._IOwnership _out2094;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2095;
              (this).GenExpr(_9698_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2093, out _out2094, out _out2095);
              _9703_onExpr = _out2093;
              _9704_onOwned = _out2094;
              _9705_recIdents = _out2095;
              r = _9703_onExpr;
              if (!object.Equals(_9703_onExpr, RAST.__default.self)) {
                RAST._IExpr _source363 = _9703_onExpr;
                if (_source363.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9706___mcc_h8740 = _source363.dtor_content;
                } else if (_source363.is_ExprFromType) {
                  RAST._IType _9707___mcc_h8742 = _source363.dtor_tpe;
                } else if (_source363.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9708___mcc_h8744 = _source363.dtor_name;
                } else if (_source363.is_Match) {
                  RAST._IExpr _9709___mcc_h8746 = _source363.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9710___mcc_h8747 = _source363.dtor_cases;
                } else if (_source363.is_StmtExpr) {
                  RAST._IExpr _9711___mcc_h8750 = _source363.dtor_stmt;
                  RAST._IExpr _9712___mcc_h8751 = _source363.dtor_rhs;
                } else if (_source363.is_Block) {
                  RAST._IExpr _9713___mcc_h8754 = _source363.dtor_underlying;
                } else if (_source363.is_StructBuild) {
                  RAST._IExpr _9714___mcc_h8756 = _source363.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9715___mcc_h8757 = _source363.dtor_assignments;
                } else if (_source363.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9716___mcc_h8760 = _source363.dtor_arguments;
                } else if (_source363.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9717___mcc_h8762 = _source363.dtor_op1;
                  RAST._IExpr _9718___mcc_h8763 = _source363.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9719___mcc_h8764 = _source363.dtor_format;
                  if (object.Equals(_9717___mcc_h8762, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source364 = _9718___mcc_h8763;
                    if (_source364.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9720___mcc_h8768 = _source364.dtor_content;
                    } else if (_source364.is_ExprFromType) {
                      RAST._IType _9721___mcc_h8770 = _source364.dtor_tpe;
                    } else if (_source364.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9722___mcc_h8772 = _source364.dtor_name;
                      if (object.Equals(_9722___mcc_h8772, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source364.is_Match) {
                      RAST._IExpr _9723___mcc_h8774 = _source364.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9724___mcc_h8775 = _source364.dtor_cases;
                    } else if (_source364.is_StmtExpr) {
                      RAST._IExpr _9725___mcc_h8778 = _source364.dtor_stmt;
                      RAST._IExpr _9726___mcc_h8779 = _source364.dtor_rhs;
                    } else if (_source364.is_Block) {
                      RAST._IExpr _9727___mcc_h8782 = _source364.dtor_underlying;
                    } else if (_source364.is_StructBuild) {
                      RAST._IExpr _9728___mcc_h8784 = _source364.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9729___mcc_h8785 = _source364.dtor_assignments;
                    } else if (_source364.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9730___mcc_h8788 = _source364.dtor_arguments;
                    } else if (_source364.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9731___mcc_h8790 = _source364.dtor_op1;
                      RAST._IExpr _9732___mcc_h8791 = _source364.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9733___mcc_h8792 = _source364.dtor_format;
                    } else if (_source364.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9734___mcc_h8796 = _source364.dtor_op2;
                      RAST._IExpr _9735___mcc_h8797 = _source364.dtor_left;
                      RAST._IExpr _9736___mcc_h8798 = _source364.dtor_right;
                      DAST.Format._IBinaryOpFormat _9737___mcc_h8799 = _source364.dtor_format2;
                    } else if (_source364.is_TypeAscription) {
                      RAST._IExpr _9738___mcc_h8804 = _source364.dtor_left;
                      RAST._IType _9739___mcc_h8805 = _source364.dtor_tpe;
                    } else if (_source364.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9740___mcc_h8808 = _source364.dtor_value;
                    } else if (_source364.is_LiteralBool) {
                      bool _9741___mcc_h8810 = _source364.dtor_bvalue;
                    } else if (_source364.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9742___mcc_h8812 = _source364.dtor_value;
                      bool _9743___mcc_h8813 = _source364.dtor_binary;
                    } else if (_source364.is_DeclareVar) {
                      RAST._IDeclareType _9744___mcc_h8816 = _source364.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9745___mcc_h8817 = _source364.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9746___mcc_h8818 = _source364.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9747___mcc_h8819 = _source364.dtor_optRhs;
                    } else if (_source364.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9748___mcc_h8824 = _source364.dtor_names;
                      RAST._IExpr _9749___mcc_h8825 = _source364.dtor_rhs;
                    } else if (_source364.is_IfExpr) {
                      RAST._IExpr _9750___mcc_h8828 = _source364.dtor_cond;
                      RAST._IExpr _9751___mcc_h8829 = _source364.dtor_thn;
                      RAST._IExpr _9752___mcc_h8830 = _source364.dtor_els;
                    } else if (_source364.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9753___mcc_h8834 = _source364.dtor_optCond;
                      RAST._IExpr _9754___mcc_h8835 = _source364.dtor_underlying;
                    } else if (_source364.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9755___mcc_h8838 = _source364.dtor_name;
                      RAST._IExpr _9756___mcc_h8839 = _source364.dtor_range;
                      RAST._IExpr _9757___mcc_h8840 = _source364.dtor_body;
                    } else if (_source364.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9758___mcc_h8844 = _source364.dtor_lbl;
                      RAST._IExpr _9759___mcc_h8845 = _source364.dtor_underlying;
                    } else if (_source364.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9760___mcc_h8848 = _source364.dtor_optLbl;
                    } else if (_source364.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9761___mcc_h8850 = _source364.dtor_optLbl;
                    } else if (_source364.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9762___mcc_h8852 = _source364.dtor_optExpr;
                    } else if (_source364.is_CallType) {
                      RAST._IExpr _9763___mcc_h8854 = _source364.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9764___mcc_h8855 = _source364.dtor_typeParameters;
                    } else if (_source364.is_Call) {
                      RAST._IExpr _9765___mcc_h8858 = _source364.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9766___mcc_h8859 = _source364.dtor_arguments;
                    } else if (_source364.is_Select) {
                      RAST._IExpr _9767___mcc_h8862 = _source364.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9768___mcc_h8863 = _source364.dtor_name;
                    } else if (_source364.is_MemberSelect) {
                      RAST._IExpr _9769___mcc_h8866 = _source364.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9770___mcc_h8867 = _source364.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9771___mcc_h8870 = _source364.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9772___mcc_h8871 = _source364.dtor_retType;
                      RAST._IExpr _9773___mcc_h8872 = _source364.dtor_body;
                    }
                  } else {
                  }
                } else if (_source363.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9774___mcc_h8876 = _source363.dtor_op2;
                  RAST._IExpr _9775___mcc_h8877 = _source363.dtor_left;
                  RAST._IExpr _9776___mcc_h8878 = _source363.dtor_right;
                  DAST.Format._IBinaryOpFormat _9777___mcc_h8879 = _source363.dtor_format2;
                } else if (_source363.is_TypeAscription) {
                  RAST._IExpr _9778___mcc_h8884 = _source363.dtor_left;
                  RAST._IType _9779___mcc_h8885 = _source363.dtor_tpe;
                } else if (_source363.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9780___mcc_h8888 = _source363.dtor_value;
                } else if (_source363.is_LiteralBool) {
                  bool _9781___mcc_h8890 = _source363.dtor_bvalue;
                } else if (_source363.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9782___mcc_h8892 = _source363.dtor_value;
                  bool _9783___mcc_h8893 = _source363.dtor_binary;
                } else if (_source363.is_DeclareVar) {
                  RAST._IDeclareType _9784___mcc_h8896 = _source363.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9785___mcc_h8897 = _source363.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9786___mcc_h8898 = _source363.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9787___mcc_h8899 = _source363.dtor_optRhs;
                } else if (_source363.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9788___mcc_h8904 = _source363.dtor_names;
                  RAST._IExpr _9789___mcc_h8905 = _source363.dtor_rhs;
                } else if (_source363.is_IfExpr) {
                  RAST._IExpr _9790___mcc_h8908 = _source363.dtor_cond;
                  RAST._IExpr _9791___mcc_h8909 = _source363.dtor_thn;
                  RAST._IExpr _9792___mcc_h8910 = _source363.dtor_els;
                } else if (_source363.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9793___mcc_h8914 = _source363.dtor_optCond;
                  RAST._IExpr _9794___mcc_h8915 = _source363.dtor_underlying;
                } else if (_source363.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9795___mcc_h8918 = _source363.dtor_name;
                  RAST._IExpr _9796___mcc_h8919 = _source363.dtor_range;
                  RAST._IExpr _9797___mcc_h8920 = _source363.dtor_body;
                } else if (_source363.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9798___mcc_h8924 = _source363.dtor_lbl;
                  RAST._IExpr _9799___mcc_h8925 = _source363.dtor_underlying;
                } else if (_source363.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9800___mcc_h8928 = _source363.dtor_optLbl;
                } else if (_source363.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9801___mcc_h8930 = _source363.dtor_optLbl;
                } else if (_source363.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9802___mcc_h8932 = _source363.dtor_optExpr;
                } else if (_source363.is_CallType) {
                  RAST._IExpr _9803___mcc_h8934 = _source363.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9804___mcc_h8935 = _source363.dtor_typeParameters;
                } else if (_source363.is_Call) {
                  RAST._IExpr _9805___mcc_h8938 = _source363.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9806___mcc_h8939 = _source363.dtor_arguments;
                } else if (_source363.is_Select) {
                  RAST._IExpr _9807___mcc_h8942 = _source363.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9808___mcc_h8943 = _source363.dtor_name;
                } else if (_source363.is_MemberSelect) {
                  RAST._IExpr _9809___mcc_h8946 = _source363.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9810___mcc_h8947 = _source363.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9811___mcc_h8950 = _source363.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9812___mcc_h8951 = _source363.dtor_retType;
                  RAST._IExpr _9813___mcc_h8952 = _source363.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9697_field));
              if (_9696_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9814_fromOwnership;
              _9814_fromOwnership = ((_9696_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2096;
              DCOMP._IOwnership _out2097;
              DCOMP.COMP.FromOwnership(r, _9814_fromOwnership, expectedOwnership, out _out2096, out _out2097);
              r = _out2096;
              resultingOwnership = _out2097;
              readIdents = _9705_recIdents;
            }
            return ;
          }
        } else if (_source284.is_SeqBoundedPool) {
          DAST._IExpression _9815___mcc_h246 = _source284.dtor_of;
          bool _9816___mcc_h247 = _source284.dtor_includeDuplicates;
          DAST._IType _9817_fieldType = _4872___mcc_h57;
          bool _9818_isDatatype = _4871___mcc_h56;
          bool _9819_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9820_field = _4869___mcc_h54;
          DAST._IExpression _9821_on = _4868___mcc_h53;
          {
            if (_9818_isDatatype) {
              RAST._IExpr _9822_onExpr;
              DCOMP._IOwnership _9823_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9824_recIdents;
              RAST._IExpr _out2098;
              DCOMP._IOwnership _out2099;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2100;
              (this).GenExpr(_9821_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2098, out _out2099, out _out2100);
              _9822_onExpr = _out2098;
              _9823_onOwned = _out2099;
              _9824_recIdents = _out2100;
              r = ((_9822_onExpr).Sel(DCOMP.__default.escapeName(_9820_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9825_typ;
              RAST._IType _out2101;
              _out2101 = (this).GenType(_9817_fieldType, false, false);
              _9825_typ = _out2101;
              if (((_9825_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2102;
                DCOMP._IOwnership _out2103;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2102, out _out2103);
                r = _out2102;
                resultingOwnership = _out2103;
              }
              readIdents = _9824_recIdents;
            } else {
              RAST._IExpr _9826_onExpr;
              DCOMP._IOwnership _9827_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9828_recIdents;
              RAST._IExpr _out2104;
              DCOMP._IOwnership _out2105;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2106;
              (this).GenExpr(_9821_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2104, out _out2105, out _out2106);
              _9826_onExpr = _out2104;
              _9827_onOwned = _out2105;
              _9828_recIdents = _out2106;
              r = _9826_onExpr;
              if (!object.Equals(_9826_onExpr, RAST.__default.self)) {
                RAST._IExpr _source365 = _9826_onExpr;
                if (_source365.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9829___mcc_h8956 = _source365.dtor_content;
                } else if (_source365.is_ExprFromType) {
                  RAST._IType _9830___mcc_h8958 = _source365.dtor_tpe;
                } else if (_source365.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9831___mcc_h8960 = _source365.dtor_name;
                } else if (_source365.is_Match) {
                  RAST._IExpr _9832___mcc_h8962 = _source365.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9833___mcc_h8963 = _source365.dtor_cases;
                } else if (_source365.is_StmtExpr) {
                  RAST._IExpr _9834___mcc_h8966 = _source365.dtor_stmt;
                  RAST._IExpr _9835___mcc_h8967 = _source365.dtor_rhs;
                } else if (_source365.is_Block) {
                  RAST._IExpr _9836___mcc_h8970 = _source365.dtor_underlying;
                } else if (_source365.is_StructBuild) {
                  RAST._IExpr _9837___mcc_h8972 = _source365.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9838___mcc_h8973 = _source365.dtor_assignments;
                } else if (_source365.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9839___mcc_h8976 = _source365.dtor_arguments;
                } else if (_source365.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9840___mcc_h8978 = _source365.dtor_op1;
                  RAST._IExpr _9841___mcc_h8979 = _source365.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9842___mcc_h8980 = _source365.dtor_format;
                  if (object.Equals(_9840___mcc_h8978, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source366 = _9841___mcc_h8979;
                    if (_source366.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9843___mcc_h8984 = _source366.dtor_content;
                    } else if (_source366.is_ExprFromType) {
                      RAST._IType _9844___mcc_h8986 = _source366.dtor_tpe;
                    } else if (_source366.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9845___mcc_h8988 = _source366.dtor_name;
                      if (object.Equals(_9845___mcc_h8988, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source366.is_Match) {
                      RAST._IExpr _9846___mcc_h8990 = _source366.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9847___mcc_h8991 = _source366.dtor_cases;
                    } else if (_source366.is_StmtExpr) {
                      RAST._IExpr _9848___mcc_h8994 = _source366.dtor_stmt;
                      RAST._IExpr _9849___mcc_h8995 = _source366.dtor_rhs;
                    } else if (_source366.is_Block) {
                      RAST._IExpr _9850___mcc_h8998 = _source366.dtor_underlying;
                    } else if (_source366.is_StructBuild) {
                      RAST._IExpr _9851___mcc_h9000 = _source366.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9852___mcc_h9001 = _source366.dtor_assignments;
                    } else if (_source366.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9853___mcc_h9004 = _source366.dtor_arguments;
                    } else if (_source366.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9854___mcc_h9006 = _source366.dtor_op1;
                      RAST._IExpr _9855___mcc_h9007 = _source366.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9856___mcc_h9008 = _source366.dtor_format;
                    } else if (_source366.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9857___mcc_h9012 = _source366.dtor_op2;
                      RAST._IExpr _9858___mcc_h9013 = _source366.dtor_left;
                      RAST._IExpr _9859___mcc_h9014 = _source366.dtor_right;
                      DAST.Format._IBinaryOpFormat _9860___mcc_h9015 = _source366.dtor_format2;
                    } else if (_source366.is_TypeAscription) {
                      RAST._IExpr _9861___mcc_h9020 = _source366.dtor_left;
                      RAST._IType _9862___mcc_h9021 = _source366.dtor_tpe;
                    } else if (_source366.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9863___mcc_h9024 = _source366.dtor_value;
                    } else if (_source366.is_LiteralBool) {
                      bool _9864___mcc_h9026 = _source366.dtor_bvalue;
                    } else if (_source366.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9865___mcc_h9028 = _source366.dtor_value;
                      bool _9866___mcc_h9029 = _source366.dtor_binary;
                    } else if (_source366.is_DeclareVar) {
                      RAST._IDeclareType _9867___mcc_h9032 = _source366.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9868___mcc_h9033 = _source366.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9869___mcc_h9034 = _source366.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9870___mcc_h9035 = _source366.dtor_optRhs;
                    } else if (_source366.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9871___mcc_h9040 = _source366.dtor_names;
                      RAST._IExpr _9872___mcc_h9041 = _source366.dtor_rhs;
                    } else if (_source366.is_IfExpr) {
                      RAST._IExpr _9873___mcc_h9044 = _source366.dtor_cond;
                      RAST._IExpr _9874___mcc_h9045 = _source366.dtor_thn;
                      RAST._IExpr _9875___mcc_h9046 = _source366.dtor_els;
                    } else if (_source366.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9876___mcc_h9050 = _source366.dtor_optCond;
                      RAST._IExpr _9877___mcc_h9051 = _source366.dtor_underlying;
                    } else if (_source366.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9878___mcc_h9054 = _source366.dtor_name;
                      RAST._IExpr _9879___mcc_h9055 = _source366.dtor_range;
                      RAST._IExpr _9880___mcc_h9056 = _source366.dtor_body;
                    } else if (_source366.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9881___mcc_h9060 = _source366.dtor_lbl;
                      RAST._IExpr _9882___mcc_h9061 = _source366.dtor_underlying;
                    } else if (_source366.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9883___mcc_h9064 = _source366.dtor_optLbl;
                    } else if (_source366.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9884___mcc_h9066 = _source366.dtor_optLbl;
                    } else if (_source366.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9885___mcc_h9068 = _source366.dtor_optExpr;
                    } else if (_source366.is_CallType) {
                      RAST._IExpr _9886___mcc_h9070 = _source366.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9887___mcc_h9071 = _source366.dtor_typeParameters;
                    } else if (_source366.is_Call) {
                      RAST._IExpr _9888___mcc_h9074 = _source366.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9889___mcc_h9075 = _source366.dtor_arguments;
                    } else if (_source366.is_Select) {
                      RAST._IExpr _9890___mcc_h9078 = _source366.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9891___mcc_h9079 = _source366.dtor_name;
                    } else if (_source366.is_MemberSelect) {
                      RAST._IExpr _9892___mcc_h9082 = _source366.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9893___mcc_h9083 = _source366.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9894___mcc_h9086 = _source366.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9895___mcc_h9087 = _source366.dtor_retType;
                      RAST._IExpr _9896___mcc_h9088 = _source366.dtor_body;
                    }
                  } else {
                  }
                } else if (_source365.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9897___mcc_h9092 = _source365.dtor_op2;
                  RAST._IExpr _9898___mcc_h9093 = _source365.dtor_left;
                  RAST._IExpr _9899___mcc_h9094 = _source365.dtor_right;
                  DAST.Format._IBinaryOpFormat _9900___mcc_h9095 = _source365.dtor_format2;
                } else if (_source365.is_TypeAscription) {
                  RAST._IExpr _9901___mcc_h9100 = _source365.dtor_left;
                  RAST._IType _9902___mcc_h9101 = _source365.dtor_tpe;
                } else if (_source365.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9903___mcc_h9104 = _source365.dtor_value;
                } else if (_source365.is_LiteralBool) {
                  bool _9904___mcc_h9106 = _source365.dtor_bvalue;
                } else if (_source365.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9905___mcc_h9108 = _source365.dtor_value;
                  bool _9906___mcc_h9109 = _source365.dtor_binary;
                } else if (_source365.is_DeclareVar) {
                  RAST._IDeclareType _9907___mcc_h9112 = _source365.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9908___mcc_h9113 = _source365.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9909___mcc_h9114 = _source365.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9910___mcc_h9115 = _source365.dtor_optRhs;
                } else if (_source365.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9911___mcc_h9120 = _source365.dtor_names;
                  RAST._IExpr _9912___mcc_h9121 = _source365.dtor_rhs;
                } else if (_source365.is_IfExpr) {
                  RAST._IExpr _9913___mcc_h9124 = _source365.dtor_cond;
                  RAST._IExpr _9914___mcc_h9125 = _source365.dtor_thn;
                  RAST._IExpr _9915___mcc_h9126 = _source365.dtor_els;
                } else if (_source365.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9916___mcc_h9130 = _source365.dtor_optCond;
                  RAST._IExpr _9917___mcc_h9131 = _source365.dtor_underlying;
                } else if (_source365.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9918___mcc_h9134 = _source365.dtor_name;
                  RAST._IExpr _9919___mcc_h9135 = _source365.dtor_range;
                  RAST._IExpr _9920___mcc_h9136 = _source365.dtor_body;
                } else if (_source365.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9921___mcc_h9140 = _source365.dtor_lbl;
                  RAST._IExpr _9922___mcc_h9141 = _source365.dtor_underlying;
                } else if (_source365.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9923___mcc_h9144 = _source365.dtor_optLbl;
                } else if (_source365.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9924___mcc_h9146 = _source365.dtor_optLbl;
                } else if (_source365.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9925___mcc_h9148 = _source365.dtor_optExpr;
                } else if (_source365.is_CallType) {
                  RAST._IExpr _9926___mcc_h9150 = _source365.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9927___mcc_h9151 = _source365.dtor_typeParameters;
                } else if (_source365.is_Call) {
                  RAST._IExpr _9928___mcc_h9154 = _source365.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9929___mcc_h9155 = _source365.dtor_arguments;
                } else if (_source365.is_Select) {
                  RAST._IExpr _9930___mcc_h9158 = _source365.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9931___mcc_h9159 = _source365.dtor_name;
                } else if (_source365.is_MemberSelect) {
                  RAST._IExpr _9932___mcc_h9162 = _source365.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9933___mcc_h9163 = _source365.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9934___mcc_h9166 = _source365.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9935___mcc_h9167 = _source365.dtor_retType;
                  RAST._IExpr _9936___mcc_h9168 = _source365.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9820_field));
              if (_9819_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _9937_fromOwnership;
              _9937_fromOwnership = ((_9819_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2107;
              DCOMP._IOwnership _out2108;
              DCOMP.COMP.FromOwnership(r, _9937_fromOwnership, expectedOwnership, out _out2107, out _out2108);
              r = _out2107;
              resultingOwnership = _out2108;
              readIdents = _9828_recIdents;
            }
            return ;
          }
        } else if (_source284.is_IntRange) {
          DAST._IExpression _9938___mcc_h250 = _source284.dtor_lo;
          DAST._IExpression _9939___mcc_h251 = _source284.dtor_hi;
          bool _9940___mcc_h252 = _source284.dtor_up;
          DAST._IType _9941_fieldType = _4872___mcc_h57;
          bool _9942_isDatatype = _4871___mcc_h56;
          bool _9943_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _9944_field = _4869___mcc_h54;
          DAST._IExpression _9945_on = _4868___mcc_h53;
          {
            if (_9942_isDatatype) {
              RAST._IExpr _9946_onExpr;
              DCOMP._IOwnership _9947_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9948_recIdents;
              RAST._IExpr _out2109;
              DCOMP._IOwnership _out2110;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2111;
              (this).GenExpr(_9945_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2109, out _out2110, out _out2111);
              _9946_onExpr = _out2109;
              _9947_onOwned = _out2110;
              _9948_recIdents = _out2111;
              r = ((_9946_onExpr).Sel(DCOMP.__default.escapeName(_9944_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9949_typ;
              RAST._IType _out2112;
              _out2112 = (this).GenType(_9941_fieldType, false, false);
              _9949_typ = _out2112;
              if (((_9949_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2113;
                DCOMP._IOwnership _out2114;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2113, out _out2114);
                r = _out2113;
                resultingOwnership = _out2114;
              }
              readIdents = _9948_recIdents;
            } else {
              RAST._IExpr _9950_onExpr;
              DCOMP._IOwnership _9951_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9952_recIdents;
              RAST._IExpr _out2115;
              DCOMP._IOwnership _out2116;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2117;
              (this).GenExpr(_9945_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2115, out _out2116, out _out2117);
              _9950_onExpr = _out2115;
              _9951_onOwned = _out2116;
              _9952_recIdents = _out2117;
              r = _9950_onExpr;
              if (!object.Equals(_9950_onExpr, RAST.__default.self)) {
                RAST._IExpr _source367 = _9950_onExpr;
                if (_source367.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9953___mcc_h9172 = _source367.dtor_content;
                } else if (_source367.is_ExprFromType) {
                  RAST._IType _9954___mcc_h9174 = _source367.dtor_tpe;
                } else if (_source367.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9955___mcc_h9176 = _source367.dtor_name;
                } else if (_source367.is_Match) {
                  RAST._IExpr _9956___mcc_h9178 = _source367.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9957___mcc_h9179 = _source367.dtor_cases;
                } else if (_source367.is_StmtExpr) {
                  RAST._IExpr _9958___mcc_h9182 = _source367.dtor_stmt;
                  RAST._IExpr _9959___mcc_h9183 = _source367.dtor_rhs;
                } else if (_source367.is_Block) {
                  RAST._IExpr _9960___mcc_h9186 = _source367.dtor_underlying;
                } else if (_source367.is_StructBuild) {
                  RAST._IExpr _9961___mcc_h9188 = _source367.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9962___mcc_h9189 = _source367.dtor_assignments;
                } else if (_source367.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9963___mcc_h9192 = _source367.dtor_arguments;
                } else if (_source367.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9964___mcc_h9194 = _source367.dtor_op1;
                  RAST._IExpr _9965___mcc_h9195 = _source367.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9966___mcc_h9196 = _source367.dtor_format;
                  if (object.Equals(_9964___mcc_h9194, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source368 = _9965___mcc_h9195;
                    if (_source368.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9967___mcc_h9200 = _source368.dtor_content;
                    } else if (_source368.is_ExprFromType) {
                      RAST._IType _9968___mcc_h9202 = _source368.dtor_tpe;
                    } else if (_source368.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9969___mcc_h9204 = _source368.dtor_name;
                      if (object.Equals(_9969___mcc_h9204, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source368.is_Match) {
                      RAST._IExpr _9970___mcc_h9206 = _source368.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9971___mcc_h9207 = _source368.dtor_cases;
                    } else if (_source368.is_StmtExpr) {
                      RAST._IExpr _9972___mcc_h9210 = _source368.dtor_stmt;
                      RAST._IExpr _9973___mcc_h9211 = _source368.dtor_rhs;
                    } else if (_source368.is_Block) {
                      RAST._IExpr _9974___mcc_h9214 = _source368.dtor_underlying;
                    } else if (_source368.is_StructBuild) {
                      RAST._IExpr _9975___mcc_h9216 = _source368.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9976___mcc_h9217 = _source368.dtor_assignments;
                    } else if (_source368.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9977___mcc_h9220 = _source368.dtor_arguments;
                    } else if (_source368.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9978___mcc_h9222 = _source368.dtor_op1;
                      RAST._IExpr _9979___mcc_h9223 = _source368.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9980___mcc_h9224 = _source368.dtor_format;
                    } else if (_source368.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9981___mcc_h9228 = _source368.dtor_op2;
                      RAST._IExpr _9982___mcc_h9229 = _source368.dtor_left;
                      RAST._IExpr _9983___mcc_h9230 = _source368.dtor_right;
                      DAST.Format._IBinaryOpFormat _9984___mcc_h9231 = _source368.dtor_format2;
                    } else if (_source368.is_TypeAscription) {
                      RAST._IExpr _9985___mcc_h9236 = _source368.dtor_left;
                      RAST._IType _9986___mcc_h9237 = _source368.dtor_tpe;
                    } else if (_source368.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9987___mcc_h9240 = _source368.dtor_value;
                    } else if (_source368.is_LiteralBool) {
                      bool _9988___mcc_h9242 = _source368.dtor_bvalue;
                    } else if (_source368.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9989___mcc_h9244 = _source368.dtor_value;
                      bool _9990___mcc_h9245 = _source368.dtor_binary;
                    } else if (_source368.is_DeclareVar) {
                      RAST._IDeclareType _9991___mcc_h9248 = _source368.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9992___mcc_h9249 = _source368.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9993___mcc_h9250 = _source368.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9994___mcc_h9251 = _source368.dtor_optRhs;
                    } else if (_source368.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9995___mcc_h9256 = _source368.dtor_names;
                      RAST._IExpr _9996___mcc_h9257 = _source368.dtor_rhs;
                    } else if (_source368.is_IfExpr) {
                      RAST._IExpr _9997___mcc_h9260 = _source368.dtor_cond;
                      RAST._IExpr _9998___mcc_h9261 = _source368.dtor_thn;
                      RAST._IExpr _9999___mcc_h9262 = _source368.dtor_els;
                    } else if (_source368.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10000___mcc_h9266 = _source368.dtor_optCond;
                      RAST._IExpr _10001___mcc_h9267 = _source368.dtor_underlying;
                    } else if (_source368.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10002___mcc_h9270 = _source368.dtor_name;
                      RAST._IExpr _10003___mcc_h9271 = _source368.dtor_range;
                      RAST._IExpr _10004___mcc_h9272 = _source368.dtor_body;
                    } else if (_source368.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10005___mcc_h9276 = _source368.dtor_lbl;
                      RAST._IExpr _10006___mcc_h9277 = _source368.dtor_underlying;
                    } else if (_source368.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10007___mcc_h9280 = _source368.dtor_optLbl;
                    } else if (_source368.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10008___mcc_h9282 = _source368.dtor_optLbl;
                    } else if (_source368.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10009___mcc_h9284 = _source368.dtor_optExpr;
                    } else if (_source368.is_CallType) {
                      RAST._IExpr _10010___mcc_h9286 = _source368.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10011___mcc_h9287 = _source368.dtor_typeParameters;
                    } else if (_source368.is_Call) {
                      RAST._IExpr _10012___mcc_h9290 = _source368.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10013___mcc_h9291 = _source368.dtor_arguments;
                    } else if (_source368.is_Select) {
                      RAST._IExpr _10014___mcc_h9294 = _source368.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10015___mcc_h9295 = _source368.dtor_name;
                    } else if (_source368.is_MemberSelect) {
                      RAST._IExpr _10016___mcc_h9298 = _source368.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10017___mcc_h9299 = _source368.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10018___mcc_h9302 = _source368.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10019___mcc_h9303 = _source368.dtor_retType;
                      RAST._IExpr _10020___mcc_h9304 = _source368.dtor_body;
                    }
                  } else {
                  }
                } else if (_source367.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10021___mcc_h9308 = _source367.dtor_op2;
                  RAST._IExpr _10022___mcc_h9309 = _source367.dtor_left;
                  RAST._IExpr _10023___mcc_h9310 = _source367.dtor_right;
                  DAST.Format._IBinaryOpFormat _10024___mcc_h9311 = _source367.dtor_format2;
                } else if (_source367.is_TypeAscription) {
                  RAST._IExpr _10025___mcc_h9316 = _source367.dtor_left;
                  RAST._IType _10026___mcc_h9317 = _source367.dtor_tpe;
                } else if (_source367.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10027___mcc_h9320 = _source367.dtor_value;
                } else if (_source367.is_LiteralBool) {
                  bool _10028___mcc_h9322 = _source367.dtor_bvalue;
                } else if (_source367.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10029___mcc_h9324 = _source367.dtor_value;
                  bool _10030___mcc_h9325 = _source367.dtor_binary;
                } else if (_source367.is_DeclareVar) {
                  RAST._IDeclareType _10031___mcc_h9328 = _source367.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10032___mcc_h9329 = _source367.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10033___mcc_h9330 = _source367.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10034___mcc_h9331 = _source367.dtor_optRhs;
                } else if (_source367.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10035___mcc_h9336 = _source367.dtor_names;
                  RAST._IExpr _10036___mcc_h9337 = _source367.dtor_rhs;
                } else if (_source367.is_IfExpr) {
                  RAST._IExpr _10037___mcc_h9340 = _source367.dtor_cond;
                  RAST._IExpr _10038___mcc_h9341 = _source367.dtor_thn;
                  RAST._IExpr _10039___mcc_h9342 = _source367.dtor_els;
                } else if (_source367.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10040___mcc_h9346 = _source367.dtor_optCond;
                  RAST._IExpr _10041___mcc_h9347 = _source367.dtor_underlying;
                } else if (_source367.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10042___mcc_h9350 = _source367.dtor_name;
                  RAST._IExpr _10043___mcc_h9351 = _source367.dtor_range;
                  RAST._IExpr _10044___mcc_h9352 = _source367.dtor_body;
                } else if (_source367.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10045___mcc_h9356 = _source367.dtor_lbl;
                  RAST._IExpr _10046___mcc_h9357 = _source367.dtor_underlying;
                } else if (_source367.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10047___mcc_h9360 = _source367.dtor_optLbl;
                } else if (_source367.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10048___mcc_h9362 = _source367.dtor_optLbl;
                } else if (_source367.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10049___mcc_h9364 = _source367.dtor_optExpr;
                } else if (_source367.is_CallType) {
                  RAST._IExpr _10050___mcc_h9366 = _source367.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10051___mcc_h9367 = _source367.dtor_typeParameters;
                } else if (_source367.is_Call) {
                  RAST._IExpr _10052___mcc_h9370 = _source367.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10053___mcc_h9371 = _source367.dtor_arguments;
                } else if (_source367.is_Select) {
                  RAST._IExpr _10054___mcc_h9374 = _source367.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10055___mcc_h9375 = _source367.dtor_name;
                } else if (_source367.is_MemberSelect) {
                  RAST._IExpr _10056___mcc_h9378 = _source367.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10057___mcc_h9379 = _source367.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10058___mcc_h9382 = _source367.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10059___mcc_h9383 = _source367.dtor_retType;
                  RAST._IExpr _10060___mcc_h9384 = _source367.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9944_field));
              if (_9943_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _10061_fromOwnership;
              _10061_fromOwnership = ((_9943_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2118;
              DCOMP._IOwnership _out2119;
              DCOMP.COMP.FromOwnership(r, _10061_fromOwnership, expectedOwnership, out _out2118, out _out2119);
              r = _out2118;
              resultingOwnership = _out2119;
              readIdents = _9952_recIdents;
            }
            return ;
          }
        } else if (_source284.is_UnboundedIntRange) {
          DAST._IExpression _10062___mcc_h256 = _source284.dtor_start;
          bool _10063___mcc_h257 = _source284.dtor_up;
          DAST._IType _10064_fieldType = _4872___mcc_h57;
          bool _10065_isDatatype = _4871___mcc_h56;
          bool _10066_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _10067_field = _4869___mcc_h54;
          DAST._IExpression _10068_on = _4868___mcc_h53;
          {
            if (_10065_isDatatype) {
              RAST._IExpr _10069_onExpr;
              DCOMP._IOwnership _10070_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10071_recIdents;
              RAST._IExpr _out2120;
              DCOMP._IOwnership _out2121;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2122;
              (this).GenExpr(_10068_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2120, out _out2121, out _out2122);
              _10069_onExpr = _out2120;
              _10070_onOwned = _out2121;
              _10071_recIdents = _out2122;
              r = ((_10069_onExpr).Sel(DCOMP.__default.escapeName(_10067_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10072_typ;
              RAST._IType _out2123;
              _out2123 = (this).GenType(_10064_fieldType, false, false);
              _10072_typ = _out2123;
              if (((_10072_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2124;
                DCOMP._IOwnership _out2125;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2124, out _out2125);
                r = _out2124;
                resultingOwnership = _out2125;
              }
              readIdents = _10071_recIdents;
            } else {
              RAST._IExpr _10073_onExpr;
              DCOMP._IOwnership _10074_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10075_recIdents;
              RAST._IExpr _out2126;
              DCOMP._IOwnership _out2127;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2128;
              (this).GenExpr(_10068_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2126, out _out2127, out _out2128);
              _10073_onExpr = _out2126;
              _10074_onOwned = _out2127;
              _10075_recIdents = _out2128;
              r = _10073_onExpr;
              if (!object.Equals(_10073_onExpr, RAST.__default.self)) {
                RAST._IExpr _source369 = _10073_onExpr;
                if (_source369.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10076___mcc_h9388 = _source369.dtor_content;
                } else if (_source369.is_ExprFromType) {
                  RAST._IType _10077___mcc_h9390 = _source369.dtor_tpe;
                } else if (_source369.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10078___mcc_h9392 = _source369.dtor_name;
                } else if (_source369.is_Match) {
                  RAST._IExpr _10079___mcc_h9394 = _source369.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10080___mcc_h9395 = _source369.dtor_cases;
                } else if (_source369.is_StmtExpr) {
                  RAST._IExpr _10081___mcc_h9398 = _source369.dtor_stmt;
                  RAST._IExpr _10082___mcc_h9399 = _source369.dtor_rhs;
                } else if (_source369.is_Block) {
                  RAST._IExpr _10083___mcc_h9402 = _source369.dtor_underlying;
                } else if (_source369.is_StructBuild) {
                  RAST._IExpr _10084___mcc_h9404 = _source369.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10085___mcc_h9405 = _source369.dtor_assignments;
                } else if (_source369.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10086___mcc_h9408 = _source369.dtor_arguments;
                } else if (_source369.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10087___mcc_h9410 = _source369.dtor_op1;
                  RAST._IExpr _10088___mcc_h9411 = _source369.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10089___mcc_h9412 = _source369.dtor_format;
                  if (object.Equals(_10087___mcc_h9410, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source370 = _10088___mcc_h9411;
                    if (_source370.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10090___mcc_h9416 = _source370.dtor_content;
                    } else if (_source370.is_ExprFromType) {
                      RAST._IType _10091___mcc_h9418 = _source370.dtor_tpe;
                    } else if (_source370.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10092___mcc_h9420 = _source370.dtor_name;
                      if (object.Equals(_10092___mcc_h9420, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source370.is_Match) {
                      RAST._IExpr _10093___mcc_h9422 = _source370.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10094___mcc_h9423 = _source370.dtor_cases;
                    } else if (_source370.is_StmtExpr) {
                      RAST._IExpr _10095___mcc_h9426 = _source370.dtor_stmt;
                      RAST._IExpr _10096___mcc_h9427 = _source370.dtor_rhs;
                    } else if (_source370.is_Block) {
                      RAST._IExpr _10097___mcc_h9430 = _source370.dtor_underlying;
                    } else if (_source370.is_StructBuild) {
                      RAST._IExpr _10098___mcc_h9432 = _source370.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10099___mcc_h9433 = _source370.dtor_assignments;
                    } else if (_source370.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10100___mcc_h9436 = _source370.dtor_arguments;
                    } else if (_source370.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10101___mcc_h9438 = _source370.dtor_op1;
                      RAST._IExpr _10102___mcc_h9439 = _source370.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10103___mcc_h9440 = _source370.dtor_format;
                    } else if (_source370.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10104___mcc_h9444 = _source370.dtor_op2;
                      RAST._IExpr _10105___mcc_h9445 = _source370.dtor_left;
                      RAST._IExpr _10106___mcc_h9446 = _source370.dtor_right;
                      DAST.Format._IBinaryOpFormat _10107___mcc_h9447 = _source370.dtor_format2;
                    } else if (_source370.is_TypeAscription) {
                      RAST._IExpr _10108___mcc_h9452 = _source370.dtor_left;
                      RAST._IType _10109___mcc_h9453 = _source370.dtor_tpe;
                    } else if (_source370.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10110___mcc_h9456 = _source370.dtor_value;
                    } else if (_source370.is_LiteralBool) {
                      bool _10111___mcc_h9458 = _source370.dtor_bvalue;
                    } else if (_source370.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10112___mcc_h9460 = _source370.dtor_value;
                      bool _10113___mcc_h9461 = _source370.dtor_binary;
                    } else if (_source370.is_DeclareVar) {
                      RAST._IDeclareType _10114___mcc_h9464 = _source370.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10115___mcc_h9465 = _source370.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10116___mcc_h9466 = _source370.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10117___mcc_h9467 = _source370.dtor_optRhs;
                    } else if (_source370.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10118___mcc_h9472 = _source370.dtor_names;
                      RAST._IExpr _10119___mcc_h9473 = _source370.dtor_rhs;
                    } else if (_source370.is_IfExpr) {
                      RAST._IExpr _10120___mcc_h9476 = _source370.dtor_cond;
                      RAST._IExpr _10121___mcc_h9477 = _source370.dtor_thn;
                      RAST._IExpr _10122___mcc_h9478 = _source370.dtor_els;
                    } else if (_source370.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10123___mcc_h9482 = _source370.dtor_optCond;
                      RAST._IExpr _10124___mcc_h9483 = _source370.dtor_underlying;
                    } else if (_source370.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10125___mcc_h9486 = _source370.dtor_name;
                      RAST._IExpr _10126___mcc_h9487 = _source370.dtor_range;
                      RAST._IExpr _10127___mcc_h9488 = _source370.dtor_body;
                    } else if (_source370.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10128___mcc_h9492 = _source370.dtor_lbl;
                      RAST._IExpr _10129___mcc_h9493 = _source370.dtor_underlying;
                    } else if (_source370.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10130___mcc_h9496 = _source370.dtor_optLbl;
                    } else if (_source370.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10131___mcc_h9498 = _source370.dtor_optLbl;
                    } else if (_source370.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10132___mcc_h9500 = _source370.dtor_optExpr;
                    } else if (_source370.is_CallType) {
                      RAST._IExpr _10133___mcc_h9502 = _source370.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10134___mcc_h9503 = _source370.dtor_typeParameters;
                    } else if (_source370.is_Call) {
                      RAST._IExpr _10135___mcc_h9506 = _source370.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10136___mcc_h9507 = _source370.dtor_arguments;
                    } else if (_source370.is_Select) {
                      RAST._IExpr _10137___mcc_h9510 = _source370.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10138___mcc_h9511 = _source370.dtor_name;
                    } else if (_source370.is_MemberSelect) {
                      RAST._IExpr _10139___mcc_h9514 = _source370.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10140___mcc_h9515 = _source370.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10141___mcc_h9518 = _source370.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10142___mcc_h9519 = _source370.dtor_retType;
                      RAST._IExpr _10143___mcc_h9520 = _source370.dtor_body;
                    }
                  } else {
                  }
                } else if (_source369.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10144___mcc_h9524 = _source369.dtor_op2;
                  RAST._IExpr _10145___mcc_h9525 = _source369.dtor_left;
                  RAST._IExpr _10146___mcc_h9526 = _source369.dtor_right;
                  DAST.Format._IBinaryOpFormat _10147___mcc_h9527 = _source369.dtor_format2;
                } else if (_source369.is_TypeAscription) {
                  RAST._IExpr _10148___mcc_h9532 = _source369.dtor_left;
                  RAST._IType _10149___mcc_h9533 = _source369.dtor_tpe;
                } else if (_source369.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10150___mcc_h9536 = _source369.dtor_value;
                } else if (_source369.is_LiteralBool) {
                  bool _10151___mcc_h9538 = _source369.dtor_bvalue;
                } else if (_source369.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10152___mcc_h9540 = _source369.dtor_value;
                  bool _10153___mcc_h9541 = _source369.dtor_binary;
                } else if (_source369.is_DeclareVar) {
                  RAST._IDeclareType _10154___mcc_h9544 = _source369.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10155___mcc_h9545 = _source369.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10156___mcc_h9546 = _source369.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10157___mcc_h9547 = _source369.dtor_optRhs;
                } else if (_source369.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10158___mcc_h9552 = _source369.dtor_names;
                  RAST._IExpr _10159___mcc_h9553 = _source369.dtor_rhs;
                } else if (_source369.is_IfExpr) {
                  RAST._IExpr _10160___mcc_h9556 = _source369.dtor_cond;
                  RAST._IExpr _10161___mcc_h9557 = _source369.dtor_thn;
                  RAST._IExpr _10162___mcc_h9558 = _source369.dtor_els;
                } else if (_source369.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10163___mcc_h9562 = _source369.dtor_optCond;
                  RAST._IExpr _10164___mcc_h9563 = _source369.dtor_underlying;
                } else if (_source369.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10165___mcc_h9566 = _source369.dtor_name;
                  RAST._IExpr _10166___mcc_h9567 = _source369.dtor_range;
                  RAST._IExpr _10167___mcc_h9568 = _source369.dtor_body;
                } else if (_source369.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10168___mcc_h9572 = _source369.dtor_lbl;
                  RAST._IExpr _10169___mcc_h9573 = _source369.dtor_underlying;
                } else if (_source369.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10170___mcc_h9576 = _source369.dtor_optLbl;
                } else if (_source369.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10171___mcc_h9578 = _source369.dtor_optLbl;
                } else if (_source369.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10172___mcc_h9580 = _source369.dtor_optExpr;
                } else if (_source369.is_CallType) {
                  RAST._IExpr _10173___mcc_h9582 = _source369.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10174___mcc_h9583 = _source369.dtor_typeParameters;
                } else if (_source369.is_Call) {
                  RAST._IExpr _10175___mcc_h9586 = _source369.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10176___mcc_h9587 = _source369.dtor_arguments;
                } else if (_source369.is_Select) {
                  RAST._IExpr _10177___mcc_h9590 = _source369.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10178___mcc_h9591 = _source369.dtor_name;
                } else if (_source369.is_MemberSelect) {
                  RAST._IExpr _10179___mcc_h9594 = _source369.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10180___mcc_h9595 = _source369.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10181___mcc_h9598 = _source369.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10182___mcc_h9599 = _source369.dtor_retType;
                  RAST._IExpr _10183___mcc_h9600 = _source369.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10067_field));
              if (_10066_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _10184_fromOwnership;
              _10184_fromOwnership = ((_10066_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2129;
              DCOMP._IOwnership _out2130;
              DCOMP.COMP.FromOwnership(r, _10184_fromOwnership, expectedOwnership, out _out2129, out _out2130);
              r = _out2129;
              resultingOwnership = _out2130;
              readIdents = _10075_recIdents;
            }
            return ;
          }
        } else {
          DAST._IType _10185___mcc_h260 = _source284.dtor_elemType;
          DAST._IExpression _10186___mcc_h261 = _source284.dtor_collection;
          bool _10187___mcc_h262 = _source284.dtor_is__forall;
          DAST._IExpression _10188___mcc_h263 = _source284.dtor_lambda;
          DAST._IType _10189_fieldType = _4872___mcc_h57;
          bool _10190_isDatatype = _4871___mcc_h56;
          bool _10191_isConstant = _4870___mcc_h55;
          Dafny.ISequence<Dafny.Rune> _10192_field = _4869___mcc_h54;
          DAST._IExpression _10193_on = _4868___mcc_h53;
          {
            if (_10190_isDatatype) {
              RAST._IExpr _10194_onExpr;
              DCOMP._IOwnership _10195_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10196_recIdents;
              RAST._IExpr _out2131;
              DCOMP._IOwnership _out2132;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2133;
              (this).GenExpr(_10193_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2131, out _out2132, out _out2133);
              _10194_onExpr = _out2131;
              _10195_onOwned = _out2132;
              _10196_recIdents = _out2133;
              r = ((_10194_onExpr).Sel(DCOMP.__default.escapeName(_10192_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10197_typ;
              RAST._IType _out2134;
              _out2134 = (this).GenType(_10189_fieldType, false, false);
              _10197_typ = _out2134;
              if (((_10197_typ).CanReadWithoutClone()) && ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())))) {
                resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
              } else {
                RAST._IExpr _out2135;
                DCOMP._IOwnership _out2136;
                DCOMP.COMP.FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2135, out _out2136);
                r = _out2135;
                resultingOwnership = _out2136;
              }
              readIdents = _10196_recIdents;
            } else {
              RAST._IExpr _10198_onExpr;
              DCOMP._IOwnership _10199_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10200_recIdents;
              RAST._IExpr _out2137;
              DCOMP._IOwnership _out2138;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2139;
              (this).GenExpr(_10193_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2137, out _out2138, out _out2139);
              _10198_onExpr = _out2137;
              _10199_onOwned = _out2138;
              _10200_recIdents = _out2139;
              r = _10198_onExpr;
              if (!object.Equals(_10198_onExpr, RAST.__default.self)) {
                RAST._IExpr _source371 = _10198_onExpr;
                if (_source371.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10201___mcc_h9604 = _source371.dtor_content;
                } else if (_source371.is_ExprFromType) {
                  RAST._IType _10202___mcc_h9606 = _source371.dtor_tpe;
                } else if (_source371.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10203___mcc_h9608 = _source371.dtor_name;
                } else if (_source371.is_Match) {
                  RAST._IExpr _10204___mcc_h9610 = _source371.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10205___mcc_h9611 = _source371.dtor_cases;
                } else if (_source371.is_StmtExpr) {
                  RAST._IExpr _10206___mcc_h9614 = _source371.dtor_stmt;
                  RAST._IExpr _10207___mcc_h9615 = _source371.dtor_rhs;
                } else if (_source371.is_Block) {
                  RAST._IExpr _10208___mcc_h9618 = _source371.dtor_underlying;
                } else if (_source371.is_StructBuild) {
                  RAST._IExpr _10209___mcc_h9620 = _source371.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10210___mcc_h9621 = _source371.dtor_assignments;
                } else if (_source371.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10211___mcc_h9624 = _source371.dtor_arguments;
                } else if (_source371.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10212___mcc_h9626 = _source371.dtor_op1;
                  RAST._IExpr _10213___mcc_h9627 = _source371.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10214___mcc_h9628 = _source371.dtor_format;
                  if (object.Equals(_10212___mcc_h9626, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source372 = _10213___mcc_h9627;
                    if (_source372.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10215___mcc_h9632 = _source372.dtor_content;
                    } else if (_source372.is_ExprFromType) {
                      RAST._IType _10216___mcc_h9634 = _source372.dtor_tpe;
                    } else if (_source372.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10217___mcc_h9636 = _source372.dtor_name;
                      if (object.Equals(_10217___mcc_h9636, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source372.is_Match) {
                      RAST._IExpr _10218___mcc_h9638 = _source372.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10219___mcc_h9639 = _source372.dtor_cases;
                    } else if (_source372.is_StmtExpr) {
                      RAST._IExpr _10220___mcc_h9642 = _source372.dtor_stmt;
                      RAST._IExpr _10221___mcc_h9643 = _source372.dtor_rhs;
                    } else if (_source372.is_Block) {
                      RAST._IExpr _10222___mcc_h9646 = _source372.dtor_underlying;
                    } else if (_source372.is_StructBuild) {
                      RAST._IExpr _10223___mcc_h9648 = _source372.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10224___mcc_h9649 = _source372.dtor_assignments;
                    } else if (_source372.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10225___mcc_h9652 = _source372.dtor_arguments;
                    } else if (_source372.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10226___mcc_h9654 = _source372.dtor_op1;
                      RAST._IExpr _10227___mcc_h9655 = _source372.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10228___mcc_h9656 = _source372.dtor_format;
                    } else if (_source372.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10229___mcc_h9660 = _source372.dtor_op2;
                      RAST._IExpr _10230___mcc_h9661 = _source372.dtor_left;
                      RAST._IExpr _10231___mcc_h9662 = _source372.dtor_right;
                      DAST.Format._IBinaryOpFormat _10232___mcc_h9663 = _source372.dtor_format2;
                    } else if (_source372.is_TypeAscription) {
                      RAST._IExpr _10233___mcc_h9668 = _source372.dtor_left;
                      RAST._IType _10234___mcc_h9669 = _source372.dtor_tpe;
                    } else if (_source372.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10235___mcc_h9672 = _source372.dtor_value;
                    } else if (_source372.is_LiteralBool) {
                      bool _10236___mcc_h9674 = _source372.dtor_bvalue;
                    } else if (_source372.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10237___mcc_h9676 = _source372.dtor_value;
                      bool _10238___mcc_h9677 = _source372.dtor_binary;
                    } else if (_source372.is_DeclareVar) {
                      RAST._IDeclareType _10239___mcc_h9680 = _source372.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10240___mcc_h9681 = _source372.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10241___mcc_h9682 = _source372.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10242___mcc_h9683 = _source372.dtor_optRhs;
                    } else if (_source372.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10243___mcc_h9688 = _source372.dtor_names;
                      RAST._IExpr _10244___mcc_h9689 = _source372.dtor_rhs;
                    } else if (_source372.is_IfExpr) {
                      RAST._IExpr _10245___mcc_h9692 = _source372.dtor_cond;
                      RAST._IExpr _10246___mcc_h9693 = _source372.dtor_thn;
                      RAST._IExpr _10247___mcc_h9694 = _source372.dtor_els;
                    } else if (_source372.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10248___mcc_h9698 = _source372.dtor_optCond;
                      RAST._IExpr _10249___mcc_h9699 = _source372.dtor_underlying;
                    } else if (_source372.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10250___mcc_h9702 = _source372.dtor_name;
                      RAST._IExpr _10251___mcc_h9703 = _source372.dtor_range;
                      RAST._IExpr _10252___mcc_h9704 = _source372.dtor_body;
                    } else if (_source372.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10253___mcc_h9708 = _source372.dtor_lbl;
                      RAST._IExpr _10254___mcc_h9709 = _source372.dtor_underlying;
                    } else if (_source372.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10255___mcc_h9712 = _source372.dtor_optLbl;
                    } else if (_source372.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10256___mcc_h9714 = _source372.dtor_optLbl;
                    } else if (_source372.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10257___mcc_h9716 = _source372.dtor_optExpr;
                    } else if (_source372.is_CallType) {
                      RAST._IExpr _10258___mcc_h9718 = _source372.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10259___mcc_h9719 = _source372.dtor_typeParameters;
                    } else if (_source372.is_Call) {
                      RAST._IExpr _10260___mcc_h9722 = _source372.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10261___mcc_h9723 = _source372.dtor_arguments;
                    } else if (_source372.is_Select) {
                      RAST._IExpr _10262___mcc_h9726 = _source372.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10263___mcc_h9727 = _source372.dtor_name;
                    } else if (_source372.is_MemberSelect) {
                      RAST._IExpr _10264___mcc_h9730 = _source372.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10265___mcc_h9731 = _source372.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10266___mcc_h9734 = _source372.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10267___mcc_h9735 = _source372.dtor_retType;
                      RAST._IExpr _10268___mcc_h9736 = _source372.dtor_body;
                    }
                  } else {
                  }
                } else if (_source371.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10269___mcc_h9740 = _source371.dtor_op2;
                  RAST._IExpr _10270___mcc_h9741 = _source371.dtor_left;
                  RAST._IExpr _10271___mcc_h9742 = _source371.dtor_right;
                  DAST.Format._IBinaryOpFormat _10272___mcc_h9743 = _source371.dtor_format2;
                } else if (_source371.is_TypeAscription) {
                  RAST._IExpr _10273___mcc_h9748 = _source371.dtor_left;
                  RAST._IType _10274___mcc_h9749 = _source371.dtor_tpe;
                } else if (_source371.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10275___mcc_h9752 = _source371.dtor_value;
                } else if (_source371.is_LiteralBool) {
                  bool _10276___mcc_h9754 = _source371.dtor_bvalue;
                } else if (_source371.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10277___mcc_h9756 = _source371.dtor_value;
                  bool _10278___mcc_h9757 = _source371.dtor_binary;
                } else if (_source371.is_DeclareVar) {
                  RAST._IDeclareType _10279___mcc_h9760 = _source371.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10280___mcc_h9761 = _source371.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10281___mcc_h9762 = _source371.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10282___mcc_h9763 = _source371.dtor_optRhs;
                } else if (_source371.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10283___mcc_h9768 = _source371.dtor_names;
                  RAST._IExpr _10284___mcc_h9769 = _source371.dtor_rhs;
                } else if (_source371.is_IfExpr) {
                  RAST._IExpr _10285___mcc_h9772 = _source371.dtor_cond;
                  RAST._IExpr _10286___mcc_h9773 = _source371.dtor_thn;
                  RAST._IExpr _10287___mcc_h9774 = _source371.dtor_els;
                } else if (_source371.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10288___mcc_h9778 = _source371.dtor_optCond;
                  RAST._IExpr _10289___mcc_h9779 = _source371.dtor_underlying;
                } else if (_source371.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10290___mcc_h9782 = _source371.dtor_name;
                  RAST._IExpr _10291___mcc_h9783 = _source371.dtor_range;
                  RAST._IExpr _10292___mcc_h9784 = _source371.dtor_body;
                } else if (_source371.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10293___mcc_h9788 = _source371.dtor_lbl;
                  RAST._IExpr _10294___mcc_h9789 = _source371.dtor_underlying;
                } else if (_source371.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10295___mcc_h9792 = _source371.dtor_optLbl;
                } else if (_source371.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10296___mcc_h9794 = _source371.dtor_optLbl;
                } else if (_source371.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10297___mcc_h9796 = _source371.dtor_optExpr;
                } else if (_source371.is_CallType) {
                  RAST._IExpr _10298___mcc_h9798 = _source371.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10299___mcc_h9799 = _source371.dtor_typeParameters;
                } else if (_source371.is_Call) {
                  RAST._IExpr _10300___mcc_h9802 = _source371.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10301___mcc_h9803 = _source371.dtor_arguments;
                } else if (_source371.is_Select) {
                  RAST._IExpr _10302___mcc_h9806 = _source371.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10303___mcc_h9807 = _source371.dtor_name;
                } else if (_source371.is_MemberSelect) {
                  RAST._IExpr _10304___mcc_h9810 = _source371.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10305___mcc_h9811 = _source371.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10306___mcc_h9814 = _source371.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10307___mcc_h9815 = _source371.dtor_retType;
                  RAST._IExpr _10308___mcc_h9816 = _source371.dtor_body;
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10192_field));
              if (_10191_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              DCOMP._IOwnership _10309_fromOwnership;
              _10309_fromOwnership = ((_10191_isConstant) ? (DCOMP.Ownership.create_OwnershipOwned()) : (DCOMP.Ownership.create_OwnershipBorrowed()));
              RAST._IExpr _out2140;
              DCOMP._IOwnership _out2141;
              DCOMP.COMP.FromOwnership(r, _10309_fromOwnership, expectedOwnership, out _out2140, out _out2141);
              r = _out2140;
              resultingOwnership = _out2141;
              readIdents = _10200_recIdents;
            }
            return ;
          }
        }
      } else if (_source281.is_SelectFn) {
        DAST._IExpression _10310___mcc_h268 = _source281.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _10311___mcc_h269 = _source281.dtor_field;
        bool _10312___mcc_h270 = _source281.dtor_onDatatype;
        bool _10313___mcc_h271 = _source281.dtor_isStatic;
        BigInteger _10314___mcc_h272 = _source281.dtor_arity;
        BigInteger _10315_arity = _10314___mcc_h272;
        bool _10316_isStatic = _10313___mcc_h271;
        bool _10317_isDatatype = _10312___mcc_h270;
        Dafny.ISequence<Dafny.Rune> _10318_field = _10311___mcc_h269;
        DAST._IExpression _10319_on = _10310___mcc_h268;
        {
          RAST._IExpr _10320_onExpr;
          DCOMP._IOwnership _10321_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10322_recIdents;
          RAST._IExpr _out2142;
          DCOMP._IOwnership _out2143;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2144;
          (this).GenExpr(_10319_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2142, out _out2143, out _out2144);
          _10320_onExpr = _out2142;
          _10321_onOwned = _out2143;
          _10322_recIdents = _out2144;
          Dafny.ISequence<Dafny.Rune> _10323_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _10324_onString;
          _10324_onString = (_10320_onExpr)._ToString(DCOMP.__default.IND);
          if (_10316_isStatic) {
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10324_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeName(_10318_field));
          } else {
            _10323_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10323_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _10324_onString), ((object.Equals(_10321_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _10325_args;
            _10325_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _10326_i;
            _10326_i = BigInteger.Zero;
            while ((_10326_i) < (_10315_arity)) {
              if ((_10326_i).Sign == 1) {
                _10325_args = Dafny.Sequence<Dafny.Rune>.Concat(_10325_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _10325_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10325_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_10326_i));
              _10326_i = (_10326_i) + (BigInteger.One);
            }
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10323_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _10325_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10323_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), DCOMP.__default.escapeName(_10318_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _10325_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(_10323_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(_10323_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _10327_typeShape;
          _10327_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _10328_i;
          _10328_i = BigInteger.Zero;
          while ((_10328_i) < (_10315_arity)) {
            if ((_10328_i).Sign == 1) {
              _10327_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10327_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _10327_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10327_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _10328_i = (_10328_i) + (BigInteger.One);
          }
          _10327_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10327_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _10323_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new("), _10323_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _10327_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
          r = RAST.Expr.create_RawExpr(_10323_s);
          RAST._IExpr _out2145;
          DCOMP._IOwnership _out2146;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2145, out _out2146);
          r = _out2145;
          resultingOwnership = _out2146;
          readIdents = _10322_recIdents;
          return ;
        }
      } else if (_source281.is_Index) {
        DAST._IExpression _10329___mcc_h273 = _source281.dtor_expr;
        DAST._ICollKind _10330___mcc_h274 = _source281.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _10331___mcc_h275 = _source281.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _10332_indices = _10331___mcc_h275;
        DAST._ICollKind _10333_collKind = _10330___mcc_h274;
        DAST._IExpression _10334_on = _10329___mcc_h273;
        {
          RAST._IExpr _10335_onExpr;
          DCOMP._IOwnership _10336_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10337_recIdents;
          RAST._IExpr _out2147;
          DCOMP._IOwnership _out2148;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2149;
          (this).GenExpr(_10334_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2147, out _out2148, out _out2149);
          _10335_onExpr = _out2147;
          _10336_onOwned = _out2148;
          _10337_recIdents = _out2149;
          readIdents = _10337_recIdents;
          r = _10335_onExpr;
          BigInteger _10338_i;
          _10338_i = BigInteger.Zero;
          while ((_10338_i) < (new BigInteger((_10332_indices).Count))) {
            if (object.Equals(_10333_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _10339_idx;
            DCOMP._IOwnership _10340_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10341_recIdentsIdx;
            RAST._IExpr _out2150;
            DCOMP._IOwnership _out2151;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2152;
            (this).GenExpr((_10332_indices).Select(_10338_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2150, out _out2151, out _out2152);
            _10339_idx = _out2150;
            _10340_idxOwned = _out2151;
            _10341_recIdentsIdx = _out2152;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_10339_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10341_recIdentsIdx);
            _10338_i = (_10338_i) + (BigInteger.One);
          }
          RAST._IExpr _out2153;
          DCOMP._IOwnership _out2154;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2153, out _out2154);
          r = _out2153;
          resultingOwnership = _out2154;
          return ;
        }
      } else if (_source281.is_IndexRange) {
        DAST._IExpression _10342___mcc_h276 = _source281.dtor_expr;
        bool _10343___mcc_h277 = _source281.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _10344___mcc_h278 = _source281.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _10345___mcc_h279 = _source281.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _10346_high = _10345___mcc_h279;
        Std.Wrappers._IOption<DAST._IExpression> _10347_low = _10344___mcc_h278;
        bool _10348_isArray = _10343___mcc_h277;
        DAST._IExpression _10349_on = _10342___mcc_h276;
        {
          RAST._IExpr _10350_onExpr;
          DCOMP._IOwnership _10351_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10352_recIdents;
          RAST._IExpr _out2155;
          DCOMP._IOwnership _out2156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2157;
          (this).GenExpr(_10349_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2155, out _out2156, out _out2157);
          _10350_onExpr = _out2155;
          _10351_onOwned = _out2156;
          _10352_recIdents = _out2157;
          readIdents = _10352_recIdents;
          Dafny.ISequence<Dafny.Rune> _10353_methodName;
          _10353_methodName = (((_10347_low).is_Some) ? ((((_10346_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_10346_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _10354_arguments;
          _10354_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source373 = _10347_low;
          if (_source373.is_None) {
          } else {
            DAST._IExpression _10355___mcc_h9820 = _source373.dtor_value;
            DAST._IExpression _10356_l = _10355___mcc_h9820;
            {
              RAST._IExpr _10357_lExpr;
              DCOMP._IOwnership _10358___v157;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10359_recIdentsL;
              RAST._IExpr _out2158;
              DCOMP._IOwnership _out2159;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2160;
              (this).GenExpr(_10356_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2158, out _out2159, out _out2160);
              _10357_lExpr = _out2158;
              _10358___v157 = _out2159;
              _10359_recIdentsL = _out2160;
              _10354_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_10354_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_10357_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10359_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source374 = _10346_high;
          if (_source374.is_None) {
          } else {
            DAST._IExpression _10360___mcc_h9821 = _source374.dtor_value;
            DAST._IExpression _10361_h = _10360___mcc_h9821;
            {
              RAST._IExpr _10362_hExpr;
              DCOMP._IOwnership _10363___v158;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10364_recIdentsH;
              RAST._IExpr _out2161;
              DCOMP._IOwnership _out2162;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2163;
              (this).GenExpr(_10361_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2161, out _out2162, out _out2163);
              _10362_hExpr = _out2161;
              _10363___v158 = _out2162;
              _10364_recIdentsH = _out2163;
              _10354_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_10354_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_10362_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10364_recIdentsH);
            }
          }
          r = _10350_onExpr;
          if (_10348_isArray) {
            if (!(_10353_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _10353_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _10353_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _10353_methodName))).Apply(_10354_arguments);
          } else {
            if (!(_10353_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_10353_methodName)).Apply(_10354_arguments);
            }
          }
          RAST._IExpr _out2164;
          DCOMP._IOwnership _out2165;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2164, out _out2165);
          r = _out2164;
          resultingOwnership = _out2165;
          return ;
        }
      } else if (_source281.is_TupleSelect) {
        DAST._IExpression _10365___mcc_h280 = _source281.dtor_expr;
        BigInteger _10366___mcc_h281 = _source281.dtor_index;
        DAST._IType _10367___mcc_h282 = _source281.dtor_fieldType;
        DAST._IType _10368_fieldType = _10367___mcc_h282;
        BigInteger _10369_idx = _10366___mcc_h281;
        DAST._IExpression _10370_on = _10365___mcc_h280;
        {
          RAST._IExpr _10371_onExpr;
          DCOMP._IOwnership _10372_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10373_recIdents;
          RAST._IExpr _out2166;
          DCOMP._IOwnership _out2167;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2168;
          (this).GenExpr(_10370_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2166, out _out2167, out _out2168);
          _10371_onExpr = _out2166;
          _10372_onOwnership = _out2167;
          _10373_recIdents = _out2168;
          r = (_10371_onExpr).Sel(Std.Strings.__default.OfNat(_10369_idx));
          RAST._IExpr _out2169;
          DCOMP._IOwnership _out2170;
          DCOMP.COMP.FromOwnership(r, _10372_onOwnership, expectedOwnership, out _out2169, out _out2170);
          r = _out2169;
          resultingOwnership = _out2170;
          readIdents = _10373_recIdents;
          return ;
        }
      } else if (_source281.is_Call) {
        DAST._IExpression _10374___mcc_h283 = _source281.dtor_on;
        DAST._ICallName _10375___mcc_h284 = _source281.dtor_callName;
        Dafny.ISequence<DAST._IType> _10376___mcc_h285 = _source281.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _10377___mcc_h286 = _source281.dtor_args;
        Dafny.ISequence<DAST._IExpression> _10378_args = _10377___mcc_h286;
        Dafny.ISequence<DAST._IType> _10379_typeArgs = _10376___mcc_h285;
        DAST._ICallName _10380_name = _10375___mcc_h284;
        DAST._IExpression _10381_on = _10374___mcc_h283;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _10382_onExpr;
          DCOMP._IOwnership _10383___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10384_recIdents;
          RAST._IExpr _out2171;
          DCOMP._IOwnership _out2172;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2173;
          (this).GenExpr(_10381_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2171, out _out2172, out _out2173);
          _10382_onExpr = _out2171;
          _10383___v159 = _out2172;
          _10384_recIdents = _out2173;
          Dafny.ISequence<RAST._IType> _10385_typeExprs;
          _10385_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_10379_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi39 = new BigInteger((_10379_typeArgs).Count);
            for (BigInteger _10386_typeI = BigInteger.Zero; _10386_typeI < _hi39; _10386_typeI++) {
              RAST._IType _10387_typeExpr;
              RAST._IType _out2174;
              _out2174 = (this).GenType((_10379_typeArgs).Select(_10386_typeI), false, false);
              _10387_typeExpr = _out2174;
              _10385_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_10385_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_10387_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _10388_argExprs;
          _10388_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi40 = new BigInteger((_10378_args).Count);
          for (BigInteger _10389_i = BigInteger.Zero; _10389_i < _hi40; _10389_i++) {
            DCOMP._IOwnership _10390_argOwnership;
            _10390_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_10380_name).is_CallName) && ((_10389_i) < (new BigInteger((((_10380_name).dtor_signature)).Count)))) {
              RAST._IType _10391_tpe;
              RAST._IType _out2175;
              _out2175 = (this).GenType(((((_10380_name).dtor_signature)).Select(_10389_i)).dtor_typ, false, false);
              _10391_tpe = _out2175;
              if ((_10391_tpe).CanReadWithoutClone()) {
                _10390_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _10392_argExpr;
            DCOMP._IOwnership _10393___v160;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10394_argIdents;
            RAST._IExpr _out2176;
            DCOMP._IOwnership _out2177;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2178;
            (this).GenExpr((_10378_args).Select(_10389_i), selfIdent, env, _10390_argOwnership, out _out2176, out _out2177, out _out2178);
            _10392_argExpr = _out2176;
            _10393___v160 = _out2177;
            _10394_argIdents = _out2178;
            _10388_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_10388_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_10392_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10394_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10384_recIdents);
          Dafny.ISequence<Dafny.Rune> _10395_renderedName;
          _10395_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source375) => {
            if (_source375.is_CallName) {
              Dafny.ISequence<Dafny.Rune> _10396___mcc_h9822 = _source375.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _10397___mcc_h9823 = _source375.dtor_onType;
              Dafny.ISequence<DAST._IFormal> _10398___mcc_h9824 = _source375.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _10399_ident = _10396___mcc_h9822;
              return DCOMP.__default.escapeName(_10399_ident);
            } else if (_source375.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source375.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source375.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_10380_name);
          DAST._IExpression _source376 = _10381_on;
          if (_source376.is_Literal) {
            DAST._ILiteral _10400___mcc_h9825 = _source376.dtor_Literal_i_a0;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source377 = _10380_name;
                if (_source377.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10401___mcc_h10035 = _source377.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10402___mcc_h10036 = _source377.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10403___mcc_h10037 = _source377.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source378 = _10402___mcc_h10036;
                  if (_source378.is_None) {
                  } else {
                    DAST._IType _10404___mcc_h10041 = _source378.dtor_value;
                    DAST._IType _10405_tpe = _10404___mcc_h10041;
                    RAST._IType _10406_typ;
                    RAST._IType _out2179;
                    _out2179 = (this).GenType(_10405_tpe, false, false);
                    _10406_typ = _out2179;
                    if ((_10406_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source377.is_MapBuilderAdd) {
                } else if (_source377.is_MapBuilderBuild) {
                } else if (_source377.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _10407___mcc_h9827 = _source376.dtor_Ident_i_a0;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source379 = _10380_name;
                if (_source379.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10408___mcc_h10043 = _source379.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10409___mcc_h10044 = _source379.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10410___mcc_h10045 = _source379.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source380 = _10409___mcc_h10044;
                  if (_source380.is_None) {
                  } else {
                    DAST._IType _10411___mcc_h10049 = _source380.dtor_value;
                    DAST._IType _10412_tpe = _10411___mcc_h10049;
                    RAST._IType _10413_typ;
                    RAST._IType _out2180;
                    _out2180 = (this).GenType(_10412_tpe, false, false);
                    _10413_typ = _out2180;
                    if ((_10413_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source379.is_MapBuilderAdd) {
                } else if (_source379.is_MapBuilderBuild) {
                } else if (_source379.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10414___mcc_h9829 = _source376.dtor_Companion_i_a0;
            {
              _10382_onExpr = (_10382_onExpr).MSel(_10395_renderedName);
            }
          } else if (_source376.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _10415___mcc_h9831 = _source376.dtor_Tuple_i_a0;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source381 = _10380_name;
                if (_source381.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10416___mcc_h10051 = _source381.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10417___mcc_h10052 = _source381.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10418___mcc_h10053 = _source381.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source382 = _10417___mcc_h10052;
                  if (_source382.is_None) {
                  } else {
                    DAST._IType _10419___mcc_h10057 = _source382.dtor_value;
                    DAST._IType _10420_tpe = _10419___mcc_h10057;
                    RAST._IType _10421_typ;
                    RAST._IType _out2181;
                    _out2181 = (this).GenType(_10420_tpe, false, false);
                    _10421_typ = _out2181;
                    if ((_10421_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source381.is_MapBuilderAdd) {
                } else if (_source381.is_MapBuilderBuild) {
                } else if (_source381.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10422___mcc_h9833 = _source376.dtor_path;
            Dafny.ISequence<DAST._IType> _10423___mcc_h9834 = _source376.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _10424___mcc_h9835 = _source376.dtor_args;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source383 = _10380_name;
                if (_source383.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10425___mcc_h10059 = _source383.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10426___mcc_h10060 = _source383.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10427___mcc_h10061 = _source383.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source384 = _10426___mcc_h10060;
                  if (_source384.is_None) {
                  } else {
                    DAST._IType _10428___mcc_h10065 = _source384.dtor_value;
                    DAST._IType _10429_tpe = _10428___mcc_h10065;
                    RAST._IType _10430_typ;
                    RAST._IType _out2182;
                    _out2182 = (this).GenType(_10429_tpe, false, false);
                    _10430_typ = _out2182;
                    if ((_10430_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source383.is_MapBuilderAdd) {
                } else if (_source383.is_MapBuilderBuild) {
                } else if (_source383.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_NewUninitArray) {
            Dafny.ISequence<DAST._IExpression> _10431___mcc_h9839 = _source376.dtor_dims;
            DAST._IType _10432___mcc_h9840 = _source376.dtor_typ;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source385 = _10380_name;
                if (_source385.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10433___mcc_h10067 = _source385.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10434___mcc_h10068 = _source385.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10435___mcc_h10069 = _source385.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source386 = _10434___mcc_h10068;
                  if (_source386.is_None) {
                  } else {
                    DAST._IType _10436___mcc_h10073 = _source386.dtor_value;
                    DAST._IType _10437_tpe = _10436___mcc_h10073;
                    RAST._IType _10438_typ;
                    RAST._IType _out2183;
                    _out2183 = (this).GenType(_10437_tpe, false, false);
                    _10438_typ = _out2183;
                    if ((_10438_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source385.is_MapBuilderAdd) {
                } else if (_source385.is_MapBuilderBuild) {
                } else if (_source385.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_ArrayIndexToInt) {
            DAST._IExpression _10439___mcc_h9843 = _source376.dtor_value;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source387 = _10380_name;
                if (_source387.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10440___mcc_h10075 = _source387.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10441___mcc_h10076 = _source387.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10442___mcc_h10077 = _source387.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source388 = _10441___mcc_h10076;
                  if (_source388.is_None) {
                  } else {
                    DAST._IType _10443___mcc_h10081 = _source388.dtor_value;
                    DAST._IType _10444_tpe = _10443___mcc_h10081;
                    RAST._IType _10445_typ;
                    RAST._IType _out2184;
                    _out2184 = (this).GenType(_10444_tpe, false, false);
                    _10445_typ = _out2184;
                    if ((_10445_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source387.is_MapBuilderAdd) {
                } else if (_source387.is_MapBuilderBuild) {
                } else if (_source387.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_FinalizeNewArray) {
            DAST._IExpression _10446___mcc_h9845 = _source376.dtor_value;
            DAST._IType _10447___mcc_h9846 = _source376.dtor_typ;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source389 = _10380_name;
                if (_source389.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10448___mcc_h10083 = _source389.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10449___mcc_h10084 = _source389.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10450___mcc_h10085 = _source389.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source390 = _10449___mcc_h10084;
                  if (_source390.is_None) {
                  } else {
                    DAST._IType _10451___mcc_h10089 = _source390.dtor_value;
                    DAST._IType _10452_tpe = _10451___mcc_h10089;
                    RAST._IType _10453_typ;
                    RAST._IType _out2185;
                    _out2185 = (this).GenType(_10452_tpe, false, false);
                    _10453_typ = _out2185;
                    if ((_10453_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source389.is_MapBuilderAdd) {
                } else if (_source389.is_MapBuilderBuild) {
                } else if (_source389.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_DatatypeValue) {
            DAST._IDatatypeType _10454___mcc_h9849 = _source376.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _10455___mcc_h9850 = _source376.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _10456___mcc_h9851 = _source376.dtor_variant;
            bool _10457___mcc_h9852 = _source376.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _10458___mcc_h9853 = _source376.dtor_contents;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source391 = _10380_name;
                if (_source391.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10459___mcc_h10091 = _source391.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10460___mcc_h10092 = _source391.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10461___mcc_h10093 = _source391.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source392 = _10460___mcc_h10092;
                  if (_source392.is_None) {
                  } else {
                    DAST._IType _10462___mcc_h10097 = _source392.dtor_value;
                    DAST._IType _10463_tpe = _10462___mcc_h10097;
                    RAST._IType _10464_typ;
                    RAST._IType _out2186;
                    _out2186 = (this).GenType(_10463_tpe, false, false);
                    _10464_typ = _out2186;
                    if ((_10464_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source391.is_MapBuilderAdd) {
                } else if (_source391.is_MapBuilderBuild) {
                } else if (_source391.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Convert) {
            DAST._IExpression _10465___mcc_h9859 = _source376.dtor_value;
            DAST._IType _10466___mcc_h9860 = _source376.dtor_from;
            DAST._IType _10467___mcc_h9861 = _source376.dtor_typ;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source393 = _10380_name;
                if (_source393.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10468___mcc_h10099 = _source393.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10469___mcc_h10100 = _source393.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10470___mcc_h10101 = _source393.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source394 = _10469___mcc_h10100;
                  if (_source394.is_None) {
                  } else {
                    DAST._IType _10471___mcc_h10105 = _source394.dtor_value;
                    DAST._IType _10472_tpe = _10471___mcc_h10105;
                    RAST._IType _10473_typ;
                    RAST._IType _out2187;
                    _out2187 = (this).GenType(_10472_tpe, false, false);
                    _10473_typ = _out2187;
                    if ((_10473_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source393.is_MapBuilderAdd) {
                } else if (_source393.is_MapBuilderBuild) {
                } else if (_source393.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SeqConstruct) {
            DAST._IExpression _10474___mcc_h9865 = _source376.dtor_length;
            DAST._IExpression _10475___mcc_h9866 = _source376.dtor_elem;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source395 = _10380_name;
                if (_source395.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10476___mcc_h10107 = _source395.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10477___mcc_h10108 = _source395.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10478___mcc_h10109 = _source395.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source396 = _10477___mcc_h10108;
                  if (_source396.is_None) {
                  } else {
                    DAST._IType _10479___mcc_h10113 = _source396.dtor_value;
                    DAST._IType _10480_tpe = _10479___mcc_h10113;
                    RAST._IType _10481_typ;
                    RAST._IType _out2188;
                    _out2188 = (this).GenType(_10480_tpe, false, false);
                    _10481_typ = _out2188;
                    if ((_10481_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source395.is_MapBuilderAdd) {
                } else if (_source395.is_MapBuilderBuild) {
                } else if (_source395.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _10482___mcc_h9869 = _source376.dtor_elements;
            DAST._IType _10483___mcc_h9870 = _source376.dtor_typ;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source397 = _10380_name;
                if (_source397.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10484___mcc_h10115 = _source397.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10485___mcc_h10116 = _source397.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10486___mcc_h10117 = _source397.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source398 = _10485___mcc_h10116;
                  if (_source398.is_None) {
                  } else {
                    DAST._IType _10487___mcc_h10121 = _source398.dtor_value;
                    DAST._IType _10488_tpe = _10487___mcc_h10121;
                    RAST._IType _10489_typ;
                    RAST._IType _out2189;
                    _out2189 = (this).GenType(_10488_tpe, false, false);
                    _10489_typ = _out2189;
                    if ((_10489_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source397.is_MapBuilderAdd) {
                } else if (_source397.is_MapBuilderBuild) {
                } else if (_source397.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _10490___mcc_h9873 = _source376.dtor_elements;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source399 = _10380_name;
                if (_source399.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10491___mcc_h10123 = _source399.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10492___mcc_h10124 = _source399.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10493___mcc_h10125 = _source399.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source400 = _10492___mcc_h10124;
                  if (_source400.is_None) {
                  } else {
                    DAST._IType _10494___mcc_h10129 = _source400.dtor_value;
                    DAST._IType _10495_tpe = _10494___mcc_h10129;
                    RAST._IType _10496_typ;
                    RAST._IType _out2190;
                    _out2190 = (this).GenType(_10495_tpe, false, false);
                    _10496_typ = _out2190;
                    if ((_10496_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source399.is_MapBuilderAdd) {
                } else if (_source399.is_MapBuilderBuild) {
                } else if (_source399.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _10497___mcc_h9875 = _source376.dtor_elements;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source401 = _10380_name;
                if (_source401.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10498___mcc_h10131 = _source401.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10499___mcc_h10132 = _source401.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10500___mcc_h10133 = _source401.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source402 = _10499___mcc_h10132;
                  if (_source402.is_None) {
                  } else {
                    DAST._IType _10501___mcc_h10137 = _source402.dtor_value;
                    DAST._IType _10502_tpe = _10501___mcc_h10137;
                    RAST._IType _10503_typ;
                    RAST._IType _out2191;
                    _out2191 = (this).GenType(_10502_tpe, false, false);
                    _10503_typ = _out2191;
                    if ((_10503_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source401.is_MapBuilderAdd) {
                } else if (_source401.is_MapBuilderBuild) {
                } else if (_source401.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _10504___mcc_h9877 = _source376.dtor_mapElems;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source403 = _10380_name;
                if (_source403.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10505___mcc_h10139 = _source403.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10506___mcc_h10140 = _source403.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10507___mcc_h10141 = _source403.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source404 = _10506___mcc_h10140;
                  if (_source404.is_None) {
                  } else {
                    DAST._IType _10508___mcc_h10145 = _source404.dtor_value;
                    DAST._IType _10509_tpe = _10508___mcc_h10145;
                    RAST._IType _10510_typ;
                    RAST._IType _out2192;
                    _out2192 = (this).GenType(_10509_tpe, false, false);
                    _10510_typ = _out2192;
                    if ((_10510_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source403.is_MapBuilderAdd) {
                } else if (_source403.is_MapBuilderBuild) {
                } else if (_source403.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MapBuilder) {
            DAST._IType _10511___mcc_h9879 = _source376.dtor_keyType;
            DAST._IType _10512___mcc_h9880 = _source376.dtor_valueType;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source405 = _10380_name;
                if (_source405.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10513___mcc_h10147 = _source405.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10514___mcc_h10148 = _source405.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10515___mcc_h10149 = _source405.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source406 = _10514___mcc_h10148;
                  if (_source406.is_None) {
                  } else {
                    DAST._IType _10516___mcc_h10153 = _source406.dtor_value;
                    DAST._IType _10517_tpe = _10516___mcc_h10153;
                    RAST._IType _10518_typ;
                    RAST._IType _out2193;
                    _out2193 = (this).GenType(_10517_tpe, false, false);
                    _10518_typ = _out2193;
                    if ((_10518_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source405.is_MapBuilderAdd) {
                } else if (_source405.is_MapBuilderBuild) {
                } else if (_source405.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SeqUpdate) {
            DAST._IExpression _10519___mcc_h9883 = _source376.dtor_expr;
            DAST._IExpression _10520___mcc_h9884 = _source376.dtor_indexExpr;
            DAST._IExpression _10521___mcc_h9885 = _source376.dtor_value;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source407 = _10380_name;
                if (_source407.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10522___mcc_h10155 = _source407.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10523___mcc_h10156 = _source407.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10524___mcc_h10157 = _source407.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source408 = _10523___mcc_h10156;
                  if (_source408.is_None) {
                  } else {
                    DAST._IType _10525___mcc_h10161 = _source408.dtor_value;
                    DAST._IType _10526_tpe = _10525___mcc_h10161;
                    RAST._IType _10527_typ;
                    RAST._IType _out2194;
                    _out2194 = (this).GenType(_10526_tpe, false, false);
                    _10527_typ = _out2194;
                    if ((_10527_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source407.is_MapBuilderAdd) {
                } else if (_source407.is_MapBuilderBuild) {
                } else if (_source407.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MapUpdate) {
            DAST._IExpression _10528___mcc_h9889 = _source376.dtor_expr;
            DAST._IExpression _10529___mcc_h9890 = _source376.dtor_indexExpr;
            DAST._IExpression _10530___mcc_h9891 = _source376.dtor_value;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source409 = _10380_name;
                if (_source409.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10531___mcc_h10163 = _source409.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10532___mcc_h10164 = _source409.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10533___mcc_h10165 = _source409.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source410 = _10532___mcc_h10164;
                  if (_source410.is_None) {
                  } else {
                    DAST._IType _10534___mcc_h10169 = _source410.dtor_value;
                    DAST._IType _10535_tpe = _10534___mcc_h10169;
                    RAST._IType _10536_typ;
                    RAST._IType _out2195;
                    _out2195 = (this).GenType(_10535_tpe, false, false);
                    _10536_typ = _out2195;
                    if ((_10536_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source409.is_MapBuilderAdd) {
                } else if (_source409.is_MapBuilderBuild) {
                } else if (_source409.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SetBuilder) {
            DAST._IType _10537___mcc_h9895 = _source376.dtor_elemType;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source411 = _10380_name;
                if (_source411.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10538___mcc_h10171 = _source411.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10539___mcc_h10172 = _source411.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10540___mcc_h10173 = _source411.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source412 = _10539___mcc_h10172;
                  if (_source412.is_None) {
                  } else {
                    DAST._IType _10541___mcc_h10177 = _source412.dtor_value;
                    DAST._IType _10542_tpe = _10541___mcc_h10177;
                    RAST._IType _10543_typ;
                    RAST._IType _out2196;
                    _out2196 = (this).GenType(_10542_tpe, false, false);
                    _10543_typ = _out2196;
                    if ((_10543_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source411.is_MapBuilderAdd) {
                } else if (_source411.is_MapBuilderBuild) {
                } else if (_source411.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_ToMultiset) {
            DAST._IExpression _10544___mcc_h9897 = _source376.dtor_ToMultiset_i_a0;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source413 = _10380_name;
                if (_source413.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10545___mcc_h10179 = _source413.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10546___mcc_h10180 = _source413.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10547___mcc_h10181 = _source413.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source414 = _10546___mcc_h10180;
                  if (_source414.is_None) {
                  } else {
                    DAST._IType _10548___mcc_h10185 = _source414.dtor_value;
                    DAST._IType _10549_tpe = _10548___mcc_h10185;
                    RAST._IType _10550_typ;
                    RAST._IType _out2197;
                    _out2197 = (this).GenType(_10549_tpe, false, false);
                    _10550_typ = _out2197;
                    if ((_10550_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source413.is_MapBuilderAdd) {
                } else if (_source413.is_MapBuilderBuild) {
                } else if (_source413.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_This) {
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source415 = _10380_name;
                if (_source415.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10551___mcc_h10187 = _source415.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10552___mcc_h10188 = _source415.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10553___mcc_h10189 = _source415.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source416 = _10552___mcc_h10188;
                  if (_source416.is_None) {
                  } else {
                    DAST._IType _10554___mcc_h10193 = _source416.dtor_value;
                    DAST._IType _10555_tpe = _10554___mcc_h10193;
                    RAST._IType _10556_typ;
                    RAST._IType _out2198;
                    _out2198 = (this).GenType(_10555_tpe, false, false);
                    _10556_typ = _out2198;
                    if ((_10556_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source415.is_MapBuilderAdd) {
                } else if (_source415.is_MapBuilderBuild) {
                } else if (_source415.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Ite) {
            DAST._IExpression _10557___mcc_h9899 = _source376.dtor_cond;
            DAST._IExpression _10558___mcc_h9900 = _source376.dtor_thn;
            DAST._IExpression _10559___mcc_h9901 = _source376.dtor_els;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source417 = _10380_name;
                if (_source417.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10560___mcc_h10195 = _source417.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10561___mcc_h10196 = _source417.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10562___mcc_h10197 = _source417.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source418 = _10561___mcc_h10196;
                  if (_source418.is_None) {
                  } else {
                    DAST._IType _10563___mcc_h10201 = _source418.dtor_value;
                    DAST._IType _10564_tpe = _10563___mcc_h10201;
                    RAST._IType _10565_typ;
                    RAST._IType _out2199;
                    _out2199 = (this).GenType(_10564_tpe, false, false);
                    _10565_typ = _out2199;
                    if ((_10565_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source417.is_MapBuilderAdd) {
                } else if (_source417.is_MapBuilderBuild) {
                } else if (_source417.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_UnOp) {
            DAST._IUnaryOp _10566___mcc_h9905 = _source376.dtor_unOp;
            DAST._IExpression _10567___mcc_h9906 = _source376.dtor_expr;
            DAST.Format._IUnaryOpFormat _10568___mcc_h9907 = _source376.dtor_format1;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source419 = _10380_name;
                if (_source419.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10569___mcc_h10203 = _source419.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10570___mcc_h10204 = _source419.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10571___mcc_h10205 = _source419.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source420 = _10570___mcc_h10204;
                  if (_source420.is_None) {
                  } else {
                    DAST._IType _10572___mcc_h10209 = _source420.dtor_value;
                    DAST._IType _10573_tpe = _10572___mcc_h10209;
                    RAST._IType _10574_typ;
                    RAST._IType _out2200;
                    _out2200 = (this).GenType(_10573_tpe, false, false);
                    _10574_typ = _out2200;
                    if ((_10574_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source419.is_MapBuilderAdd) {
                } else if (_source419.is_MapBuilderBuild) {
                } else if (_source419.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_BinOp) {
            DAST._IBinOp _10575___mcc_h9911 = _source376.dtor_op;
            DAST._IExpression _10576___mcc_h9912 = _source376.dtor_left;
            DAST._IExpression _10577___mcc_h9913 = _source376.dtor_right;
            DAST.Format._IBinaryOpFormat _10578___mcc_h9914 = _source376.dtor_format2;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source421 = _10380_name;
                if (_source421.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10579___mcc_h10211 = _source421.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10580___mcc_h10212 = _source421.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10581___mcc_h10213 = _source421.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source422 = _10580___mcc_h10212;
                  if (_source422.is_None) {
                  } else {
                    DAST._IType _10582___mcc_h10217 = _source422.dtor_value;
                    DAST._IType _10583_tpe = _10582___mcc_h10217;
                    RAST._IType _10584_typ;
                    RAST._IType _out2201;
                    _out2201 = (this).GenType(_10583_tpe, false, false);
                    _10584_typ = _out2201;
                    if ((_10584_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source421.is_MapBuilderAdd) {
                } else if (_source421.is_MapBuilderBuild) {
                } else if (_source421.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_ArrayLen) {
            DAST._IExpression _10585___mcc_h9919 = _source376.dtor_expr;
            DAST._IType _10586___mcc_h9920 = _source376.dtor_exprType;
            BigInteger _10587___mcc_h9921 = _source376.dtor_dim;
            bool _10588___mcc_h9922 = _source376.dtor_native;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source423 = _10380_name;
                if (_source423.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10589___mcc_h10219 = _source423.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10590___mcc_h10220 = _source423.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10591___mcc_h10221 = _source423.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source424 = _10590___mcc_h10220;
                  if (_source424.is_None) {
                  } else {
                    DAST._IType _10592___mcc_h10225 = _source424.dtor_value;
                    DAST._IType _10593_tpe = _10592___mcc_h10225;
                    RAST._IType _10594_typ;
                    RAST._IType _out2202;
                    _out2202 = (this).GenType(_10593_tpe, false, false);
                    _10594_typ = _out2202;
                    if ((_10594_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source423.is_MapBuilderAdd) {
                } else if (_source423.is_MapBuilderBuild) {
                } else if (_source423.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MapKeys) {
            DAST._IExpression _10595___mcc_h9927 = _source376.dtor_expr;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source425 = _10380_name;
                if (_source425.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10596___mcc_h10227 = _source425.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10597___mcc_h10228 = _source425.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10598___mcc_h10229 = _source425.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source426 = _10597___mcc_h10228;
                  if (_source426.is_None) {
                  } else {
                    DAST._IType _10599___mcc_h10233 = _source426.dtor_value;
                    DAST._IType _10600_tpe = _10599___mcc_h10233;
                    RAST._IType _10601_typ;
                    RAST._IType _out2203;
                    _out2203 = (this).GenType(_10600_tpe, false, false);
                    _10601_typ = _out2203;
                    if ((_10601_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source425.is_MapBuilderAdd) {
                } else if (_source425.is_MapBuilderBuild) {
                } else if (_source425.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_MapValues) {
            DAST._IExpression _10602___mcc_h9929 = _source376.dtor_expr;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source427 = _10380_name;
                if (_source427.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10603___mcc_h10235 = _source427.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10604___mcc_h10236 = _source427.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10605___mcc_h10237 = _source427.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source428 = _10604___mcc_h10236;
                  if (_source428.is_None) {
                  } else {
                    DAST._IType _10606___mcc_h10241 = _source428.dtor_value;
                    DAST._IType _10607_tpe = _10606___mcc_h10241;
                    RAST._IType _10608_typ;
                    RAST._IType _out2204;
                    _out2204 = (this).GenType(_10607_tpe, false, false);
                    _10608_typ = _out2204;
                    if ((_10608_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source427.is_MapBuilderAdd) {
                } else if (_source427.is_MapBuilderBuild) {
                } else if (_source427.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Select) {
            DAST._IExpression _10609___mcc_h9931 = _source376.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _10610___mcc_h9932 = _source376.dtor_field;
            bool _10611___mcc_h9933 = _source376.dtor_isConstant;
            bool _10612___mcc_h9934 = _source376.dtor_onDatatype;
            DAST._IType _10613___mcc_h9935 = _source376.dtor_fieldType;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source429 = _10380_name;
                if (_source429.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10614___mcc_h10243 = _source429.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10615___mcc_h10244 = _source429.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10616___mcc_h10245 = _source429.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source430 = _10615___mcc_h10244;
                  if (_source430.is_None) {
                  } else {
                    DAST._IType _10617___mcc_h10249 = _source430.dtor_value;
                    DAST._IType _10618_tpe = _10617___mcc_h10249;
                    RAST._IType _10619_typ;
                    RAST._IType _out2205;
                    _out2205 = (this).GenType(_10618_tpe, false, false);
                    _10619_typ = _out2205;
                    if ((_10619_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source429.is_MapBuilderAdd) {
                } else if (_source429.is_MapBuilderBuild) {
                } else if (_source429.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SelectFn) {
            DAST._IExpression _10620___mcc_h9941 = _source376.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _10621___mcc_h9942 = _source376.dtor_field;
            bool _10622___mcc_h9943 = _source376.dtor_onDatatype;
            bool _10623___mcc_h9944 = _source376.dtor_isStatic;
            BigInteger _10624___mcc_h9945 = _source376.dtor_arity;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source431 = _10380_name;
                if (_source431.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10625___mcc_h10251 = _source431.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10626___mcc_h10252 = _source431.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10627___mcc_h10253 = _source431.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source432 = _10626___mcc_h10252;
                  if (_source432.is_None) {
                  } else {
                    DAST._IType _10628___mcc_h10257 = _source432.dtor_value;
                    DAST._IType _10629_tpe = _10628___mcc_h10257;
                    RAST._IType _10630_typ;
                    RAST._IType _out2206;
                    _out2206 = (this).GenType(_10629_tpe, false, false);
                    _10630_typ = _out2206;
                    if ((_10630_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source431.is_MapBuilderAdd) {
                } else if (_source431.is_MapBuilderBuild) {
                } else if (_source431.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Index) {
            DAST._IExpression _10631___mcc_h9951 = _source376.dtor_expr;
            DAST._ICollKind _10632___mcc_h9952 = _source376.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _10633___mcc_h9953 = _source376.dtor_indices;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source433 = _10380_name;
                if (_source433.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10634___mcc_h10259 = _source433.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10635___mcc_h10260 = _source433.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10636___mcc_h10261 = _source433.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source434 = _10635___mcc_h10260;
                  if (_source434.is_None) {
                  } else {
                    DAST._IType _10637___mcc_h10265 = _source434.dtor_value;
                    DAST._IType _10638_tpe = _10637___mcc_h10265;
                    RAST._IType _10639_typ;
                    RAST._IType _out2207;
                    _out2207 = (this).GenType(_10638_tpe, false, false);
                    _10639_typ = _out2207;
                    if ((_10639_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source433.is_MapBuilderAdd) {
                } else if (_source433.is_MapBuilderBuild) {
                } else if (_source433.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_IndexRange) {
            DAST._IExpression _10640___mcc_h9957 = _source376.dtor_expr;
            bool _10641___mcc_h9958 = _source376.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _10642___mcc_h9959 = _source376.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _10643___mcc_h9960 = _source376.dtor_high;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source435 = _10380_name;
                if (_source435.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10644___mcc_h10267 = _source435.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10645___mcc_h10268 = _source435.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10646___mcc_h10269 = _source435.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source436 = _10645___mcc_h10268;
                  if (_source436.is_None) {
                  } else {
                    DAST._IType _10647___mcc_h10273 = _source436.dtor_value;
                    DAST._IType _10648_tpe = _10647___mcc_h10273;
                    RAST._IType _10649_typ;
                    RAST._IType _out2208;
                    _out2208 = (this).GenType(_10648_tpe, false, false);
                    _10649_typ = _out2208;
                    if ((_10649_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source435.is_MapBuilderAdd) {
                } else if (_source435.is_MapBuilderBuild) {
                } else if (_source435.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_TupleSelect) {
            DAST._IExpression _10650___mcc_h9965 = _source376.dtor_expr;
            BigInteger _10651___mcc_h9966 = _source376.dtor_index;
            DAST._IType _10652___mcc_h9967 = _source376.dtor_fieldType;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source437 = _10380_name;
                if (_source437.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10653___mcc_h10275 = _source437.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10654___mcc_h10276 = _source437.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10655___mcc_h10277 = _source437.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source438 = _10654___mcc_h10276;
                  if (_source438.is_None) {
                  } else {
                    DAST._IType _10656___mcc_h10281 = _source438.dtor_value;
                    DAST._IType _10657_tpe = _10656___mcc_h10281;
                    RAST._IType _10658_typ;
                    RAST._IType _out2209;
                    _out2209 = (this).GenType(_10657_tpe, false, false);
                    _10658_typ = _out2209;
                    if ((_10658_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source437.is_MapBuilderAdd) {
                } else if (_source437.is_MapBuilderBuild) {
                } else if (_source437.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Call) {
            DAST._IExpression _10659___mcc_h9971 = _source376.dtor_on;
            DAST._ICallName _10660___mcc_h9972 = _source376.dtor_callName;
            Dafny.ISequence<DAST._IType> _10661___mcc_h9973 = _source376.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _10662___mcc_h9974 = _source376.dtor_args;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source439 = _10380_name;
                if (_source439.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10663___mcc_h10283 = _source439.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10664___mcc_h10284 = _source439.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10665___mcc_h10285 = _source439.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source440 = _10664___mcc_h10284;
                  if (_source440.is_None) {
                  } else {
                    DAST._IType _10666___mcc_h10289 = _source440.dtor_value;
                    DAST._IType _10667_tpe = _10666___mcc_h10289;
                    RAST._IType _10668_typ;
                    RAST._IType _out2210;
                    _out2210 = (this).GenType(_10667_tpe, false, false);
                    _10668_typ = _out2210;
                    if ((_10668_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source439.is_MapBuilderAdd) {
                } else if (_source439.is_MapBuilderBuild) {
                } else if (_source439.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _10669___mcc_h9979 = _source376.dtor_params;
            DAST._IType _10670___mcc_h9980 = _source376.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _10671___mcc_h9981 = _source376.dtor_body;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source441 = _10380_name;
                if (_source441.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10672___mcc_h10291 = _source441.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10673___mcc_h10292 = _source441.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10674___mcc_h10293 = _source441.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source442 = _10673___mcc_h10292;
                  if (_source442.is_None) {
                  } else {
                    DAST._IType _10675___mcc_h10297 = _source442.dtor_value;
                    DAST._IType _10676_tpe = _10675___mcc_h10297;
                    RAST._IType _10677_typ;
                    RAST._IType _out2211;
                    _out2211 = (this).GenType(_10676_tpe, false, false);
                    _10677_typ = _out2211;
                    if ((_10677_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source441.is_MapBuilderAdd) {
                } else if (_source441.is_MapBuilderBuild) {
                } else if (_source441.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _10678___mcc_h9985 = _source376.dtor_values;
            DAST._IType _10679___mcc_h9986 = _source376.dtor_retType;
            DAST._IExpression _10680___mcc_h9987 = _source376.dtor_expr;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source443 = _10380_name;
                if (_source443.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10681___mcc_h10299 = _source443.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10682___mcc_h10300 = _source443.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10683___mcc_h10301 = _source443.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source444 = _10682___mcc_h10300;
                  if (_source444.is_None) {
                  } else {
                    DAST._IType _10684___mcc_h10305 = _source444.dtor_value;
                    DAST._IType _10685_tpe = _10684___mcc_h10305;
                    RAST._IType _10686_typ;
                    RAST._IType _out2212;
                    _out2212 = (this).GenType(_10685_tpe, false, false);
                    _10686_typ = _out2212;
                    if ((_10686_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source443.is_MapBuilderAdd) {
                } else if (_source443.is_MapBuilderBuild) {
                } else if (_source443.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _10687___mcc_h9991 = _source376.dtor_name;
            DAST._IType _10688___mcc_h9992 = _source376.dtor_typ;
            DAST._IExpression _10689___mcc_h9993 = _source376.dtor_value;
            DAST._IExpression _10690___mcc_h9994 = _source376.dtor_iifeBody;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source445 = _10380_name;
                if (_source445.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10691___mcc_h10307 = _source445.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10692___mcc_h10308 = _source445.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10693___mcc_h10309 = _source445.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source446 = _10692___mcc_h10308;
                  if (_source446.is_None) {
                  } else {
                    DAST._IType _10694___mcc_h10313 = _source446.dtor_value;
                    DAST._IType _10695_tpe = _10694___mcc_h10313;
                    RAST._IType _10696_typ;
                    RAST._IType _out2213;
                    _out2213 = (this).GenType(_10695_tpe, false, false);
                    _10696_typ = _out2213;
                    if ((_10696_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source445.is_MapBuilderAdd) {
                } else if (_source445.is_MapBuilderBuild) {
                } else if (_source445.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_Apply) {
            DAST._IExpression _10697___mcc_h9999 = _source376.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _10698___mcc_h10000 = _source376.dtor_args;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source447 = _10380_name;
                if (_source447.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10699___mcc_h10315 = _source447.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10700___mcc_h10316 = _source447.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10701___mcc_h10317 = _source447.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source448 = _10700___mcc_h10316;
                  if (_source448.is_None) {
                  } else {
                    DAST._IType _10702___mcc_h10321 = _source448.dtor_value;
                    DAST._IType _10703_tpe = _10702___mcc_h10321;
                    RAST._IType _10704_typ;
                    RAST._IType _out2214;
                    _out2214 = (this).GenType(_10703_tpe, false, false);
                    _10704_typ = _out2214;
                    if ((_10704_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source447.is_MapBuilderAdd) {
                } else if (_source447.is_MapBuilderBuild) {
                } else if (_source447.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_TypeTest) {
            DAST._IExpression _10705___mcc_h10003 = _source376.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10706___mcc_h10004 = _source376.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _10707___mcc_h10005 = _source376.dtor_variant;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source449 = _10380_name;
                if (_source449.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10708___mcc_h10323 = _source449.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10709___mcc_h10324 = _source449.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10710___mcc_h10325 = _source449.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source450 = _10709___mcc_h10324;
                  if (_source450.is_None) {
                  } else {
                    DAST._IType _10711___mcc_h10329 = _source450.dtor_value;
                    DAST._IType _10712_tpe = _10711___mcc_h10329;
                    RAST._IType _10713_typ;
                    RAST._IType _out2215;
                    _out2215 = (this).GenType(_10712_tpe, false, false);
                    _10713_typ = _out2215;
                    if ((_10713_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source449.is_MapBuilderAdd) {
                } else if (_source449.is_MapBuilderBuild) {
                } else if (_source449.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_InitializationValue) {
            DAST._IType _10714___mcc_h10009 = _source376.dtor_typ;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source451 = _10380_name;
                if (_source451.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10715___mcc_h10331 = _source451.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10716___mcc_h10332 = _source451.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10717___mcc_h10333 = _source451.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source452 = _10716___mcc_h10332;
                  if (_source452.is_None) {
                  } else {
                    DAST._IType _10718___mcc_h10337 = _source452.dtor_value;
                    DAST._IType _10719_tpe = _10718___mcc_h10337;
                    RAST._IType _10720_typ;
                    RAST._IType _out2216;
                    _out2216 = (this).GenType(_10719_tpe, false, false);
                    _10720_typ = _out2216;
                    if ((_10720_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source451.is_MapBuilderAdd) {
                } else if (_source451.is_MapBuilderBuild) {
                } else if (_source451.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_BoolBoundedPool) {
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source453 = _10380_name;
                if (_source453.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10721___mcc_h10339 = _source453.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10722___mcc_h10340 = _source453.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10723___mcc_h10341 = _source453.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source454 = _10722___mcc_h10340;
                  if (_source454.is_None) {
                  } else {
                    DAST._IType _10724___mcc_h10345 = _source454.dtor_value;
                    DAST._IType _10725_tpe = _10724___mcc_h10345;
                    RAST._IType _10726_typ;
                    RAST._IType _out2217;
                    _out2217 = (this).GenType(_10725_tpe, false, false);
                    _10726_typ = _out2217;
                    if ((_10726_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source453.is_MapBuilderAdd) {
                } else if (_source453.is_MapBuilderBuild) {
                } else if (_source453.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SetBoundedPool) {
            DAST._IExpression _10727___mcc_h10011 = _source376.dtor_of;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source455 = _10380_name;
                if (_source455.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10728___mcc_h10347 = _source455.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10729___mcc_h10348 = _source455.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10730___mcc_h10349 = _source455.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source456 = _10729___mcc_h10348;
                  if (_source456.is_None) {
                  } else {
                    DAST._IType _10731___mcc_h10353 = _source456.dtor_value;
                    DAST._IType _10732_tpe = _10731___mcc_h10353;
                    RAST._IType _10733_typ;
                    RAST._IType _out2218;
                    _out2218 = (this).GenType(_10732_tpe, false, false);
                    _10733_typ = _out2218;
                    if ((_10733_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source455.is_MapBuilderAdd) {
                } else if (_source455.is_MapBuilderBuild) {
                } else if (_source455.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_SeqBoundedPool) {
            DAST._IExpression _10734___mcc_h10013 = _source376.dtor_of;
            bool _10735___mcc_h10014 = _source376.dtor_includeDuplicates;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source457 = _10380_name;
                if (_source457.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10736___mcc_h10355 = _source457.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10737___mcc_h10356 = _source457.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10738___mcc_h10357 = _source457.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source458 = _10737___mcc_h10356;
                  if (_source458.is_None) {
                  } else {
                    DAST._IType _10739___mcc_h10361 = _source458.dtor_value;
                    DAST._IType _10740_tpe = _10739___mcc_h10361;
                    RAST._IType _10741_typ;
                    RAST._IType _out2219;
                    _out2219 = (this).GenType(_10740_tpe, false, false);
                    _10741_typ = _out2219;
                    if ((_10741_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source457.is_MapBuilderAdd) {
                } else if (_source457.is_MapBuilderBuild) {
                } else if (_source457.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_IntRange) {
            DAST._IExpression _10742___mcc_h10017 = _source376.dtor_lo;
            DAST._IExpression _10743___mcc_h10018 = _source376.dtor_hi;
            bool _10744___mcc_h10019 = _source376.dtor_up;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source459 = _10380_name;
                if (_source459.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10745___mcc_h10363 = _source459.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10746___mcc_h10364 = _source459.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10747___mcc_h10365 = _source459.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source460 = _10746___mcc_h10364;
                  if (_source460.is_None) {
                  } else {
                    DAST._IType _10748___mcc_h10369 = _source460.dtor_value;
                    DAST._IType _10749_tpe = _10748___mcc_h10369;
                    RAST._IType _10750_typ;
                    RAST._IType _out2220;
                    _out2220 = (this).GenType(_10749_tpe, false, false);
                    _10750_typ = _out2220;
                    if ((_10750_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source459.is_MapBuilderAdd) {
                } else if (_source459.is_MapBuilderBuild) {
                } else if (_source459.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else if (_source376.is_UnboundedIntRange) {
            DAST._IExpression _10751___mcc_h10023 = _source376.dtor_start;
            bool _10752___mcc_h10024 = _source376.dtor_up;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source461 = _10380_name;
                if (_source461.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10753___mcc_h10371 = _source461.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10754___mcc_h10372 = _source461.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10755___mcc_h10373 = _source461.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source462 = _10754___mcc_h10372;
                  if (_source462.is_None) {
                  } else {
                    DAST._IType _10756___mcc_h10377 = _source462.dtor_value;
                    DAST._IType _10757_tpe = _10756___mcc_h10377;
                    RAST._IType _10758_typ;
                    RAST._IType _out2221;
                    _out2221 = (this).GenType(_10757_tpe, false, false);
                    _10758_typ = _out2221;
                    if ((_10758_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source461.is_MapBuilderAdd) {
                } else if (_source461.is_MapBuilderBuild) {
                } else if (_source461.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          } else {
            DAST._IType _10759___mcc_h10027 = _source376.dtor_elemType;
            DAST._IExpression _10760___mcc_h10028 = _source376.dtor_collection;
            bool _10761___mcc_h10029 = _source376.dtor_is__forall;
            DAST._IExpression _10762___mcc_h10030 = _source376.dtor_lambda;
            {
              if (!object.Equals(_10382_onExpr, RAST.__default.self)) {
                DAST._ICallName _source463 = _10380_name;
                if (_source463.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10763___mcc_h10379 = _source463.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10764___mcc_h10380 = _source463.dtor_onType;
                  Dafny.ISequence<DAST._IFormal> _10765___mcc_h10381 = _source463.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source464 = _10764___mcc_h10380;
                  if (_source464.is_None) {
                  } else {
                    DAST._IType _10766___mcc_h10385 = _source464.dtor_value;
                    DAST._IType _10767_tpe = _10766___mcc_h10385;
                    RAST._IType _10768_typ;
                    RAST._IType _out2222;
                    _out2222 = (this).GenType(_10767_tpe, false, false);
                    _10768_typ = _out2222;
                    if ((_10768_typ).IsObjectOrPointer()) {
                      _10382_onExpr = ((this).read__macro).Apply1(_10382_onExpr);
                    }
                  }
                } else if (_source463.is_MapBuilderAdd) {
                } else if (_source463.is_MapBuilderBuild) {
                } else if (_source463.is_SetBuilderAdd) {
                } else {
                }
              }
              _10382_onExpr = (_10382_onExpr).Sel(_10395_renderedName);
            }
          }
          r = _10382_onExpr;
          if ((new BigInteger((_10385_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_10385_typeExprs);
          }
          r = (r).Apply(_10388_argExprs);
          RAST._IExpr _out2223;
          DCOMP._IOwnership _out2224;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2223, out _out2224);
          r = _out2223;
          resultingOwnership = _out2224;
          return ;
        }
      } else if (_source281.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _10769___mcc_h287 = _source281.dtor_params;
        DAST._IType _10770___mcc_h288 = _source281.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _10771___mcc_h289 = _source281.dtor_body;
        Dafny.ISequence<DAST._IStatement> _10772_body = _10771___mcc_h289;
        DAST._IType _10773_retType = _10770___mcc_h288;
        Dafny.ISequence<DAST._IFormal> _10774_paramsDafny = _10769___mcc_h287;
        {
          Dafny.ISequence<RAST._IFormal> _10775_params;
          Dafny.ISequence<RAST._IFormal> _out2225;
          _out2225 = (this).GenParams(_10774_paramsDafny);
          _10775_params = _out2225;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10776_paramNames;
          _10776_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _10777_paramTypesMap;
          _10777_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi41 = new BigInteger((_10775_params).Count);
          for (BigInteger _10778_i = BigInteger.Zero; _10778_i < _hi41; _10778_i++) {
            Dafny.ISequence<Dafny.Rune> _10779_name;
            _10779_name = ((_10775_params).Select(_10778_i)).dtor_name;
            _10776_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_10776_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_10779_name));
            _10777_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_10777_paramTypesMap, _10779_name, ((_10775_params).Select(_10778_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _10780_env;
          _10780_env = DCOMP.Environment.create(_10776_paramNames, _10777_paramTypesMap);
          RAST._IExpr _10781_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10782_recIdents;
          DCOMP._IEnvironment _10783___v168;
          RAST._IExpr _out2226;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2227;
          DCOMP._IEnvironment _out2228;
          (this).GenStmts(_10772_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _10780_env, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out2226, out _out2227, out _out2228);
          _10781_recursiveGen = _out2226;
          _10782_recIdents = _out2227;
          _10783___v168 = _out2228;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          _10782_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_10782_recIdents, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISet<Dafny.ISequence<Dafny.Rune>>>>((_10784_paramNames) => ((System.Func<Dafny.ISet<Dafny.ISequence<Dafny.Rune>>>)(() => {
            var _coll6 = new System.Collections.Generic.List<Dafny.ISequence<Dafny.Rune>>();
            foreach (Dafny.ISequence<Dafny.Rune> _compr_6 in (_10784_paramNames).CloneAsArray()) {
              Dafny.ISequence<Dafny.Rune> _10785_name = (Dafny.ISequence<Dafny.Rune>)_compr_6;
              if ((_10784_paramNames).Contains(_10785_name)) {
                _coll6.Add(_10785_name);
              }
            }
            return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromCollection(_coll6);
          }))())(_10776_paramNames));
          RAST._IExpr _10786_allReadCloned;
          _10786_allReadCloned = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          while (!(_10782_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _10787_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_10782_recIdents).Elements) {
              _10787_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_10782_recIdents).Contains(_10787_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 4119)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_10787_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
                _10786_allReadCloned = (_10786_allReadCloned).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
              }
            } else if (!((_10776_paramNames).Contains(_10787_next))) {
              _10786_allReadCloned = (_10786_allReadCloned).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _10787_next, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.Expr.create_Identifier(_10787_next)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_10787_next));
            }
            _10782_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_10782_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_10787_next));
          }
          RAST._IType _10788_retTypeGen;
          RAST._IType _out2229;
          _out2229 = (this).GenType(_10773_retType, false, true);
          _10788_retTypeGen = _out2229;
          r = RAST.Expr.create_Block((_10786_allReadCloned).Then(RAST.__default.RcNew(RAST.Expr.create_Lambda(_10775_params, Std.Wrappers.Option<RAST._IType>.create_Some(_10788_retTypeGen), RAST.Expr.create_Block(_10781_recursiveGen)))));
          RAST._IExpr _out2230;
          DCOMP._IOwnership _out2231;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2230, out _out2231);
          r = _out2230;
          resultingOwnership = _out2231;
          return ;
        }
      } else if (_source281.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _10789___mcc_h290 = _source281.dtor_values;
        DAST._IType _10790___mcc_h291 = _source281.dtor_retType;
        DAST._IExpression _10791___mcc_h292 = _source281.dtor_expr;
        DAST._IExpression _10792_expr = _10791___mcc_h292;
        DAST._IType _10793_retType = _10790___mcc_h291;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _10794_values = _10789___mcc_h290;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10795_paramNames;
          _10795_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _10796_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out2232;
          _out2232 = (this).GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_10797_value) => {
            return (_10797_value).dtor__0;
          })), _10794_values));
          _10796_paramFormals = _out2232;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _10798_paramTypes;
          _10798_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10799_paramNamesSet;
          _10799_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi42 = new BigInteger((_10794_values).Count);
          for (BigInteger _10800_i = BigInteger.Zero; _10800_i < _hi42; _10800_i++) {
            Dafny.ISequence<Dafny.Rune> _10801_name;
            _10801_name = (((_10794_values).Select(_10800_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _10802_rName;
            _10802_rName = DCOMP.__default.escapeName(_10801_name);
            _10795_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_10795_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_10802_rName));
            _10798_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_10798_paramTypes, _10802_rName, ((_10796_paramFormals).Select(_10800_i)).dtor_tpe);
            _10799_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_10799_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_10802_rName));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          BigInteger _hi43 = new BigInteger((_10794_values).Count);
          for (BigInteger _10803_i = BigInteger.Zero; _10803_i < _hi43; _10803_i++) {
            RAST._IType _10804_typeGen;
            RAST._IType _out2233;
            _out2233 = (this).GenType((((_10794_values).Select(_10803_i)).dtor__0).dtor_typ, false, true);
            _10804_typeGen = _out2233;
            RAST._IExpr _10805_valueGen;
            DCOMP._IOwnership _10806___v169;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10807_recIdents;
            RAST._IExpr _out2234;
            DCOMP._IOwnership _out2235;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2236;
            (this).GenExpr(((_10794_values).Select(_10803_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2234, out _out2235, out _out2236);
            _10805_valueGen = _out2234;
            _10806___v169 = _out2235;
            _10807_recIdents = _out2236;
            r = (r).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), DCOMP.__default.escapeName((((_10794_values).Select(_10803_i)).dtor__0).dtor_name), Std.Wrappers.Option<RAST._IType>.create_Some(_10804_typeGen), Std.Wrappers.Option<RAST._IExpr>.create_Some(_10805_valueGen)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10807_recIdents);
          }
          DCOMP._IEnvironment _10808_newEnv;
          _10808_newEnv = DCOMP.Environment.create(_10795_paramNames, _10798_paramTypes);
          RAST._IExpr _10809_recGen;
          DCOMP._IOwnership _10810_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10811_recIdents;
          RAST._IExpr _out2237;
          DCOMP._IOwnership _out2238;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2239;
          (this).GenExpr(_10792_expr, selfIdent, _10808_newEnv, expectedOwnership, out _out2237, out _out2238, out _out2239);
          _10809_recGen = _out2237;
          _10810_recOwned = _out2238;
          _10811_recIdents = _out2239;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_10811_recIdents, _10799_paramNamesSet);
          r = RAST.Expr.create_Block((r).Then(_10809_recGen));
          RAST._IExpr _out2240;
          DCOMP._IOwnership _out2241;
          DCOMP.COMP.FromOwnership(r, _10810_recOwned, expectedOwnership, out _out2240, out _out2241);
          r = _out2240;
          resultingOwnership = _out2241;
          return ;
        }
      } else if (_source281.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _10812___mcc_h293 = _source281.dtor_name;
        DAST._IType _10813___mcc_h294 = _source281.dtor_typ;
        DAST._IExpression _10814___mcc_h295 = _source281.dtor_value;
        DAST._IExpression _10815___mcc_h296 = _source281.dtor_iifeBody;
        DAST._IExpression _10816_iifeBody = _10815___mcc_h296;
        DAST._IExpression _10817_value = _10814___mcc_h295;
        DAST._IType _10818_tpe = _10813___mcc_h294;
        Dafny.ISequence<Dafny.Rune> _10819_name = _10812___mcc_h293;
        {
          RAST._IExpr _10820_valueGen;
          DCOMP._IOwnership _10821___v170;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10822_recIdents;
          RAST._IExpr _out2242;
          DCOMP._IOwnership _out2243;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2244;
          (this).GenExpr(_10817_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2242, out _out2243, out _out2244);
          _10820_valueGen = _out2242;
          _10821___v170 = _out2243;
          _10822_recIdents = _out2244;
          readIdents = _10822_recIdents;
          RAST._IType _10823_valueTypeGen;
          RAST._IType _out2245;
          _out2245 = (this).GenType(_10818_tpe, false, true);
          _10823_valueTypeGen = _out2245;
          RAST._IExpr _10824_bodyGen;
          DCOMP._IOwnership _10825___v171;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10826_bodyIdents;
          RAST._IExpr _out2246;
          DCOMP._IOwnership _out2247;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2248;
          (this).GenExpr(_10816_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2246, out _out2247, out _out2248);
          _10824_bodyGen = _out2246;
          _10825___v171 = _out2247;
          _10826_bodyIdents = _out2248;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_10826_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(DCOMP.__default.escapeName((_10819_name)))));
          r = RAST.Expr.create_Block((RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), DCOMP.__default.escapeName((_10819_name)), Std.Wrappers.Option<RAST._IType>.create_Some(_10823_valueTypeGen), Std.Wrappers.Option<RAST._IExpr>.create_Some(_10820_valueGen))).Then(_10824_bodyGen));
          RAST._IExpr _out2249;
          DCOMP._IOwnership _out2250;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2249, out _out2250);
          r = _out2249;
          resultingOwnership = _out2250;
          return ;
        }
      } else if (_source281.is_Apply) {
        DAST._IExpression _10827___mcc_h297 = _source281.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _10828___mcc_h298 = _source281.dtor_args;
        Dafny.ISequence<DAST._IExpression> _10829_args = _10828___mcc_h298;
        DAST._IExpression _10830_func = _10827___mcc_h297;
        {
          RAST._IExpr _10831_funcExpr;
          DCOMP._IOwnership _10832___v172;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10833_recIdents;
          RAST._IExpr _out2251;
          DCOMP._IOwnership _out2252;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2253;
          (this).GenExpr(_10830_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2251, out _out2252, out _out2253);
          _10831_funcExpr = _out2251;
          _10832___v172 = _out2252;
          _10833_recIdents = _out2253;
          readIdents = _10833_recIdents;
          Dafny.ISequence<RAST._IExpr> _10834_rArgs;
          _10834_rArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi44 = new BigInteger((_10829_args).Count);
          for (BigInteger _10835_i = BigInteger.Zero; _10835_i < _hi44; _10835_i++) {
            RAST._IExpr _10836_argExpr;
            DCOMP._IOwnership _10837_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10838_argIdents;
            RAST._IExpr _out2254;
            DCOMP._IOwnership _out2255;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2256;
            (this).GenExpr((_10829_args).Select(_10835_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2254, out _out2255, out _out2256);
            _10836_argExpr = _out2254;
            _10837_argOwned = _out2255;
            _10838_argIdents = _out2256;
            _10834_rArgs = Dafny.Sequence<RAST._IExpr>.Concat(_10834_rArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_10836_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10838_argIdents);
          }
          r = (_10831_funcExpr).Apply(_10834_rArgs);
          RAST._IExpr _out2257;
          DCOMP._IOwnership _out2258;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2257, out _out2258);
          r = _out2257;
          resultingOwnership = _out2258;
          return ;
        }
      } else if (_source281.is_TypeTest) {
        DAST._IExpression _10839___mcc_h299 = _source281.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10840___mcc_h300 = _source281.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _10841___mcc_h301 = _source281.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _10842_variant = _10841___mcc_h301;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10843_dType = _10840___mcc_h300;
        DAST._IExpression _10844_on = _10839___mcc_h299;
        {
          RAST._IExpr _10845_exprGen;
          DCOMP._IOwnership _10846___v173;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10847_recIdents;
          RAST._IExpr _out2259;
          DCOMP._IOwnership _out2260;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2261;
          (this).GenExpr(_10844_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2259, out _out2260, out _out2261);
          _10845_exprGen = _out2259;
          _10846___v173 = _out2260;
          _10847_recIdents = _out2261;
          RAST._IType _10848_dTypePath;
          RAST._IType _out2262;
          _out2262 = DCOMP.COMP.GenPath(_10843_dType);
          _10848_dTypePath = _out2262;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_10845_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_10848_dTypePath).MSel(DCOMP.__default.escapeName(_10842_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out2263;
          DCOMP._IOwnership _out2264;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2263, out _out2264);
          r = _out2263;
          resultingOwnership = _out2264;
          readIdents = _10847_recIdents;
          return ;
        }
      } else if (_source281.is_InitializationValue) {
        DAST._IType _10849___mcc_h302 = _source281.dtor_typ;
        DAST._IType _10850_typ = _10849___mcc_h302;
        {
          RAST._IType _10851_typExpr;
          RAST._IType _out2265;
          _out2265 = (this).GenType(_10850_typ, false, false);
          _10851_typExpr = _out2265;
          if ((_10851_typExpr).IsObjectOrPointer()) {
            r = (_10851_typExpr).ToNullExpr();
          } else {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_10851_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          }
          RAST._IExpr _out2266;
          DCOMP._IOwnership _out2267;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2266, out _out2267);
          r = _out2266;
          resultingOwnership = _out2267;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source281.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out2268;
          DCOMP._IOwnership _out2269;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2268, out _out2269);
          r = _out2268;
          resultingOwnership = _out2269;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source281.is_SetBoundedPool) {
        DAST._IExpression _10852___mcc_h303 = _source281.dtor_of;
        DAST._IExpression _10853_of = _10852___mcc_h303;
        {
          RAST._IExpr _10854_exprGen;
          DCOMP._IOwnership _10855___v174;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10856_recIdents;
          RAST._IExpr _out2270;
          DCOMP._IOwnership _out2271;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2272;
          (this).GenExpr(_10853_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2270, out _out2271, out _out2272);
          _10854_exprGen = _out2270;
          _10855___v174 = _out2271;
          _10856_recIdents = _out2272;
          r = ((((_10854_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("iter"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cloned"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out2273;
          DCOMP._IOwnership _out2274;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2273, out _out2274);
          r = _out2273;
          resultingOwnership = _out2274;
          readIdents = _10856_recIdents;
          return ;
        }
      } else if (_source281.is_SeqBoundedPool) {
        DAST._IExpression _10857___mcc_h304 = _source281.dtor_of;
        bool _10858___mcc_h305 = _source281.dtor_includeDuplicates;
        bool _10859_includeDuplicates = _10858___mcc_h305;
        DAST._IExpression _10860_of = _10857___mcc_h304;
        {
          RAST._IExpr _10861_exprGen;
          DCOMP._IOwnership _10862___v175;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10863_recIdents;
          RAST._IExpr _out2275;
          DCOMP._IOwnership _out2276;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2277;
          (this).GenExpr(_10860_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2275, out _out2276, out _out2277);
          _10861_exprGen = _out2275;
          _10862___v175 = _out2276;
          _10863_recIdents = _out2277;
          r = ((_10861_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("iter"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          if (!(_10859_includeDuplicates)) {
            r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("itertools"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Itertools"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unique"))).Apply1(r);
          }
          RAST._IExpr _out2278;
          DCOMP._IOwnership _out2279;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2278, out _out2279);
          r = _out2278;
          resultingOwnership = _out2279;
          readIdents = _10863_recIdents;
          return ;
        }
      } else if (_source281.is_IntRange) {
        DAST._IExpression _10864___mcc_h306 = _source281.dtor_lo;
        DAST._IExpression _10865___mcc_h307 = _source281.dtor_hi;
        bool _10866___mcc_h308 = _source281.dtor_up;
        bool _10867_up = _10866___mcc_h308;
        DAST._IExpression _10868_hi = _10865___mcc_h307;
        DAST._IExpression _10869_lo = _10864___mcc_h306;
        {
          RAST._IExpr _10870_lo;
          DCOMP._IOwnership _10871___v176;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10872_recIdentsLo;
          RAST._IExpr _out2280;
          DCOMP._IOwnership _out2281;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2282;
          (this).GenExpr(_10869_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2280, out _out2281, out _out2282);
          _10870_lo = _out2280;
          _10871___v176 = _out2281;
          _10872_recIdentsLo = _out2282;
          RAST._IExpr _10873_hi;
          DCOMP._IOwnership _10874___v177;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10875_recIdentsHi;
          RAST._IExpr _out2283;
          DCOMP._IOwnership _out2284;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2285;
          (this).GenExpr(_10868_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2283, out _out2284, out _out2285);
          _10873_hi = _out2283;
          _10874___v177 = _out2284;
          _10875_recIdentsHi = _out2285;
          if (_10867_up) {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10870_lo, _10873_hi));
          } else {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_down"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_10873_hi, _10870_lo));
          }
          RAST._IExpr _out2286;
          DCOMP._IOwnership _out2287;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2286, out _out2287);
          r = _out2286;
          resultingOwnership = _out2287;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_10872_recIdentsLo, _10875_recIdentsHi);
          return ;
        }
      } else if (_source281.is_UnboundedIntRange) {
        DAST._IExpression _10876___mcc_h309 = _source281.dtor_start;
        bool _10877___mcc_h310 = _source281.dtor_up;
        bool _10878_up = _10877___mcc_h310;
        DAST._IExpression _10879_start = _10876___mcc_h309;
        {
          RAST._IExpr _10880_start;
          DCOMP._IOwnership _10881___v178;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10882_recIdentStart;
          RAST._IExpr _out2288;
          DCOMP._IOwnership _out2289;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2290;
          (this).GenExpr(_10879_start, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2288, out _out2289, out _out2290);
          _10880_start = _out2288;
          _10881___v178 = _out2289;
          _10882_recIdentStart = _out2290;
          if (_10878_up) {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_unbounded"))).Apply1(_10880_start);
          } else {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_down_unbounded"))).Apply1(_10880_start);
          }
          RAST._IExpr _out2291;
          DCOMP._IOwnership _out2292;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2291, out _out2292);
          r = _out2291;
          resultingOwnership = _out2292;
          readIdents = _10882_recIdentStart;
          return ;
        }
      } else {
        DAST._IType _10883___mcc_h311 = _source281.dtor_elemType;
        DAST._IExpression _10884___mcc_h312 = _source281.dtor_collection;
        bool _10885___mcc_h313 = _source281.dtor_is__forall;
        DAST._IExpression _10886___mcc_h314 = _source281.dtor_lambda;
        DAST._IExpression _10887_lambda = _10886___mcc_h314;
        bool _10888_is__forall = _10885___mcc_h313;
        DAST._IExpression _10889_collection = _10884___mcc_h312;
        DAST._IType _10890_elemType = _10883___mcc_h311;
        {
          RAST._IType _10891_tpe;
          RAST._IType _out2293;
          _out2293 = (this).GenType(_10890_elemType, false, false);
          _10891_tpe = _out2293;
          RAST._IExpr _10892_collectionGen;
          DCOMP._IOwnership _10893___v179;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10894_recIdents;
          RAST._IExpr _out2294;
          DCOMP._IOwnership _out2295;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2296;
          (this).GenExpr(_10889_collection, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2294, out _out2295, out _out2296);
          _10892_collectionGen = _out2294;
          _10893___v179 = _out2295;
          _10894_recIdents = _out2296;
          if ((_10887_lambda).is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _10895_formals;
            _10895_formals = (_10887_lambda).dtor_params;
            Dafny.ISequence<DAST._IFormal> _10896_newFormals;
            _10896_newFormals = Dafny.Sequence<DAST._IFormal>.FromElements();
            BigInteger _hi45 = new BigInteger((_10895_formals).Count);
            for (BigInteger _10897_i = BigInteger.Zero; _10897_i < _hi45; _10897_i++) {
              var _pat_let_tv13 = _10895_formals;
              _10896_newFormals = Dafny.Sequence<DAST._IFormal>.Concat(_10896_newFormals, Dafny.Sequence<DAST._IFormal>.FromElements(Dafny.Helpers.Let<DAST._IFormal, DAST._IFormal>((_10895_formals).Select(_10897_i), _pat_let12_0 => Dafny.Helpers.Let<DAST._IFormal, DAST._IFormal>(_pat_let12_0, _10898_dt__update__tmp_h0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IAttribute>, DAST._IFormal>(Dafny.Sequence<DAST._IAttribute>.Concat(Dafny.Sequence<DAST._IAttribute>.FromElements(DCOMP.__default.AttributeOwned), ((_pat_let_tv13).Select(_10897_i)).dtor_attributes), _pat_let13_0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IAttribute>, DAST._IFormal>(_pat_let13_0, _10899_dt__update_hattributes_h0 => DAST.Formal.create((_10898_dt__update__tmp_h0).dtor_name, (_10898_dt__update__tmp_h0).dtor_typ, _10899_dt__update_hattributes_h0)))))));
            }
            var _pat_let_tv14 = _10896_newFormals;
            DAST._IExpression _10900_newLambda;
            _10900_newLambda = Dafny.Helpers.Let<DAST._IExpression, DAST._IExpression>(_10887_lambda, _pat_let14_0 => Dafny.Helpers.Let<DAST._IExpression, DAST._IExpression>(_pat_let14_0, _10901_dt__update__tmp_h1 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IFormal>, DAST._IExpression>(_pat_let_tv14, _pat_let15_0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IFormal>, DAST._IExpression>(_pat_let15_0, _10902_dt__update_hparams_h0 => DAST.Expression.create_Lambda(_10902_dt__update_hparams_h0, (_10901_dt__update__tmp_h1).dtor_retType, (_10901_dt__update__tmp_h1).dtor_body)))));
            RAST._IExpr _10903_lambdaGen;
            DCOMP._IOwnership _10904___v180;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10905_recLambdaIdents;
            RAST._IExpr _out2297;
            DCOMP._IOwnership _out2298;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2299;
            (this).GenExpr(_10900_newLambda, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2297, out _out2298, out _out2299);
            _10903_lambdaGen = _out2297;
            _10904___v180 = _out2298;
            _10905_recLambdaIdents = _out2299;
            Dafny.ISequence<Dafny.Rune> _10906_fn;
            _10906_fn = ((_10888_is__forall) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("all")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("any")));
            r = ((_10892_collectionGen).Sel(_10906_fn)).Apply1(((_10903_lambdaGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_10894_recIdents, _10905_recLambdaIdents);
          } else {
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Quantifier without an inline lambda"));
            r = RAST.Expr.create_RawExpr((this.error).dtor_value);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          }
          RAST._IExpr _out2300;
          DCOMP._IOwnership _out2301;
          DCOMP.COMP.FromOwned(r, expectedOwnership, out _out2300, out _out2301);
          r = _out2300;
          resultingOwnership = _out2301;
        }
      }
    }
    public Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      BigInteger _10907_i;
      _10907_i = BigInteger.Zero;
      while ((_10907_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _10908_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _10909_m;
        RAST._IMod _out2302;
        _out2302 = (this).GenModule((p).Select(_10907_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _10909_m = _out2302;
        _10908_generated = (_10909_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_10907_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _10908_generated);
        _10907_i = (_10907_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _10910_i;
      _10910_i = BigInteger.Zero;
      while ((_10910_i) < (new BigInteger((fullName).Count))) {
        if ((_10910_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeName((fullName).Select(_10910_i)));
        _10910_i = (_10910_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public bool _i_UnicodeChars {get; set;}
    public bool UnicodeChars { get {
      return this._i_UnicodeChars;
    } }
    public Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if ((this).UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public RAST._IType DafnyCharUnderlying { get {
      if ((this).UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public Dafny.ISequence<Dafny.Rune> string__of { get {
      if ((this).UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_utf16_of");
      }
    } }
    public DCOMP._IObjectType _i_ObjectType {get; set;}
    public DCOMP._IObjectType ObjectType { get {
      return this._i_ObjectType;
    } }
    public Dafny.ISequence<Dafny.Rune> allocate { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate_rcmut");
      }
    } }
    public Dafny.ISequence<Dafny.Rune> allocate__fn { get {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), (this).allocate);
    } }
    public Dafny.ISequence<Dafny.Rune> update__field__uninit__macro { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit!");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit_rcmut!");
      }
    } }
    public RAST._IExpr thisInConstructor { get {
      if (((this).ObjectType).is_RawPointers) {
        return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
      } else {
        return ((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
      }
    } }
    public Dafny.ISequence<Dafny.Rune> array__construct { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("construct");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("construct_rcmut");
      }
    } }
    public RAST._IExpr modify__macro { get {
      return (RAST.__default.dafny__runtime).MSel(((((this).ObjectType).is_RawPointers) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("md!"))));
    } }
    public RAST._IExpr read__macro { get {
      return (RAST.__default.dafny__runtime).MSel(((((this).ObjectType).is_RawPointers) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rd!"))));
    } }
    public Dafny.ISequence<Dafny.Rune> placebos__usize { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("placebos_usize");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("placebos_usize_rcmut");
      }
    } }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP