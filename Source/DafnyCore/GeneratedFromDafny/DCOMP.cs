// Dafny program the_program compiled into C#
// To recompile, you will need the libraries
//     System.Runtime.Numerics.dll System.Collections.Immutable.dll
// but the 'dotnet' tool in net6.0 should pick those up automatically.
// Optionally, you may want to include compiler switches like
//     /debug /nowarn:162,164,168,183,219,436,1717,1718

using System;
using System.Numerics;
using System.Collections;

namespace DCOMP {

  public partial class __default {
    public static bool is__tuple__numeric(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(2))) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(BigInteger.One)))) && (((new BigInteger((i).Count)) == (new BigInteger(2))) || (((new BigInteger((i).Count)) == (new BigInteger(3))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(2))))));
    }
    public static bool has__special(Dafny.ISequence<Dafny.Rune> i) {
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return false;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('#'))) {
        return true;
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        if ((new BigInteger(2)) <= (new BigInteger((i).Count))) {
          if (((i).Select(BigInteger.One)) != (new Dafny.Rune('_'))) {
            return true;
          } else {
            Dafny.ISequence<Dafny.Rune> _in113 = (i).Drop(new BigInteger(2));
            i = _in113;
            goto TAIL_CALL_START;
          }
        } else {
          return true;
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _in114 = (i).Drop(BigInteger.One);
        i = _in114;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> idiomatic__rust(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2351___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2351___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_'))) {
        _2351___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2351___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"));
        Dafny.ISequence<Dafny.Rune> _in115 = (i).Drop(new BigInteger(2));
        i = _in115;
        goto TAIL_CALL_START;
      } else {
        _2351___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2351___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in116 = (i).Drop(BigInteger.One);
        i = _in116;
        goto TAIL_CALL_START;
      }
    }
    public static Dafny.ISequence<Dafny.Rune> replaceDots(Dafny.ISequence<Dafny.Rune> i) {
      Dafny.ISequence<Dafny.Rune> _2352___accumulator = Dafny.Sequence<Dafny.Rune>.FromElements();
    TAIL_CALL_START: ;
      if ((new BigInteger((i).Count)).Sign == 0) {
        return Dafny.Sequence<Dafny.Rune>.Concat(_2352___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      } else if (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('.'))) {
        _2352___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2352___accumulator, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_d"));
        Dafny.ISequence<Dafny.Rune> _in117 = (i).Drop(BigInteger.One);
        i = _in117;
        goto TAIL_CALL_START;
      } else {
        _2352___accumulator = Dafny.Sequence<Dafny.Rune>.Concat(_2352___accumulator, Dafny.Sequence<Dafny.Rune>.FromElements((i).Select(BigInteger.Zero)));
        Dafny.ISequence<Dafny.Rune> _in118 = (i).Drop(BigInteger.One);
        i = _in118;
        goto TAIL_CALL_START;
      }
    }
    public static bool is__tuple__builder(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)) >= (new BigInteger(9))) && (((i).Take(new BigInteger(8))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("___hMake")))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(8))))) && (((new BigInteger((i).Count)) == (new BigInteger(9))) || (((new BigInteger((i).Count)) == (new BigInteger(10))) && ((Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0123456789")).Contains((i).Select(new BigInteger(9))))));
    }
    public static Dafny.ISequence<Dafny.Rune> better__tuple__builder__name(Dafny.ISequence<Dafny.Rune> i) {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_T"), (i).Drop(new BigInteger(8)));
    }
    public static bool is__dafny__generated__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (((i).Select(BigInteger.Zero)) == (new Dafny.Rune('_')))) && (!(DCOMP.__default.has__special((i).Drop(BigInteger.One))))) && (!((new BigInteger((i).Count)) >= (new BigInteger(2))) || (((i).Select(BigInteger.One)) != (new Dafny.Rune('T'))));
    }
    public static bool is__idiomatic__rust__id(Dafny.ISequence<Dafny.Rune> i) {
      return ((((new BigInteger((i).Count)).Sign == 1) && (!(DCOMP.__default.has__special(i)))) && (!(DCOMP.__default.reserved__rust).Contains(i))) && (!(DCOMP.__default.reserved__rust__need__prefix).Contains(i));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeName(Dafny.ISequence<Dafny.Rune> n) {
      return DCOMP.__default.escapeIdent((n));
    }
    public static Dafny.ISequence<Dafny.Rune> escapeIdent(Dafny.ISequence<Dafny.Rune> i) {
      if (DCOMP.__default.is__tuple__numeric(i)) {
        return i;
      } else if (DCOMP.__default.is__tuple__builder(i)) {
        return DCOMP.__default.better__tuple__builder__name(i);
      } else if (((i).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) || ((i).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Self")))) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), i);
      } else if ((DCOMP.__default.reserved__rust).Contains(i)) {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#"), i);
      } else if (DCOMP.__default.is__idiomatic__rust__id(i)) {
        return DCOMP.__default.idiomatic__rust(i);
      } else if (DCOMP.__default.is__dafny__generated__id(i)) {
        return i;
      } else {
        Dafny.ISequence<Dafny.Rune> _2353_r = DCOMP.__default.replaceDots(i);
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#_"), _2353_r);
      }
    }
    public static Dafny.ISequence<Dafny.Rune> AddAssignedPrefix(Dafny.ISequence<Dafny.Rune> rustName) {
      if (((new BigInteger((rustName).Count)) >= (new BigInteger(2))) && (((rustName).Subsequence(BigInteger.Zero, new BigInteger(2))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("r#")))) {
        return Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, (rustName).Drop(new BigInteger(2)));
      } else {
        return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.ASSIGNED__PREFIX, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_")), rustName);
      }
    }
    public static Std.Wrappers._IOption<DAST._IResolvedType> TraitTypeContainingMethodAux(Dafny.ISequence<DAST._IType> rs, Dafny.ISequence<Dafny.Rune> dafnyName)
    {
      var _pat_let_tv12 = dafnyName;
      if ((new BigInteger((rs).Count)).Sign == 0) {
        return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
      } else {
        Std.Wrappers._IOption<DAST._IResolvedType> _2354_res = ((System.Func<DAST._IType, Std.Wrappers._IOption<DAST._IResolvedType>>)((_source80) => {
          if (_source80.is_UserDefined) {
            DAST._IResolvedType _2355___mcc_h0 = _source80.dtor_resolved;
            DAST._IResolvedType _2356_resolvedType = _2355___mcc_h0;
            return DCOMP.__default.TraitTypeContainingMethod(_2356_resolvedType, _pat_let_tv12);
          } else if (_source80.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2357___mcc_h2 = _source80.dtor_Tuple_i_a0;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Array) {
            DAST._IType _2358___mcc_h4 = _source80.dtor_element;
            BigInteger _2359___mcc_h5 = _source80.dtor_dims;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Seq) {
            DAST._IType _2360___mcc_h8 = _source80.dtor_element;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Set) {
            DAST._IType _2361___mcc_h10 = _source80.dtor_element;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Multiset) {
            DAST._IType _2362___mcc_h12 = _source80.dtor_element;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Map) {
            DAST._IType _2363___mcc_h14 = _source80.dtor_key;
            DAST._IType _2364___mcc_h15 = _source80.dtor_value;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_SetBuilder) {
            DAST._IType _2365___mcc_h18 = _source80.dtor_element;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_MapBuilder) {
            DAST._IType _2366___mcc_h20 = _source80.dtor_key;
            DAST._IType _2367___mcc_h21 = _source80.dtor_value;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2368___mcc_h24 = _source80.dtor_args;
            DAST._IType _2369___mcc_h25 = _source80.dtor_result;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Primitive) {
            DAST._IPrimitive _2370___mcc_h28 = _source80.dtor_Primitive_i_a0;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2371___mcc_h30 = _source80.dtor_Passthrough_i_a0;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else if (_source80.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _2372___mcc_h32 = _source80.dtor_TypeArg_i_a0;
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          } else {
            return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
          }
        }))((rs).Select(BigInteger.Zero));
        Std.Wrappers._IOption<DAST._IResolvedType> _source81 = _2354_res;
        if (_source81.is_None) {
          return DCOMP.__default.TraitTypeContainingMethodAux((rs).Drop(BigInteger.One), dafnyName);
        } else {
          DAST._IResolvedType _2373___mcc_h34 = _source81.dtor_value;
          return _2354_res;
        }
      }
    }
    public static Std.Wrappers._IOption<DAST._IResolvedType> TraitTypeContainingMethod(DAST._IResolvedType r, Dafny.ISequence<Dafny.Rune> dafnyName)
    {
      DAST._IResolvedType _let_tmp_rhs52 = r;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2374_path = _let_tmp_rhs52.dtor_path;
      Dafny.ISequence<DAST._IType> _2375_typeArgs = _let_tmp_rhs52.dtor_typeArgs;
      DAST._IResolvedTypeBase _2376_kind = _let_tmp_rhs52.dtor_kind;
      Dafny.ISequence<DAST._IAttribute> _2377_attributes = _let_tmp_rhs52.dtor_attributes;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2378_properMethods = _let_tmp_rhs52.dtor_properMethods;
      Dafny.ISequence<DAST._IType> _2379_extendedTypes = _let_tmp_rhs52.dtor_extendedTypes;
      if ((_2378_properMethods).Contains(dafnyName)) {
        return Std.Wrappers.Option<DAST._IResolvedType>.create_Some(r);
      } else {
        return DCOMP.__default.TraitTypeContainingMethodAux(_2379_extendedTypes, dafnyName);
      }
    }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("async"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("await"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("break"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("const"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("continue"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("crate"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("else"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("enum"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("extern"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fn"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("for"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("if"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("impl"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("loop"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("match"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mod"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("mut"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("pub"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ref"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("return"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("static"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("struct"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("trait"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("union"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsafe"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("use"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("where"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("while"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Keywords"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("The"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("abstract"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("become"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("box"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("do"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("final"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("macro"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("override"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("priv"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("try"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("typeof"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unsized"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("virtual"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("yield"));
    } }
    public static Dafny.ISet<Dafny.ISequence<Dafny.Rune>> reserved__rust__need__prefix { get {
      return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u128"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i8"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i16"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i32"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i64"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("i128"));
    } }
    public static Dafny.ISequence<Dafny.Rune> ASSIGNED__PREFIX { get {
      return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_set");
    } }
    public static Dafny.ISequence<Dafny.Rune> IND { get {
      return RAST.__default.IND;
    } }
    public static DAST._IAttribute AttributeOwned { get {
      return DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("owned"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
    } }
  }

  public interface _IOwnership {
    bool is_OwnershipOwned { get; }
    bool is_OwnershipOwnedBox { get; }
    bool is_OwnershipBorrowed { get; }
    bool is_OwnershipBorrowedMut { get; }
    bool is_OwnershipAutoBorrowed { get; }
    _IOwnership DowncastClone();
  }
  public abstract class Ownership : _IOwnership {
    public Ownership() {
    }
    private static readonly DCOMP._IOwnership theDefault = create_OwnershipOwned();
    public static DCOMP._IOwnership Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IOwnership> _TYPE = new Dafny.TypeDescriptor<DCOMP._IOwnership>(DCOMP.Ownership.Default());
    public static Dafny.TypeDescriptor<DCOMP._IOwnership> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IOwnership create_OwnershipOwned() {
      return new Ownership_OwnershipOwned();
    }
    public static _IOwnership create_OwnershipOwnedBox() {
      return new Ownership_OwnershipOwnedBox();
    }
    public static _IOwnership create_OwnershipBorrowed() {
      return new Ownership_OwnershipBorrowed();
    }
    public static _IOwnership create_OwnershipBorrowedMut() {
      return new Ownership_OwnershipBorrowedMut();
    }
    public static _IOwnership create_OwnershipAutoBorrowed() {
      return new Ownership_OwnershipAutoBorrowed();
    }
    public bool is_OwnershipOwned { get { return this is Ownership_OwnershipOwned; } }
    public bool is_OwnershipOwnedBox { get { return this is Ownership_OwnershipOwnedBox; } }
    public bool is_OwnershipBorrowed { get { return this is Ownership_OwnershipBorrowed; } }
    public bool is_OwnershipBorrowedMut { get { return this is Ownership_OwnershipBorrowedMut; } }
    public bool is_OwnershipAutoBorrowed { get { return this is Ownership_OwnershipAutoBorrowed; } }
    public static System.Collections.Generic.IEnumerable<_IOwnership> AllSingletonConstructors {
      get {
        yield return Ownership.create_OwnershipOwned();
        yield return Ownership.create_OwnershipOwnedBox();
        yield return Ownership.create_OwnershipBorrowed();
        yield return Ownership.create_OwnershipBorrowedMut();
        yield return Ownership.create_OwnershipAutoBorrowed();
      }
    }
    public abstract _IOwnership DowncastClone();
  }
  public class Ownership_OwnershipOwned : Ownership {
    public Ownership_OwnershipOwned() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwned();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwned;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwned";
      return s;
    }
  }
  public class Ownership_OwnershipOwnedBox : Ownership {
    public Ownership_OwnershipOwnedBox() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipOwnedBox();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipOwnedBox;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipOwnedBox";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowed : Ownership {
    public Ownership_OwnershipBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 2;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowed";
      return s;
    }
  }
  public class Ownership_OwnershipBorrowedMut : Ownership {
    public Ownership_OwnershipBorrowedMut() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipBorrowedMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipBorrowedMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 3;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipBorrowedMut";
      return s;
    }
  }
  public class Ownership_OwnershipAutoBorrowed : Ownership {
    public Ownership_OwnershipAutoBorrowed() : base() {
    }
    public override _IOwnership DowncastClone() {
      if (this is _IOwnership dt) { return dt; }
      return new Ownership_OwnershipAutoBorrowed();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Ownership_OwnershipAutoBorrowed;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 4;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Ownership.OwnershipAutoBorrowed";
      return s;
    }
  }

  public interface _IEnvironment {
    bool is_Environment { get; }
    Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names { get; }
    Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types { get; }
    _IEnvironment DowncastClone();
    bool CanReadWithoutClone(Dafny.ISequence<Dafny.Rune> name);
    bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name);
    Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name);
    bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name);
    DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe);
    DCOMP._IEnvironment merge(DCOMP._IEnvironment other);
    DCOMP._IEnvironment RemoveAssigned(Dafny.ISequence<Dafny.Rune> name);
  }
  public class Environment : _IEnvironment {
    public readonly Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _i_names;
    public readonly Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _i_types;
    public Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      this._i_names = names;
      this._i_types = types;
    }
    public _IEnvironment DowncastClone() {
      if (this is _IEnvironment dt) { return dt; }
      return new Environment(_i_names, _i_types);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.Environment;
      return oth != null && object.Equals(this._i_names, oth._i_names) && object.Equals(this._i_types, oth._i_types);
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_names));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_types));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.Environment.Environment";
      s += "(";
      s += Dafny.Helpers.ToString(this._i_names);
      s += ", ";
      s += Dafny.Helpers.ToString(this._i_types);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IEnvironment theDefault = create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Empty, Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Empty);
    public static DCOMP._IEnvironment Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IEnvironment> _TYPE = new Dafny.TypeDescriptor<DCOMP._IEnvironment>(DCOMP.Environment.Default());
    public static Dafny.TypeDescriptor<DCOMP._IEnvironment> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IEnvironment create(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return new Environment(names, types);
    }
    public static _IEnvironment create_Environment(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> names, Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> types) {
      return create(names, types);
    }
    public bool is_Environment { get { return true; } }
    public Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> dtor_names {
      get {
        return this._i_names;
      }
    }
    public Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> dtor_types {
      get {
        return this._i_types;
      }
    }
    public static DCOMP._IEnvironment Empty() {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements());
    }
    public bool CanReadWithoutClone(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).CanReadWithoutClone());
    }
    public bool HasCloneSemantics(Dafny.ISequence<Dafny.Rune> name) {
      return !((this).CanReadWithoutClone(name));
    }
    public Std.Wrappers._IOption<RAST._IType> GetType(Dafny.ISequence<Dafny.Rune> name) {
      if (((this).dtor_types).Contains(name)) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name));
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public bool IsBorrowed(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_Borrowed);
    }
    public bool IsBorrowedMut(Dafny.ISequence<Dafny.Rune> name) {
      return (((this).dtor_types).Contains(name)) && ((Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((this).dtor_types,name)).is_BorrowedMut);
    }
    public DCOMP._IEnvironment AddAssigned(Dafny.ISequence<Dafny.Rune> name, RAST._IType tpe)
    {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(name)), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update((this).dtor_types, name, tpe));
    }
    public DCOMP._IEnvironment merge(DCOMP._IEnvironment other) {
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat((this).dtor_names, (other).dtor_names), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Merge((this).dtor_types, (other).dtor_types));
    }
    public DCOMP._IEnvironment RemoveAssigned(Dafny.ISequence<Dafny.Rune> name) {
      BigInteger _2380_indexInEnv = Std.Collections.Seq.__default.IndexOf<Dafny.ISequence<Dafny.Rune>>((this).dtor_names, name);
      return DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(((this).dtor_names).Subsequence(BigInteger.Zero, _2380_indexInEnv), ((this).dtor_names).Drop((_2380_indexInEnv) + (BigInteger.One))), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Subtract((this).dtor_types, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(name)));
    }
  }

  public interface _IObjectType {
    bool is_RawPointers { get; }
    bool is_RcMut { get; }
    _IObjectType DowncastClone();
  }
  public abstract class ObjectType : _IObjectType {
    public ObjectType() {
    }
    private static readonly DCOMP._IObjectType theDefault = create_RawPointers();
    public static DCOMP._IObjectType Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IObjectType> _TYPE = new Dafny.TypeDescriptor<DCOMP._IObjectType>(DCOMP.ObjectType.Default());
    public static Dafny.TypeDescriptor<DCOMP._IObjectType> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IObjectType create_RawPointers() {
      return new ObjectType_RawPointers();
    }
    public static _IObjectType create_RcMut() {
      return new ObjectType_RcMut();
    }
    public bool is_RawPointers { get { return this is ObjectType_RawPointers; } }
    public bool is_RcMut { get { return this is ObjectType_RcMut; } }
    public static System.Collections.Generic.IEnumerable<_IObjectType> AllSingletonConstructors {
      get {
        yield return ObjectType.create_RawPointers();
        yield return ObjectType.create_RcMut();
      }
    }
    public abstract _IObjectType DowncastClone();
  }
  public class ObjectType_RawPointers : ObjectType {
    public ObjectType_RawPointers() : base() {
    }
    public override _IObjectType DowncastClone() {
      if (this is _IObjectType dt) { return dt; }
      return new ObjectType_RawPointers();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.ObjectType_RawPointers;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.ObjectType.RawPointers";
      return s;
    }
  }
  public class ObjectType_RcMut : ObjectType {
    public ObjectType_RcMut() : base() {
    }
    public override _IObjectType DowncastClone() {
      if (this is _IObjectType dt) { return dt; }
      return new ObjectType_RcMut();
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.ObjectType_RcMut;
      return oth != null;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 1;
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.ObjectType.RcMut";
      return s;
    }
  }

  public interface _IGenTypeContext {
    bool is_GenTypeContext { get; }
    bool dtor_inBinding { get; }
    bool dtor_inFn { get; }
    bool dtor_forTraitParents { get; }
    _IGenTypeContext DowncastClone();
  }
  public class GenTypeContext : _IGenTypeContext {
    public readonly bool _i_inBinding;
    public readonly bool _i_inFn;
    public readonly bool _i_forTraitParents;
    public GenTypeContext(bool inBinding, bool inFn, bool forTraitParents) {
      this._i_inBinding = inBinding;
      this._i_inFn = inFn;
      this._i_forTraitParents = forTraitParents;
    }
    public _IGenTypeContext DowncastClone() {
      if (this is _IGenTypeContext dt) { return dt; }
      return new GenTypeContext(_i_inBinding, _i_inFn, _i_forTraitParents);
    }
    public override bool Equals(object other) {
      var oth = other as DCOMP.GenTypeContext;
      return oth != null && this._i_inBinding == oth._i_inBinding && this._i_inFn == oth._i_inFn && this._i_forTraitParents == oth._i_forTraitParents;
    }
    public override int GetHashCode() {
      ulong hash = 5381;
      hash = ((hash << 5) + hash) + 0;
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_inBinding));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_inFn));
      hash = ((hash << 5) + hash) + ((ulong)Dafny.Helpers.GetHashCode(this._i_forTraitParents));
      return (int) hash;
    }
    public override string ToString() {
      string s = "DafnyToRustCompiler.GenTypeContext.GenTypeContext";
      s += "(";
      s += Dafny.Helpers.ToString(this._i_inBinding);
      s += ", ";
      s += Dafny.Helpers.ToString(this._i_inFn);
      s += ", ";
      s += Dafny.Helpers.ToString(this._i_forTraitParents);
      s += ")";
      return s;
    }
    private static readonly DCOMP._IGenTypeContext theDefault = create(false, false, false);
    public static DCOMP._IGenTypeContext Default() {
      return theDefault;
    }
    private static readonly Dafny.TypeDescriptor<DCOMP._IGenTypeContext> _TYPE = new Dafny.TypeDescriptor<DCOMP._IGenTypeContext>(DCOMP.GenTypeContext.Default());
    public static Dafny.TypeDescriptor<DCOMP._IGenTypeContext> _TypeDescriptor() {
      return _TYPE;
    }
    public static _IGenTypeContext create(bool inBinding, bool inFn, bool forTraitParents) {
      return new GenTypeContext(inBinding, inFn, forTraitParents);
    }
    public static _IGenTypeContext create_GenTypeContext(bool inBinding, bool inFn, bool forTraitParents) {
      return create(inBinding, inFn, forTraitParents);
    }
    public bool is_GenTypeContext { get { return true; } }
    public bool dtor_inBinding {
      get {
        return this._i_inBinding;
      }
    }
    public bool dtor_inFn {
      get {
        return this._i_inFn;
      }
    }
    public bool dtor_forTraitParents {
      get {
        return this._i_forTraitParents;
      }
    }
    public static DCOMP._IGenTypeContext InBinding() {
      return DCOMP.GenTypeContext.create(true, false, false);
    }
    public static DCOMP._IGenTypeContext InFn() {
      return DCOMP.GenTypeContext.create(false, true, false);
    }
    public static DCOMP._IGenTypeContext ForTraitParents() {
      return DCOMP.GenTypeContext.create(false, false, true);
    }
    public static DCOMP._IGenTypeContext @default() {
      return DCOMP.GenTypeContext.create(false, false, false);
    }
  }

  public partial class COMP {
    public COMP() {
      this.error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.Default();
      this._i_UnicodeChars = false;
      this._i_ObjectType = DCOMP.ObjectType.Default();
    }
    public RAST._IType Object(RAST._IType underlying) {
      if (((this).ObjectType).is_RawPointers) {
        return RAST.Type.create_PointerMut(underlying);
      } else {
        return RAST.__default.ObjectType(underlying);
      }
    }
    public Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> error {get; set;}
    public void __ctor(bool unicodeChars, DCOMP._IObjectType objectType)
    {
      (this)._i_UnicodeChars = unicodeChars;
      (this)._i_ObjectType = objectType;
      (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
    }
    public RAST._IMod GenModule(DAST._IModule mod, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      RAST._IMod s = RAST.Mod.Default();
      Dafny.ISequence<Dafny.Rune> _2381_modName;
      _2381_modName = DCOMP.__default.escapeName((mod).dtor_name);
      if (((mod).dtor_body).is_None) {
        s = RAST.Mod.create_ExternMod(_2381_modName);
      } else {
        Dafny.ISequence<RAST._IModDecl> _2382_body;
        Dafny.ISequence<RAST._IModDecl> _out15;
        _out15 = (this).GenModuleBody(((mod).dtor_body).dtor_value, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((mod).dtor_name)));
        _2382_body = _out15;
        s = RAST.Mod.create_Mod(_2381_modName, _2382_body);
      }
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenModuleBody(Dafny.ISequence<DAST._IModuleItem> body, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements();
      BigInteger _hi5 = new BigInteger((body).Count);
      for (BigInteger _2383_i = BigInteger.Zero; _2383_i < _hi5; _2383_i++) {
        Dafny.ISequence<RAST._IModDecl> _2384_generated = Dafny.Sequence<RAST._IModDecl>.Empty;
        DAST._IModuleItem _source82 = (body).Select(_2383_i);
        if (_source82.is_Module) {
          DAST._IModule _2385___mcc_h0 = _source82.dtor_Module_i_a0;
          DAST._IModule _2386_m = _2385___mcc_h0;
          RAST._IMod _2387_mm;
          RAST._IMod _out16;
          _out16 = (this).GenModule(_2386_m, containingPath);
          _2387_mm = _out16;
          _2384_generated = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ModDecl(_2387_mm));
        } else if (_source82.is_Class) {
          DAST._IClass _2388___mcc_h1 = _source82.dtor_Class_i_a0;
          DAST._IClass _2389_c = _2388___mcc_h1;
          Dafny.ISequence<RAST._IModDecl> _out17;
          _out17 = (this).GenClass(_2389_c, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((_2389_c).dtor_name)));
          _2384_generated = _out17;
        } else if (_source82.is_Trait) {
          DAST._ITrait _2390___mcc_h2 = _source82.dtor_Trait_i_a0;
          DAST._ITrait _2391_t = _2390___mcc_h2;
          Dafny.ISequence<RAST._IModDecl> _out18;
          _out18 = (this).GenTrait(_2391_t, containingPath);
          _2384_generated = _out18;
        } else if (_source82.is_Newtype) {
          DAST._INewtype _2392___mcc_h3 = _source82.dtor_Newtype_i_a0;
          DAST._INewtype _2393_n = _2392___mcc_h3;
          Dafny.ISequence<RAST._IModDecl> _out19;
          _out19 = (this).GenNewtype(_2393_n);
          _2384_generated = _out19;
        } else if (_source82.is_SynonymType) {
          DAST._ISynonymType _2394___mcc_h4 = _source82.dtor_SynonymType_i_a0;
          DAST._ISynonymType _2395_s = _2394___mcc_h4;
          Dafny.ISequence<RAST._IModDecl> _out20;
          _out20 = (this).GenSynonymType(_2395_s);
          _2384_generated = _out20;
        } else {
          DAST._IDatatype _2396___mcc_h5 = _source82.dtor_Datatype_i_a0;
          DAST._IDatatype _2397_d = _2396___mcc_h5;
          Dafny.ISequence<RAST._IModDecl> _out21;
          _out21 = (this).GenDatatype(_2397_d);
          _2384_generated = _out21;
        }
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, _2384_generated);
      }
      return s;
    }
    public void GenTypeParam(DAST._ITypeArgDecl tp, out DAST._IType typeArg, out RAST._ITypeParamDecl typeParam)
    {
      typeArg = DAST.Type.Default();
      typeParam = RAST.TypeParamDecl.Default();
      typeArg = DAST.Type.create_TypeArg((tp).dtor_name);
      Dafny.ISequence<RAST._IType> _2398_genTpConstraint;
      _2398_genTpConstraint = ((((tp).dtor_bounds).Contains(DAST.TypeArgBound.create_SupportsEquality())) ? (Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DafnyTypeEq)) : (Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DafnyType)));
      if (((tp).dtor_bounds).Contains(DAST.TypeArgBound.create_SupportsDefault())) {
        _2398_genTpConstraint = Dafny.Sequence<RAST._IType>.Concat(_2398_genTpConstraint, Dafny.Sequence<RAST._IType>.FromElements(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Default"))));
      }
      typeParam = RAST.TypeParamDecl.create(DCOMP.__default.escapeName(((tp).dtor_name)), _2398_genTpConstraint);
    }
    public void GenTypeParameters(Dafny.ISequence<DAST._ITypeArgDecl> @params, out Dafny.ISequence<DAST._IType> typeParamsSeq, out Dafny.ISequence<RAST._IType> typeParams, out Dafny.ISequence<RAST._ITypeParamDecl> constrainedTypeParams, out Dafny.ISequence<Dafny.Rune> whereConstraints)
    {
      typeParamsSeq = Dafny.Sequence<DAST._IType>.Empty;
      typeParams = Dafny.Sequence<RAST._IType>.Empty;
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Empty;
      whereConstraints = Dafny.Sequence<Dafny.Rune>.Empty;
      typeParamsSeq = Dafny.Sequence<DAST._IType>.FromElements();
      typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      whereConstraints = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
      if ((new BigInteger((@params).Count)).Sign == 1) {
        BigInteger _hi6 = new BigInteger((@params).Count);
        for (BigInteger _2399_tpI = BigInteger.Zero; _2399_tpI < _hi6; _2399_tpI++) {
          DAST._ITypeArgDecl _2400_tp;
          _2400_tp = (@params).Select(_2399_tpI);
          DAST._IType _2401_typeArg;
          RAST._ITypeParamDecl _2402_typeParam;
          DAST._IType _out22;
          RAST._ITypeParamDecl _out23;
          (this).GenTypeParam(_2400_tp, out _out22, out _out23);
          _2401_typeArg = _out22;
          _2402_typeParam = _out23;
          RAST._IType _2403_rType;
          RAST._IType _out24;
          _out24 = (this).GenType(_2401_typeArg, DCOMP.GenTypeContext.@default());
          _2403_rType = _out24;
          typeParamsSeq = Dafny.Sequence<DAST._IType>.Concat(typeParamsSeq, Dafny.Sequence<DAST._IType>.FromElements(_2401_typeArg));
          typeParams = Dafny.Sequence<RAST._IType>.Concat(typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2403_rType));
          constrainedTypeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(constrainedTypeParams, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2402_typeParam));
        }
      }
    }
    public Dafny.ISequence<RAST._IModDecl> GenClass(DAST._IClass c, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> path)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISequence<DAST._IType> _2404_typeParamsSeq;
      Dafny.ISequence<RAST._IType> _2405_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2406_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2407_whereConstraints;
      Dafny.ISequence<DAST._IType> _out25;
      Dafny.ISequence<RAST._IType> _out26;
      Dafny.ISequence<RAST._ITypeParamDecl> _out27;
      Dafny.ISequence<Dafny.Rune> _out28;
      (this).GenTypeParameters((c).dtor_typeParams, out _out25, out _out26, out _out27, out _out28);
      _2404_typeParamsSeq = _out25;
      _2405_rTypeParams = _out26;
      _2406_rTypeParamsDecls = _out27;
      _2407_whereConstraints = _out28;
      Dafny.ISequence<Dafny.Rune> _2408_constrainedTypeParams;
      _2408_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2406_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<RAST._IField> _2409_fields;
      _2409_fields = Dafny.Sequence<RAST._IField>.FromElements();
      Dafny.ISequence<RAST._IAssignIdentifier> _2410_fieldInits;
      _2410_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
      BigInteger _hi7 = new BigInteger(((c).dtor_fields).Count);
      for (BigInteger _2411_fieldI = BigInteger.Zero; _2411_fieldI < _hi7; _2411_fieldI++) {
        DAST._IField _2412_field;
        _2412_field = ((c).dtor_fields).Select(_2411_fieldI);
        RAST._IType _2413_fieldType;
        RAST._IType _out29;
        _out29 = (this).GenType(((_2412_field).dtor_formal).dtor_typ, DCOMP.GenTypeContext.@default());
        _2413_fieldType = _out29;
        Dafny.ISequence<Dafny.Rune> _2414_fieldRustName;
        _2414_fieldRustName = DCOMP.__default.escapeName(((_2412_field).dtor_formal).dtor_name);
        _2409_fields = Dafny.Sequence<RAST._IField>.Concat(_2409_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PUB(), RAST.Formal.create(_2414_fieldRustName, _2413_fieldType))));
        Std.Wrappers._IOption<DAST._IExpression> _source83 = (_2412_field).dtor_defaultValue;
        if (_source83.is_None) {
          {
            RAST._IExpr _2415_default;
            _2415_default = RAST.__default.std__Default__default;
            if ((_2413_fieldType).IsObjectOrPointer()) {
              _2415_default = (_2413_fieldType).ToNullExpr();
            }
            _2410_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2410_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2414_fieldRustName, _2415_default)));
          }
        } else {
          DAST._IExpression _2416___mcc_h0 = _source83.dtor_value;
          DAST._IExpression _2417_e = _2416___mcc_h0;
          {
            RAST._IExpr _2418_expr;
            DCOMP._IOwnership _2419___v43;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2420___v44;
            RAST._IExpr _out30;
            DCOMP._IOwnership _out31;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out32;
            (this).GenExpr(_2417_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out30, out _out31, out _out32);
            _2418_expr = _out30;
            _2419___v43 = _out31;
            _2420___v44 = _out32;
            _2410_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2410_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(_2414_fieldRustName, _2418_expr)));
          }
        }
      }
      BigInteger _hi8 = new BigInteger(((c).dtor_typeParams).Count);
      for (BigInteger _2421_typeParamI = BigInteger.Zero; _2421_typeParamI < _hi8; _2421_typeParamI++) {
        DAST._IType _2422_typeArg;
        RAST._ITypeParamDecl _2423_typeParam;
        DAST._IType _out33;
        RAST._ITypeParamDecl _out34;
        (this).GenTypeParam(((c).dtor_typeParams).Select(_2421_typeParamI), out _out33, out _out34);
        _2422_typeArg = _out33;
        _2423_typeParam = _out34;
        RAST._IType _2424_rTypeArg;
        RAST._IType _out35;
        _out35 = (this).GenType(_2422_typeArg, DCOMP.GenTypeContext.@default());
        _2424_rTypeArg = _out35;
        _2409_fields = Dafny.Sequence<RAST._IField>.Concat(_2409_fields, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2421_typeParamI)), RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2424_rTypeArg))))));
        _2410_fieldInits = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2410_fieldInits, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_phantom_type_param_"), Std.Strings.__default.OfNat(_2421_typeParamI)), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::marker::PhantomData")))));
      }
      Dafny.ISequence<Dafny.Rune> _2425_datatypeName;
      _2425_datatypeName = DCOMP.__default.escapeName((c).dtor_name);
      RAST._IStruct _2426_struct;
      _2426_struct = RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2425_datatypeName, _2406_rTypeParamsDecls, RAST.Fields.create_NamedFields(_2409_fields));
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(_2426_struct));
      Dafny.ISequence<RAST._IImplMember> _2427_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2428_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out36;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out37;
      (this).GenClassImplBody((c).dtor_body, false, DAST.Type.create_UserDefined(DAST.ResolvedType.create(path, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedTypeBase.create_Class(), (c).dtor_attributes, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements())), _2404_typeParamsSeq, out _out36, out _out37);
      _2427_implBodyRaw = _out36;
      _2428_traitBodies = _out37;
      Dafny.ISequence<RAST._IImplMember> _2429_implBody;
      _2429_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create((this).allocate__fn, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some((this).Object(RAST.Type.create_SelfOwned())), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel((this).allocate)).ApplyType1(RAST.Type.create_SelfOwned())).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))))), _2427_implBodyRaw);
      RAST._IImpl _2430_i;
      _2430_i = RAST.Impl.create_Impl(_2406_rTypeParamsDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2425_datatypeName), _2405_rTypeParams), _2407_whereConstraints, _2429_implBody);
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(_2430_i)));
      if ((new BigInteger(((c).dtor_superClasses).Count)).Sign == 1) {
        BigInteger _2431_i;
        _2431_i = BigInteger.Zero;
        while ((_2431_i) < (new BigInteger(((c).dtor_superClasses).Count))) {
          DAST._IType _2432_superClass;
          _2432_superClass = ((c).dtor_superClasses).Select(_2431_i);
          DAST._IType _source84 = _2432_superClass;
          if (_source84.is_UserDefined) {
            DAST._IResolvedType _2433___mcc_h1 = _source84.dtor_resolved;
            DAST._IResolvedType _source85 = _2433___mcc_h1;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2434___mcc_h3 = _source85.dtor_path;
            Dafny.ISequence<DAST._IType> _2435___mcc_h4 = _source85.dtor_typeArgs;
            DAST._IResolvedTypeBase _2436___mcc_h5 = _source85.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _2437___mcc_h6 = _source85.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2438___mcc_h7 = _source85.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _2439___mcc_h8 = _source85.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source86 = _2436___mcc_h5;
            if (_source86.is_Class) {
            } else if (_source86.is_Datatype) {
            } else if (_source86.is_Trait) {
              Dafny.ISequence<DAST._IType> _2440_typeArgs = _2435___mcc_h4;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2441_traitPath = _2434___mcc_h3;
              {
                RAST._IType _2442_pathStr;
                RAST._IType _out38;
                _out38 = DCOMP.COMP.GenPath(_2441_traitPath);
                _2442_pathStr = _out38;
                Dafny.ISequence<RAST._IType> _2443_typeArgs;
                Dafny.ISequence<RAST._IType> _out39;
                _out39 = (this).GenTypeArgs(_2440_typeArgs, DCOMP.GenTypeContext.@default());
                _2443_typeArgs = _out39;
                Dafny.ISequence<RAST._IImplMember> _2444_body;
                _2444_body = Dafny.Sequence<RAST._IImplMember>.FromElements();
                if ((_2428_traitBodies).Contains(_2441_traitPath)) {
                  _2444_body = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(_2428_traitBodies,_2441_traitPath);
                }
                RAST._IType _2445_genSelfPath;
                RAST._IType _out40;
                _out40 = DCOMP.COMP.GenPath(path);
                _2445_genSelfPath = _out40;
                RAST._IModDecl _2446_x;
                _2446_x = RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2406_rTypeParamsDecls, RAST.Type.create_TypeApp(_2442_pathStr, _2443_typeArgs), RAST.Type.create_TypeApp(_2445_genSelfPath, _2405_rTypeParams), _2407_whereConstraints, _2444_body));
                s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(_2446_x));
              }
            } else {
              DAST._IType _2447___mcc_h15 = _source86.dtor_baseType;
              DAST._INewtypeRange _2448___mcc_h16 = _source86.dtor_range;
              bool _2449___mcc_h17 = _source86.dtor_erase;
            }
          } else if (_source84.is_Tuple) {
            Dafny.ISequence<DAST._IType> _2450___mcc_h21 = _source84.dtor_Tuple_i_a0;
          } else if (_source84.is_Array) {
            DAST._IType _2451___mcc_h23 = _source84.dtor_element;
            BigInteger _2452___mcc_h24 = _source84.dtor_dims;
          } else if (_source84.is_Seq) {
            DAST._IType _2453___mcc_h27 = _source84.dtor_element;
          } else if (_source84.is_Set) {
            DAST._IType _2454___mcc_h29 = _source84.dtor_element;
          } else if (_source84.is_Multiset) {
            DAST._IType _2455___mcc_h31 = _source84.dtor_element;
          } else if (_source84.is_Map) {
            DAST._IType _2456___mcc_h33 = _source84.dtor_key;
            DAST._IType _2457___mcc_h34 = _source84.dtor_value;
          } else if (_source84.is_SetBuilder) {
            DAST._IType _2458___mcc_h37 = _source84.dtor_element;
          } else if (_source84.is_MapBuilder) {
            DAST._IType _2459___mcc_h39 = _source84.dtor_key;
            DAST._IType _2460___mcc_h40 = _source84.dtor_value;
          } else if (_source84.is_Arrow) {
            Dafny.ISequence<DAST._IType> _2461___mcc_h43 = _source84.dtor_args;
            DAST._IType _2462___mcc_h44 = _source84.dtor_result;
          } else if (_source84.is_Primitive) {
            DAST._IPrimitive _2463___mcc_h47 = _source84.dtor_Primitive_i_a0;
          } else if (_source84.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _2464___mcc_h49 = _source84.dtor_Passthrough_i_a0;
          } else if (_source84.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _2465___mcc_h51 = _source84.dtor_TypeArg_i_a0;
          } else {
          }
          _2431_i = (_2431_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenTrait(DAST._ITrait t, Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> containingPath)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISequence<DAST._IType> _2466_typeParamsSeq;
      _2466_typeParamsSeq = Dafny.Sequence<DAST._IType>.FromElements();
      Dafny.ISequence<RAST._ITypeParamDecl> _2467_typeParamDecls;
      _2467_typeParamDecls = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      Dafny.ISequence<RAST._IType> _2468_typeParams;
      _2468_typeParams = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2469_tpI;
      _2469_tpI = BigInteger.Zero;
      if ((new BigInteger(((t).dtor_typeParams).Count)).Sign == 1) {
        while ((_2469_tpI) < (new BigInteger(((t).dtor_typeParams).Count))) {
          DAST._ITypeArgDecl _2470_tp;
          _2470_tp = ((t).dtor_typeParams).Select(_2469_tpI);
          DAST._IType _2471_typeArg;
          RAST._ITypeParamDecl _2472_typeParamDecl;
          DAST._IType _out41;
          RAST._ITypeParamDecl _out42;
          (this).GenTypeParam(_2470_tp, out _out41, out _out42);
          _2471_typeArg = _out41;
          _2472_typeParamDecl = _out42;
          _2466_typeParamsSeq = Dafny.Sequence<DAST._IType>.Concat(_2466_typeParamsSeq, Dafny.Sequence<DAST._IType>.FromElements(_2471_typeArg));
          _2467_typeParamDecls = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(_2467_typeParamDecls, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2472_typeParamDecl));
          RAST._IType _2473_typeParam;
          RAST._IType _out43;
          _out43 = (this).GenType(_2471_typeArg, DCOMP.GenTypeContext.@default());
          _2473_typeParam = _out43;
          _2468_typeParams = Dafny.Sequence<RAST._IType>.Concat(_2468_typeParams, Dafny.Sequence<RAST._IType>.FromElements(_2473_typeParam));
          _2469_tpI = (_2469_tpI) + (BigInteger.One);
        }
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2474_fullPath;
      _2474_fullPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(containingPath, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((t).dtor_name));
      Dafny.ISequence<RAST._IImplMember> _2475_implBody;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2476___v49;
      Dafny.ISequence<RAST._IImplMember> _out44;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out45;
      (this).GenClassImplBody((t).dtor_body, true, DAST.Type.create_UserDefined(DAST.ResolvedType.create(_2474_fullPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedTypeBase.create_Trait(), (t).dtor_attributes, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements())), _2466_typeParamsSeq, out _out44, out _out45);
      _2475_implBody = _out44;
      _2476___v49 = _out45;
      Dafny.ISequence<RAST._IType> _2477_parents;
      _2477_parents = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _hi9 = new BigInteger(((t).dtor_parents).Count);
      for (BigInteger _2478_i = BigInteger.Zero; _2478_i < _hi9; _2478_i++) {
        RAST._IType _2479_tpe;
        RAST._IType _out46;
        _out46 = (this).GenType(((t).dtor_parents).Select(_2478_i), DCOMP.GenTypeContext.ForTraitParents());
        _2479_tpe = _out46;
        _2477_parents = Dafny.Sequence<RAST._IType>.Concat(_2477_parents, Dafny.Sequence<RAST._IType>.FromElements(_2479_tpe));
      }
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TraitDecl(RAST.Trait.create(_2467_typeParamDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(DCOMP.__default.escapeName((t).dtor_name)), _2468_typeParams), _2477_parents, _2475_implBody)));
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenNewtype(DAST._INewtype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISequence<DAST._IType> _2480_typeParamsSeq;
      Dafny.ISequence<RAST._IType> _2481_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2482_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2483_whereConstraints;
      Dafny.ISequence<DAST._IType> _out47;
      Dafny.ISequence<RAST._IType> _out48;
      Dafny.ISequence<RAST._ITypeParamDecl> _out49;
      Dafny.ISequence<Dafny.Rune> _out50;
      (this).GenTypeParameters((c).dtor_typeParams, out _out47, out _out48, out _out49, out _out50);
      _2480_typeParamsSeq = _out47;
      _2481_rTypeParams = _out48;
      _2482_rTypeParamsDecls = _out49;
      _2483_whereConstraints = _out50;
      Dafny.ISequence<Dafny.Rune> _2484_constrainedTypeParams;
      _2484_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2482_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      RAST._IType _2485_underlyingType = RAST.Type.Default();
      Std.Wrappers._IOption<RAST._IType> _source87 = DCOMP.COMP.NewtypeToRustType((c).dtor_base, (c).dtor_range);
      if (_source87.is_None) {
        RAST._IType _out51;
        _out51 = (this).GenType((c).dtor_base, DCOMP.GenTypeContext.@default());
        _2485_underlyingType = _out51;
      } else {
        RAST._IType _2486___mcc_h0 = _source87.dtor_value;
        RAST._IType _2487_v = _2486___mcc_h0;
        _2485_underlyingType = _2487_v;
      }
      DAST._IType _2488_resultingType;
      _2488_resultingType = DAST.Type.create_UserDefined(DAST.ResolvedType.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedTypeBase.create_Newtype((c).dtor_base, (c).dtor_range, false), (c).dtor_attributes, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements()));
      Dafny.ISequence<Dafny.Rune> _2489_newtypeName;
      _2489_newtypeName = DCOMP.__default.escapeName((c).dtor_name);
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_StructDecl(RAST.Struct.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(Clone, PartialEq)]"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[repr(transparent)]")), _2489_newtypeName, _2482_rTypeParamsDecls, RAST.Fields.create_NamelessFields(Dafny.Sequence<RAST._INamelessField>.FromElements(RAST.NamelessField.create(RAST.Visibility.create_PUB(), _2485_underlyingType))))));
      RAST._IExpr _2490_fnBody;
      _2490_fnBody = RAST.Expr.create_Identifier(_2489_newtypeName);
      Std.Wrappers._IOption<DAST._IExpression> _source88 = (c).dtor_witnessExpr;
      if (_source88.is_None) {
        {
          _2490_fnBody = (_2490_fnBody).Apply1(RAST.__default.std__Default__default);
        }
      } else {
        DAST._IExpression _2491___mcc_h1 = _source88.dtor_value;
        DAST._IExpression _2492_e = _2491___mcc_h1;
        {
          DAST._IExpression _2493_e;
          _2493_e = ((object.Equals((c).dtor_base, _2488_resultingType)) ? (_2492_e) : (DAST.Expression.create_Convert(_2492_e, (c).dtor_base, _2488_resultingType)));
          RAST._IExpr _2494_eStr;
          DCOMP._IOwnership _2495___v50;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2496___v51;
          RAST._IExpr _out52;
          DCOMP._IOwnership _out53;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out54;
          (this).GenExpr(_2493_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out52, out _out53, out _out54);
          _2494_eStr = _out52;
          _2495___v50 = _out53;
          _2496___v51 = _out54;
          _2490_fnBody = (_2490_fnBody).Apply1(_2494_eStr);
        }
      }
      RAST._IImplMember _2497_body;
      _2497_body = RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2490_fnBody)));
      Std.Wrappers._IOption<DAST._INewtypeConstraint> _source89 = (c).dtor_constraint;
      if (_source89.is_None) {
      } else {
        DAST._INewtypeConstraint _2498___mcc_h2 = _source89.dtor_value;
        DAST._INewtypeConstraint _source90 = _2498___mcc_h2;
        DAST._IFormal _2499___mcc_h3 = _source90.dtor_variable;
        Dafny.ISequence<DAST._IStatement> _2500___mcc_h4 = _source90.dtor_constraintStmts;
        Dafny.ISequence<DAST._IStatement> _2501_constraintStmts = _2500___mcc_h4;
        DAST._IFormal _2502_formal = _2499___mcc_h3;
        RAST._IExpr _2503_rStmts;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2504___v52;
        DCOMP._IEnvironment _2505_newEnv;
        RAST._IExpr _out55;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out56;
        DCOMP._IEnvironment _out57;
        (this).GenStmts(_2501_constraintStmts, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), false, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out55, out _out56, out _out57);
        _2503_rStmts = _out55;
        _2504___v52 = _out56;
        _2505_newEnv = _out57;
        Dafny.ISequence<RAST._IFormal> _2506_rFormals;
        Dafny.ISequence<RAST._IFormal> _out58;
        _out58 = (this).GenParams(Dafny.Sequence<DAST._IFormal>.FromElements(_2502_formal));
        _2506_rFormals = _out58;
        s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2482_rTypeParamsDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2489_newtypeName), _2481_rTypeParams), _2483_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("is"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), _2506_rFormals, Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2503_rStmts))))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2482_rTypeParamsDecls, RAST.__default.DefaultTrait, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2489_newtypeName), _2481_rTypeParams), _2483_whereConstraints, Dafny.Sequence<RAST._IImplMember>.FromElements(_2497_body)))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2482_rTypeParamsDecls, RAST.__default.DafnyPrint, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2489_newtypeName), _2481_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&mut ::std::fmt::Formatter"))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print(&self.0, _formatter, in_seq)"))))))))));
      s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2482_rTypeParamsDecls, RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2489_newtypeName), _2481_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_RawImplMember(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("type Target = "), (_2485_underlyingType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";"))), RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("deref"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some((RAST.__default.SelfBorrowed).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Target"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&self.0"))))))))));
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenSynonymType(DAST._ISynonymType c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISequence<DAST._IType> _2507_typeParamsSeq;
      Dafny.ISequence<RAST._IType> _2508_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2509_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2510_whereConstraints;
      Dafny.ISequence<DAST._IType> _out59;
      Dafny.ISequence<RAST._IType> _out60;
      Dafny.ISequence<RAST._ITypeParamDecl> _out61;
      Dafny.ISequence<Dafny.Rune> _out62;
      (this).GenTypeParameters((c).dtor_typeParams, out _out59, out _out60, out _out61, out _out62);
      _2507_typeParamsSeq = _out59;
      _2508_rTypeParams = _out60;
      _2509_rTypeParamsDecls = _out61;
      _2510_whereConstraints = _out62;
      Dafny.ISequence<Dafny.Rune> _2511_constrainedTypeParams;
      _2511_constrainedTypeParams = RAST.TypeParamDecl.ToStringMultiple(_2509_rTypeParamsDecls, Dafny.Sequence<Dafny.Rune>.Concat(RAST.__default.IND, RAST.__default.IND));
      Dafny.ISequence<Dafny.Rune> _2512_synonymTypeName;
      _2512_synonymTypeName = DCOMP.__default.escapeName((c).dtor_name);
      RAST._IType _2513_resultingType;
      RAST._IType _out63;
      _out63 = (this).GenType((c).dtor_base, DCOMP.GenTypeContext.@default());
      _2513_resultingType = _out63;
      s = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TypeDecl(RAST.TypeSynonym.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), _2512_synonymTypeName, _2509_rTypeParamsDecls, _2513_resultingType)));
      Std.Wrappers._IOption<DAST._IExpression> _source91 = (c).dtor_witnessExpr;
      if (_source91.is_None) {
      } else {
        DAST._IExpression _2514___mcc_h0 = _source91.dtor_value;
        DAST._IExpression _2515_e = _2514___mcc_h0;
        {
          RAST._IExpr _2516_rStmts;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2517___v53;
          DCOMP._IEnvironment _2518_newEnv;
          RAST._IExpr _out64;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out65;
          DCOMP._IEnvironment _out66;
          (this).GenStmts((c).dtor_witnessStmts, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), false, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out64, out _out65, out _out66);
          _2516_rStmts = _out64;
          _2517___v53 = _out65;
          _2518_newEnv = _out66;
          RAST._IExpr _2519_rExpr;
          DCOMP._IOwnership _2520___v54;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2521___v55;
          RAST._IExpr _out67;
          DCOMP._IOwnership _out68;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out69;
          (this).GenExpr(_2515_e, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), _2518_newEnv, DCOMP.Ownership.create_OwnershipOwned(), out _out67, out _out68, out _out69);
          _2519_rExpr = _out67;
          _2520___v54 = _out68;
          _2521___v55 = _out69;
          Dafny.ISequence<Dafny.Rune> _2522_constantName;
          _2522_constantName = DCOMP.__default.escapeName(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_init_"), ((c).dtor_name)));
          s = Dafny.Sequence<RAST._IModDecl>.Concat(s, Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_TopFnDecl(RAST.TopFnDecl.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), RAST.Visibility.create_PUB(), RAST.Fn.create(_2522_constantName, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2513_resultingType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((_2516_rStmts).Then(_2519_rExpr)))))));
        }
      }
      return s;
    }
    public Dafny.ISequence<RAST._IModDecl> GenDatatype(DAST._IDatatype c)
    {
      Dafny.ISequence<RAST._IModDecl> s = Dafny.Sequence<RAST._IModDecl>.Empty;
      Dafny.ISequence<DAST._IType> _2523_typeParamsSeq;
      Dafny.ISequence<RAST._IType> _2524_rTypeParams;
      Dafny.ISequence<RAST._ITypeParamDecl> _2525_rTypeParamsDecls;
      Dafny.ISequence<Dafny.Rune> _2526_whereConstraints;
      Dafny.ISequence<DAST._IType> _out70;
      Dafny.ISequence<RAST._IType> _out71;
      Dafny.ISequence<RAST._ITypeParamDecl> _out72;
      Dafny.ISequence<Dafny.Rune> _out73;
      (this).GenTypeParameters((c).dtor_typeParams, out _out70, out _out71, out _out72, out _out73);
      _2523_typeParamsSeq = _out70;
      _2524_rTypeParams = _out71;
      _2525_rTypeParamsDecls = _out72;
      _2526_whereConstraints = _out73;
      Dafny.ISequence<Dafny.Rune> _2527_datatypeName;
      _2527_datatypeName = DCOMP.__default.escapeName((c).dtor_name);
      Dafny.ISequence<RAST._IEnumCase> _2528_ctors;
      _2528_ctors = Dafny.Sequence<RAST._IEnumCase>.FromElements();
      BigInteger _hi10 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2529_i = BigInteger.Zero; _2529_i < _hi10; _2529_i++) {
        DAST._IDatatypeCtor _2530_ctor;
        _2530_ctor = ((c).dtor_ctors).Select(_2529_i);
        Dafny.ISequence<RAST._IField> _2531_ctorArgs;
        _2531_ctorArgs = Dafny.Sequence<RAST._IField>.FromElements();
        BigInteger _hi11 = new BigInteger(((_2530_ctor).dtor_args).Count);
        for (BigInteger _2532_j = BigInteger.Zero; _2532_j < _hi11; _2532_j++) {
          DAST._IFormal _2533_formal;
          _2533_formal = ((_2530_ctor).dtor_args).Select(_2532_j);
          RAST._IType _2534_formalType;
          RAST._IType _out74;
          _out74 = (this).GenType((_2533_formal).dtor_typ, DCOMP.GenTypeContext.@default());
          _2534_formalType = _out74;
          if ((c).dtor_isCo) {
            _2531_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2531_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeName((_2533_formal).dtor_name), RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("LazyFieldWrapper")), Dafny.Sequence<RAST._IType>.FromElements(_2534_formalType))))));
          } else {
            _2531_ctorArgs = Dafny.Sequence<RAST._IField>.Concat(_2531_ctorArgs, Dafny.Sequence<RAST._IField>.FromElements(RAST.Field.create(RAST.Visibility.create_PRIV(), RAST.Formal.create(DCOMP.__default.escapeName((_2533_formal).dtor_name), _2534_formalType))));
          }
        }
        _2528_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2528_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(DCOMP.__default.escapeName((_2530_ctor).dtor_name), RAST.Fields.create_NamedFields(_2531_ctorArgs))));
      }
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2535_selfPath;
      _2535_selfPath = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements((c).dtor_name);
      Dafny.ISequence<RAST._IImplMember> _2536_implBodyRaw;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _2537_traitBodies;
      Dafny.ISequence<RAST._IImplMember> _out75;
      Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> _out76;
      (this).GenClassImplBody((c).dtor_body, false, DAST.Type.create_UserDefined(DAST.ResolvedType.create(_2535_selfPath, Dafny.Sequence<DAST._IType>.FromElements(), DAST.ResolvedTypeBase.create_Datatype(), (c).dtor_attributes, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(), Dafny.Sequence<DAST._IType>.FromElements())), _2523_typeParamsSeq, out _out75, out _out76);
      _2536_implBodyRaw = _out75;
      _2537_traitBodies = _out76;
      Dafny.ISequence<RAST._IImplMember> _2538_implBody;
      _2538_implBody = _2536_implBodyRaw;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2539_emittedFields;
      _2539_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _hi12 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2540_i = BigInteger.Zero; _2540_i < _hi12; _2540_i++) {
        DAST._IDatatypeCtor _2541_ctor;
        _2541_ctor = ((c).dtor_ctors).Select(_2540_i);
        BigInteger _hi13 = new BigInteger(((_2541_ctor).dtor_args).Count);
        for (BigInteger _2542_j = BigInteger.Zero; _2542_j < _hi13; _2542_j++) {
          DAST._IFormal _2543_formal;
          _2543_formal = ((_2541_ctor).dtor_args).Select(_2542_j);
          if (!((_2539_emittedFields).Contains((_2543_formal).dtor_name))) {
            _2539_emittedFields = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2539_emittedFields, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements((_2543_formal).dtor_name));
            RAST._IType _2544_formalType;
            RAST._IType _out77;
            _out77 = (this).GenType((_2543_formal).dtor_typ, DCOMP.GenTypeContext.@default());
            _2544_formalType = _out77;
            Dafny.ISequence<RAST._IMatchCase> _2545_cases;
            _2545_cases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
            BigInteger _hi14 = new BigInteger(((c).dtor_ctors).Count);
            for (BigInteger _2546_k = BigInteger.Zero; _2546_k < _hi14; _2546_k++) {
              DAST._IDatatypeCtor _2547_ctor2;
              _2547_ctor2 = ((c).dtor_ctors).Select(_2546_k);
              Dafny.ISequence<Dafny.Rune> _2548_pattern;
              _2548_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeName((_2547_ctor2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
              Dafny.ISequence<Dafny.Rune> _2549_rhs = Dafny.Sequence<Dafny.Rune>.Empty;
              bool _2550_hasMatchingField;
              _2550_hasMatchingField = false;
              BigInteger _hi15 = new BigInteger(((_2547_ctor2).dtor_args).Count);
              for (BigInteger _2551_l = BigInteger.Zero; _2551_l < _hi15; _2551_l++) {
                DAST._IFormal _2552_formal2;
                _2552_formal2 = ((_2547_ctor2).dtor_args).Select(_2551_l);
                if (object.Equals((_2543_formal).dtor_name, (_2552_formal2).dtor_name)) {
                  _2550_hasMatchingField = true;
                }
                _2548_pattern = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2548_pattern, DCOMP.__default.escapeName((_2552_formal2).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _2548_pattern = Dafny.Sequence<Dafny.Rune>.Concat(_2548_pattern, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
              if (_2550_hasMatchingField) {
                if ((c).dtor_isCo) {
                  _2549_rhs = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::ops::Deref::deref(&"), DCOMP.__default.escapeName((_2543_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0)"));
                } else {
                  _2549_rhs = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName((_2543_formal).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
                }
              } else {
                _2549_rhs = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"field does not exist on this variant\")");
              }
              RAST._IMatchCase _2553_ctorMatch;
              _2553_ctorMatch = RAST.MatchCase.create(_2548_pattern, RAST.Expr.create_RawExpr(_2549_rhs));
              _2545_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2545_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(_2553_ctorMatch));
            }
            if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
              _2545_cases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2545_cases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!()")))));
            }
            RAST._IExpr _2554_methodBody;
            _2554_methodBody = RAST.Expr.create_Match(RAST.__default.self, _2545_cases);
            _2538_implBody = Dafny.Sequence<RAST._IImplMember>.Concat(_2538_implBody, Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PUB(), RAST.Fn.create(DCOMP.__default.escapeName((_2543_formal).dtor_name), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Borrowed(_2544_formalType)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2554_methodBody)))));
          }
        }
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        Dafny.ISequence<RAST._IType> _2555_types;
        _2555_types = Dafny.Sequence<RAST._IType>.FromElements();
        BigInteger _hi16 = new BigInteger(((c).dtor_typeParams).Count);
        for (BigInteger _2556_typeI = BigInteger.Zero; _2556_typeI < _hi16; _2556_typeI++) {
          DAST._IType _2557_typeArg;
          RAST._ITypeParamDecl _2558_rTypeParamDecl;
          DAST._IType _out78;
          RAST._ITypeParamDecl _out79;
          (this).GenTypeParam(((c).dtor_typeParams).Select(_2556_typeI), out _out78, out _out79);
          _2557_typeArg = _out78;
          _2558_rTypeParamDecl = _out79;
          RAST._IType _2559_rTypeArg;
          RAST._IType _out80;
          _out80 = (this).GenType(_2557_typeArg, DCOMP.GenTypeContext.@default());
          _2559_rTypeArg = _out80;
          _2555_types = Dafny.Sequence<RAST._IType>.Concat(_2555_types, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_TypeApp(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("marker"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("PhantomData")), Dafny.Sequence<RAST._IType>.FromElements(_2559_rTypeArg))));
        }
        _2528_ctors = Dafny.Sequence<RAST._IEnumCase>.Concat(_2528_ctors, Dafny.Sequence<RAST._IEnumCase>.FromElements(RAST.EnumCase.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_PhantomVariant"), RAST.Fields.create_NamelessFields(Std.Collections.Seq.__default.Map<RAST._IType, RAST._INamelessField>(((System.Func<RAST._IType, RAST._INamelessField>)((_2560_tpe) => {
  return RAST.NamelessField.create(RAST.Visibility.create_PRIV(), _2560_tpe);
})), _2555_types)))));
      }
      Dafny.ISequence<RAST._IModDecl> _2561_enumBody;
      _2561_enumBody = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_EnumDecl(RAST.Enum.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#[derive(PartialEq, Clone)]")), _2527_datatypeName, _2525_rTypeParamsDecls, _2528_ctors)), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_Impl(_2525_rTypeParamsDecls, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams), _2526_whereConstraints, _2538_implBody)));
      Dafny.ISequence<RAST._IMatchCase> _2562_printImplBodyCases;
      _2562_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      Dafny.ISequence<RAST._IMatchCase> _2563_hashImplBodyCases;
      _2563_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.FromElements();
      BigInteger _hi17 = new BigInteger(((c).dtor_ctors).Count);
      for (BigInteger _2564_i = BigInteger.Zero; _2564_i < _hi17; _2564_i++) {
        DAST._IDatatypeCtor _2565_ctor;
        _2565_ctor = ((c).dtor_ctors).Select(_2564_i);
        Dafny.ISequence<Dafny.Rune> _2566_ctorMatch;
        _2566_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName((_2565_ctor).dtor_name), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" { "));
        Dafny.ISequence<Dafny.Rune> _2567_modulePrefix;
        _2567_modulePrefix = ((((((c).dtor_enclosingModule))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_module"))) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")) : (Dafny.Sequence<Dafny.Rune>.Concat(DCOMP.__default.escapeName(((c).dtor_enclosingModule)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("."))));
        RAST._IExpr _2568_printRhs;
        _2568_printRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \""), _2567_modulePrefix), DCOMP.__default.escapeName((c).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".")), DCOMP.__default.escapeName((_2565_ctor).dtor_name)), (((_2565_ctor).dtor_hasAnyArgs) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(\")?")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\")?")))));
        RAST._IExpr _2569_hashRhs;
        _2569_hashRhs = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        BigInteger _hi18 = new BigInteger(((_2565_ctor).dtor_args).Count);
        for (BigInteger _2570_j = BigInteger.Zero; _2570_j < _hi18; _2570_j++) {
          DAST._IFormal _2571_formal;
          _2571_formal = ((_2565_ctor).dtor_args).Select(_2570_j);
          Dafny.ISequence<Dafny.Rune> _2572_formalName;
          _2572_formalName = DCOMP.__default.escapeName((_2571_formal).dtor_name);
          _2566_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2566_ctorMatch, _2572_formalName), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
          _2569_hashRhs = (_2569_hashRhs).Then(((RAST.Expr.create_Identifier(_2572_formalName)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"))).Apply1(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_state"))));
          if ((_2570_j).Sign == 1) {
            _2568_printRhs = (_2568_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \", \")?")));
          }
          _2568_printRhs = (_2568_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyPrint::fmt_print("), DCOMP.__default.escapeName((_2571_formal).dtor_name)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", _formatter, false)?"))));
        }
        _2566_ctorMatch = Dafny.Sequence<Dafny.Rune>.Concat(_2566_ctorMatch, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
        if ((_2565_ctor).dtor_hasAnyArgs) {
          _2568_printRhs = (_2568_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("write!(_formatter, \")\")?")));
        }
        _2568_printRhs = (_2568_printRhs).Then(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Ok(())")));
        _2562_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2562_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2566_ctorMatch), RAST.Expr.create_Block(_2568_printRhs))));
        _2563_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2563_hashImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), _2566_ctorMatch), RAST.Expr.create_Block(_2569_hashRhs))));
      }
      if ((new BigInteger(((c).dtor_typeParams).Count)).Sign == 1) {
        _2562_printImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2562_printImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
        _2563_hashImplBodyCases = Dafny.Sequence<RAST._IMatchCase>.Concat(_2563_hashImplBodyCases, Dafny.Sequence<RAST._IMatchCase>.FromElements(RAST.MatchCase.create(Dafny.Sequence<Dafny.Rune>.Concat(_2527_datatypeName, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::_PhantomVariant(..)")), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{panic!()}")))));
      }
      Dafny.ISequence<RAST._ITypeParamDecl> _2573_defaultConstrainedTypeParams;
      _2573_defaultConstrainedTypeParams = RAST.TypeParamDecl.AddConstraintsMultiple(_2525_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
      Dafny.ISequence<RAST._ITypeParamDecl> _2574_rTypeParamsDeclsWithEq;
      _2574_rTypeParamsDeclsWithEq = RAST.TypeParamDecl.AddConstraintsMultiple(_2525_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.Eq));
      Dafny.ISequence<RAST._ITypeParamDecl> _2575_rTypeParamsDeclsWithHash;
      _2575_rTypeParamsDeclsWithHash = RAST.TypeParamDecl.AddConstraintsMultiple(_2525_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.Hash));
      RAST._IExpr _2576_printImplBody;
      _2576_printImplBody = RAST.Expr.create_Match(RAST.__default.self, _2562_printImplBodyCases);
      RAST._IExpr _2577_hashImplBody;
      _2577_hashImplBody = RAST.Expr.create_Match(RAST.__default.self, _2563_hashImplBodyCases);
      Dafny.ISequence<RAST._IModDecl> _2578_printImpl;
      _2578_printImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2525_rTypeParamsDecls, ((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Debug")), RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("f"), RAST.Type.create_BorrowedMut(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Formatter"))))), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrint"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.__default.self, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("f")), RAST.Expr.create_LiteralBool(true))))))))), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2525_rTypeParamsDecls, RAST.__default.DafnyPrint, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt_print"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_formatter"), RAST.Type.create_BorrowedMut(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("fmt"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Formatter")))), RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_in_seq"), RAST.Type.create_Bool())), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std::fmt::Result"))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2576_printImplBody)))))), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2574_rTypeParamsDeclsWithEq, RAST.__default.Eq, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements())), RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2575_rTypeParamsDeclsWithHash, RAST.__default.Hash, RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(RAST.TypeParamDecl.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_H"), Dafny.Sequence<RAST._IType>.FromElements(((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("hash"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Hasher"))))), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed, RAST.Formal.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_state"), RAST.Type.create_BorrowedMut(RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_H"))))), Std.Wrappers.Option<RAST._IType>.create_None(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(_2577_hashImplBody)))))));
      Dafny.ISequence<RAST._IModDecl> _2579_defaultImpl;
      _2579_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      Dafny.ISequence<RAST._IModDecl> _2580_asRefImpl;
      _2580_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements();
      if ((new BigInteger(((c).dtor_ctors).Count)).Sign == 1) {
        RAST._IExpr _2581_structName;
        _2581_structName = (RAST.Expr.create_Identifier(_2527_datatypeName)).MSel(DCOMP.__default.escapeName((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_name));
        Dafny.ISequence<RAST._IAssignIdentifier> _2582_structAssignments;
        _2582_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
        BigInteger _hi19 = new BigInteger(((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Count);
        for (BigInteger _2583_i = BigInteger.Zero; _2583_i < _hi19; _2583_i++) {
          DAST._IFormal _2584_formal;
          _2584_formal = ((((c).dtor_ctors).Select(BigInteger.Zero)).dtor_args).Select(_2583_i);
          _2582_structAssignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_2582_structAssignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeName((_2584_formal).dtor_name), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::default::Default::default()")))));
        }
        Dafny.ISequence<RAST._ITypeParamDecl> _2585_defaultConstrainedTypeParams;
        _2585_defaultConstrainedTypeParams = RAST.TypeParamDecl.AddConstraintsMultiple(_2525_rTypeParamsDecls, Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.DefaultTrait));
        RAST._IType _2586_fullType;
        _2586_fullType = RAST.Type.create_TypeApp(RAST.Type.create_TIdentifier(_2527_datatypeName), _2524_rTypeParams);
        _2579_defaultImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2585_defaultConstrainedTypeParams, RAST.__default.DefaultTrait, _2586_fullType, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("default"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(), Std.Wrappers.Option<RAST._IType>.create_Some(_2586_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_StructBuild(_2581_structName, _2582_structAssignments))))))));
        _2580_asRefImpl = Dafny.Sequence<RAST._IModDecl>.FromElements(RAST.ModDecl.create_ImplDecl(RAST.Impl.create_ImplFor(_2525_rTypeParamsDecls, (((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("convert"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("AsRef"))).Apply1(_2586_fullType), RAST.Type.create_Borrowed(_2586_fullType), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Dafny.Sequence<RAST._IImplMember>.FromElements(RAST.ImplMember.create_FnDecl(RAST.Visibility.create_PRIV(), RAST.Fn.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"), Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(), Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.selfBorrowed), Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_SelfOwned()), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.__default.self)))))));
      }
      s = Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(Dafny.Sequence<RAST._IModDecl>.Concat(_2561_enumBody, _2578_printImpl), _2579_defaultImpl), _2580_asRefImpl);
      return s;
    }
    public static RAST._IType GenPath(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IType r = RAST.Type.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.Type.create_SelfOwned();
        return r;
      } else {
        r = ((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"))) ? (RAST.__default.dafny__runtime__type) : (RAST.Type.create_TIdentifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))))));
        BigInteger _hi20 = new BigInteger((p).Count);
        for (BigInteger _2587_i = BigInteger.Zero; _2587_i < _hi20; _2587_i++) {
          r = (r).MSel(DCOMP.__default.escapeName(((p).Select(_2587_i))));
        }
      }
      return r;
    }
    public static RAST._IExpr GenPathExpr(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> p)
    {
      RAST._IExpr r = RAST.Expr.Default();
      if ((new BigInteger((p).Count)).Sign == 0) {
        r = RAST.__default.self;
        return r;
      } else {
        r = ((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))) ? (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) : (((((((p).Select(BigInteger.Zero)))).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"))) ? (RAST.__default.dafny__runtime) : (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("super"))))));
        BigInteger _hi21 = new BigInteger((p).Count);
        for (BigInteger _2588_i = BigInteger.Zero; _2588_i < _hi21; _2588_i++) {
          r = (r).MSel(DCOMP.__default.escapeName(((p).Select(_2588_i))));
        }
      }
      return r;
    }
    public Dafny.ISequence<RAST._IType> GenTypeArgs(Dafny.ISequence<DAST._IType> args, DCOMP._IGenTypeContext genTypeContext)
    {
      Dafny.ISequence<RAST._IType> s = Dafny.Sequence<RAST._IType>.Empty;
      s = Dafny.Sequence<RAST._IType>.FromElements();
      if ((new BigInteger((args).Count)).Sign == 1) {
        BigInteger _2589_i;
        _2589_i = BigInteger.Zero;
        while ((_2589_i) < (new BigInteger((args).Count))) {
          RAST._IType _2590_genTp;
          RAST._IType _out81;
          _out81 = (this).GenType((args).Select(_2589_i), genTypeContext);
          _2590_genTp = _out81;
          s = Dafny.Sequence<RAST._IType>.Concat(s, Dafny.Sequence<RAST._IType>.FromElements(_2590_genTp));
          _2589_i = (_2589_i) + (BigInteger.One);
        }
      }
      return s;
    }
    public bool IsRcWrapped(Dafny.ISequence<DAST._IAttribute> attributes) {
      return ((!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("auto-nongrowing-size"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements()))) && (!(attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("false")))))) || ((attributes).Contains(DAST.Attribute.create(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rust_rc"), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("true")))));
    }
    public RAST._IType GenType(DAST._IType c, DCOMP._IGenTypeContext genTypeContext)
    {
      RAST._IType s = RAST.Type.Default();
      DAST._IType _source92 = c;
      if (_source92.is_UserDefined) {
        DAST._IResolvedType _2591___mcc_h0 = _source92.dtor_resolved;
        DAST._IResolvedType _2592_resolved = _2591___mcc_h0;
        {
          RAST._IType _2593_t;
          RAST._IType _out82;
          _out82 = DCOMP.COMP.GenPath((_2592_resolved).dtor_path);
          _2593_t = _out82;
          Dafny.ISequence<RAST._IType> _2594_typeArgs;
          Dafny.ISequence<RAST._IType> _out83;
          _out83 = (this).GenTypeArgs((_2592_resolved).dtor_typeArgs, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let10_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let10_0, _2595_dt__update__tmp_h0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let11_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let11_0, _2596_dt__update_hforTraitParents_h0 => DCOMP.GenTypeContext.create((_2595_dt__update__tmp_h0).dtor_inBinding, (_2595_dt__update__tmp_h0).dtor_inFn, _2596_dt__update_hforTraitParents_h0))))));
          _2594_typeArgs = _out83;
          s = RAST.Type.create_TypeApp(_2593_t, _2594_typeArgs);
          DAST._IResolvedTypeBase _source93 = (_2592_resolved).dtor_kind;
          if (_source93.is_Class) {
            {
              s = (this).Object(s);
            }
          } else if (_source93.is_Datatype) {
            {
              if ((this).IsRcWrapped((_2592_resolved).dtor_attributes)) {
                s = RAST.__default.Rc(s);
              }
            }
          } else if (_source93.is_Trait) {
            {
              if (((_2592_resolved).dtor_path).Equals(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_System"), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("object")))) {
                s = ((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("any"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Any"));
              }
              if (!((genTypeContext).dtor_forTraitParents)) {
                s = (this).Object(RAST.Type.create_DynType(s));
              }
            }
          } else {
            DAST._IType _2597___mcc_h18 = _source93.dtor_baseType;
            DAST._INewtypeRange _2598___mcc_h19 = _source93.dtor_range;
            bool _2599___mcc_h20 = _source93.dtor_erase;
            bool _2600_erased = _2599___mcc_h20;
            DAST._INewtypeRange _2601_range = _2598___mcc_h19;
            DAST._IType _2602_t = _2597___mcc_h18;
            {
              if (_2600_erased) {
                Std.Wrappers._IOption<RAST._IType> _source94 = DCOMP.COMP.NewtypeToRustType(_2602_t, _2601_range);
                if (_source94.is_None) {
                } else {
                  RAST._IType _2603___mcc_h21 = _source94.dtor_value;
                  RAST._IType _2604_v = _2603___mcc_h21;
                  s = _2604_v;
                }
              }
            }
          }
        }
      } else if (_source92.is_Tuple) {
        Dafny.ISequence<DAST._IType> _2605___mcc_h1 = _source92.dtor_Tuple_i_a0;
        Dafny.ISequence<DAST._IType> _2606_types = _2605___mcc_h1;
        {
          Dafny.ISequence<RAST._IType> _2607_args;
          _2607_args = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2608_i;
          _2608_i = BigInteger.Zero;
          while ((_2608_i) < (new BigInteger((_2606_types).Count))) {
            RAST._IType _2609_generated;
            RAST._IType _out84;
            _out84 = (this).GenType((_2606_types).Select(_2608_i), Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let12_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let12_0, _2610_dt__update__tmp_h1 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let13_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let13_0, _2611_dt__update_hforTraitParents_h1 => DCOMP.GenTypeContext.create((_2610_dt__update__tmp_h1).dtor_inBinding, (_2610_dt__update__tmp_h1).dtor_inFn, _2611_dt__update_hforTraitParents_h1))))));
            _2609_generated = _out84;
            _2607_args = Dafny.Sequence<RAST._IType>.Concat(_2607_args, Dafny.Sequence<RAST._IType>.FromElements(_2609_generated));
            _2608_i = (_2608_i) + (BigInteger.One);
          }
          s = RAST.Type.create_TupleType(_2607_args);
        }
      } else if (_source92.is_Array) {
        DAST._IType _2612___mcc_h2 = _source92.dtor_element;
        BigInteger _2613___mcc_h3 = _source92.dtor_dims;
        BigInteger _2614_dims = _2613___mcc_h3;
        DAST._IType _2615_element = _2612___mcc_h2;
        {
          if ((_2614_dims) > (new BigInteger(16))) {
            s = RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<i>Array of dimensions greater than 16</i>"));
          } else {
            RAST._IType _2616_elem;
            RAST._IType _out85;
            _out85 = (this).GenType(_2615_element, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let14_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let14_0, _2617_dt__update__tmp_h2 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let15_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let15_0, _2618_dt__update_hforTraitParents_h2 => DCOMP.GenTypeContext.create((_2617_dt__update__tmp_h2).dtor_inBinding, (_2617_dt__update__tmp_h2).dtor_inFn, _2618_dt__update_hforTraitParents_h2))))));
            _2616_elem = _out85;
            if ((_2614_dims) == (BigInteger.One)) {
              s = RAST.Type.create_Array(_2616_elem, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
              s = (this).Object(s);
            } else {
              Dafny.ISequence<Dafny.Rune> _2619_n;
              _2619_n = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array"), Std.Strings.__default.OfNat(_2614_dims));
              s = ((RAST.__default.dafny__runtime__type).MSel(_2619_n)).Apply(Dafny.Sequence<RAST._IType>.FromElements(_2616_elem));
              s = (this).Object(s);
            }
          }
        }
      } else if (_source92.is_Seq) {
        DAST._IType _2620___mcc_h4 = _source92.dtor_element;
        DAST._IType _2621_element = _2620___mcc_h4;
        {
          RAST._IType _2622_elem;
          RAST._IType _out86;
          _out86 = (this).GenType(_2621_element, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let16_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let16_0, _2623_dt__update__tmp_h3 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let17_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let17_0, _2624_dt__update_hforTraitParents_h3 => DCOMP.GenTypeContext.create((_2623_dt__update__tmp_h3).dtor_inBinding, (_2623_dt__update__tmp_h3).dtor_inFn, _2624_dt__update_hforTraitParents_h3))))));
          _2622_elem = _out86;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements(_2622_elem));
        }
      } else if (_source92.is_Set) {
        DAST._IType _2625___mcc_h5 = _source92.dtor_element;
        DAST._IType _2626_element = _2625___mcc_h5;
        {
          RAST._IType _2627_elem;
          RAST._IType _out87;
          _out87 = (this).GenType(_2626_element, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let18_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let18_0, _2628_dt__update__tmp_h4 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let19_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let19_0, _2629_dt__update_hforTraitParents_h4 => DCOMP.GenTypeContext.create((_2628_dt__update__tmp_h4).dtor_inBinding, (_2628_dt__update__tmp_h4).dtor_inFn, _2629_dt__update_hforTraitParents_h4))))));
          _2627_elem = _out87;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Set")), Dafny.Sequence<RAST._IType>.FromElements(_2627_elem));
        }
      } else if (_source92.is_Multiset) {
        DAST._IType _2630___mcc_h6 = _source92.dtor_element;
        DAST._IType _2631_element = _2630___mcc_h6;
        {
          RAST._IType _2632_elem;
          RAST._IType _out88;
          _out88 = (this).GenType(_2631_element, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let20_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let20_0, _2633_dt__update__tmp_h5 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let21_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let21_0, _2634_dt__update_hforTraitParents_h5 => DCOMP.GenTypeContext.create((_2633_dt__update__tmp_h5).dtor_inBinding, (_2633_dt__update__tmp_h5).dtor_inFn, _2634_dt__update_hforTraitParents_h5))))));
          _2632_elem = _out88;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Multiset")), Dafny.Sequence<RAST._IType>.FromElements(_2632_elem));
        }
      } else if (_source92.is_Map) {
        DAST._IType _2635___mcc_h7 = _source92.dtor_key;
        DAST._IType _2636___mcc_h8 = _source92.dtor_value;
        DAST._IType _2637_value = _2636___mcc_h8;
        DAST._IType _2638_key = _2635___mcc_h7;
        {
          RAST._IType _2639_keyType;
          RAST._IType _out89;
          _out89 = (this).GenType(_2638_key, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let22_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let22_0, _2640_dt__update__tmp_h6 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let23_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let23_0, _2641_dt__update_hforTraitParents_h6 => DCOMP.GenTypeContext.create((_2640_dt__update__tmp_h6).dtor_inBinding, (_2640_dt__update__tmp_h6).dtor_inFn, _2641_dt__update_hforTraitParents_h6))))));
          _2639_keyType = _out89;
          RAST._IType _2642_valueType;
          RAST._IType _out90;
          _out90 = (this).GenType(_2637_value, genTypeContext);
          _2642_valueType = _out90;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Map")), Dafny.Sequence<RAST._IType>.FromElements(_2639_keyType, _2642_valueType));
        }
      } else if (_source92.is_SetBuilder) {
        DAST._IType _2643___mcc_h9 = _source92.dtor_element;
        DAST._IType _2644_elem = _2643___mcc_h9;
        {
          RAST._IType _2645_elemType;
          RAST._IType _out91;
          _out91 = (this).GenType(_2644_elem, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let24_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let24_0, _2646_dt__update__tmp_h8 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let25_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let25_0, _2647_dt__update_hforTraitParents_h8 => DCOMP.GenTypeContext.create((_2646_dt__update__tmp_h8).dtor_inBinding, (_2646_dt__update__tmp_h8).dtor_inFn, _2647_dt__update_hforTraitParents_h8))))));
          _2645_elemType = _out91;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2645_elemType));
        }
      } else if (_source92.is_MapBuilder) {
        DAST._IType _2648___mcc_h10 = _source92.dtor_key;
        DAST._IType _2649___mcc_h11 = _source92.dtor_value;
        DAST._IType _2650_value = _2649___mcc_h11;
        DAST._IType _2651_key = _2648___mcc_h10;
        {
          RAST._IType _2652_keyType;
          RAST._IType _out92;
          _out92 = (this).GenType(_2651_key, Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let26_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let26_0, _2653_dt__update__tmp_h7 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let27_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let27_0, _2654_dt__update_hforTraitParents_h7 => DCOMP.GenTypeContext.create((_2653_dt__update__tmp_h7).dtor_inBinding, (_2653_dt__update__tmp_h7).dtor_inFn, _2654_dt__update_hforTraitParents_h7))))));
          _2652_keyType = _out92;
          RAST._IType _2655_valueType;
          RAST._IType _out93;
          _out93 = (this).GenType(_2650_value, genTypeContext);
          _2655_valueType = _out93;
          s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder")), Dafny.Sequence<RAST._IType>.FromElements(_2652_keyType, _2655_valueType));
        }
      } else if (_source92.is_Arrow) {
        Dafny.ISequence<DAST._IType> _2656___mcc_h12 = _source92.dtor_args;
        DAST._IType _2657___mcc_h13 = _source92.dtor_result;
        DAST._IType _2658_result = _2657___mcc_h13;
        Dafny.ISequence<DAST._IType> _2659_args = _2656___mcc_h12;
        {
          Dafny.ISequence<RAST._IType> _2660_argTypes;
          _2660_argTypes = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _2661_i;
          _2661_i = BigInteger.Zero;
          while ((_2661_i) < (new BigInteger((_2659_args).Count))) {
            RAST._IType _2662_generated;
            RAST._IType _out94;
            _out94 = (this).GenType((_2659_args).Select(_2661_i), Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(genTypeContext, _pat_let28_0 => Dafny.Helpers.Let<DCOMP._IGenTypeContext, DCOMP._IGenTypeContext>(_pat_let28_0, _2663_dt__update__tmp_h9 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(false, _pat_let29_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let29_0, _2664_dt__update_hforTraitParents_h9 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(true, _pat_let30_0 => Dafny.Helpers.Let<bool, DCOMP._IGenTypeContext>(_pat_let30_0, _2665_dt__update_hinFn_h0 => DCOMP.GenTypeContext.create((_2663_dt__update__tmp_h9).dtor_inBinding, _2665_dt__update_hinFn_h0, _2664_dt__update_hforTraitParents_h9))))))));
            _2662_generated = _out94;
            _2660_argTypes = Dafny.Sequence<RAST._IType>.Concat(_2660_argTypes, Dafny.Sequence<RAST._IType>.FromElements(RAST.Type.create_Borrowed(_2662_generated)));
            _2661_i = (_2661_i) + (BigInteger.One);
          }
          RAST._IType _2666_resultType;
          RAST._IType _out95;
          _out95 = (this).GenType(_2658_result, DCOMP.GenTypeContext.create(((genTypeContext).dtor_inFn) || ((genTypeContext).dtor_inBinding), false, false));
          _2666_resultType = _out95;
          s = RAST.__default.Rc(RAST.Type.create_DynType(RAST.Type.create_FnType(_2660_argTypes, _2666_resultType)));
        }
      } else if (_source92.is_Primitive) {
        DAST._IPrimitive _2667___mcc_h14 = _source92.dtor_Primitive_i_a0;
        DAST._IPrimitive _2668_p = _2667___mcc_h14;
        {
          DAST._IPrimitive _source95 = _2668_p;
          if (_source95.is_Int) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyInt"));
          } else if (_source95.is_Real) {
            s = (RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("BigRational"));
          } else if (_source95.is_String) {
            s = RAST.Type.create_TypeApp((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence")), Dafny.Sequence<RAST._IType>.FromElements((RAST.__default.dafny__runtime__type).MSel((this).DafnyChar)));
          } else if (_source95.is_Bool) {
            s = RAST.Type.create_Bool();
          } else {
            s = (RAST.__default.dafny__runtime__type).MSel((this).DafnyChar);
          }
        }
      } else if (_source92.is_Passthrough) {
        Dafny.ISequence<Dafny.Rune> _2669___mcc_h15 = _source92.dtor_Passthrough_i_a0;
        Dafny.ISequence<Dafny.Rune> _2670_v = _2669___mcc_h15;
        s = RAST.__default.RawType(_2670_v);
      } else if (_source92.is_TypeArg) {
        Dafny.ISequence<Dafny.Rune> _2671___mcc_h16 = _source92.dtor_TypeArg_i_a0;
        Dafny.ISequence<Dafny.Rune> _source96 = _2671___mcc_h16;
        Dafny.ISequence<Dafny.Rune> _2672___mcc_h17 = _source96;
        Dafny.ISequence<Dafny.Rune> _2673_name = _2672___mcc_h17;
        s = RAST.Type.create_TIdentifier(DCOMP.__default.escapeName(_2673_name));
      } else {
        {
          s = ((RAST.__default.std__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("any"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Any"));
          if (!((genTypeContext).dtor_forTraitParents)) {
            s = (this).Object(RAST.Type.create_DynType(s));
          }
        }
      }
      return s;
    }
    public void GenClassImplBody(Dafny.ISequence<DAST._IMethod> body, bool forTrait, DAST._IType enclosingType, Dafny.ISequence<DAST._IType> enclosingTypeParams, out Dafny.ISequence<RAST._IImplMember> s, out Dafny.IMap<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>,Dafny.ISequence<RAST._IImplMember>> traitBodies)
    {
      s = Dafny.Sequence<RAST._IImplMember>.Empty;
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Empty;
      s = Dafny.Sequence<RAST._IImplMember>.FromElements();
      traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements();
      BigInteger _hi22 = new BigInteger((body).Count);
      for (BigInteger _2674_i = BigInteger.Zero; _2674_i < _hi22; _2674_i++) {
        DAST._IMethod _source97 = (body).Select(_2674_i);
        DAST._IMethod _2675___mcc_h0 = _source97;
        DAST._IMethod _2676_m = _2675___mcc_h0;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source98 = (_2676_m).dtor_overridingPath;
          if (_source98.is_None) {
            {
              RAST._IImplMember _2677_generated;
              RAST._IImplMember _out96;
              _out96 = (this).GenMethod(_2676_m, forTrait, enclosingType, enclosingTypeParams);
              _2677_generated = _out96;
              s = Dafny.Sequence<RAST._IImplMember>.Concat(s, Dafny.Sequence<RAST._IImplMember>.FromElements(_2677_generated));
            }
          } else {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2678___mcc_h1 = _source98.dtor_value;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2679_p = _2678___mcc_h1;
            {
              Dafny.ISequence<RAST._IImplMember> _2680_existing;
              _2680_existing = Dafny.Sequence<RAST._IImplMember>.FromElements();
              if ((traitBodies).Contains(_2679_p)) {
                _2680_existing = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Select(traitBodies,_2679_p);
              }
              RAST._IImplMember _2681_genMethod;
              RAST._IImplMember _out97;
              _out97 = (this).GenMethod(_2676_m, true, enclosingType, enclosingTypeParams);
              _2681_genMethod = _out97;
              _2680_existing = Dafny.Sequence<RAST._IImplMember>.Concat(_2680_existing, Dafny.Sequence<RAST._IImplMember>.FromElements(_2681_genMethod));
              traitBodies = Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.Merge(traitBodies, Dafny.Map<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISequence<RAST._IImplMember>>(_2679_p, _2680_existing)));
            }
          }
        }
      }
    }
    public Dafny.ISequence<RAST._IFormal> GenParams(Dafny.ISequence<DAST._IFormal> @params)
    {
      Dafny.ISequence<RAST._IFormal> s = Dafny.Sequence<RAST._IFormal>.Empty;
      s = Dafny.Sequence<RAST._IFormal>.FromElements();
      BigInteger _hi23 = new BigInteger((@params).Count);
      for (BigInteger _2682_i = BigInteger.Zero; _2682_i < _hi23; _2682_i++) {
        DAST._IFormal _2683_param;
        _2683_param = (@params).Select(_2682_i);
        RAST._IType _2684_paramType;
        RAST._IType _out98;
        _out98 = (this).GenType((_2683_param).dtor_typ, DCOMP.GenTypeContext.@default());
        _2684_paramType = _out98;
        if ((!((_2684_paramType).CanReadWithoutClone())) && (!((_2683_param).dtor_attributes).Contains(DCOMP.__default.AttributeOwned))) {
          _2684_paramType = RAST.Type.create_Borrowed(_2684_paramType);
        }
        s = Dafny.Sequence<RAST._IFormal>.Concat(s, Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(DCOMP.__default.escapeName((_2683_param).dtor_name), _2684_paramType)));
      }
      return s;
    }
    public RAST._IImplMember GenMethod(DAST._IMethod m, bool forTrait, DAST._IType enclosingType, Dafny.ISequence<DAST._IType> enclosingTypeParams)
    {
      RAST._IImplMember s = RAST.ImplMember.Default();
      Dafny.ISequence<RAST._IFormal> _2685_params;
      Dafny.ISequence<RAST._IFormal> _out99;
      _out99 = (this).GenParams((m).dtor_params);
      _2685_params = _out99;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2686_paramNames;
      _2686_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2687_paramTypes;
      _2687_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      BigInteger _hi24 = new BigInteger(((m).dtor_params).Count);
      for (BigInteger _2688_paramI = BigInteger.Zero; _2688_paramI < _hi24; _2688_paramI++) {
        DAST._IFormal _2689_dafny__formal;
        _2689_dafny__formal = ((m).dtor_params).Select(_2688_paramI);
        RAST._IFormal _2690_formal;
        _2690_formal = (_2685_params).Select(_2688_paramI);
        Dafny.ISequence<Dafny.Rune> _2691_name;
        _2691_name = (_2690_formal).dtor_name;
        _2686_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2686_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2691_name));
        _2687_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2687_paramTypes, _2691_name, (_2690_formal).dtor_tpe);
      }
      Dafny.ISequence<Dafny.Rune> _2692_fnName;
      _2692_fnName = DCOMP.__default.escapeName((m).dtor_name);
      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2693_selfIdentifier;
      _2693_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None();
      if (!((m).dtor_isStatic)) {
        Dafny.ISequence<Dafny.Rune> _2694_selfId;
        _2694_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self");
        if ((_2692_fnName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_ctor"))) {
          _2694_selfId = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this");
        }
        if (forTrait) {
          RAST._IFormal _2695_selfFormal;
          _2695_selfFormal = (((m).dtor_wasFunction) ? (RAST.Formal.selfBorrowed) : (RAST.Formal.selfBorrowedMut));
          _2685_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(_2695_selfFormal), _2685_params);
        } else {
          var _pat_let_tv13 = enclosingTypeParams;
          var _pat_let_tv14 = enclosingType;
          var _pat_let_tv15 = enclosingType;
          var _pat_let_tv16 = enclosingType;
          var _pat_let_tv17 = enclosingType;
          var _pat_let_tv18 = enclosingType;
          var _pat_let_tv19 = enclosingType;
          var _pat_let_tv20 = enclosingType;
          var _pat_let_tv21 = enclosingType;
          var _pat_let_tv22 = enclosingType;
          var _pat_let_tv23 = enclosingType;
          var _pat_let_tv24 = enclosingType;
          var _pat_let_tv25 = enclosingType;
          var _pat_let_tv26 = enclosingType;
          DAST._IType _2696_instanceType;
          _2696_instanceType = ((System.Func<DAST._IType, DAST._IType>)((_source99) => {
            if (_source99.is_UserDefined) {
              DAST._IResolvedType _2697___mcc_h0 = _source99.dtor_resolved;
              DAST._IResolvedType _2698_r = _2697___mcc_h0;
              return DAST.Type.create_UserDefined(Dafny.Helpers.Let<DAST._IResolvedType, DAST._IResolvedType>(_2698_r, _pat_let31_0 => Dafny.Helpers.Let<DAST._IResolvedType, DAST._IResolvedType>(_pat_let31_0, _2699_dt__update__tmp_h0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IType>, DAST._IResolvedType>(_pat_let_tv13, _pat_let32_0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IType>, DAST._IResolvedType>(_pat_let32_0, _2700_dt__update_htypeArgs_h0 => DAST.ResolvedType.create((_2699_dt__update__tmp_h0).dtor_path, _2700_dt__update_htypeArgs_h0, (_2699_dt__update__tmp_h0).dtor_kind, (_2699_dt__update__tmp_h0).dtor_attributes, (_2699_dt__update__tmp_h0).dtor_properMethods, (_2699_dt__update__tmp_h0).dtor_extendedTypes))))));
            } else if (_source99.is_Tuple) {
              Dafny.ISequence<DAST._IType> _2701___mcc_h2 = _source99.dtor_Tuple_i_a0;
              return _pat_let_tv14;
            } else if (_source99.is_Array) {
              DAST._IType _2702___mcc_h4 = _source99.dtor_element;
              BigInteger _2703___mcc_h5 = _source99.dtor_dims;
              return _pat_let_tv15;
            } else if (_source99.is_Seq) {
              DAST._IType _2704___mcc_h8 = _source99.dtor_element;
              return _pat_let_tv16;
            } else if (_source99.is_Set) {
              DAST._IType _2705___mcc_h10 = _source99.dtor_element;
              return _pat_let_tv17;
            } else if (_source99.is_Multiset) {
              DAST._IType _2706___mcc_h12 = _source99.dtor_element;
              return _pat_let_tv18;
            } else if (_source99.is_Map) {
              DAST._IType _2707___mcc_h14 = _source99.dtor_key;
              DAST._IType _2708___mcc_h15 = _source99.dtor_value;
              return _pat_let_tv19;
            } else if (_source99.is_SetBuilder) {
              DAST._IType _2709___mcc_h18 = _source99.dtor_element;
              return _pat_let_tv20;
            } else if (_source99.is_MapBuilder) {
              DAST._IType _2710___mcc_h20 = _source99.dtor_key;
              DAST._IType _2711___mcc_h21 = _source99.dtor_value;
              return _pat_let_tv21;
            } else if (_source99.is_Arrow) {
              Dafny.ISequence<DAST._IType> _2712___mcc_h24 = _source99.dtor_args;
              DAST._IType _2713___mcc_h25 = _source99.dtor_result;
              return _pat_let_tv22;
            } else if (_source99.is_Primitive) {
              DAST._IPrimitive _2714___mcc_h28 = _source99.dtor_Primitive_i_a0;
              return _pat_let_tv23;
            } else if (_source99.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _2715___mcc_h30 = _source99.dtor_Passthrough_i_a0;
              return _pat_let_tv24;
            } else if (_source99.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _2716___mcc_h32 = _source99.dtor_TypeArg_i_a0;
              return _pat_let_tv25;
            } else {
              return _pat_let_tv26;
            }
          }))(enclosingType);
          RAST._IType _2717_tpe;
          RAST._IType _out100;
          _out100 = (this).GenType(_2696_instanceType, DCOMP.GenTypeContext.@default());
          _2717_tpe = _out100;
          if (((_2694_selfId).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && ((_2717_tpe).IsObjectOrPointer())) {
            if ((m).dtor_wasFunction) {
              _2717_tpe = RAST.__default.SelfBorrowed;
            } else {
              _2717_tpe = RAST.__default.SelfBorrowedMut;
            }
          } else {
            if (!((_2717_tpe).CanReadWithoutClone())) {
              _2717_tpe = RAST.Type.create_Borrowed(_2717_tpe);
            }
          }
          _2685_params = Dafny.Sequence<RAST._IFormal>.Concat(Dafny.Sequence<RAST._IFormal>.FromElements(RAST.Formal.create(_2694_selfId, _2717_tpe)), _2685_params);
        }
        _2693_selfIdentifier = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_2694_selfId);
      }
      Dafny.ISequence<RAST._IType> _2718_retTypeArgs;
      _2718_retTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
      BigInteger _2719_typeI;
      _2719_typeI = BigInteger.Zero;
      while ((_2719_typeI) < (new BigInteger(((m).dtor_outTypes).Count))) {
        RAST._IType _2720_typeExpr;
        RAST._IType _out101;
        _out101 = (this).GenType(((m).dtor_outTypes).Select(_2719_typeI), DCOMP.GenTypeContext.@default());
        _2720_typeExpr = _out101;
        _2718_retTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_2718_retTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_2720_typeExpr));
        _2719_typeI = (_2719_typeI) + (BigInteger.One);
      }
      RAST._IVisibility _2721_visibility;
      _2721_visibility = ((forTrait) ? (RAST.Visibility.create_PRIV()) : (RAST.Visibility.create_PUB()));
      Dafny.ISequence<DAST._ITypeArgDecl> _2722_typeParamsFiltered;
      _2722_typeParamsFiltered = Dafny.Sequence<DAST._ITypeArgDecl>.FromElements();
      BigInteger _hi25 = new BigInteger(((m).dtor_typeParams).Count);
      for (BigInteger _2723_typeParamI = BigInteger.Zero; _2723_typeParamI < _hi25; _2723_typeParamI++) {
        DAST._ITypeArgDecl _2724_typeParam;
        _2724_typeParam = ((m).dtor_typeParams).Select(_2723_typeParamI);
        if (!((enclosingTypeParams).Contains(DAST.Type.create_TypeArg((_2724_typeParam).dtor_name)))) {
          _2722_typeParamsFiltered = Dafny.Sequence<DAST._ITypeArgDecl>.Concat(_2722_typeParamsFiltered, Dafny.Sequence<DAST._ITypeArgDecl>.FromElements(_2724_typeParam));
        }
      }
      Dafny.ISequence<RAST._ITypeParamDecl> _2725_typeParams;
      _2725_typeParams = Dafny.Sequence<RAST._ITypeParamDecl>.FromElements();
      if ((new BigInteger((_2722_typeParamsFiltered).Count)).Sign == 1) {
        BigInteger _hi26 = new BigInteger((_2722_typeParamsFiltered).Count);
        for (BigInteger _2726_i = BigInteger.Zero; _2726_i < _hi26; _2726_i++) {
          DAST._IType _2727_typeArg;
          RAST._ITypeParamDecl _2728_rTypeParamDecl;
          DAST._IType _out102;
          RAST._ITypeParamDecl _out103;
          (this).GenTypeParam((_2722_typeParamsFiltered).Select(_2726_i), out _out102, out _out103);
          _2727_typeArg = _out102;
          _2728_rTypeParamDecl = _out103;
          _2725_typeParams = Dafny.Sequence<RAST._ITypeParamDecl>.Concat(_2725_typeParams, Dafny.Sequence<RAST._ITypeParamDecl>.FromElements(_2728_rTypeParamDecl));
        }
      }
      Std.Wrappers._IOption<RAST._IExpr> _2729_fBody = Std.Wrappers.Option<RAST._IExpr>.Default();
      DCOMP._IEnvironment _2730_env = DCOMP.Environment.Default();
      RAST._IExpr _2731_preBody;
      _2731_preBody = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2732_preAssignNames;
      _2732_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
      Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _2733_preAssignTypes;
      _2733_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
      if ((m).dtor_hasBody) {
        RAST._IExpr _2734_earlyReturn;
        _2734_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_None());
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _source100 = (m).dtor_outVars;
        if (_source100.is_None) {
        } else {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2735___mcc_h34 = _source100.dtor_value;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _2736_outVars = _2735___mcc_h34;
          {
            if ((m).dtor_outVarsAreUninitFieldsToAssign) {
              _2734_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(Dafny.Sequence<RAST._IExpr>.FromElements())));
              BigInteger _hi27 = new BigInteger((_2736_outVars).Count);
              for (BigInteger _2737_outI = BigInteger.Zero; _2737_outI < _hi27; _2737_outI++) {
                Dafny.ISequence<Dafny.Rune> _2738_outVar;
                _2738_outVar = (_2736_outVars).Select(_2737_outI);
                Dafny.ISequence<Dafny.Rune> _2739_outName;
                _2739_outName = DCOMP.__default.escapeName((_2738_outVar));
                Dafny.ISequence<Dafny.Rune> _2740_tracker__name;
                _2740_tracker__name = DCOMP.__default.AddAssignedPrefix(_2739_outName);
                _2732_preAssignNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2732_preAssignNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2740_tracker__name));
                _2733_preAssignTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2733_preAssignTypes, _2740_tracker__name, RAST.Type.create_Bool());
                _2731_preBody = (_2731_preBody).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _2740_tracker__name, Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_Bool()), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_LiteralBool(false))));
              }
            } else {
              Dafny.ISequence<RAST._IExpr> _2741_tupleArgs;
              _2741_tupleArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
              BigInteger _hi28 = new BigInteger((_2736_outVars).Count);
              for (BigInteger _2742_outI = BigInteger.Zero; _2742_outI < _hi28; _2742_outI++) {
                Dafny.ISequence<Dafny.Rune> _2743_outVar;
                _2743_outVar = (_2736_outVars).Select(_2742_outI);
                RAST._IType _2744_outType;
                RAST._IType _out104;
                _out104 = (this).GenType(((m).dtor_outTypes).Select(_2742_outI), DCOMP.GenTypeContext.@default());
                _2744_outType = _out104;
                Dafny.ISequence<Dafny.Rune> _2745_outName;
                _2745_outName = DCOMP.__default.escapeName((_2743_outVar));
                _2686_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2686_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2745_outName));
                RAST._IType _2746_outMaybeType;
                _2746_outMaybeType = (((_2744_outType).CanReadWithoutClone()) ? (_2744_outType) : (RAST.__default.MaybePlaceboType(_2744_outType)));
                _2687_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_2687_paramTypes, _2745_outName, _2746_outMaybeType);
                RAST._IExpr _2747_outVarReturn;
                DCOMP._IOwnership _2748___v57;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2749___v58;
                RAST._IExpr _out105;
                DCOMP._IOwnership _out106;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out107;
                (this).GenExpr(DAST.Expression.create_Ident((_2743_outVar)), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_2745_outName), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements(new Dafny.Pair<Dafny.ISequence<Dafny.Rune>, RAST._IType>(_2745_outName, _2746_outMaybeType))), DCOMP.Ownership.create_OwnershipOwned(), out _out105, out _out106, out _out107);
                _2747_outVarReturn = _out105;
                _2748___v57 = _out106;
                _2749___v58 = _out107;
                _2741_tupleArgs = Dafny.Sequence<RAST._IExpr>.Concat(_2741_tupleArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_2747_outVarReturn));
              }
              if ((new BigInteger((_2741_tupleArgs).Count)) == (BigInteger.One)) {
                _2734_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some((_2741_tupleArgs).Select(BigInteger.Zero)));
              } else {
                _2734_earlyReturn = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_Tuple(_2741_tupleArgs)));
              }
            }
          }
        }
        _2730_env = DCOMP.Environment.create(Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_2732_preAssignNames, _2686_paramNames), Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Merge(_2733_preAssignTypes, _2687_paramTypes));
        RAST._IExpr _2750_body;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2751___v59;
        DCOMP._IEnvironment _2752___v60;
        RAST._IExpr _out108;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out109;
        DCOMP._IEnvironment _out110;
        (this).GenStmts((m).dtor_body, _2693_selfIdentifier, _2730_env, true, _2734_earlyReturn, out _out108, out _out109, out _out110);
        _2750_body = _out108;
        _2751___v59 = _out109;
        _2752___v60 = _out110;
        _2729_fBody = Std.Wrappers.Option<RAST._IExpr>.create_Some((_2731_preBody).Then(_2750_body));
      } else {
        _2730_env = DCOMP.Environment.create(_2686_paramNames, _2687_paramTypes);
        _2729_fBody = Std.Wrappers.Option<RAST._IExpr>.create_None();
      }
      s = RAST.ImplMember.create_FnDecl(_2721_visibility, RAST.Fn.create(_2692_fnName, _2725_typeParams, _2685_params, Std.Wrappers.Option<RAST._IType>.create_Some((((new BigInteger((_2718_retTypeArgs).Count)) == (BigInteger.One)) ? ((_2718_retTypeArgs).Select(BigInteger.Zero)) : (RAST.Type.create_TupleType(_2718_retTypeArgs)))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""), _2729_fBody));
      return s;
    }
    public void GenStmts(Dafny.ISequence<DAST._IStatement> stmts, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2753_declarations;
      _2753_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
      BigInteger _2754_i;
      _2754_i = BigInteger.Zero;
      newEnv = env;
      Dafny.ISequence<DAST._IStatement> _2755_stmts;
      _2755_stmts = stmts;
      while ((_2754_i) < (new BigInteger((_2755_stmts).Count))) {
        DAST._IStatement _2756_stmt;
        _2756_stmt = (_2755_stmts).Select(_2754_i);
        DAST._IStatement _source101 = _2756_stmt;
        if (_source101.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2757___mcc_h0 = _source101.dtor_name;
          DAST._IType _2758___mcc_h1 = _source101.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2759___mcc_h2 = _source101.dtor_maybeValue;
          Std.Wrappers._IOption<DAST._IExpression> _source102 = _2759___mcc_h2;
          if (_source102.is_None) {
            DAST._IType _2760_optType = _2758___mcc_h1;
            Dafny.ISequence<Dafny.Rune> _2761_name = _2757___mcc_h0;
            if (((_2754_i) + (BigInteger.One)) < (new BigInteger((_2755_stmts).Count))) {
              DAST._IStatement _source103 = (_2755_stmts).Select((_2754_i) + (BigInteger.One));
              if (_source103.is_DeclareVar) {
                Dafny.ISequence<Dafny.Rune> _2762___mcc_h54 = _source103.dtor_name;
                DAST._IType _2763___mcc_h55 = _source103.dtor_typ;
                Std.Wrappers._IOption<DAST._IExpression> _2764___mcc_h56 = _source103.dtor_maybeValue;
              } else if (_source103.is_Assign) {
                DAST._IAssignLhs _2765___mcc_h60 = _source103.dtor_lhs;
                DAST._IExpression _2766___mcc_h61 = _source103.dtor_value;
                DAST._IAssignLhs _source104 = _2765___mcc_h60;
                if (_source104.is_Ident) {
                  Dafny.ISequence<Dafny.Rune> _2767___mcc_h64 = _source104.dtor_ident;
                  Dafny.ISequence<Dafny.Rune> _source105 = _2767___mcc_h64;
                  Dafny.ISequence<Dafny.Rune> _2768___mcc_h66 = _source105;
                  DAST._IExpression _2769_rhs = _2766___mcc_h61;
                  Dafny.ISequence<Dafny.Rune> _2770_name2 = _2768___mcc_h66;
                  if (object.Equals(_2770_name2, _2761_name)) {
                    _2755_stmts = Dafny.Sequence<DAST._IStatement>.Concat(Dafny.Sequence<DAST._IStatement>.Concat((_2755_stmts).Subsequence(BigInteger.Zero, _2754_i), Dafny.Sequence<DAST._IStatement>.FromElements(DAST.Statement.create_DeclareVar(_2761_name, _2760_optType, Std.Wrappers.Option<DAST._IExpression>.create_Some(_2769_rhs)))), (_2755_stmts).Drop((_2754_i) + (new BigInteger(2))));
                    _2756_stmt = (_2755_stmts).Select(_2754_i);
                  }
                } else if (_source104.is_Select) {
                  DAST._IExpression _2771___mcc_h68 = _source104.dtor_expr;
                  Dafny.ISequence<Dafny.Rune> _2772___mcc_h69 = _source104.dtor_field;
                } else {
                  DAST._IExpression _2773___mcc_h72 = _source104.dtor_expr;
                  Dafny.ISequence<DAST._IExpression> _2774___mcc_h73 = _source104.dtor_indices;
                }
              } else if (_source103.is_If) {
                DAST._IExpression _2775___mcc_h76 = _source103.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2776___mcc_h77 = _source103.dtor_thn;
                Dafny.ISequence<DAST._IStatement> _2777___mcc_h78 = _source103.dtor_els;
              } else if (_source103.is_Labeled) {
                Dafny.ISequence<Dafny.Rune> _2778___mcc_h82 = _source103.dtor_lbl;
                Dafny.ISequence<DAST._IStatement> _2779___mcc_h83 = _source103.dtor_body;
              } else if (_source103.is_While) {
                DAST._IExpression _2780___mcc_h86 = _source103.dtor_cond;
                Dafny.ISequence<DAST._IStatement> _2781___mcc_h87 = _source103.dtor_body;
              } else if (_source103.is_Foreach) {
                Dafny.ISequence<Dafny.Rune> _2782___mcc_h90 = _source103.dtor_boundName;
                DAST._IType _2783___mcc_h91 = _source103.dtor_boundType;
                DAST._IExpression _2784___mcc_h92 = _source103.dtor_over;
                Dafny.ISequence<DAST._IStatement> _2785___mcc_h93 = _source103.dtor_body;
              } else if (_source103.is_Call) {
                DAST._IExpression _2786___mcc_h98 = _source103.dtor_on;
                DAST._ICallName _2787___mcc_h99 = _source103.dtor_callName;
                Dafny.ISequence<DAST._IType> _2788___mcc_h100 = _source103.dtor_typeArgs;
                Dafny.ISequence<DAST._IExpression> _2789___mcc_h101 = _source103.dtor_args;
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2790___mcc_h102 = _source103.dtor_outs;
              } else if (_source103.is_Return) {
                DAST._IExpression _2791___mcc_h108 = _source103.dtor_expr;
              } else if (_source103.is_EarlyReturn) {
              } else if (_source103.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2792___mcc_h110 = _source103.dtor_toLabel;
              } else if (_source103.is_TailRecursive) {
                Dafny.ISequence<DAST._IStatement> _2793___mcc_h112 = _source103.dtor_body;
              } else if (_source103.is_JumpTailCallStart) {
              } else if (_source103.is_Halt) {
              } else if (_source103.is_Print) {
                DAST._IExpression _2794___mcc_h114 = _source103.dtor_Print_i_a0;
              } else {
                Dafny.ISequence<DAST._IFormal> _2795___mcc_h116 = _source103.dtor_fields;
              }
            }
          } else {
            DAST._IExpression _2796___mcc_h6 = _source102.dtor_value;
          }
        } else if (_source101.is_Assign) {
          DAST._IAssignLhs _2797___mcc_h8 = _source101.dtor_lhs;
          DAST._IExpression _2798___mcc_h9 = _source101.dtor_value;
        } else if (_source101.is_If) {
          DAST._IExpression _2799___mcc_h12 = _source101.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2800___mcc_h13 = _source101.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2801___mcc_h14 = _source101.dtor_els;
        } else if (_source101.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2802___mcc_h18 = _source101.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2803___mcc_h19 = _source101.dtor_body;
        } else if (_source101.is_While) {
          DAST._IExpression _2804___mcc_h22 = _source101.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2805___mcc_h23 = _source101.dtor_body;
        } else if (_source101.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2806___mcc_h26 = _source101.dtor_boundName;
          DAST._IType _2807___mcc_h27 = _source101.dtor_boundType;
          DAST._IExpression _2808___mcc_h28 = _source101.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2809___mcc_h29 = _source101.dtor_body;
        } else if (_source101.is_Call) {
          DAST._IExpression _2810___mcc_h34 = _source101.dtor_on;
          DAST._ICallName _2811___mcc_h35 = _source101.dtor_callName;
          Dafny.ISequence<DAST._IType> _2812___mcc_h36 = _source101.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2813___mcc_h37 = _source101.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2814___mcc_h38 = _source101.dtor_outs;
        } else if (_source101.is_Return) {
          DAST._IExpression _2815___mcc_h44 = _source101.dtor_expr;
        } else if (_source101.is_EarlyReturn) {
        } else if (_source101.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2816___mcc_h46 = _source101.dtor_toLabel;
        } else if (_source101.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2817___mcc_h48 = _source101.dtor_body;
        } else if (_source101.is_JumpTailCallStart) {
        } else if (_source101.is_Halt) {
        } else if (_source101.is_Print) {
          DAST._IExpression _2818___mcc_h50 = _source101.dtor_Print_i_a0;
        } else {
          Dafny.ISequence<DAST._IFormal> _2819___mcc_h52 = _source101.dtor_fields;
        }
        RAST._IExpr _2820_stmtExpr;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2821_recIdents;
        DCOMP._IEnvironment _2822_newEnv2;
        RAST._IExpr _out111;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out112;
        DCOMP._IEnvironment _out113;
        (this).GenStmt(_2756_stmt, selfIdent, newEnv, (isLast) && ((_2754_i) == ((new BigInteger((_2755_stmts).Count)) - (BigInteger.One))), earlyReturn, out _out111, out _out112, out _out113);
        _2820_stmtExpr = _out111;
        _2821_recIdents = _out112;
        _2822_newEnv2 = _out113;
        newEnv = _2822_newEnv2;
        DAST._IStatement _source106 = _2756_stmt;
        if (_source106.is_DeclareVar) {
          Dafny.ISequence<Dafny.Rune> _2823___mcc_h118 = _source106.dtor_name;
          DAST._IType _2824___mcc_h119 = _source106.dtor_typ;
          Std.Wrappers._IOption<DAST._IExpression> _2825___mcc_h120 = _source106.dtor_maybeValue;
          Dafny.ISequence<Dafny.Rune> _2826_name = _2823___mcc_h118;
          {
            _2753_declarations = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_2753_declarations, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(DCOMP.__default.escapeName(_2826_name)));
          }
        } else if (_source106.is_Assign) {
          DAST._IAssignLhs _2827___mcc_h124 = _source106.dtor_lhs;
          DAST._IExpression _2828___mcc_h125 = _source106.dtor_value;
        } else if (_source106.is_If) {
          DAST._IExpression _2829___mcc_h128 = _source106.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2830___mcc_h129 = _source106.dtor_thn;
          Dafny.ISequence<DAST._IStatement> _2831___mcc_h130 = _source106.dtor_els;
        } else if (_source106.is_Labeled) {
          Dafny.ISequence<Dafny.Rune> _2832___mcc_h134 = _source106.dtor_lbl;
          Dafny.ISequence<DAST._IStatement> _2833___mcc_h135 = _source106.dtor_body;
        } else if (_source106.is_While) {
          DAST._IExpression _2834___mcc_h138 = _source106.dtor_cond;
          Dafny.ISequence<DAST._IStatement> _2835___mcc_h139 = _source106.dtor_body;
        } else if (_source106.is_Foreach) {
          Dafny.ISequence<Dafny.Rune> _2836___mcc_h142 = _source106.dtor_boundName;
          DAST._IType _2837___mcc_h143 = _source106.dtor_boundType;
          DAST._IExpression _2838___mcc_h144 = _source106.dtor_over;
          Dafny.ISequence<DAST._IStatement> _2839___mcc_h145 = _source106.dtor_body;
        } else if (_source106.is_Call) {
          DAST._IExpression _2840___mcc_h150 = _source106.dtor_on;
          DAST._ICallName _2841___mcc_h151 = _source106.dtor_callName;
          Dafny.ISequence<DAST._IType> _2842___mcc_h152 = _source106.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _2843___mcc_h153 = _source106.dtor_args;
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _2844___mcc_h154 = _source106.dtor_outs;
        } else if (_source106.is_Return) {
          DAST._IExpression _2845___mcc_h160 = _source106.dtor_expr;
        } else if (_source106.is_EarlyReturn) {
        } else if (_source106.is_Break) {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2846___mcc_h162 = _source106.dtor_toLabel;
        } else if (_source106.is_TailRecursive) {
          Dafny.ISequence<DAST._IStatement> _2847___mcc_h164 = _source106.dtor_body;
        } else if (_source106.is_JumpTailCallStart) {
        } else if (_source106.is_Halt) {
        } else if (_source106.is_Print) {
          DAST._IExpression _2848___mcc_h166 = _source106.dtor_Print_i_a0;
        } else {
          Dafny.ISequence<DAST._IFormal> _2849___mcc_h168 = _source106.dtor_fields;
        }
        readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_2821_recIdents, _2753_declarations));
        generated = (generated).Then(_2820_stmtExpr);
        _2754_i = (_2754_i) + (BigInteger.One);
        if ((_2820_stmtExpr).is_Return) {
          goto after_0;
        }
      continue_0: ;
      }
    after_0: ;
    }
    public void GenAssignLhs(DAST._IAssignLhs lhs, RAST._IExpr rhs, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, out RAST._IExpr generated, out bool needsIIFE, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      needsIIFE = false;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      newEnv = env;
      DAST._IAssignLhs _source107 = lhs;
      if (_source107.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _2850___mcc_h0 = _source107.dtor_ident;
        Dafny.ISequence<Dafny.Rune> _source108 = _2850___mcc_h0;
        Dafny.ISequence<Dafny.Rune> _2851___mcc_h1 = _source108;
        Dafny.ISequence<Dafny.Rune> _2852_id = _2851___mcc_h1;
        {
          Dafny.ISequence<Dafny.Rune> _2853_idRust;
          _2853_idRust = DCOMP.__default.escapeName(_2852_id);
          if (((env).IsBorrowed(_2853_idRust)) || ((env).IsBorrowedMut(_2853_idRust))) {
            generated = RAST.__default.AssignVar(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), _2853_idRust), rhs);
          } else {
            generated = RAST.__default.AssignVar(_2853_idRust, rhs);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_2853_idRust);
          needsIIFE = false;
        }
      } else if (_source107.is_Select) {
        DAST._IExpression _2854___mcc_h2 = _source107.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _2855___mcc_h3 = _source107.dtor_field;
        Dafny.ISequence<Dafny.Rune> _2856_field = _2855___mcc_h3;
        DAST._IExpression _2857_on = _2854___mcc_h2;
        {
          Dafny.ISequence<Dafny.Rune> _2858_fieldName;
          _2858_fieldName = DCOMP.__default.escapeName(_2856_field);
          RAST._IExpr _2859_onExpr;
          DCOMP._IOwnership _2860_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _2861_recIdents;
          RAST._IExpr _out114;
          DCOMP._IOwnership _out115;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out116;
          (this).GenExpr(_2857_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out114, out _out115, out _out116);
          _2859_onExpr = _out114;
          _2860_onOwned = _out115;
          _2861_recIdents = _out116;
          RAST._IExpr _source109 = _2859_onExpr;
          if (_source109.is_RawExpr) {
            Dafny.ISequence<Dafny.Rune> _2862___mcc_h6 = _source109.dtor_content;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_ExprFromType) {
            RAST._IType _2863___mcc_h8 = _source109.dtor_tpe;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Identifier) {
            Dafny.ISequence<Dafny.Rune> _2864___mcc_h10 = _source109.dtor_name;
            if (object.Equals(_2864___mcc_h10, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
              Dafny.ISequence<Dafny.Rune> _2865_isAssignedVar;
              _2865_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_2858_fieldName);
              if (((newEnv).dtor_names).Contains(_2865_isAssignedVar)) {
                generated = ((RAST.__default.dafny__runtime).MSel((this).update__field__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements((this).thisInConstructor, RAST.Expr.create_Identifier(_2858_fieldName), RAST.Expr.create_Identifier(_2865_isAssignedVar), rhs));
                newEnv = (newEnv).RemoveAssigned(_2865_isAssignedVar);
              } else {
                (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Unespected field to assign whose isAssignedVar is not in the environment: "), _2865_isAssignedVar));
                generated = RAST.__default.AssignMember(RAST.Expr.create_RawExpr((this.error).dtor_value), _2858_fieldName, rhs);
              }
            } else {
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            }
          } else if (_source109.is_Match) {
            RAST._IExpr _2866___mcc_h12 = _source109.dtor_matchee;
            Dafny.ISequence<RAST._IMatchCase> _2867___mcc_h13 = _source109.dtor_cases;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_StmtExpr) {
            RAST._IExpr _2868___mcc_h16 = _source109.dtor_stmt;
            RAST._IExpr _2869___mcc_h17 = _source109.dtor_rhs;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Block) {
            RAST._IExpr _2870___mcc_h20 = _source109.dtor_underlying;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_StructBuild) {
            RAST._IExpr _2871___mcc_h22 = _source109.dtor_underlying;
            Dafny.ISequence<RAST._IAssignIdentifier> _2872___mcc_h23 = _source109.dtor_assignments;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Tuple) {
            Dafny.ISequence<RAST._IExpr> _2873___mcc_h26 = _source109.dtor_arguments;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_UnaryOp) {
            Dafny.ISequence<Dafny.Rune> _2874___mcc_h28 = _source109.dtor_op1;
            RAST._IExpr _2875___mcc_h29 = _source109.dtor_underlying;
            DAST.Format._IUnaryOpFormat _2876___mcc_h30 = _source109.dtor_format;
            if (object.Equals(_2874___mcc_h28, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
              RAST._IExpr _source110 = _2875___mcc_h29;
              if (_source110.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _2877___mcc_h34 = _source110.dtor_content;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_ExprFromType) {
                RAST._IType _2878___mcc_h36 = _source110.dtor_tpe;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _2879___mcc_h38 = _source110.dtor_name;
                if (object.Equals(_2879___mcc_h38, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                  Dafny.ISequence<Dafny.Rune> _2880_isAssignedVar;
                  _2880_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_2858_fieldName);
                  if (((newEnv).dtor_names).Contains(_2880_isAssignedVar)) {
                    generated = ((RAST.__default.dafny__runtime).MSel((this).update__field__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements((this).thisInConstructor, RAST.Expr.create_Identifier(_2858_fieldName), RAST.Expr.create_Identifier(_2880_isAssignedVar), rhs));
                    newEnv = (newEnv).RemoveAssigned(_2880_isAssignedVar);
                  } else {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Unespected field to assign whose isAssignedVar is not in the environment: "), _2880_isAssignedVar));
                    generated = RAST.__default.AssignMember(RAST.Expr.create_RawExpr((this.error).dtor_value), _2858_fieldName, rhs);
                  }
                } else {
                  if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                    _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                  }
                  generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
                }
              } else if (_source110.is_Match) {
                RAST._IExpr _2881___mcc_h40 = _source110.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _2882___mcc_h41 = _source110.dtor_cases;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_StmtExpr) {
                RAST._IExpr _2883___mcc_h44 = _source110.dtor_stmt;
                RAST._IExpr _2884___mcc_h45 = _source110.dtor_rhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Block) {
                RAST._IExpr _2885___mcc_h48 = _source110.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_StructBuild) {
                RAST._IExpr _2886___mcc_h50 = _source110.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _2887___mcc_h51 = _source110.dtor_assignments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _2888___mcc_h54 = _source110.dtor_arguments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _2889___mcc_h56 = _source110.dtor_op1;
                RAST._IExpr _2890___mcc_h57 = _source110.dtor_underlying;
                DAST.Format._IUnaryOpFormat _2891___mcc_h58 = _source110.dtor_format;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _2892___mcc_h62 = _source110.dtor_op2;
                RAST._IExpr _2893___mcc_h63 = _source110.dtor_left;
                RAST._IExpr _2894___mcc_h64 = _source110.dtor_right;
                DAST.Format._IBinaryOpFormat _2895___mcc_h65 = _source110.dtor_format2;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_TypeAscription) {
                RAST._IExpr _2896___mcc_h70 = _source110.dtor_left;
                RAST._IType _2897___mcc_h71 = _source110.dtor_tpe;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _2898___mcc_h74 = _source110.dtor_value;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_LiteralBool) {
                bool _2899___mcc_h76 = _source110.dtor_bvalue;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _2900___mcc_h78 = _source110.dtor_value;
                bool _2901___mcc_h79 = _source110.dtor_binary;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_DeclareVar) {
                RAST._IDeclareType _2902___mcc_h82 = _source110.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _2903___mcc_h83 = _source110.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _2904___mcc_h84 = _source110.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _2905___mcc_h85 = _source110.dtor_optRhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Assign) {
                Std.Wrappers._IOption<RAST._IAssignLhs> _2906___mcc_h90 = _source110.dtor_names;
                RAST._IExpr _2907___mcc_h91 = _source110.dtor_rhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_IfExpr) {
                RAST._IExpr _2908___mcc_h94 = _source110.dtor_cond;
                RAST._IExpr _2909___mcc_h95 = _source110.dtor_thn;
                RAST._IExpr _2910___mcc_h96 = _source110.dtor_els;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _2911___mcc_h100 = _source110.dtor_optCond;
                RAST._IExpr _2912___mcc_h101 = _source110.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_For) {
                Dafny.ISequence<Dafny.Rune> _2913___mcc_h104 = _source110.dtor_name;
                RAST._IExpr _2914___mcc_h105 = _source110.dtor_range;
                RAST._IExpr _2915___mcc_h106 = _source110.dtor_body;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _2916___mcc_h110 = _source110.dtor_lbl;
                RAST._IExpr _2917___mcc_h111 = _source110.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2918___mcc_h114 = _source110.dtor_optLbl;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2919___mcc_h116 = _source110.dtor_optLbl;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _2920___mcc_h118 = _source110.dtor_optExpr;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_CallType) {
                RAST._IExpr _2921___mcc_h120 = _source110.dtor_obj;
                Dafny.ISequence<RAST._IType> _2922___mcc_h121 = _source110.dtor_typeParameters;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Call) {
                RAST._IExpr _2923___mcc_h124 = _source110.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _2924___mcc_h125 = _source110.dtor_arguments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_Select) {
                RAST._IExpr _2925___mcc_h128 = _source110.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _2926___mcc_h129 = _source110.dtor_name;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source110.is_MemberSelect) {
                RAST._IExpr _2927___mcc_h132 = _source110.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _2928___mcc_h133 = _source110.dtor_name;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else {
                Dafny.ISequence<RAST._IFormal> _2929___mcc_h136 = _source110.dtor_params;
                Std.Wrappers._IOption<RAST._IType> _2930___mcc_h137 = _source110.dtor_retType;
                RAST._IExpr _2931___mcc_h138 = _source110.dtor_body;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              }
            } else {
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            }
          } else if (_source109.is_BinaryOp) {
            Dafny.ISequence<Dafny.Rune> _2932___mcc_h142 = _source109.dtor_op2;
            RAST._IExpr _2933___mcc_h143 = _source109.dtor_left;
            RAST._IExpr _2934___mcc_h144 = _source109.dtor_right;
            DAST.Format._IBinaryOpFormat _2935___mcc_h145 = _source109.dtor_format2;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_TypeAscription) {
            RAST._IExpr _2936___mcc_h150 = _source109.dtor_left;
            RAST._IType _2937___mcc_h151 = _source109.dtor_tpe;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_LiteralInt) {
            Dafny.ISequence<Dafny.Rune> _2938___mcc_h154 = _source109.dtor_value;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_LiteralBool) {
            bool _2939___mcc_h156 = _source109.dtor_bvalue;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_LiteralString) {
            Dafny.ISequence<Dafny.Rune> _2940___mcc_h158 = _source109.dtor_value;
            bool _2941___mcc_h159 = _source109.dtor_binary;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_DeclareVar) {
            RAST._IDeclareType _2942___mcc_h162 = _source109.dtor_declareType;
            Dafny.ISequence<Dafny.Rune> _2943___mcc_h163 = _source109.dtor_name;
            Std.Wrappers._IOption<RAST._IType> _2944___mcc_h164 = _source109.dtor_optType;
            Std.Wrappers._IOption<RAST._IExpr> _2945___mcc_h165 = _source109.dtor_optRhs;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Assign) {
            Std.Wrappers._IOption<RAST._IAssignLhs> _2946___mcc_h170 = _source109.dtor_names;
            RAST._IExpr _2947___mcc_h171 = _source109.dtor_rhs;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_IfExpr) {
            RAST._IExpr _2948___mcc_h174 = _source109.dtor_cond;
            RAST._IExpr _2949___mcc_h175 = _source109.dtor_thn;
            RAST._IExpr _2950___mcc_h176 = _source109.dtor_els;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Loop) {
            Std.Wrappers._IOption<RAST._IExpr> _2951___mcc_h180 = _source109.dtor_optCond;
            RAST._IExpr _2952___mcc_h181 = _source109.dtor_underlying;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_For) {
            Dafny.ISequence<Dafny.Rune> _2953___mcc_h184 = _source109.dtor_name;
            RAST._IExpr _2954___mcc_h185 = _source109.dtor_range;
            RAST._IExpr _2955___mcc_h186 = _source109.dtor_body;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Labelled) {
            Dafny.ISequence<Dafny.Rune> _2956___mcc_h190 = _source109.dtor_lbl;
            RAST._IExpr _2957___mcc_h191 = _source109.dtor_underlying;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Break) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2958___mcc_h194 = _source109.dtor_optLbl;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Continue) {
            Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _2959___mcc_h196 = _source109.dtor_optLbl;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Return) {
            Std.Wrappers._IOption<RAST._IExpr> _2960___mcc_h198 = _source109.dtor_optExpr;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_CallType) {
            RAST._IExpr _2961___mcc_h200 = _source109.dtor_obj;
            Dafny.ISequence<RAST._IType> _2962___mcc_h201 = _source109.dtor_typeParameters;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_Call) {
            RAST._IExpr _2963___mcc_h204 = _source109.dtor_obj;
            Dafny.ISequence<RAST._IExpr> _2964___mcc_h205 = _source109.dtor_arguments;
            RAST._IExpr _source111 = _2963___mcc_h204;
            if (_source111.is_RawExpr) {
              Dafny.ISequence<Dafny.Rune> _2965___mcc_h208 = _source111.dtor_content;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_ExprFromType) {
              RAST._IType _2966___mcc_h210 = _source111.dtor_tpe;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Identifier) {
              Dafny.ISequence<Dafny.Rune> _2967___mcc_h212 = _source111.dtor_name;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Match) {
              RAST._IExpr _2968___mcc_h214 = _source111.dtor_matchee;
              Dafny.ISequence<RAST._IMatchCase> _2969___mcc_h215 = _source111.dtor_cases;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_StmtExpr) {
              RAST._IExpr _2970___mcc_h218 = _source111.dtor_stmt;
              RAST._IExpr _2971___mcc_h219 = _source111.dtor_rhs;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Block) {
              RAST._IExpr _2972___mcc_h222 = _source111.dtor_underlying;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_StructBuild) {
              RAST._IExpr _2973___mcc_h224 = _source111.dtor_underlying;
              Dafny.ISequence<RAST._IAssignIdentifier> _2974___mcc_h225 = _source111.dtor_assignments;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Tuple) {
              Dafny.ISequence<RAST._IExpr> _2975___mcc_h228 = _source111.dtor_arguments;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_UnaryOp) {
              Dafny.ISequence<Dafny.Rune> _2976___mcc_h230 = _source111.dtor_op1;
              RAST._IExpr _2977___mcc_h231 = _source111.dtor_underlying;
              DAST.Format._IUnaryOpFormat _2978___mcc_h232 = _source111.dtor_format;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_BinaryOp) {
              Dafny.ISequence<Dafny.Rune> _2979___mcc_h236 = _source111.dtor_op2;
              RAST._IExpr _2980___mcc_h237 = _source111.dtor_left;
              RAST._IExpr _2981___mcc_h238 = _source111.dtor_right;
              DAST.Format._IBinaryOpFormat _2982___mcc_h239 = _source111.dtor_format2;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_TypeAscription) {
              RAST._IExpr _2983___mcc_h244 = _source111.dtor_left;
              RAST._IType _2984___mcc_h245 = _source111.dtor_tpe;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_LiteralInt) {
              Dafny.ISequence<Dafny.Rune> _2985___mcc_h248 = _source111.dtor_value;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_LiteralBool) {
              bool _2986___mcc_h250 = _source111.dtor_bvalue;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_LiteralString) {
              Dafny.ISequence<Dafny.Rune> _2987___mcc_h252 = _source111.dtor_value;
              bool _2988___mcc_h253 = _source111.dtor_binary;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_DeclareVar) {
              RAST._IDeclareType _2989___mcc_h256 = _source111.dtor_declareType;
              Dafny.ISequence<Dafny.Rune> _2990___mcc_h257 = _source111.dtor_name;
              Std.Wrappers._IOption<RAST._IType> _2991___mcc_h258 = _source111.dtor_optType;
              Std.Wrappers._IOption<RAST._IExpr> _2992___mcc_h259 = _source111.dtor_optRhs;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Assign) {
              Std.Wrappers._IOption<RAST._IAssignLhs> _2993___mcc_h264 = _source111.dtor_names;
              RAST._IExpr _2994___mcc_h265 = _source111.dtor_rhs;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_IfExpr) {
              RAST._IExpr _2995___mcc_h268 = _source111.dtor_cond;
              RAST._IExpr _2996___mcc_h269 = _source111.dtor_thn;
              RAST._IExpr _2997___mcc_h270 = _source111.dtor_els;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Loop) {
              Std.Wrappers._IOption<RAST._IExpr> _2998___mcc_h274 = _source111.dtor_optCond;
              RAST._IExpr _2999___mcc_h275 = _source111.dtor_underlying;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_For) {
              Dafny.ISequence<Dafny.Rune> _3000___mcc_h278 = _source111.dtor_name;
              RAST._IExpr _3001___mcc_h279 = _source111.dtor_range;
              RAST._IExpr _3002___mcc_h280 = _source111.dtor_body;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Labelled) {
              Dafny.ISequence<Dafny.Rune> _3003___mcc_h284 = _source111.dtor_lbl;
              RAST._IExpr _3004___mcc_h285 = _source111.dtor_underlying;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Break) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3005___mcc_h288 = _source111.dtor_optLbl;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Continue) {
              Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3006___mcc_h290 = _source111.dtor_optLbl;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Return) {
              Std.Wrappers._IOption<RAST._IExpr> _3007___mcc_h292 = _source111.dtor_optExpr;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_CallType) {
              RAST._IExpr _3008___mcc_h294 = _source111.dtor_obj;
              Dafny.ISequence<RAST._IType> _3009___mcc_h295 = _source111.dtor_typeParameters;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Call) {
              RAST._IExpr _3010___mcc_h298 = _source111.dtor_obj;
              Dafny.ISequence<RAST._IExpr> _3011___mcc_h299 = _source111.dtor_arguments;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else if (_source111.is_Select) {
              RAST._IExpr _3012___mcc_h302 = _source111.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _3013___mcc_h303 = _source111.dtor_name;
              RAST._IExpr _source112 = _3012___mcc_h302;
              if (_source112.is_RawExpr) {
                Dafny.ISequence<Dafny.Rune> _3014___mcc_h306 = _source112.dtor_content;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_ExprFromType) {
                RAST._IType _3015___mcc_h308 = _source112.dtor_tpe;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Identifier) {
                Dafny.ISequence<Dafny.Rune> _3016___mcc_h310 = _source112.dtor_name;
                if (object.Equals(_3016___mcc_h310, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                  if (object.Equals(_3013___mcc_h303, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))) {
                    Dafny.ISequence<Dafny.Rune> _3017_isAssignedVar;
                    _3017_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_2858_fieldName);
                    if (((newEnv).dtor_names).Contains(_3017_isAssignedVar)) {
                      generated = ((RAST.__default.dafny__runtime).MSel((this).update__field__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements((this).thisInConstructor, RAST.Expr.create_Identifier(_2858_fieldName), RAST.Expr.create_Identifier(_3017_isAssignedVar), rhs));
                      newEnv = (newEnv).RemoveAssigned(_3017_isAssignedVar);
                    } else {
                      (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Unespected field to assign whose isAssignedVar is not in the environment: "), _3017_isAssignedVar));
                      generated = RAST.__default.AssignMember(RAST.Expr.create_RawExpr((this.error).dtor_value), _2858_fieldName, rhs);
                    }
                  } else {
                    if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                      _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                    }
                    generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
                  }
                } else {
                  if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                    _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                  }
                  generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
                }
              } else if (_source112.is_Match) {
                RAST._IExpr _3018___mcc_h312 = _source112.dtor_matchee;
                Dafny.ISequence<RAST._IMatchCase> _3019___mcc_h313 = _source112.dtor_cases;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_StmtExpr) {
                RAST._IExpr _3020___mcc_h316 = _source112.dtor_stmt;
                RAST._IExpr _3021___mcc_h317 = _source112.dtor_rhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Block) {
                RAST._IExpr _3022___mcc_h320 = _source112.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_StructBuild) {
                RAST._IExpr _3023___mcc_h322 = _source112.dtor_underlying;
                Dafny.ISequence<RAST._IAssignIdentifier> _3024___mcc_h323 = _source112.dtor_assignments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Tuple) {
                Dafny.ISequence<RAST._IExpr> _3025___mcc_h326 = _source112.dtor_arguments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_UnaryOp) {
                Dafny.ISequence<Dafny.Rune> _3026___mcc_h328 = _source112.dtor_op1;
                RAST._IExpr _3027___mcc_h329 = _source112.dtor_underlying;
                DAST.Format._IUnaryOpFormat _3028___mcc_h330 = _source112.dtor_format;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_BinaryOp) {
                Dafny.ISequence<Dafny.Rune> _3029___mcc_h334 = _source112.dtor_op2;
                RAST._IExpr _3030___mcc_h335 = _source112.dtor_left;
                RAST._IExpr _3031___mcc_h336 = _source112.dtor_right;
                DAST.Format._IBinaryOpFormat _3032___mcc_h337 = _source112.dtor_format2;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_TypeAscription) {
                RAST._IExpr _3033___mcc_h342 = _source112.dtor_left;
                RAST._IType _3034___mcc_h343 = _source112.dtor_tpe;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_LiteralInt) {
                Dafny.ISequence<Dafny.Rune> _3035___mcc_h346 = _source112.dtor_value;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_LiteralBool) {
                bool _3036___mcc_h348 = _source112.dtor_bvalue;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_LiteralString) {
                Dafny.ISequence<Dafny.Rune> _3037___mcc_h350 = _source112.dtor_value;
                bool _3038___mcc_h351 = _source112.dtor_binary;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_DeclareVar) {
                RAST._IDeclareType _3039___mcc_h354 = _source112.dtor_declareType;
                Dafny.ISequence<Dafny.Rune> _3040___mcc_h355 = _source112.dtor_name;
                Std.Wrappers._IOption<RAST._IType> _3041___mcc_h356 = _source112.dtor_optType;
                Std.Wrappers._IOption<RAST._IExpr> _3042___mcc_h357 = _source112.dtor_optRhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Assign) {
                Std.Wrappers._IOption<RAST._IAssignLhs> _3043___mcc_h362 = _source112.dtor_names;
                RAST._IExpr _3044___mcc_h363 = _source112.dtor_rhs;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_IfExpr) {
                RAST._IExpr _3045___mcc_h366 = _source112.dtor_cond;
                RAST._IExpr _3046___mcc_h367 = _source112.dtor_thn;
                RAST._IExpr _3047___mcc_h368 = _source112.dtor_els;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Loop) {
                Std.Wrappers._IOption<RAST._IExpr> _3048___mcc_h372 = _source112.dtor_optCond;
                RAST._IExpr _3049___mcc_h373 = _source112.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_For) {
                Dafny.ISequence<Dafny.Rune> _3050___mcc_h376 = _source112.dtor_name;
                RAST._IExpr _3051___mcc_h377 = _source112.dtor_range;
                RAST._IExpr _3052___mcc_h378 = _source112.dtor_body;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Labelled) {
                Dafny.ISequence<Dafny.Rune> _3053___mcc_h382 = _source112.dtor_lbl;
                RAST._IExpr _3054___mcc_h383 = _source112.dtor_underlying;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Break) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3055___mcc_h386 = _source112.dtor_optLbl;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Continue) {
                Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3056___mcc_h388 = _source112.dtor_optLbl;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Return) {
                Std.Wrappers._IOption<RAST._IExpr> _3057___mcc_h390 = _source112.dtor_optExpr;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_CallType) {
                RAST._IExpr _3058___mcc_h392 = _source112.dtor_obj;
                Dafny.ISequence<RAST._IType> _3059___mcc_h393 = _source112.dtor_typeParameters;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Call) {
                RAST._IExpr _3060___mcc_h396 = _source112.dtor_obj;
                Dafny.ISequence<RAST._IExpr> _3061___mcc_h397 = _source112.dtor_arguments;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_Select) {
                RAST._IExpr _3062___mcc_h400 = _source112.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _3063___mcc_h401 = _source112.dtor_name;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else if (_source112.is_MemberSelect) {
                RAST._IExpr _3064___mcc_h404 = _source112.dtor_obj;
                Dafny.ISequence<Dafny.Rune> _3065___mcc_h405 = _source112.dtor_name;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              } else {
                Dafny.ISequence<RAST._IFormal> _3066___mcc_h408 = _source112.dtor_params;
                Std.Wrappers._IOption<RAST._IType> _3067___mcc_h409 = _source112.dtor_retType;
                RAST._IExpr _3068___mcc_h410 = _source112.dtor_body;
                if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
                }
                generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
              }
            } else if (_source111.is_MemberSelect) {
              RAST._IExpr _3069___mcc_h414 = _source111.dtor_obj;
              Dafny.ISequence<Dafny.Rune> _3070___mcc_h415 = _source111.dtor_name;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            } else {
              Dafny.ISequence<RAST._IFormal> _3071___mcc_h418 = _source111.dtor_params;
              Std.Wrappers._IOption<RAST._IType> _3072___mcc_h419 = _source111.dtor_retType;
              RAST._IExpr _3073___mcc_h420 = _source111.dtor_body;
              if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
              }
              generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
            }
          } else if (_source109.is_Select) {
            RAST._IExpr _3074___mcc_h424 = _source109.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _3075___mcc_h425 = _source109.dtor_name;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else if (_source109.is_MemberSelect) {
            RAST._IExpr _3076___mcc_h428 = _source109.dtor_obj;
            Dafny.ISequence<Dafny.Rune> _3077___mcc_h429 = _source109.dtor_name;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          } else {
            Dafny.ISequence<RAST._IFormal> _3078___mcc_h432 = _source109.dtor_params;
            Std.Wrappers._IOption<RAST._IType> _3079___mcc_h433 = _source109.dtor_retType;
            RAST._IExpr _3080___mcc_h434 = _source109.dtor_body;
            if (!object.Equals(_2859_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
              _2859_onExpr = ((this).modify__macro).Apply1(_2859_onExpr);
            }
            generated = RAST.__default.AssignMember(_2859_onExpr, _2858_fieldName, rhs);
          }
          readIdents = _2861_recIdents;
          needsIIFE = false;
        }
      } else {
        DAST._IExpression _3081___mcc_h4 = _source107.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _3082___mcc_h5 = _source107.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _3083_indices = _3082___mcc_h5;
        DAST._IExpression _3084_on = _3081___mcc_h4;
        {
          RAST._IExpr _3085_onExpr;
          DCOMP._IOwnership _3086_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3087_recIdents;
          RAST._IExpr _out117;
          DCOMP._IOwnership _out118;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out119;
          (this).GenExpr(_3084_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out117, out _out118, out _out119);
          _3085_onExpr = _out117;
          _3086_onOwned = _out118;
          _3087_recIdents = _out119;
          readIdents = _3087_recIdents;
          _3085_onExpr = ((this).modify__macro).Apply1(_3085_onExpr);
          RAST._IExpr _3088_r;
          _3088_r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          Dafny.ISequence<RAST._IExpr> _3089_indicesExpr;
          _3089_indicesExpr = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi29 = new BigInteger((_3083_indices).Count);
          for (BigInteger _3090_i = BigInteger.Zero; _3090_i < _hi29; _3090_i++) {
            RAST._IExpr _3091_idx;
            DCOMP._IOwnership _3092___v69;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3093_recIdentsIdx;
            RAST._IExpr _out120;
            DCOMP._IOwnership _out121;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out122;
            (this).GenExpr((_3083_indices).Select(_3090_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out120, out _out121, out _out122);
            _3091_idx = _out120;
            _3092___v69 = _out121;
            _3093_recIdentsIdx = _out122;
            Dafny.ISequence<Dafny.Rune> _3094_varName;
            _3094_varName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("__idx"), Std.Strings.__default.OfNat(_3090_i));
            _3089_indicesExpr = Dafny.Sequence<RAST._IExpr>.Concat(_3089_indicesExpr, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(_3094_varName)));
            _3088_r = (_3088_r).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3094_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<usize as ::dafny_runtime::NumCast>::from("), (_3091_idx)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()"))))));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3093_recIdentsIdx);
          }
          if ((new BigInteger((_3083_indices).Count)) > (BigInteger.One)) {
            _3085_onExpr = (_3085_onExpr).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("data"));
          }
          RAST._IExpr _3095_rhs;
          _3095_rhs = rhs;
          var _pat_let_tv27 = env;
          if (((_3085_onExpr).IsLhsIdentifier()) && (Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, bool>((_3085_onExpr).LhsIdentifierName(), _pat_let33_0 => Dafny.Helpers.Let<Dafny.ISequence<Dafny.Rune>, bool>(_pat_let33_0, _3096_name => (true) && (Dafny.Helpers.Let<Std.Wrappers._IOption<RAST._IType>, bool>((_pat_let_tv27).GetType(_3096_name), _pat_let34_0 => Dafny.Helpers.Let<Std.Wrappers._IOption<RAST._IType>, bool>(_pat_let34_0, _3097_tpe => ((_3097_tpe).is_Some) && (((_3097_tpe).dtor_value).IsUninitArray())))))))) {
            _3095_rhs = RAST.__default.MaybeUninitNew(_3095_rhs);
          }
          generated = (_3088_r).Then(RAST.Expr.create_Assign(Std.Wrappers.Option<RAST._IAssignLhs>.create_Some(RAST.AssignLhs.create_Index(_3085_onExpr, _3089_indicesExpr)), _3095_rhs));
          needsIIFE = true;
        }
      }
    }
    public void GenStmt(DAST._IStatement stmt, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, bool isLast, RAST._IExpr earlyReturn, out RAST._IExpr generated, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents, out DCOMP._IEnvironment newEnv)
    {
      generated = RAST.Expr.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      newEnv = DCOMP.Environment.Default();
      DAST._IStatement _source113 = stmt;
      if (_source113.is_DeclareVar) {
        Dafny.ISequence<Dafny.Rune> _3098___mcc_h0 = _source113.dtor_name;
        DAST._IType _3099___mcc_h1 = _source113.dtor_typ;
        Std.Wrappers._IOption<DAST._IExpression> _3100___mcc_h2 = _source113.dtor_maybeValue;
        Std.Wrappers._IOption<DAST._IExpression> _source114 = _3100___mcc_h2;
        if (_source114.is_None) {
          DAST._IType _3101_typ = _3099___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _3102_name = _3098___mcc_h0;
          {
            DAST._IStatement _3103_newStmt;
            _3103_newStmt = DAST.Statement.create_DeclareVar(_3102_name, _3101_typ, Std.Wrappers.Option<DAST._IExpression>.create_Some(DAST.Expression.create_InitializationValue(_3101_typ)));
            RAST._IExpr _out123;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out124;
            DCOMP._IEnvironment _out125;
            (this).GenStmt(_3103_newStmt, selfIdent, env, isLast, earlyReturn, out _out123, out _out124, out _out125);
            generated = _out123;
            readIdents = _out124;
            newEnv = _out125;
          }
        } else {
          DAST._IExpression _3104___mcc_h3 = _source114.dtor_value;
          DAST._IExpression _3105_expression = _3104___mcc_h3;
          DAST._IType _3106_typ = _3099___mcc_h1;
          Dafny.ISequence<Dafny.Rune> _3107_name = _3098___mcc_h0;
          {
            RAST._IType _3108_tpe;
            RAST._IType _out126;
            _out126 = (this).GenType(_3106_typ, DCOMP.GenTypeContext.InBinding());
            _3108_tpe = _out126;
            Dafny.ISequence<Dafny.Rune> _3109_varName;
            _3109_varName = DCOMP.__default.escapeName(_3107_name);
            bool _3110_hasCopySemantics;
            _3110_hasCopySemantics = (_3108_tpe).CanReadWithoutClone();
            if (((_3105_expression).is_InitializationValue) && (!(_3110_hasCopySemantics))) {
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _3109_varName, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MaybePlacebo"))).ApplyType1(_3108_tpe)).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              newEnv = (env).AddAssigned(_3109_varName, RAST.__default.MaybePlaceboType(_3108_tpe));
            } else {
              RAST._IExpr _3111_expr = RAST.Expr.Default();
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3112_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
              if (((_3105_expression).is_InitializationValue) && ((_3108_tpe).IsObjectOrPointer())) {
                _3111_expr = (_3108_tpe).ToNullExpr();
                _3112_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
              } else {
                DCOMP._IOwnership _3113_exprOwnership = DCOMP.Ownership.Default();
                RAST._IExpr _out127;
                DCOMP._IOwnership _out128;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out129;
                (this).GenExpr(_3105_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out127, out _out128, out _out129);
                _3111_expr = _out127;
                _3113_exprOwnership = _out128;
                _3112_recIdents = _out129;
              }
              readIdents = _3112_recIdents;
              _3108_tpe = (((_3105_expression).is_NewUninitArray) ? ((_3108_tpe).TypeAtInitialization()) : (_3108_tpe));
              generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), DCOMP.__default.escapeName(_3107_name), Std.Wrappers.Option<RAST._IType>.create_Some(_3108_tpe), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3111_expr));
              newEnv = (env).AddAssigned(DCOMP.__default.escapeName(_3107_name), _3108_tpe);
            }
          }
        }
      } else if (_source113.is_Assign) {
        DAST._IAssignLhs _3114___mcc_h4 = _source113.dtor_lhs;
        DAST._IExpression _3115___mcc_h5 = _source113.dtor_value;
        DAST._IExpression _3116_expression = _3115___mcc_h5;
        DAST._IAssignLhs _3117_lhs = _3114___mcc_h4;
        {
          RAST._IExpr _3118_exprGen;
          DCOMP._IOwnership _3119___v72;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3120_exprIdents;
          RAST._IExpr _out130;
          DCOMP._IOwnership _out131;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out132;
          (this).GenExpr(_3116_expression, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out130, out _out131, out _out132);
          _3118_exprGen = _out130;
          _3119___v72 = _out131;
          _3120_exprIdents = _out132;
          if ((_3117_lhs).is_Ident) {
            Dafny.ISequence<Dafny.Rune> _3121_rustId;
            _3121_rustId = DCOMP.__default.escapeName(((_3117_lhs).dtor_ident));
            Std.Wrappers._IOption<RAST._IType> _3122_tpe;
            _3122_tpe = (env).GetType(_3121_rustId);
            if (((_3122_tpe).is_Some) && ((((_3122_tpe).dtor_value).ExtractMaybePlacebo()).is_Some)) {
              _3118_exprGen = RAST.__default.MaybePlacebo(_3118_exprGen);
            }
          }
          RAST._IExpr _3123_lhsGen;
          bool _3124_needsIIFE;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3125_recIdents;
          DCOMP._IEnvironment _3126_resEnv;
          RAST._IExpr _out133;
          bool _out134;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out135;
          DCOMP._IEnvironment _out136;
          (this).GenAssignLhs(_3117_lhs, _3118_exprGen, selfIdent, env, out _out133, out _out134, out _out135, out _out136);
          _3123_lhsGen = _out133;
          _3124_needsIIFE = _out134;
          _3125_recIdents = _out135;
          _3126_resEnv = _out136;
          generated = _3123_lhsGen;
          newEnv = _3126_resEnv;
          if (_3124_needsIIFE) {
            generated = RAST.Expr.create_Block(generated);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3125_recIdents, _3120_exprIdents);
        }
      } else if (_source113.is_If) {
        DAST._IExpression _3127___mcc_h6 = _source113.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3128___mcc_h7 = _source113.dtor_thn;
        Dafny.ISequence<DAST._IStatement> _3129___mcc_h8 = _source113.dtor_els;
        Dafny.ISequence<DAST._IStatement> _3130_elsDafny = _3129___mcc_h8;
        Dafny.ISequence<DAST._IStatement> _3131_thnDafny = _3128___mcc_h7;
        DAST._IExpression _3132_cond = _3127___mcc_h6;
        {
          RAST._IExpr _3133_cond;
          DCOMP._IOwnership _3134___v73;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3135_recIdents;
          RAST._IExpr _out137;
          DCOMP._IOwnership _out138;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out139;
          (this).GenExpr(_3132_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out137, out _out138, out _out139);
          _3133_cond = _out137;
          _3134___v73 = _out138;
          _3135_recIdents = _out139;
          Dafny.ISequence<Dafny.Rune> _3136_condString;
          _3136_condString = (_3133_cond)._ToString(DCOMP.__default.IND);
          readIdents = _3135_recIdents;
          RAST._IExpr _3137_thn;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3138_thnIdents;
          DCOMP._IEnvironment _3139_thnEnv;
          RAST._IExpr _out140;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out141;
          DCOMP._IEnvironment _out142;
          (this).GenStmts(_3131_thnDafny, selfIdent, env, isLast, earlyReturn, out _out140, out _out141, out _out142);
          _3137_thn = _out140;
          _3138_thnIdents = _out141;
          _3139_thnEnv = _out142;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3138_thnIdents);
          RAST._IExpr _3140_els;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3141_elsIdents;
          DCOMP._IEnvironment _3142_elsEnv;
          RAST._IExpr _out143;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out144;
          DCOMP._IEnvironment _out145;
          (this).GenStmts(_3130_elsDafny, selfIdent, env, isLast, earlyReturn, out _out143, out _out144, out _out145);
          _3140_els = _out143;
          _3141_elsIdents = _out144;
          _3142_elsEnv = _out145;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3141_elsIdents);
          newEnv = env;
          generated = RAST.Expr.create_IfExpr(_3133_cond, _3137_thn, _3140_els);
        }
      } else if (_source113.is_Labeled) {
        Dafny.ISequence<Dafny.Rune> _3143___mcc_h9 = _source113.dtor_lbl;
        Dafny.ISequence<DAST._IStatement> _3144___mcc_h10 = _source113.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3145_body = _3144___mcc_h10;
        Dafny.ISequence<Dafny.Rune> _3146_lbl = _3143___mcc_h9;
        {
          RAST._IExpr _3147_body;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3148_bodyIdents;
          DCOMP._IEnvironment _3149_env2;
          RAST._IExpr _out146;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out147;
          DCOMP._IEnvironment _out148;
          (this).GenStmts(_3145_body, selfIdent, env, isLast, earlyReturn, out _out146, out _out147, out _out148);
          _3147_body = _out146;
          _3148_bodyIdents = _out147;
          _3149_env2 = _out148;
          readIdents = _3148_bodyIdents;
          generated = RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3146_lbl), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), RAST.Expr.create_StmtExpr(_3147_body, RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None()))));
          newEnv = env;
        }
      } else if (_source113.is_While) {
        DAST._IExpression _3150___mcc_h11 = _source113.dtor_cond;
        Dafny.ISequence<DAST._IStatement> _3151___mcc_h12 = _source113.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3152_body = _3151___mcc_h12;
        DAST._IExpression _3153_cond = _3150___mcc_h11;
        {
          RAST._IExpr _3154_cond;
          DCOMP._IOwnership _3155___v74;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3156_recIdents;
          RAST._IExpr _out149;
          DCOMP._IOwnership _out150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out151;
          (this).GenExpr(_3153_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out149, out _out150, out _out151);
          _3154_cond = _out149;
          _3155___v74 = _out150;
          _3156_recIdents = _out151;
          readIdents = _3156_recIdents;
          RAST._IExpr _3157_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3158_bodyIdents;
          DCOMP._IEnvironment _3159_bodyEnv;
          RAST._IExpr _out152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out153;
          DCOMP._IEnvironment _out154;
          (this).GenStmts(_3152_body, selfIdent, env, false, earlyReturn, out _out152, out _out153, out _out154);
          _3157_bodyExpr = _out152;
          _3158_bodyIdents = _out153;
          _3159_bodyEnv = _out154;
          newEnv = env;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3158_bodyIdents);
          generated = RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3154_cond), _3157_bodyExpr);
        }
      } else if (_source113.is_Foreach) {
        Dafny.ISequence<Dafny.Rune> _3160___mcc_h13 = _source113.dtor_boundName;
        DAST._IType _3161___mcc_h14 = _source113.dtor_boundType;
        DAST._IExpression _3162___mcc_h15 = _source113.dtor_over;
        Dafny.ISequence<DAST._IStatement> _3163___mcc_h16 = _source113.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3164_body = _3163___mcc_h16;
        DAST._IExpression _3165_overExpr = _3162___mcc_h15;
        DAST._IType _3166_boundType = _3161___mcc_h14;
        Dafny.ISequence<Dafny.Rune> _3167_boundName = _3160___mcc_h13;
        {
          RAST._IExpr _3168_over;
          DCOMP._IOwnership _3169___v75;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3170_recIdents;
          RAST._IExpr _out155;
          DCOMP._IOwnership _out156;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out157;
          (this).GenExpr(_3165_overExpr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out155, out _out156, out _out157);
          _3168_over = _out155;
          _3169___v75 = _out156;
          _3170_recIdents = _out157;
          if (((_3165_overExpr).is_MapBoundedPool) || ((_3165_overExpr).is_SetBoundedPool)) {
            _3168_over = ((_3168_over).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cloned"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          }
          RAST._IType _3171_boundTpe;
          RAST._IType _out158;
          _out158 = (this).GenType(_3166_boundType, DCOMP.GenTypeContext.@default());
          _3171_boundTpe = _out158;
          readIdents = _3170_recIdents;
          Dafny.ISequence<Dafny.Rune> _3172_boundRName;
          _3172_boundRName = DCOMP.__default.escapeName(_3167_boundName);
          RAST._IExpr _3173_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3174_bodyIdents;
          DCOMP._IEnvironment _3175_bodyEnv;
          RAST._IExpr _out159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out160;
          DCOMP._IEnvironment _out161;
          (this).GenStmts(_3164_body, selfIdent, (env).AddAssigned(_3172_boundRName, _3171_boundTpe), false, earlyReturn, out _out159, out _out160, out _out161);
          _3173_bodyExpr = _out159;
          _3174_bodyIdents = _out160;
          _3175_bodyEnv = _out161;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3174_bodyIdents), Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3172_boundRName));
          newEnv = env;
          generated = RAST.Expr.create_For(_3172_boundRName, _3168_over, _3173_bodyExpr);
        }
      } else if (_source113.is_Call) {
        DAST._IExpression _3176___mcc_h17 = _source113.dtor_on;
        DAST._ICallName _3177___mcc_h18 = _source113.dtor_callName;
        Dafny.ISequence<DAST._IType> _3178___mcc_h19 = _source113.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _3179___mcc_h20 = _source113.dtor_args;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3180___mcc_h21 = _source113.dtor_outs;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>> _3181_maybeOutVars = _3180___mcc_h21;
        Dafny.ISequence<DAST._IExpression> _3182_args = _3179___mcc_h20;
        Dafny.ISequence<DAST._IType> _3183_typeArgs = _3178___mcc_h19;
        DAST._ICallName _3184_name = _3177___mcc_h18;
        DAST._IExpression _3185_on = _3176___mcc_h17;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _3186_argExprs;
          _3186_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi30 = new BigInteger((_3182_args).Count);
          for (BigInteger _3187_i = BigInteger.Zero; _3187_i < _hi30; _3187_i++) {
            DCOMP._IOwnership _3188_argOwnership;
            _3188_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_3184_name).is_CallName) && ((_3187_i) < (new BigInteger((((_3184_name).dtor_signature)).Count)))) {
              RAST._IType _3189_tpe;
              RAST._IType _out162;
              _out162 = (this).GenType(((((_3184_name).dtor_signature)).Select(_3187_i)).dtor_typ, DCOMP.GenTypeContext.@default());
              _3189_tpe = _out162;
              if ((_3189_tpe).CanReadWithoutClone()) {
                _3188_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _3190_argExpr;
            DCOMP._IOwnership _3191_ownership;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3192_argIdents;
            RAST._IExpr _out163;
            DCOMP._IOwnership _out164;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out165;
            (this).GenExpr((_3182_args).Select(_3187_i), selfIdent, env, _3188_argOwnership, out _out163, out _out164, out _out165);
            _3190_argExpr = _out163;
            _3191_ownership = _out164;
            _3192_argIdents = _out165;
            _3186_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_3186_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_3190_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3192_argIdents);
          }
          Std.Wrappers._IOption<DAST._IResolvedType> _3193_optResolvedType;
          _3193_optResolvedType = ((System.Func<DAST._ICallName, Std.Wrappers._IOption<DAST._IResolvedType>>)((_source115) => {
            if (_source115.is_CallName) {
              Dafny.ISequence<Dafny.Rune> _3194___mcc_h27 = _source115.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _3195___mcc_h28 = _source115.dtor_onType;
              Std.Wrappers._IOption<DAST._IFormal> _3196___mcc_h29 = _source115.dtor_receiverArgs;
              Dafny.ISequence<DAST._IFormal> _3197___mcc_h30 = _source115.dtor_signature;
              Std.Wrappers._IOption<DAST._IType> _source116 = _3195___mcc_h28;
              if (_source116.is_None) {
                return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
              } else {
                DAST._IType _3198___mcc_h35 = _source116.dtor_value;
                DAST._IType _source117 = _3198___mcc_h35;
                if (_source117.is_UserDefined) {
                  DAST._IResolvedType _3199___mcc_h37 = _source117.dtor_resolved;
                  DAST._IResolvedType _3200_resolvedType = _3199___mcc_h37;
                  Dafny.ISequence<Dafny.Rune> _3201_nameIdent = _3194___mcc_h27;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_Some(Std.Wrappers.Option<DAST._IResolvedType>.GetOr(DCOMP.__default.TraitTypeContainingMethod(_3200_resolvedType, (_3201_nameIdent)), _3200_resolvedType));
                } else if (_source117.is_Tuple) {
                  Dafny.ISequence<DAST._IType> _3202___mcc_h39 = _source117.dtor_Tuple_i_a0;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Array) {
                  DAST._IType _3203___mcc_h41 = _source117.dtor_element;
                  BigInteger _3204___mcc_h42 = _source117.dtor_dims;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Seq) {
                  DAST._IType _3205___mcc_h45 = _source117.dtor_element;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Set) {
                  DAST._IType _3206___mcc_h47 = _source117.dtor_element;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Multiset) {
                  DAST._IType _3207___mcc_h49 = _source117.dtor_element;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Map) {
                  DAST._IType _3208___mcc_h51 = _source117.dtor_key;
                  DAST._IType _3209___mcc_h52 = _source117.dtor_value;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_SetBuilder) {
                  DAST._IType _3210___mcc_h55 = _source117.dtor_element;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_MapBuilder) {
                  DAST._IType _3211___mcc_h57 = _source117.dtor_key;
                  DAST._IType _3212___mcc_h58 = _source117.dtor_value;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Arrow) {
                  Dafny.ISequence<DAST._IType> _3213___mcc_h61 = _source117.dtor_args;
                  DAST._IType _3214___mcc_h62 = _source117.dtor_result;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Primitive) {
                  DAST._IPrimitive _3215___mcc_h65 = _source117.dtor_Primitive_i_a0;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_Passthrough) {
                  Dafny.ISequence<Dafny.Rune> _3216___mcc_h67 = _source117.dtor_Passthrough_i_a0;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else if (_source117.is_TypeArg) {
                  Dafny.ISequence<Dafny.Rune> _3217___mcc_h69 = _source117.dtor_TypeArg_i_a0;
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                } else {
                  return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
                }
              }
            } else if (_source115.is_MapBuilderAdd) {
              return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
            } else if (_source115.is_MapBuilderBuild) {
              return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
            } else if (_source115.is_SetBuilderAdd) {
              return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
            } else {
              return Std.Wrappers.Option<DAST._IResolvedType>.create_None();
            }
          }))(_3184_name);
          Std.Wrappers._IOption<DAST._IResolvedType> _source118 = _3193_optResolvedType;
          if (_source118.is_None) {
            RAST._IExpr _3218_onExpr;
            DCOMP._IOwnership _3219___v85;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3220_enclosingIdents;
            RAST._IExpr _out166;
            DCOMP._IOwnership _out167;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out168;
            (this).GenExpr(_3185_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out166, out _out167, out _out168);
            _3218_onExpr = _out166;
            _3219___v85 = _out167;
            _3220_enclosingIdents = _out168;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3220_enclosingIdents);
            Dafny.ISequence<Dafny.Rune> _3221_renderedName;
            _3221_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source119) => {
              if (_source119.is_CallName) {
                Dafny.ISequence<Dafny.Rune> _3222___mcc_h85 = _source119.dtor_name;
                Std.Wrappers._IOption<DAST._IType> _3223___mcc_h86 = _source119.dtor_onType;
                Std.Wrappers._IOption<DAST._IFormal> _3224___mcc_h87 = _source119.dtor_receiverArgs;
                Dafny.ISequence<DAST._IFormal> _3225___mcc_h88 = _source119.dtor_signature;
                Dafny.ISequence<Dafny.Rune> _3226_name = _3222___mcc_h85;
                return DCOMP.__default.escapeName(_3226_name);
              } else if (_source119.is_MapBuilderAdd) {
                return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
              } else if (_source119.is_MapBuilderBuild) {
                return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
              } else if (_source119.is_SetBuilderAdd) {
                return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
              } else {
                return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
              }
            }))(_3184_name);
            DAST._IExpression _source120 = _3185_on;
            if (_source120.is_Literal) {
              DAST._ILiteral _3227___mcc_h89 = _source120.dtor_Literal_i_a0;
              {
                DAST._ICallName _source121 = _3184_name;
                if (_source121.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3228___mcc_h303 = _source121.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3229___mcc_h304 = _source121.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3230___mcc_h305 = _source121.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3231___mcc_h306 = _source121.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source122 = _3229___mcc_h304;
                  if (_source122.is_None) {
                  } else {
                    DAST._IType _3232___mcc_h311 = _source122.dtor_value;
                    DAST._IType _3233_tpe = _3232___mcc_h311;
                    RAST._IType _3234_typ;
                    RAST._IType _out169;
                    _out169 = (this).GenType(_3233_tpe, DCOMP.GenTypeContext.@default());
                    _3234_typ = _out169;
                    if (((_3234_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source121.is_MapBuilderAdd) {
                } else if (_source121.is_MapBuilderBuild) {
                } else if (_source121.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Ident) {
              Dafny.ISequence<Dafny.Rune> _3235___mcc_h91 = _source120.dtor_Ident_i_a0;
              {
                DAST._ICallName _source123 = _3184_name;
                if (_source123.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3236___mcc_h313 = _source123.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3237___mcc_h314 = _source123.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3238___mcc_h315 = _source123.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3239___mcc_h316 = _source123.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source124 = _3237___mcc_h314;
                  if (_source124.is_None) {
                  } else {
                    DAST._IType _3240___mcc_h321 = _source124.dtor_value;
                    DAST._IType _3241_tpe = _3240___mcc_h321;
                    RAST._IType _3242_typ;
                    RAST._IType _out170;
                    _out170 = (this).GenType(_3241_tpe, DCOMP.GenTypeContext.@default());
                    _3242_typ = _out170;
                    if (((_3242_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source123.is_MapBuilderAdd) {
                } else if (_source123.is_MapBuilderBuild) {
                } else if (_source123.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Companion) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3243___mcc_h93 = _source120.dtor_Companion_i_a0;
              Dafny.ISequence<DAST._IType> _3244___mcc_h94 = _source120.dtor_typeArgs;
              {
                _3218_onExpr = (_3218_onExpr).MSel(_3221_renderedName);
              }
            } else if (_source120.is_Tuple) {
              Dafny.ISequence<DAST._IExpression> _3245___mcc_h97 = _source120.dtor_Tuple_i_a0;
              {
                DAST._ICallName _source125 = _3184_name;
                if (_source125.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3246___mcc_h323 = _source125.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3247___mcc_h324 = _source125.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3248___mcc_h325 = _source125.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3249___mcc_h326 = _source125.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source126 = _3247___mcc_h324;
                  if (_source126.is_None) {
                  } else {
                    DAST._IType _3250___mcc_h331 = _source126.dtor_value;
                    DAST._IType _3251_tpe = _3250___mcc_h331;
                    RAST._IType _3252_typ;
                    RAST._IType _out171;
                    _out171 = (this).GenType(_3251_tpe, DCOMP.GenTypeContext.@default());
                    _3252_typ = _out171;
                    if (((_3252_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source125.is_MapBuilderAdd) {
                } else if (_source125.is_MapBuilderBuild) {
                } else if (_source125.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_New) {
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3253___mcc_h99 = _source120.dtor_path;
              Dafny.ISequence<DAST._IType> _3254___mcc_h100 = _source120.dtor_typeArgs;
              Dafny.ISequence<DAST._IExpression> _3255___mcc_h101 = _source120.dtor_args;
              {
                DAST._ICallName _source127 = _3184_name;
                if (_source127.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3256___mcc_h333 = _source127.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3257___mcc_h334 = _source127.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3258___mcc_h335 = _source127.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3259___mcc_h336 = _source127.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source128 = _3257___mcc_h334;
                  if (_source128.is_None) {
                  } else {
                    DAST._IType _3260___mcc_h341 = _source128.dtor_value;
                    DAST._IType _3261_tpe = _3260___mcc_h341;
                    RAST._IType _3262_typ;
                    RAST._IType _out172;
                    _out172 = (this).GenType(_3261_tpe, DCOMP.GenTypeContext.@default());
                    _3262_typ = _out172;
                    if (((_3262_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source127.is_MapBuilderAdd) {
                } else if (_source127.is_MapBuilderBuild) {
                } else if (_source127.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_NewUninitArray) {
              Dafny.ISequence<DAST._IExpression> _3263___mcc_h105 = _source120.dtor_dims;
              DAST._IType _3264___mcc_h106 = _source120.dtor_typ;
              {
                DAST._ICallName _source129 = _3184_name;
                if (_source129.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3265___mcc_h343 = _source129.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3266___mcc_h344 = _source129.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3267___mcc_h345 = _source129.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3268___mcc_h346 = _source129.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source130 = _3266___mcc_h344;
                  if (_source130.is_None) {
                  } else {
                    DAST._IType _3269___mcc_h351 = _source130.dtor_value;
                    DAST._IType _3270_tpe = _3269___mcc_h351;
                    RAST._IType _3271_typ;
                    RAST._IType _out173;
                    _out173 = (this).GenType(_3270_tpe, DCOMP.GenTypeContext.@default());
                    _3271_typ = _out173;
                    if (((_3271_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source129.is_MapBuilderAdd) {
                } else if (_source129.is_MapBuilderBuild) {
                } else if (_source129.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_ArrayIndexToInt) {
              DAST._IExpression _3272___mcc_h109 = _source120.dtor_value;
              {
                DAST._ICallName _source131 = _3184_name;
                if (_source131.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3273___mcc_h353 = _source131.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3274___mcc_h354 = _source131.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3275___mcc_h355 = _source131.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3276___mcc_h356 = _source131.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source132 = _3274___mcc_h354;
                  if (_source132.is_None) {
                  } else {
                    DAST._IType _3277___mcc_h361 = _source132.dtor_value;
                    DAST._IType _3278_tpe = _3277___mcc_h361;
                    RAST._IType _3279_typ;
                    RAST._IType _out174;
                    _out174 = (this).GenType(_3278_tpe, DCOMP.GenTypeContext.@default());
                    _3279_typ = _out174;
                    if (((_3279_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source131.is_MapBuilderAdd) {
                } else if (_source131.is_MapBuilderBuild) {
                } else if (_source131.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_FinalizeNewArray) {
              DAST._IExpression _3280___mcc_h111 = _source120.dtor_value;
              DAST._IType _3281___mcc_h112 = _source120.dtor_typ;
              {
                DAST._ICallName _source133 = _3184_name;
                if (_source133.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3282___mcc_h363 = _source133.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3283___mcc_h364 = _source133.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3284___mcc_h365 = _source133.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3285___mcc_h366 = _source133.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source134 = _3283___mcc_h364;
                  if (_source134.is_None) {
                  } else {
                    DAST._IType _3286___mcc_h371 = _source134.dtor_value;
                    DAST._IType _3287_tpe = _3286___mcc_h371;
                    RAST._IType _3288_typ;
                    RAST._IType _out175;
                    _out175 = (this).GenType(_3287_tpe, DCOMP.GenTypeContext.@default());
                    _3288_typ = _out175;
                    if (((_3288_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source133.is_MapBuilderAdd) {
                } else if (_source133.is_MapBuilderBuild) {
                } else if (_source133.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_DatatypeValue) {
              DAST._IResolvedType _3289___mcc_h115 = _source120.dtor_datatypeType;
              Dafny.ISequence<DAST._IType> _3290___mcc_h116 = _source120.dtor_typeArgs;
              Dafny.ISequence<Dafny.Rune> _3291___mcc_h117 = _source120.dtor_variant;
              bool _3292___mcc_h118 = _source120.dtor_isCo;
              Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _3293___mcc_h119 = _source120.dtor_contents;
              {
                DAST._ICallName _source135 = _3184_name;
                if (_source135.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3294___mcc_h373 = _source135.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3295___mcc_h374 = _source135.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3296___mcc_h375 = _source135.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3297___mcc_h376 = _source135.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source136 = _3295___mcc_h374;
                  if (_source136.is_None) {
                  } else {
                    DAST._IType _3298___mcc_h381 = _source136.dtor_value;
                    DAST._IType _3299_tpe = _3298___mcc_h381;
                    RAST._IType _3300_typ;
                    RAST._IType _out176;
                    _out176 = (this).GenType(_3299_tpe, DCOMP.GenTypeContext.@default());
                    _3300_typ = _out176;
                    if (((_3300_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source135.is_MapBuilderAdd) {
                } else if (_source135.is_MapBuilderBuild) {
                } else if (_source135.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Convert) {
              DAST._IExpression _3301___mcc_h125 = _source120.dtor_value;
              DAST._IType _3302___mcc_h126 = _source120.dtor_from;
              DAST._IType _3303___mcc_h127 = _source120.dtor_typ;
              {
                DAST._ICallName _source137 = _3184_name;
                if (_source137.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3304___mcc_h383 = _source137.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3305___mcc_h384 = _source137.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3306___mcc_h385 = _source137.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3307___mcc_h386 = _source137.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source138 = _3305___mcc_h384;
                  if (_source138.is_None) {
                  } else {
                    DAST._IType _3308___mcc_h391 = _source138.dtor_value;
                    DAST._IType _3309_tpe = _3308___mcc_h391;
                    RAST._IType _3310_typ;
                    RAST._IType _out177;
                    _out177 = (this).GenType(_3309_tpe, DCOMP.GenTypeContext.@default());
                    _3310_typ = _out177;
                    if (((_3310_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source137.is_MapBuilderAdd) {
                } else if (_source137.is_MapBuilderBuild) {
                } else if (_source137.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SeqConstruct) {
              DAST._IExpression _3311___mcc_h131 = _source120.dtor_length;
              DAST._IExpression _3312___mcc_h132 = _source120.dtor_elem;
              {
                DAST._ICallName _source139 = _3184_name;
                if (_source139.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3313___mcc_h393 = _source139.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3314___mcc_h394 = _source139.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3315___mcc_h395 = _source139.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3316___mcc_h396 = _source139.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source140 = _3314___mcc_h394;
                  if (_source140.is_None) {
                  } else {
                    DAST._IType _3317___mcc_h401 = _source140.dtor_value;
                    DAST._IType _3318_tpe = _3317___mcc_h401;
                    RAST._IType _3319_typ;
                    RAST._IType _out178;
                    _out178 = (this).GenType(_3318_tpe, DCOMP.GenTypeContext.@default());
                    _3319_typ = _out178;
                    if (((_3319_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source139.is_MapBuilderAdd) {
                } else if (_source139.is_MapBuilderBuild) {
                } else if (_source139.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SeqValue) {
              Dafny.ISequence<DAST._IExpression> _3320___mcc_h135 = _source120.dtor_elements;
              DAST._IType _3321___mcc_h136 = _source120.dtor_typ;
              {
                DAST._ICallName _source141 = _3184_name;
                if (_source141.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3322___mcc_h403 = _source141.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3323___mcc_h404 = _source141.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3324___mcc_h405 = _source141.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3325___mcc_h406 = _source141.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source142 = _3323___mcc_h404;
                  if (_source142.is_None) {
                  } else {
                    DAST._IType _3326___mcc_h411 = _source142.dtor_value;
                    DAST._IType _3327_tpe = _3326___mcc_h411;
                    RAST._IType _3328_typ;
                    RAST._IType _out179;
                    _out179 = (this).GenType(_3327_tpe, DCOMP.GenTypeContext.@default());
                    _3328_typ = _out179;
                    if (((_3328_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source141.is_MapBuilderAdd) {
                } else if (_source141.is_MapBuilderBuild) {
                } else if (_source141.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SetValue) {
              Dafny.ISequence<DAST._IExpression> _3329___mcc_h139 = _source120.dtor_elements;
              {
                DAST._ICallName _source143 = _3184_name;
                if (_source143.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3330___mcc_h413 = _source143.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3331___mcc_h414 = _source143.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3332___mcc_h415 = _source143.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3333___mcc_h416 = _source143.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source144 = _3331___mcc_h414;
                  if (_source144.is_None) {
                  } else {
                    DAST._IType _3334___mcc_h421 = _source144.dtor_value;
                    DAST._IType _3335_tpe = _3334___mcc_h421;
                    RAST._IType _3336_typ;
                    RAST._IType _out180;
                    _out180 = (this).GenType(_3335_tpe, DCOMP.GenTypeContext.@default());
                    _3336_typ = _out180;
                    if (((_3336_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source143.is_MapBuilderAdd) {
                } else if (_source143.is_MapBuilderBuild) {
                } else if (_source143.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MultisetValue) {
              Dafny.ISequence<DAST._IExpression> _3337___mcc_h141 = _source120.dtor_elements;
              {
                DAST._ICallName _source145 = _3184_name;
                if (_source145.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3338___mcc_h423 = _source145.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3339___mcc_h424 = _source145.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3340___mcc_h425 = _source145.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3341___mcc_h426 = _source145.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source146 = _3339___mcc_h424;
                  if (_source146.is_None) {
                  } else {
                    DAST._IType _3342___mcc_h431 = _source146.dtor_value;
                    DAST._IType _3343_tpe = _3342___mcc_h431;
                    RAST._IType _3344_typ;
                    RAST._IType _out181;
                    _out181 = (this).GenType(_3343_tpe, DCOMP.GenTypeContext.@default());
                    _3344_typ = _out181;
                    if (((_3344_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source145.is_MapBuilderAdd) {
                } else if (_source145.is_MapBuilderBuild) {
                } else if (_source145.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapValue) {
              Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _3345___mcc_h143 = _source120.dtor_mapElems;
              {
                DAST._ICallName _source147 = _3184_name;
                if (_source147.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3346___mcc_h433 = _source147.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3347___mcc_h434 = _source147.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3348___mcc_h435 = _source147.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3349___mcc_h436 = _source147.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source148 = _3347___mcc_h434;
                  if (_source148.is_None) {
                  } else {
                    DAST._IType _3350___mcc_h441 = _source148.dtor_value;
                    DAST._IType _3351_tpe = _3350___mcc_h441;
                    RAST._IType _3352_typ;
                    RAST._IType _out182;
                    _out182 = (this).GenType(_3351_tpe, DCOMP.GenTypeContext.@default());
                    _3352_typ = _out182;
                    if (((_3352_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source147.is_MapBuilderAdd) {
                } else if (_source147.is_MapBuilderBuild) {
                } else if (_source147.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapBuilder) {
              DAST._IType _3353___mcc_h145 = _source120.dtor_keyType;
              DAST._IType _3354___mcc_h146 = _source120.dtor_valueType;
              {
                DAST._ICallName _source149 = _3184_name;
                if (_source149.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3355___mcc_h443 = _source149.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3356___mcc_h444 = _source149.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3357___mcc_h445 = _source149.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3358___mcc_h446 = _source149.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source150 = _3356___mcc_h444;
                  if (_source150.is_None) {
                  } else {
                    DAST._IType _3359___mcc_h451 = _source150.dtor_value;
                    DAST._IType _3360_tpe = _3359___mcc_h451;
                    RAST._IType _3361_typ;
                    RAST._IType _out183;
                    _out183 = (this).GenType(_3360_tpe, DCOMP.GenTypeContext.@default());
                    _3361_typ = _out183;
                    if (((_3361_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source149.is_MapBuilderAdd) {
                } else if (_source149.is_MapBuilderBuild) {
                } else if (_source149.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SeqUpdate) {
              DAST._IExpression _3362___mcc_h149 = _source120.dtor_expr;
              DAST._IExpression _3363___mcc_h150 = _source120.dtor_indexExpr;
              DAST._IExpression _3364___mcc_h151 = _source120.dtor_value;
              {
                DAST._ICallName _source151 = _3184_name;
                if (_source151.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3365___mcc_h453 = _source151.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3366___mcc_h454 = _source151.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3367___mcc_h455 = _source151.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3368___mcc_h456 = _source151.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source152 = _3366___mcc_h454;
                  if (_source152.is_None) {
                  } else {
                    DAST._IType _3369___mcc_h461 = _source152.dtor_value;
                    DAST._IType _3370_tpe = _3369___mcc_h461;
                    RAST._IType _3371_typ;
                    RAST._IType _out184;
                    _out184 = (this).GenType(_3370_tpe, DCOMP.GenTypeContext.@default());
                    _3371_typ = _out184;
                    if (((_3371_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source151.is_MapBuilderAdd) {
                } else if (_source151.is_MapBuilderBuild) {
                } else if (_source151.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapUpdate) {
              DAST._IExpression _3372___mcc_h155 = _source120.dtor_expr;
              DAST._IExpression _3373___mcc_h156 = _source120.dtor_indexExpr;
              DAST._IExpression _3374___mcc_h157 = _source120.dtor_value;
              {
                DAST._ICallName _source153 = _3184_name;
                if (_source153.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3375___mcc_h463 = _source153.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3376___mcc_h464 = _source153.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3377___mcc_h465 = _source153.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3378___mcc_h466 = _source153.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source154 = _3376___mcc_h464;
                  if (_source154.is_None) {
                  } else {
                    DAST._IType _3379___mcc_h471 = _source154.dtor_value;
                    DAST._IType _3380_tpe = _3379___mcc_h471;
                    RAST._IType _3381_typ;
                    RAST._IType _out185;
                    _out185 = (this).GenType(_3380_tpe, DCOMP.GenTypeContext.@default());
                    _3381_typ = _out185;
                    if (((_3381_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source153.is_MapBuilderAdd) {
                } else if (_source153.is_MapBuilderBuild) {
                } else if (_source153.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SetBuilder) {
              DAST._IType _3382___mcc_h161 = _source120.dtor_elemType;
              {
                DAST._ICallName _source155 = _3184_name;
                if (_source155.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3383___mcc_h473 = _source155.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3384___mcc_h474 = _source155.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3385___mcc_h475 = _source155.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3386___mcc_h476 = _source155.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source156 = _3384___mcc_h474;
                  if (_source156.is_None) {
                  } else {
                    DAST._IType _3387___mcc_h481 = _source156.dtor_value;
                    DAST._IType _3388_tpe = _3387___mcc_h481;
                    RAST._IType _3389_typ;
                    RAST._IType _out186;
                    _out186 = (this).GenType(_3388_tpe, DCOMP.GenTypeContext.@default());
                    _3389_typ = _out186;
                    if (((_3389_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source155.is_MapBuilderAdd) {
                } else if (_source155.is_MapBuilderBuild) {
                } else if (_source155.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_ToMultiset) {
              DAST._IExpression _3390___mcc_h163 = _source120.dtor_ToMultiset_i_a0;
              {
                DAST._ICallName _source157 = _3184_name;
                if (_source157.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3391___mcc_h483 = _source157.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3392___mcc_h484 = _source157.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3393___mcc_h485 = _source157.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3394___mcc_h486 = _source157.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source158 = _3392___mcc_h484;
                  if (_source158.is_None) {
                  } else {
                    DAST._IType _3395___mcc_h491 = _source158.dtor_value;
                    DAST._IType _3396_tpe = _3395___mcc_h491;
                    RAST._IType _3397_typ;
                    RAST._IType _out187;
                    _out187 = (this).GenType(_3396_tpe, DCOMP.GenTypeContext.@default());
                    _3397_typ = _out187;
                    if (((_3397_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source157.is_MapBuilderAdd) {
                } else if (_source157.is_MapBuilderBuild) {
                } else if (_source157.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_This) {
              {
                DAST._ICallName _source159 = _3184_name;
                if (_source159.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3398___mcc_h493 = _source159.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3399___mcc_h494 = _source159.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3400___mcc_h495 = _source159.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3401___mcc_h496 = _source159.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source160 = _3399___mcc_h494;
                  if (_source160.is_None) {
                  } else {
                    DAST._IType _3402___mcc_h501 = _source160.dtor_value;
                    DAST._IType _3403_tpe = _3402___mcc_h501;
                    RAST._IType _3404_typ;
                    RAST._IType _out188;
                    _out188 = (this).GenType(_3403_tpe, DCOMP.GenTypeContext.@default());
                    _3404_typ = _out188;
                    if (((_3404_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source159.is_MapBuilderAdd) {
                } else if (_source159.is_MapBuilderBuild) {
                } else if (_source159.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Ite) {
              DAST._IExpression _3405___mcc_h165 = _source120.dtor_cond;
              DAST._IExpression _3406___mcc_h166 = _source120.dtor_thn;
              DAST._IExpression _3407___mcc_h167 = _source120.dtor_els;
              {
                DAST._ICallName _source161 = _3184_name;
                if (_source161.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3408___mcc_h503 = _source161.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3409___mcc_h504 = _source161.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3410___mcc_h505 = _source161.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3411___mcc_h506 = _source161.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source162 = _3409___mcc_h504;
                  if (_source162.is_None) {
                  } else {
                    DAST._IType _3412___mcc_h511 = _source162.dtor_value;
                    DAST._IType _3413_tpe = _3412___mcc_h511;
                    RAST._IType _3414_typ;
                    RAST._IType _out189;
                    _out189 = (this).GenType(_3413_tpe, DCOMP.GenTypeContext.@default());
                    _3414_typ = _out189;
                    if (((_3414_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source161.is_MapBuilderAdd) {
                } else if (_source161.is_MapBuilderBuild) {
                } else if (_source161.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_UnOp) {
              DAST._IUnaryOp _3415___mcc_h171 = _source120.dtor_unOp;
              DAST._IExpression _3416___mcc_h172 = _source120.dtor_expr;
              DAST.Format._IUnaryOpFormat _3417___mcc_h173 = _source120.dtor_format1;
              {
                DAST._ICallName _source163 = _3184_name;
                if (_source163.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3418___mcc_h513 = _source163.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3419___mcc_h514 = _source163.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3420___mcc_h515 = _source163.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3421___mcc_h516 = _source163.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source164 = _3419___mcc_h514;
                  if (_source164.is_None) {
                  } else {
                    DAST._IType _3422___mcc_h521 = _source164.dtor_value;
                    DAST._IType _3423_tpe = _3422___mcc_h521;
                    RAST._IType _3424_typ;
                    RAST._IType _out190;
                    _out190 = (this).GenType(_3423_tpe, DCOMP.GenTypeContext.@default());
                    _3424_typ = _out190;
                    if (((_3424_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source163.is_MapBuilderAdd) {
                } else if (_source163.is_MapBuilderBuild) {
                } else if (_source163.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_BinOp) {
              DAST._IBinOp _3425___mcc_h177 = _source120.dtor_op;
              DAST._IExpression _3426___mcc_h178 = _source120.dtor_left;
              DAST._IExpression _3427___mcc_h179 = _source120.dtor_right;
              DAST.Format._IBinaryOpFormat _3428___mcc_h180 = _source120.dtor_format2;
              {
                DAST._ICallName _source165 = _3184_name;
                if (_source165.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3429___mcc_h523 = _source165.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3430___mcc_h524 = _source165.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3431___mcc_h525 = _source165.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3432___mcc_h526 = _source165.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source166 = _3430___mcc_h524;
                  if (_source166.is_None) {
                  } else {
                    DAST._IType _3433___mcc_h531 = _source166.dtor_value;
                    DAST._IType _3434_tpe = _3433___mcc_h531;
                    RAST._IType _3435_typ;
                    RAST._IType _out191;
                    _out191 = (this).GenType(_3434_tpe, DCOMP.GenTypeContext.@default());
                    _3435_typ = _out191;
                    if (((_3435_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source165.is_MapBuilderAdd) {
                } else if (_source165.is_MapBuilderBuild) {
                } else if (_source165.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_ArrayLen) {
              DAST._IExpression _3436___mcc_h185 = _source120.dtor_expr;
              DAST._IType _3437___mcc_h186 = _source120.dtor_exprType;
              BigInteger _3438___mcc_h187 = _source120.dtor_dim;
              bool _3439___mcc_h188 = _source120.dtor_native;
              {
                DAST._ICallName _source167 = _3184_name;
                if (_source167.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3440___mcc_h533 = _source167.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3441___mcc_h534 = _source167.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3442___mcc_h535 = _source167.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3443___mcc_h536 = _source167.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source168 = _3441___mcc_h534;
                  if (_source168.is_None) {
                  } else {
                    DAST._IType _3444___mcc_h541 = _source168.dtor_value;
                    DAST._IType _3445_tpe = _3444___mcc_h541;
                    RAST._IType _3446_typ;
                    RAST._IType _out192;
                    _out192 = (this).GenType(_3445_tpe, DCOMP.GenTypeContext.@default());
                    _3446_typ = _out192;
                    if (((_3446_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source167.is_MapBuilderAdd) {
                } else if (_source167.is_MapBuilderBuild) {
                } else if (_source167.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapKeys) {
              DAST._IExpression _3447___mcc_h193 = _source120.dtor_expr;
              {
                DAST._ICallName _source169 = _3184_name;
                if (_source169.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3448___mcc_h543 = _source169.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3449___mcc_h544 = _source169.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3450___mcc_h545 = _source169.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3451___mcc_h546 = _source169.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source170 = _3449___mcc_h544;
                  if (_source170.is_None) {
                  } else {
                    DAST._IType _3452___mcc_h551 = _source170.dtor_value;
                    DAST._IType _3453_tpe = _3452___mcc_h551;
                    RAST._IType _3454_typ;
                    RAST._IType _out193;
                    _out193 = (this).GenType(_3453_tpe, DCOMP.GenTypeContext.@default());
                    _3454_typ = _out193;
                    if (((_3454_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source169.is_MapBuilderAdd) {
                } else if (_source169.is_MapBuilderBuild) {
                } else if (_source169.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapValues) {
              DAST._IExpression _3455___mcc_h195 = _source120.dtor_expr;
              {
                DAST._ICallName _source171 = _3184_name;
                if (_source171.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3456___mcc_h553 = _source171.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3457___mcc_h554 = _source171.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3458___mcc_h555 = _source171.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3459___mcc_h556 = _source171.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source172 = _3457___mcc_h554;
                  if (_source172.is_None) {
                  } else {
                    DAST._IType _3460___mcc_h561 = _source172.dtor_value;
                    DAST._IType _3461_tpe = _3460___mcc_h561;
                    RAST._IType _3462_typ;
                    RAST._IType _out194;
                    _out194 = (this).GenType(_3461_tpe, DCOMP.GenTypeContext.@default());
                    _3462_typ = _out194;
                    if (((_3462_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source171.is_MapBuilderAdd) {
                } else if (_source171.is_MapBuilderBuild) {
                } else if (_source171.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Select) {
              DAST._IExpression _3463___mcc_h197 = _source120.dtor_expr;
              Dafny.ISequence<Dafny.Rune> _3464___mcc_h198 = _source120.dtor_field;
              bool _3465___mcc_h199 = _source120.dtor_isConstant;
              bool _3466___mcc_h200 = _source120.dtor_onDatatype;
              DAST._IType _3467___mcc_h201 = _source120.dtor_fieldType;
              {
                DAST._ICallName _source173 = _3184_name;
                if (_source173.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3468___mcc_h563 = _source173.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3469___mcc_h564 = _source173.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3470___mcc_h565 = _source173.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3471___mcc_h566 = _source173.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source174 = _3469___mcc_h564;
                  if (_source174.is_None) {
                  } else {
                    DAST._IType _3472___mcc_h571 = _source174.dtor_value;
                    DAST._IType _3473_tpe = _3472___mcc_h571;
                    RAST._IType _3474_typ;
                    RAST._IType _out195;
                    _out195 = (this).GenType(_3473_tpe, DCOMP.GenTypeContext.@default());
                    _3474_typ = _out195;
                    if (((_3474_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source173.is_MapBuilderAdd) {
                } else if (_source173.is_MapBuilderBuild) {
                } else if (_source173.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SelectFn) {
              DAST._IExpression _3475___mcc_h207 = _source120.dtor_expr;
              Dafny.ISequence<Dafny.Rune> _3476___mcc_h208 = _source120.dtor_field;
              bool _3477___mcc_h209 = _source120.dtor_onDatatype;
              bool _3478___mcc_h210 = _source120.dtor_isStatic;
              BigInteger _3479___mcc_h211 = _source120.dtor_arity;
              {
                DAST._ICallName _source175 = _3184_name;
                if (_source175.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3480___mcc_h573 = _source175.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3481___mcc_h574 = _source175.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3482___mcc_h575 = _source175.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3483___mcc_h576 = _source175.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source176 = _3481___mcc_h574;
                  if (_source176.is_None) {
                  } else {
                    DAST._IType _3484___mcc_h581 = _source176.dtor_value;
                    DAST._IType _3485_tpe = _3484___mcc_h581;
                    RAST._IType _3486_typ;
                    RAST._IType _out196;
                    _out196 = (this).GenType(_3485_tpe, DCOMP.GenTypeContext.@default());
                    _3486_typ = _out196;
                    if (((_3486_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source175.is_MapBuilderAdd) {
                } else if (_source175.is_MapBuilderBuild) {
                } else if (_source175.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Index) {
              DAST._IExpression _3487___mcc_h217 = _source120.dtor_expr;
              DAST._ICollKind _3488___mcc_h218 = _source120.dtor_collKind;
              Dafny.ISequence<DAST._IExpression> _3489___mcc_h219 = _source120.dtor_indices;
              {
                DAST._ICallName _source177 = _3184_name;
                if (_source177.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3490___mcc_h583 = _source177.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3491___mcc_h584 = _source177.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3492___mcc_h585 = _source177.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3493___mcc_h586 = _source177.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source178 = _3491___mcc_h584;
                  if (_source178.is_None) {
                  } else {
                    DAST._IType _3494___mcc_h591 = _source178.dtor_value;
                    DAST._IType _3495_tpe = _3494___mcc_h591;
                    RAST._IType _3496_typ;
                    RAST._IType _out197;
                    _out197 = (this).GenType(_3495_tpe, DCOMP.GenTypeContext.@default());
                    _3496_typ = _out197;
                    if (((_3496_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source177.is_MapBuilderAdd) {
                } else if (_source177.is_MapBuilderBuild) {
                } else if (_source177.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_IndexRange) {
              DAST._IExpression _3497___mcc_h223 = _source120.dtor_expr;
              bool _3498___mcc_h224 = _source120.dtor_isArray;
              Std.Wrappers._IOption<DAST._IExpression> _3499___mcc_h225 = _source120.dtor_low;
              Std.Wrappers._IOption<DAST._IExpression> _3500___mcc_h226 = _source120.dtor_high;
              {
                DAST._ICallName _source179 = _3184_name;
                if (_source179.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3501___mcc_h593 = _source179.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3502___mcc_h594 = _source179.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3503___mcc_h595 = _source179.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3504___mcc_h596 = _source179.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source180 = _3502___mcc_h594;
                  if (_source180.is_None) {
                  } else {
                    DAST._IType _3505___mcc_h601 = _source180.dtor_value;
                    DAST._IType _3506_tpe = _3505___mcc_h601;
                    RAST._IType _3507_typ;
                    RAST._IType _out198;
                    _out198 = (this).GenType(_3506_tpe, DCOMP.GenTypeContext.@default());
                    _3507_typ = _out198;
                    if (((_3507_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source179.is_MapBuilderAdd) {
                } else if (_source179.is_MapBuilderBuild) {
                } else if (_source179.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_TupleSelect) {
              DAST._IExpression _3508___mcc_h231 = _source120.dtor_expr;
              BigInteger _3509___mcc_h232 = _source120.dtor_index;
              DAST._IType _3510___mcc_h233 = _source120.dtor_fieldType;
              {
                DAST._ICallName _source181 = _3184_name;
                if (_source181.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3511___mcc_h603 = _source181.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3512___mcc_h604 = _source181.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3513___mcc_h605 = _source181.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3514___mcc_h606 = _source181.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source182 = _3512___mcc_h604;
                  if (_source182.is_None) {
                  } else {
                    DAST._IType _3515___mcc_h611 = _source182.dtor_value;
                    DAST._IType _3516_tpe = _3515___mcc_h611;
                    RAST._IType _3517_typ;
                    RAST._IType _out199;
                    _out199 = (this).GenType(_3516_tpe, DCOMP.GenTypeContext.@default());
                    _3517_typ = _out199;
                    if (((_3517_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source181.is_MapBuilderAdd) {
                } else if (_source181.is_MapBuilderBuild) {
                } else if (_source181.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Call) {
              DAST._IExpression _3518___mcc_h237 = _source120.dtor_on;
              DAST._ICallName _3519___mcc_h238 = _source120.dtor_callName;
              Dafny.ISequence<DAST._IType> _3520___mcc_h239 = _source120.dtor_typeArgs;
              Dafny.ISequence<DAST._IExpression> _3521___mcc_h240 = _source120.dtor_args;
              {
                DAST._ICallName _source183 = _3184_name;
                if (_source183.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3522___mcc_h613 = _source183.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3523___mcc_h614 = _source183.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3524___mcc_h615 = _source183.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3525___mcc_h616 = _source183.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source184 = _3523___mcc_h614;
                  if (_source184.is_None) {
                  } else {
                    DAST._IType _3526___mcc_h621 = _source184.dtor_value;
                    DAST._IType _3527_tpe = _3526___mcc_h621;
                    RAST._IType _3528_typ;
                    RAST._IType _out200;
                    _out200 = (this).GenType(_3527_tpe, DCOMP.GenTypeContext.@default());
                    _3528_typ = _out200;
                    if (((_3528_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source183.is_MapBuilderAdd) {
                } else if (_source183.is_MapBuilderBuild) {
                } else if (_source183.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Lambda) {
              Dafny.ISequence<DAST._IFormal> _3529___mcc_h245 = _source120.dtor_params;
              DAST._IType _3530___mcc_h246 = _source120.dtor_retType;
              Dafny.ISequence<DAST._IStatement> _3531___mcc_h247 = _source120.dtor_body;
              {
                DAST._ICallName _source185 = _3184_name;
                if (_source185.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3532___mcc_h623 = _source185.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3533___mcc_h624 = _source185.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3534___mcc_h625 = _source185.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3535___mcc_h626 = _source185.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source186 = _3533___mcc_h624;
                  if (_source186.is_None) {
                  } else {
                    DAST._IType _3536___mcc_h631 = _source186.dtor_value;
                    DAST._IType _3537_tpe = _3536___mcc_h631;
                    RAST._IType _3538_typ;
                    RAST._IType _out201;
                    _out201 = (this).GenType(_3537_tpe, DCOMP.GenTypeContext.@default());
                    _3538_typ = _out201;
                    if (((_3538_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source185.is_MapBuilderAdd) {
                } else if (_source185.is_MapBuilderBuild) {
                } else if (_source185.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_BetaRedex) {
              Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _3539___mcc_h251 = _source120.dtor_values;
              DAST._IType _3540___mcc_h252 = _source120.dtor_retType;
              DAST._IExpression _3541___mcc_h253 = _source120.dtor_expr;
              {
                DAST._ICallName _source187 = _3184_name;
                if (_source187.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3542___mcc_h633 = _source187.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3543___mcc_h634 = _source187.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3544___mcc_h635 = _source187.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3545___mcc_h636 = _source187.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source188 = _3543___mcc_h634;
                  if (_source188.is_None) {
                  } else {
                    DAST._IType _3546___mcc_h641 = _source188.dtor_value;
                    DAST._IType _3547_tpe = _3546___mcc_h641;
                    RAST._IType _3548_typ;
                    RAST._IType _out202;
                    _out202 = (this).GenType(_3547_tpe, DCOMP.GenTypeContext.@default());
                    _3548_typ = _out202;
                    if (((_3548_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source187.is_MapBuilderAdd) {
                } else if (_source187.is_MapBuilderBuild) {
                } else if (_source187.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_IIFE) {
              Dafny.ISequence<Dafny.Rune> _3549___mcc_h257 = _source120.dtor_name;
              DAST._IType _3550___mcc_h258 = _source120.dtor_typ;
              DAST._IExpression _3551___mcc_h259 = _source120.dtor_value;
              DAST._IExpression _3552___mcc_h260 = _source120.dtor_iifeBody;
              {
                DAST._ICallName _source189 = _3184_name;
                if (_source189.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3553___mcc_h643 = _source189.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3554___mcc_h644 = _source189.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3555___mcc_h645 = _source189.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3556___mcc_h646 = _source189.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source190 = _3554___mcc_h644;
                  if (_source190.is_None) {
                  } else {
                    DAST._IType _3557___mcc_h651 = _source190.dtor_value;
                    DAST._IType _3558_tpe = _3557___mcc_h651;
                    RAST._IType _3559_typ;
                    RAST._IType _out203;
                    _out203 = (this).GenType(_3558_tpe, DCOMP.GenTypeContext.@default());
                    _3559_typ = _out203;
                    if (((_3559_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source189.is_MapBuilderAdd) {
                } else if (_source189.is_MapBuilderBuild) {
                } else if (_source189.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_Apply) {
              DAST._IExpression _3560___mcc_h265 = _source120.dtor_expr;
              Dafny.ISequence<DAST._IExpression> _3561___mcc_h266 = _source120.dtor_args;
              {
                DAST._ICallName _source191 = _3184_name;
                if (_source191.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3562___mcc_h653 = _source191.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3563___mcc_h654 = _source191.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3564___mcc_h655 = _source191.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3565___mcc_h656 = _source191.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source192 = _3563___mcc_h654;
                  if (_source192.is_None) {
                  } else {
                    DAST._IType _3566___mcc_h661 = _source192.dtor_value;
                    DAST._IType _3567_tpe = _3566___mcc_h661;
                    RAST._IType _3568_typ;
                    RAST._IType _out204;
                    _out204 = (this).GenType(_3567_tpe, DCOMP.GenTypeContext.@default());
                    _3568_typ = _out204;
                    if (((_3568_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source191.is_MapBuilderAdd) {
                } else if (_source191.is_MapBuilderBuild) {
                } else if (_source191.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_TypeTest) {
              DAST._IExpression _3569___mcc_h269 = _source120.dtor_on;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3570___mcc_h270 = _source120.dtor_dType;
              Dafny.ISequence<Dafny.Rune> _3571___mcc_h271 = _source120.dtor_variant;
              {
                DAST._ICallName _source193 = _3184_name;
                if (_source193.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3572___mcc_h663 = _source193.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3573___mcc_h664 = _source193.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3574___mcc_h665 = _source193.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3575___mcc_h666 = _source193.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source194 = _3573___mcc_h664;
                  if (_source194.is_None) {
                  } else {
                    DAST._IType _3576___mcc_h671 = _source194.dtor_value;
                    DAST._IType _3577_tpe = _3576___mcc_h671;
                    RAST._IType _3578_typ;
                    RAST._IType _out205;
                    _out205 = (this).GenType(_3577_tpe, DCOMP.GenTypeContext.@default());
                    _3578_typ = _out205;
                    if (((_3578_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source193.is_MapBuilderAdd) {
                } else if (_source193.is_MapBuilderBuild) {
                } else if (_source193.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_InitializationValue) {
              DAST._IType _3579___mcc_h275 = _source120.dtor_typ;
              {
                DAST._ICallName _source195 = _3184_name;
                if (_source195.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3580___mcc_h673 = _source195.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3581___mcc_h674 = _source195.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3582___mcc_h675 = _source195.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3583___mcc_h676 = _source195.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source196 = _3581___mcc_h674;
                  if (_source196.is_None) {
                  } else {
                    DAST._IType _3584___mcc_h681 = _source196.dtor_value;
                    DAST._IType _3585_tpe = _3584___mcc_h681;
                    RAST._IType _3586_typ;
                    RAST._IType _out206;
                    _out206 = (this).GenType(_3585_tpe, DCOMP.GenTypeContext.@default());
                    _3586_typ = _out206;
                    if (((_3586_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source195.is_MapBuilderAdd) {
                } else if (_source195.is_MapBuilderBuild) {
                } else if (_source195.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_BoolBoundedPool) {
              {
                DAST._ICallName _source197 = _3184_name;
                if (_source197.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3587___mcc_h683 = _source197.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3588___mcc_h684 = _source197.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3589___mcc_h685 = _source197.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3590___mcc_h686 = _source197.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source198 = _3588___mcc_h684;
                  if (_source198.is_None) {
                  } else {
                    DAST._IType _3591___mcc_h691 = _source198.dtor_value;
                    DAST._IType _3592_tpe = _3591___mcc_h691;
                    RAST._IType _3593_typ;
                    RAST._IType _out207;
                    _out207 = (this).GenType(_3592_tpe, DCOMP.GenTypeContext.@default());
                    _3593_typ = _out207;
                    if (((_3593_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source197.is_MapBuilderAdd) {
                } else if (_source197.is_MapBuilderBuild) {
                } else if (_source197.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SetBoundedPool) {
              DAST._IExpression _3594___mcc_h277 = _source120.dtor_of;
              {
                DAST._ICallName _source199 = _3184_name;
                if (_source199.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3595___mcc_h693 = _source199.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3596___mcc_h694 = _source199.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3597___mcc_h695 = _source199.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3598___mcc_h696 = _source199.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source200 = _3596___mcc_h694;
                  if (_source200.is_None) {
                  } else {
                    DAST._IType _3599___mcc_h701 = _source200.dtor_value;
                    DAST._IType _3600_tpe = _3599___mcc_h701;
                    RAST._IType _3601_typ;
                    RAST._IType _out208;
                    _out208 = (this).GenType(_3600_tpe, DCOMP.GenTypeContext.@default());
                    _3601_typ = _out208;
                    if (((_3601_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source199.is_MapBuilderAdd) {
                } else if (_source199.is_MapBuilderBuild) {
                } else if (_source199.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_MapBoundedPool) {
              DAST._IExpression _3602___mcc_h279 = _source120.dtor_of;
              {
                DAST._ICallName _source201 = _3184_name;
                if (_source201.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3603___mcc_h703 = _source201.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3604___mcc_h704 = _source201.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3605___mcc_h705 = _source201.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3606___mcc_h706 = _source201.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source202 = _3604___mcc_h704;
                  if (_source202.is_None) {
                  } else {
                    DAST._IType _3607___mcc_h711 = _source202.dtor_value;
                    DAST._IType _3608_tpe = _3607___mcc_h711;
                    RAST._IType _3609_typ;
                    RAST._IType _out209;
                    _out209 = (this).GenType(_3608_tpe, DCOMP.GenTypeContext.@default());
                    _3609_typ = _out209;
                    if (((_3609_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source201.is_MapBuilderAdd) {
                } else if (_source201.is_MapBuilderBuild) {
                } else if (_source201.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_SeqBoundedPool) {
              DAST._IExpression _3610___mcc_h281 = _source120.dtor_of;
              bool _3611___mcc_h282 = _source120.dtor_includeDuplicates;
              {
                DAST._ICallName _source203 = _3184_name;
                if (_source203.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3612___mcc_h713 = _source203.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3613___mcc_h714 = _source203.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3614___mcc_h715 = _source203.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3615___mcc_h716 = _source203.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source204 = _3613___mcc_h714;
                  if (_source204.is_None) {
                  } else {
                    DAST._IType _3616___mcc_h721 = _source204.dtor_value;
                    DAST._IType _3617_tpe = _3616___mcc_h721;
                    RAST._IType _3618_typ;
                    RAST._IType _out210;
                    _out210 = (this).GenType(_3617_tpe, DCOMP.GenTypeContext.@default());
                    _3618_typ = _out210;
                    if (((_3618_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source203.is_MapBuilderAdd) {
                } else if (_source203.is_MapBuilderBuild) {
                } else if (_source203.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_IntRange) {
              DAST._IExpression _3619___mcc_h285 = _source120.dtor_lo;
              DAST._IExpression _3620___mcc_h286 = _source120.dtor_hi;
              bool _3621___mcc_h287 = _source120.dtor_up;
              {
                DAST._ICallName _source205 = _3184_name;
                if (_source205.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3622___mcc_h723 = _source205.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3623___mcc_h724 = _source205.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3624___mcc_h725 = _source205.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3625___mcc_h726 = _source205.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source206 = _3623___mcc_h724;
                  if (_source206.is_None) {
                  } else {
                    DAST._IType _3626___mcc_h731 = _source206.dtor_value;
                    DAST._IType _3627_tpe = _3626___mcc_h731;
                    RAST._IType _3628_typ;
                    RAST._IType _out211;
                    _out211 = (this).GenType(_3627_tpe, DCOMP.GenTypeContext.@default());
                    _3628_typ = _out211;
                    if (((_3628_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source205.is_MapBuilderAdd) {
                } else if (_source205.is_MapBuilderBuild) {
                } else if (_source205.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else if (_source120.is_UnboundedIntRange) {
              DAST._IExpression _3629___mcc_h291 = _source120.dtor_start;
              bool _3630___mcc_h292 = _source120.dtor_up;
              {
                DAST._ICallName _source207 = _3184_name;
                if (_source207.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3631___mcc_h733 = _source207.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3632___mcc_h734 = _source207.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3633___mcc_h735 = _source207.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3634___mcc_h736 = _source207.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source208 = _3632___mcc_h734;
                  if (_source208.is_None) {
                  } else {
                    DAST._IType _3635___mcc_h741 = _source208.dtor_value;
                    DAST._IType _3636_tpe = _3635___mcc_h741;
                    RAST._IType _3637_typ;
                    RAST._IType _out212;
                    _out212 = (this).GenType(_3636_tpe, DCOMP.GenTypeContext.@default());
                    _3637_typ = _out212;
                    if (((_3637_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source207.is_MapBuilderAdd) {
                } else if (_source207.is_MapBuilderBuild) {
                } else if (_source207.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            } else {
              DAST._IType _3638___mcc_h295 = _source120.dtor_elemType;
              DAST._IExpression _3639___mcc_h296 = _source120.dtor_collection;
              bool _3640___mcc_h297 = _source120.dtor_is__forall;
              DAST._IExpression _3641___mcc_h298 = _source120.dtor_lambda;
              {
                DAST._ICallName _source209 = _3184_name;
                if (_source209.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _3642___mcc_h743 = _source209.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _3643___mcc_h744 = _source209.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _3644___mcc_h745 = _source209.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _3645___mcc_h746 = _source209.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source210 = _3643___mcc_h744;
                  if (_source210.is_None) {
                  } else {
                    DAST._IType _3646___mcc_h751 = _source210.dtor_value;
                    DAST._IType _3647_tpe = _3646___mcc_h751;
                    RAST._IType _3648_typ;
                    RAST._IType _out213;
                    _out213 = (this).GenType(_3647_tpe, DCOMP.GenTypeContext.@default());
                    _3648_typ = _out213;
                    if (((_3648_typ).IsObjectOrPointer()) && (!object.Equals(_3218_onExpr, RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))))) {
                      _3218_onExpr = ((this).modify__macro).Apply1(_3218_onExpr);
                    }
                  }
                } else if (_source209.is_MapBuilderAdd) {
                } else if (_source209.is_MapBuilderBuild) {
                } else if (_source209.is_SetBuilderAdd) {
                } else {
                }
                _3218_onExpr = (_3218_onExpr).Sel(_3221_renderedName);
              }
            }
            generated = (_3218_onExpr).Apply(_3186_argExprs);
          } else {
            DAST._IResolvedType _3649___mcc_h71 = _source118.dtor_value;
            DAST._IResolvedType _source211 = _3649___mcc_h71;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3650___mcc_h73 = _source211.dtor_path;
            Dafny.ISequence<DAST._IType> _3651___mcc_h74 = _source211.dtor_typeArgs;
            DAST._IResolvedTypeBase _3652___mcc_h75 = _source211.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _3653___mcc_h76 = _source211.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3654___mcc_h77 = _source211.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _3655___mcc_h78 = _source211.dtor_extendedTypes;
            Dafny.ISequence<DAST._IType> _3656_extendedTypes = _3655___mcc_h78;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3657_properMethods = _3654___mcc_h77;
            Dafny.ISequence<DAST._IType> _3658_typeArgs = _3651___mcc_h74;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3659_path = _3650___mcc_h73;
            RAST._IExpr _3660_r;
            RAST._IExpr _out214;
            _out214 = DCOMP.COMP.GenPathExpr(_3659_path);
            _3660_r = _out214;
            if ((new BigInteger((_3658_typeArgs).Count)).Sign == 1) {
              Dafny.ISequence<RAST._IType> _3661_typeExprs;
              _3661_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
              BigInteger _hi31 = new BigInteger((_3658_typeArgs).Count);
              for (BigInteger _3662_i = BigInteger.Zero; _3662_i < _hi31; _3662_i++) {
                RAST._IType _3663_typeExpr;
                RAST._IType _out215;
                _out215 = (this).GenType((_3658_typeArgs).Select(_3662_i), DCOMP.GenTypeContext.@default());
                _3663_typeExpr = _out215;
                _3661_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_3661_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_3663_typeExpr));
              }
              _3660_r = (_3660_r).ApplyType(_3661_typeExprs);
            }
            generated = (_3660_r).MSel(DCOMP.__default.escapeName((_3184_name).dtor_name));
            RAST._IExpr _3664_onExpr;
            DCOMP._IOwnership _3665___v83;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3666_enclosingIdents;
            RAST._IExpr _out216;
            DCOMP._IOwnership _out217;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out218;
            (this).GenExpr(_3185_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowedMut(), out _out216, out _out217, out _out218);
            _3664_onExpr = _out216;
            _3665___v83 = _out217;
            _3666_enclosingIdents = _out218;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _3666_enclosingIdents);
            generated = (generated).Apply(Dafny.Sequence<RAST._IExpr>.Concat(Dafny.Sequence<RAST._IExpr>.FromElements(_3664_onExpr), _3186_argExprs));
          }
          if (((_3181_maybeOutVars).is_Some) && ((new BigInteger(((_3181_maybeOutVars).dtor_value).Count)) == (BigInteger.One))) {
            Dafny.ISequence<Dafny.Rune> _3667_outVar;
            _3667_outVar = DCOMP.__default.escapeName((((_3181_maybeOutVars).dtor_value).Select(BigInteger.Zero)));
            if (!((env).CanReadWithoutClone(_3667_outVar))) {
              generated = RAST.__default.MaybePlacebo(generated);
            }
            generated = RAST.__default.AssignVar(_3667_outVar, generated);
          } else if (((_3181_maybeOutVars).is_None) || ((new BigInteger(((_3181_maybeOutVars).dtor_value).Count)).Sign == 0)) {
          } else {
            Dafny.ISequence<Dafny.Rune> _3668_tmpVar;
            _3668_tmpVar = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_x");
            RAST._IExpr _3669_tmpId;
            _3669_tmpId = RAST.Expr.create_Identifier(_3668_tmpVar);
            generated = RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), _3668_tmpVar, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(generated));
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3670_outVars;
            _3670_outVars = (_3181_maybeOutVars).dtor_value;
            BigInteger _hi32 = new BigInteger((_3670_outVars).Count);
            for (BigInteger _3671_outI = BigInteger.Zero; _3671_outI < _hi32; _3671_outI++) {
              Dafny.ISequence<Dafny.Rune> _3672_outVar;
              _3672_outVar = DCOMP.__default.escapeName(((_3670_outVars).Select(_3671_outI)));
              RAST._IExpr _3673_rhs;
              _3673_rhs = (_3669_tmpId).Sel(Std.Strings.__default.OfNat(_3671_outI));
              if (!((env).CanReadWithoutClone(_3672_outVar))) {
                _3673_rhs = RAST.__default.MaybePlacebo(_3673_rhs);
              }
              generated = (generated).Then(RAST.__default.AssignVar(_3672_outVar, _3673_rhs));
            }
          }
          newEnv = env;
        }
      } else if (_source113.is_Return) {
        DAST._IExpression _3674___mcc_h22 = _source113.dtor_expr;
        DAST._IExpression _3675_exprDafny = _3674___mcc_h22;
        {
          RAST._IExpr _3676_expr;
          DCOMP._IOwnership _3677___v96;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3678_recIdents;
          RAST._IExpr _out219;
          DCOMP._IOwnership _out220;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out221;
          (this).GenExpr(_3675_exprDafny, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out219, out _out220, out _out221);
          _3676_expr = _out219;
          _3677___v96 = _out220;
          _3678_recIdents = _out221;
          readIdents = _3678_recIdents;
          if (isLast) {
            generated = _3676_expr;
          } else {
            generated = RAST.Expr.create_Return(Std.Wrappers.Option<RAST._IExpr>.create_Some(_3676_expr));
          }
          newEnv = env;
        }
      } else if (_source113.is_EarlyReturn) {
        {
          generated = earlyReturn;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source113.is_Break) {
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3679___mcc_h23 = _source113.dtor_toLabel;
        Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _3680_toLabel = _3679___mcc_h23;
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source212 = _3680_toLabel;
          if (_source212.is_None) {
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None());
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _3681___mcc_h753 = _source212.dtor_value;
            Dafny.ISequence<Dafny.Rune> _3682_lbl = _3681___mcc_h753;
            {
              generated = RAST.Expr.create_Break(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("label_"), _3682_lbl)));
            }
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source113.is_TailRecursive) {
        Dafny.ISequence<DAST._IStatement> _3683___mcc_h24 = _source113.dtor_body;
        Dafny.ISequence<DAST._IStatement> _3684_body = _3683___mcc_h24;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          if (!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) {
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(((RAST.__default.self).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("clone"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()))));
          }
          newEnv = env;
          BigInteger _hi33 = new BigInteger(((env).dtor_names).Count);
          for (BigInteger _3685_paramI = BigInteger.Zero; _3685_paramI < _hi33; _3685_paramI++) {
            Dafny.ISequence<Dafny.Rune> _3686_param;
            _3686_param = ((env).dtor_names).Select(_3685_paramI);
            RAST._IExpr _3687_paramInit;
            DCOMP._IOwnership _3688___v76;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3689___v77;
            RAST._IExpr _out222;
            DCOMP._IOwnership _out223;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out224;
            (this).GenIdent(_3686_param, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out222, out _out223, out _out224);
            _3687_paramInit = _out222;
            _3688___v76 = _out223;
            _3689___v77 = _out224;
            generated = (generated).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _3686_param, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_3687_paramInit)));
            if (((env).dtor_types).Contains(_3686_param)) {
              RAST._IType _3690_declaredType;
              _3690_declaredType = (Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Select((env).dtor_types,_3686_param)).ToOwned();
              newEnv = (newEnv).AddAssigned(_3686_param, _3690_declaredType);
            }
          }
          RAST._IExpr _3691_bodyExpr;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3692_bodyIdents;
          DCOMP._IEnvironment _3693_bodyEnv;
          RAST._IExpr _out225;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out226;
          DCOMP._IEnvironment _out227;
          (this).GenStmts(_3684_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), newEnv, false, earlyReturn, out _out225, out _out226, out _out227);
          _3691_bodyExpr = _out225;
          _3692_bodyIdents = _out226;
          _3693_bodyEnv = _out227;
          readIdents = _3692_bodyIdents;
          generated = (generated).Then(RAST.Expr.create_Labelled(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START"), RAST.Expr.create_Loop(Std.Wrappers.Option<RAST._IExpr>.create_None(), _3691_bodyExpr)));
        }
      } else if (_source113.is_JumpTailCallStart) {
        {
          generated = RAST.Expr.create_Continue(Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("TAIL_CALL_START")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source113.is_Halt) {
        {
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!"))).Apply1(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Halt"), false));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
        }
      } else if (_source113.is_Print) {
        DAST._IExpression _3694___mcc_h25 = _source113.dtor_Print_i_a0;
        DAST._IExpression _3695_e = _3694___mcc_h25;
        {
          RAST._IExpr _3696_printedExpr;
          DCOMP._IOwnership _3697_recOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3698_recIdents;
          RAST._IExpr _out228;
          DCOMP._IOwnership _out229;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out230;
          (this).GenExpr(_3695_e, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out228, out _out229, out _out230);
          _3696_printedExpr = _out228;
          _3697_recOwnership = _out229;
          _3698_recIdents = _out230;
          generated = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("print!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_LiteralString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{}"), false), ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyPrintWrapper"))).Apply1(_3696_printedExpr)));
          readIdents = _3698_recIdents;
          newEnv = env;
        }
      } else {
        Dafny.ISequence<DAST._IFormal> _3699___mcc_h26 = _source113.dtor_fields;
        Dafny.ISequence<DAST._IFormal> _3700_fields = _3699___mcc_h26;
        {
          generated = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          newEnv = env;
          BigInteger _hi34 = new BigInteger((_3700_fields).Count);
          for (BigInteger _3701_i = BigInteger.Zero; _3701_i < _hi34; _3701_i++) {
            DAST._IFormal _3702_field;
            _3702_field = (_3700_fields).Select(_3701_i);
            Dafny.ISequence<Dafny.Rune> _3703_fieldName;
            _3703_fieldName = DCOMP.__default.escapeName((_3702_field).dtor_name);
            RAST._IType _3704_fieldTyp;
            RAST._IType _out231;
            _out231 = (this).GenType((_3702_field).dtor_typ, DCOMP.GenTypeContext.@default());
            _3704_fieldTyp = _out231;
            Dafny.ISequence<Dafny.Rune> _3705_isAssignedVar;
            _3705_isAssignedVar = DCOMP.__default.AddAssignedPrefix(_3703_fieldName);
            if (((newEnv).dtor_names).Contains(_3705_isAssignedVar)) {
              RAST._IExpr _3706_rhs;
              DCOMP._IOwnership _3707___v70;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3708___v71;
              RAST._IExpr _out232;
              DCOMP._IOwnership _out233;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out234;
              (this).GenExpr(DAST.Expression.create_InitializationValue((_3702_field).dtor_typ), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out232, out _out233, out _out234);
              _3706_rhs = _out232;
              _3707___v70 = _out233;
              _3708___v71 = _out234;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_3705_isAssignedVar));
              generated = (generated).Then(((RAST.__default.dafny__runtime).MSel((this).update__field__if__uninit__macro)).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this")), RAST.Expr.create_Identifier(_3703_fieldName), RAST.Expr.create_Identifier(_3705_isAssignedVar), _3706_rhs)));
              newEnv = (newEnv).RemoveAssigned(_3705_isAssignedVar);
            }
          }
        }
      }
    }
    public static Std.Wrappers._IOption<RAST._IType> NewtypeToRustType(DAST._IType @base, DAST._INewtypeRange range)
    {
      DAST._INewtypeRange _source213 = range;
      if (_source213.is_U8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U8());
      } else if (_source213.is_I8) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I8());
      } else if (_source213.is_U16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U16());
      } else if (_source213.is_I16) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I16());
      } else if (_source213.is_U32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U32());
      } else if (_source213.is_I32) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I32());
      } else if (_source213.is_U64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U64());
      } else if (_source213.is_I64) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I64());
      } else if (_source213.is_U128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_U128());
      } else if (_source213.is_I128) {
        return Std.Wrappers.Option<RAST._IType>.create_Some(RAST.Type.create_I128());
      } else if (_source213.is_BigInt) {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      } else {
        return Std.Wrappers.Option<RAST._IType>.create_None();
      }
    }
    public void FromOwned(RAST._IExpr r, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        @out = RAST.__default.BoxNew(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
      } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
        @out = r;
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
        @out = RAST.__default.Borrow(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        @out = ((this).modify__macro).Apply1(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      }
    }
    public void FromOwnership(RAST._IExpr r, DCOMP._IOwnership ownership, DCOMP._IOwnership expectedOwnership, out RAST._IExpr @out, out DCOMP._IOwnership resultingOwnership)
    {
      @out = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      if (object.Equals(ownership, expectedOwnership)) {
        @out = r;
        resultingOwnership = expectedOwnership;
        return ;
      }
      if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwned())) {
        RAST._IExpr _out235;
        DCOMP._IOwnership _out236;
        (this).FromOwned(r, expectedOwnership, out _out235, out _out236);
        @out = _out235;
        resultingOwnership = _out236;
        return ;
      } else if (object.Equals(ownership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        RAST._IExpr _out237;
        DCOMP._IOwnership _out238;
        (this).FromOwned(RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*"), r, DAST.Format.UnaryOpFormat.create_NoFormat()), expectedOwnership, out _out237, out _out238);
        @out = _out237;
        resultingOwnership = _out238;
      } else if ((object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
        if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          @out = (r).Clone();
        } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
          @out = RAST.__default.BoxNew((r).Clone());
        } else if ((object.Equals(expectedOwnership, ownership)) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
          resultingOwnership = ownership;
          @out = r;
        } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) && (object.Equals(ownership, DCOMP.Ownership.create_OwnershipBorrowedMut()))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          @out = r;
        } else {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
          @out = RAST.__default.BorrowMut(r);
        }
      } else {
      }
    }
    public static bool OwnershipGuarantee(DCOMP._IOwnership expectedOwnership, DCOMP._IOwnership resultingOwnership)
    {
      return (!(!object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) || (object.Equals(resultingOwnership, expectedOwnership))) && (!object.Equals(resultingOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()));
    }
    public void GenExprLiteral(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source214 = e;
      DAST._ILiteral _3709___mcc_h0 = _source214.dtor_Literal_i_a0;
      DAST._ILiteral _source215 = _3709___mcc_h0;
      if (_source215.is_BoolLiteral) {
        bool _3710___mcc_h1 = _source215.dtor_BoolLiteral_i_a0;
        bool _3711_b = _3710___mcc_h1;
        {
          RAST._IExpr _out239;
          DCOMP._IOwnership _out240;
          (this).FromOwned(RAST.Expr.create_LiteralBool(_3711_b), expectedOwnership, out _out239, out _out240);
          r = _out239;
          resultingOwnership = _out240;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source215.is_IntLiteral) {
        Dafny.ISequence<Dafny.Rune> _3712___mcc_h2 = _source215.dtor_IntLiteral_i_a0;
        DAST._IType _3713___mcc_h3 = _source215.dtor_IntLiteral_i_a1;
        DAST._IType _3714_t = _3713___mcc_h3;
        Dafny.ISequence<Dafny.Rune> _3715_i = _3712___mcc_h2;
        {
          DAST._IType _source216 = _3714_t;
          if (_source216.is_UserDefined) {
            DAST._IResolvedType _3716___mcc_h116 = _source216.dtor_resolved;
            DAST._IType _3717_o = _3714_t;
            {
              RAST._IType _3718_genType;
              RAST._IType _out241;
              _out241 = (this).GenType(_3717_o, DCOMP.GenTypeContext.@default());
              _3718_genType = _out241;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3718_genType);
            }
          } else if (_source216.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3719___mcc_h118 = _source216.dtor_Tuple_i_a0;
            DAST._IType _3720_o = _3714_t;
            {
              RAST._IType _3721_genType;
              RAST._IType _out242;
              _out242 = (this).GenType(_3720_o, DCOMP.GenTypeContext.@default());
              _3721_genType = _out242;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3721_genType);
            }
          } else if (_source216.is_Array) {
            DAST._IType _3722___mcc_h120 = _source216.dtor_element;
            BigInteger _3723___mcc_h121 = _source216.dtor_dims;
            DAST._IType _3724_o = _3714_t;
            {
              RAST._IType _3725_genType;
              RAST._IType _out243;
              _out243 = (this).GenType(_3724_o, DCOMP.GenTypeContext.@default());
              _3725_genType = _out243;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3725_genType);
            }
          } else if (_source216.is_Seq) {
            DAST._IType _3726___mcc_h124 = _source216.dtor_element;
            DAST._IType _3727_o = _3714_t;
            {
              RAST._IType _3728_genType;
              RAST._IType _out244;
              _out244 = (this).GenType(_3727_o, DCOMP.GenTypeContext.@default());
              _3728_genType = _out244;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3728_genType);
            }
          } else if (_source216.is_Set) {
            DAST._IType _3729___mcc_h126 = _source216.dtor_element;
            DAST._IType _3730_o = _3714_t;
            {
              RAST._IType _3731_genType;
              RAST._IType _out245;
              _out245 = (this).GenType(_3730_o, DCOMP.GenTypeContext.@default());
              _3731_genType = _out245;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3731_genType);
            }
          } else if (_source216.is_Multiset) {
            DAST._IType _3732___mcc_h128 = _source216.dtor_element;
            DAST._IType _3733_o = _3714_t;
            {
              RAST._IType _3734_genType;
              RAST._IType _out246;
              _out246 = (this).GenType(_3733_o, DCOMP.GenTypeContext.@default());
              _3734_genType = _out246;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3734_genType);
            }
          } else if (_source216.is_Map) {
            DAST._IType _3735___mcc_h130 = _source216.dtor_key;
            DAST._IType _3736___mcc_h131 = _source216.dtor_value;
            DAST._IType _3737_o = _3714_t;
            {
              RAST._IType _3738_genType;
              RAST._IType _out247;
              _out247 = (this).GenType(_3737_o, DCOMP.GenTypeContext.@default());
              _3738_genType = _out247;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3738_genType);
            }
          } else if (_source216.is_SetBuilder) {
            DAST._IType _3739___mcc_h134 = _source216.dtor_element;
            DAST._IType _3740_o = _3714_t;
            {
              RAST._IType _3741_genType;
              RAST._IType _out248;
              _out248 = (this).GenType(_3740_o, DCOMP.GenTypeContext.@default());
              _3741_genType = _out248;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3741_genType);
            }
          } else if (_source216.is_MapBuilder) {
            DAST._IType _3742___mcc_h136 = _source216.dtor_key;
            DAST._IType _3743___mcc_h137 = _source216.dtor_value;
            DAST._IType _3744_o = _3714_t;
            {
              RAST._IType _3745_genType;
              RAST._IType _out249;
              _out249 = (this).GenType(_3744_o, DCOMP.GenTypeContext.@default());
              _3745_genType = _out249;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3745_genType);
            }
          } else if (_source216.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3746___mcc_h140 = _source216.dtor_args;
            DAST._IType _3747___mcc_h141 = _source216.dtor_result;
            DAST._IType _3748_o = _3714_t;
            {
              RAST._IType _3749_genType;
              RAST._IType _out250;
              _out250 = (this).GenType(_3748_o, DCOMP.GenTypeContext.@default());
              _3749_genType = _out250;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3749_genType);
            }
          } else if (_source216.is_Primitive) {
            DAST._IPrimitive _3750___mcc_h144 = _source216.dtor_Primitive_i_a0;
            DAST._IPrimitive _source217 = _3750___mcc_h144;
            if (_source217.is_Int) {
              {
                if ((new BigInteger((_3715_i).Count)) <= (new BigInteger(4))) {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralInt(_3715_i));
                } else {
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(RAST.Expr.create_LiteralString(_3715_i, true));
                }
              }
            } else if (_source217.is_Real) {
              DAST._IType _3751_o = _3714_t;
              {
                RAST._IType _3752_genType;
                RAST._IType _out251;
                _out251 = (this).GenType(_3751_o, DCOMP.GenTypeContext.@default());
                _3752_genType = _out251;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3752_genType);
              }
            } else if (_source217.is_String) {
              DAST._IType _3753_o = _3714_t;
              {
                RAST._IType _3754_genType;
                RAST._IType _out252;
                _out252 = (this).GenType(_3753_o, DCOMP.GenTypeContext.@default());
                _3754_genType = _out252;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3754_genType);
              }
            } else if (_source217.is_Bool) {
              DAST._IType _3755_o = _3714_t;
              {
                RAST._IType _3756_genType;
                RAST._IType _out253;
                _out253 = (this).GenType(_3755_o, DCOMP.GenTypeContext.@default());
                _3756_genType = _out253;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3756_genType);
              }
            } else {
              DAST._IType _3757_o = _3714_t;
              {
                RAST._IType _3758_genType;
                RAST._IType _out254;
                _out254 = (this).GenType(_3757_o, DCOMP.GenTypeContext.@default());
                _3758_genType = _out254;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3758_genType);
              }
            }
          } else if (_source216.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3759___mcc_h146 = _source216.dtor_Passthrough_i_a0;
            DAST._IType _3760_o = _3714_t;
            {
              RAST._IType _3761_genType;
              RAST._IType _out255;
              _out255 = (this).GenType(_3760_o, DCOMP.GenTypeContext.@default());
              _3761_genType = _out255;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3761_genType);
            }
          } else if (_source216.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _3762___mcc_h148 = _source216.dtor_TypeArg_i_a0;
            DAST._IType _3763_o = _3714_t;
            {
              RAST._IType _3764_genType;
              RAST._IType _out256;
              _out256 = (this).GenType(_3763_o, DCOMP.GenTypeContext.@default());
              _3764_genType = _out256;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3764_genType);
            }
          } else {
            DAST._IType _3765_o = _3714_t;
            {
              RAST._IType _3766_genType;
              RAST._IType _out257;
              _out257 = (this).GenType(_3765_o, DCOMP.GenTypeContext.@default());
              _3766_genType = _out257;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(_3715_i), _3766_genType);
            }
          }
          RAST._IExpr _out258;
          DCOMP._IOwnership _out259;
          (this).FromOwned(r, expectedOwnership, out _out258, out _out259);
          r = _out258;
          resultingOwnership = _out259;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source215.is_DecLiteral) {
        Dafny.ISequence<Dafny.Rune> _3767___mcc_h4 = _source215.dtor_DecLiteral_i_a0;
        Dafny.ISequence<Dafny.Rune> _3768___mcc_h5 = _source215.dtor_DecLiteral_i_a1;
        DAST._IType _3769___mcc_h6 = _source215.dtor_DecLiteral_i_a2;
        DAST._IType _3770_t = _3769___mcc_h6;
        Dafny.ISequence<Dafny.Rune> _3771_d = _3768___mcc_h5;
        Dafny.ISequence<Dafny.Rune> _3772_n = _3767___mcc_h4;
        {
          DAST._IType _source218 = _3770_t;
          if (_source218.is_UserDefined) {
            DAST._IResolvedType _3773___mcc_h150 = _source218.dtor_resolved;
            DAST._IType _3774_o = _3770_t;
            {
              RAST._IType _3775_genType;
              RAST._IType _out260;
              _out260 = (this).GenType(_3774_o, DCOMP.GenTypeContext.@default());
              _3775_genType = _out260;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3775_genType);
            }
          } else if (_source218.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3776___mcc_h152 = _source218.dtor_Tuple_i_a0;
            DAST._IType _3777_o = _3770_t;
            {
              RAST._IType _3778_genType;
              RAST._IType _out261;
              _out261 = (this).GenType(_3777_o, DCOMP.GenTypeContext.@default());
              _3778_genType = _out261;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3778_genType);
            }
          } else if (_source218.is_Array) {
            DAST._IType _3779___mcc_h154 = _source218.dtor_element;
            BigInteger _3780___mcc_h155 = _source218.dtor_dims;
            DAST._IType _3781_o = _3770_t;
            {
              RAST._IType _3782_genType;
              RAST._IType _out262;
              _out262 = (this).GenType(_3781_o, DCOMP.GenTypeContext.@default());
              _3782_genType = _out262;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3782_genType);
            }
          } else if (_source218.is_Seq) {
            DAST._IType _3783___mcc_h158 = _source218.dtor_element;
            DAST._IType _3784_o = _3770_t;
            {
              RAST._IType _3785_genType;
              RAST._IType _out263;
              _out263 = (this).GenType(_3784_o, DCOMP.GenTypeContext.@default());
              _3785_genType = _out263;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3785_genType);
            }
          } else if (_source218.is_Set) {
            DAST._IType _3786___mcc_h160 = _source218.dtor_element;
            DAST._IType _3787_o = _3770_t;
            {
              RAST._IType _3788_genType;
              RAST._IType _out264;
              _out264 = (this).GenType(_3787_o, DCOMP.GenTypeContext.@default());
              _3788_genType = _out264;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3788_genType);
            }
          } else if (_source218.is_Multiset) {
            DAST._IType _3789___mcc_h162 = _source218.dtor_element;
            DAST._IType _3790_o = _3770_t;
            {
              RAST._IType _3791_genType;
              RAST._IType _out265;
              _out265 = (this).GenType(_3790_o, DCOMP.GenTypeContext.@default());
              _3791_genType = _out265;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3791_genType);
            }
          } else if (_source218.is_Map) {
            DAST._IType _3792___mcc_h164 = _source218.dtor_key;
            DAST._IType _3793___mcc_h165 = _source218.dtor_value;
            DAST._IType _3794_o = _3770_t;
            {
              RAST._IType _3795_genType;
              RAST._IType _out266;
              _out266 = (this).GenType(_3794_o, DCOMP.GenTypeContext.@default());
              _3795_genType = _out266;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3795_genType);
            }
          } else if (_source218.is_SetBuilder) {
            DAST._IType _3796___mcc_h168 = _source218.dtor_element;
            DAST._IType _3797_o = _3770_t;
            {
              RAST._IType _3798_genType;
              RAST._IType _out267;
              _out267 = (this).GenType(_3797_o, DCOMP.GenTypeContext.@default());
              _3798_genType = _out267;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3798_genType);
            }
          } else if (_source218.is_MapBuilder) {
            DAST._IType _3799___mcc_h170 = _source218.dtor_key;
            DAST._IType _3800___mcc_h171 = _source218.dtor_value;
            DAST._IType _3801_o = _3770_t;
            {
              RAST._IType _3802_genType;
              RAST._IType _out268;
              _out268 = (this).GenType(_3801_o, DCOMP.GenTypeContext.@default());
              _3802_genType = _out268;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3802_genType);
            }
          } else if (_source218.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3803___mcc_h174 = _source218.dtor_args;
            DAST._IType _3804___mcc_h175 = _source218.dtor_result;
            DAST._IType _3805_o = _3770_t;
            {
              RAST._IType _3806_genType;
              RAST._IType _out269;
              _out269 = (this).GenType(_3805_o, DCOMP.GenTypeContext.@default());
              _3806_genType = _out269;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3806_genType);
            }
          } else if (_source218.is_Primitive) {
            DAST._IPrimitive _3807___mcc_h178 = _source218.dtor_Primitive_i_a0;
            DAST._IPrimitive _source219 = _3807___mcc_h178;
            if (_source219.is_Int) {
              DAST._IType _3808_o = _3770_t;
              {
                RAST._IType _3809_genType;
                RAST._IType _out270;
                _out270 = (this).GenType(_3808_o, DCOMP.GenTypeContext.@default());
                _3809_genType = _out270;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3809_genType);
              }
            } else if (_source219.is_Real) {
              {
                r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::new(::dafny_runtime::BigInt::parse_bytes(b\""), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap(), ::dafny_runtime::BigInt::parse_bytes(b\"")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\", 10).unwrap())"))));
              }
            } else if (_source219.is_String) {
              DAST._IType _3810_o = _3770_t;
              {
                RAST._IType _3811_genType;
                RAST._IType _out271;
                _out271 = (this).GenType(_3810_o, DCOMP.GenTypeContext.@default());
                _3811_genType = _out271;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3811_genType);
              }
            } else if (_source219.is_Bool) {
              DAST._IType _3812_o = _3770_t;
              {
                RAST._IType _3813_genType;
                RAST._IType _out272;
                _out272 = (this).GenType(_3812_o, DCOMP.GenTypeContext.@default());
                _3813_genType = _out272;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3813_genType);
              }
            } else {
              DAST._IType _3814_o = _3770_t;
              {
                RAST._IType _3815_genType;
                RAST._IType _out273;
                _out273 = (this).GenType(_3814_o, DCOMP.GenTypeContext.@default());
                _3815_genType = _out273;
                r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3815_genType);
              }
            }
          } else if (_source218.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3816___mcc_h180 = _source218.dtor_Passthrough_i_a0;
            DAST._IType _3817_o = _3770_t;
            {
              RAST._IType _3818_genType;
              RAST._IType _out274;
              _out274 = (this).GenType(_3817_o, DCOMP.GenTypeContext.@default());
              _3818_genType = _out274;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3818_genType);
            }
          } else if (_source218.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _3819___mcc_h182 = _source218.dtor_TypeArg_i_a0;
            DAST._IType _3820_o = _3770_t;
            {
              RAST._IType _3821_genType;
              RAST._IType _out275;
              _out275 = (this).GenType(_3820_o, DCOMP.GenTypeContext.@default());
              _3821_genType = _out275;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3821_genType);
            }
          } else {
            DAST._IType _3822_o = _3770_t;
            {
              RAST._IType _3823_genType;
              RAST._IType _out276;
              _out276 = (this).GenType(_3822_o, DCOMP.GenTypeContext.@default());
              _3823_genType = _out276;
              r = RAST.Expr.create_TypeAscription(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("("), _3772_n), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0 / ")), _3771_d), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".0")), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))), _3823_genType);
            }
          }
          RAST._IExpr _out277;
          DCOMP._IOwnership _out278;
          (this).FromOwned(r, expectedOwnership, out _out277, out _out278);
          r = _out277;
          resultingOwnership = _out278;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source215.is_StringLiteral) {
        Dafny.ISequence<Dafny.Rune> _3824___mcc_h7 = _source215.dtor_StringLiteral_i_a0;
        Dafny.ISequence<Dafny.Rune> _3825_l = _3824___mcc_h7;
        {
          r = ((RAST.__default.dafny__runtime).MSel((this).string__of)).Apply1(RAST.Expr.create_LiteralString(_3825_l, false));
          RAST._IExpr _out279;
          DCOMP._IOwnership _out280;
          (this).FromOwned(r, expectedOwnership, out _out279, out _out280);
          r = _out279;
          resultingOwnership = _out280;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source215.is_CharLiteral) {
        Dafny.Rune _3826___mcc_h8 = _source215.dtor_CharLiteral_i_a0;
        Dafny.Rune _3827_c = _3826___mcc_h8;
        {
          r = RAST.Expr.create_LiteralInt(Std.Strings.__default.OfNat(new BigInteger((_3827_c).Value)));
          if (!((this).UnicodeChars)) {
            r = RAST.Expr.create_TypeAscription(r, RAST.Type.create_U16());
          } else {
            r = (((((((RAST.__default.@global).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("std"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("primitive"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_u32"))).Apply1(r)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unwrap"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          }
          r = ((RAST.__default.dafny__runtime).MSel((this).DafnyChar)).Apply1(r);
          RAST._IExpr _out281;
          DCOMP._IOwnership _out282;
          (this).FromOwned(r, expectedOwnership, out _out281, out _out282);
          r = _out281;
          resultingOwnership = _out282;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else {
        DAST._IType _3828___mcc_h9 = _source215.dtor_Null_i_a0;
        DAST._IType _3829_tpe = _3828___mcc_h9;
        {
          RAST._IType _3830_tpeGen;
          RAST._IType _out283;
          _out283 = (this).GenType(_3829_tpe, DCOMP.GenTypeContext.@default());
          _3830_tpeGen = _out283;
          if (((this).ObjectType).is_RawPointers) {
            r = ((RAST.__default.std).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("ptr"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("null"));
          } else {
            r = RAST.Expr.create_TypeAscription(((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Object"))).Apply1(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("None"))), _3830_tpeGen);
          }
          RAST._IExpr _out284;
          DCOMP._IOwnership _out285;
          (this).FromOwned(r, expectedOwnership, out _out284, out _out285);
          r = _out284;
          resultingOwnership = _out285;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      }
    }
    public void GenExprBinary(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs53 = e;
      DAST._IBinOp _3831_op = _let_tmp_rhs53.dtor_op;
      DAST._IExpression _3832_lExpr = _let_tmp_rhs53.dtor_left;
      DAST._IExpression _3833_rExpr = _let_tmp_rhs53.dtor_right;
      DAST.Format._IBinaryOpFormat _3834_format = _let_tmp_rhs53.dtor_format2;
      bool _3835_becomesLeftCallsRight;
      _3835_becomesLeftCallsRight = ((System.Func<DAST._IBinOp, bool>)((_source220) => {
        if (_source220.is_Eq) {
          bool _3836___mcc_h0 = _source220.dtor_referential;
          return false;
        } else if (_source220.is_Div) {
          return false;
        } else if (_source220.is_EuclidianDiv) {
          return false;
        } else if (_source220.is_Mod) {
          return false;
        } else if (_source220.is_EuclidianMod) {
          return false;
        } else if (_source220.is_Lt) {
          return false;
        } else if (_source220.is_LtChar) {
          return false;
        } else if (_source220.is_Plus) {
          return false;
        } else if (_source220.is_Minus) {
          return false;
        } else if (_source220.is_Times) {
          return false;
        } else if (_source220.is_BitwiseAnd) {
          return false;
        } else if (_source220.is_BitwiseOr) {
          return false;
        } else if (_source220.is_BitwiseXor) {
          return false;
        } else if (_source220.is_BitwiseShiftRight) {
          return false;
        } else if (_source220.is_BitwiseShiftLeft) {
          return false;
        } else if (_source220.is_And) {
          return false;
        } else if (_source220.is_Or) {
          return false;
        } else if (_source220.is_In) {
          return false;
        } else if (_source220.is_SeqProperPrefix) {
          return false;
        } else if (_source220.is_SeqPrefix) {
          return false;
        } else if (_source220.is_SetMerge) {
          return true;
        } else if (_source220.is_SetSubtraction) {
          return true;
        } else if (_source220.is_SetIntersection) {
          return true;
        } else if (_source220.is_Subset) {
          return false;
        } else if (_source220.is_ProperSubset) {
          return false;
        } else if (_source220.is_SetDisjoint) {
          return true;
        } else if (_source220.is_MapMerge) {
          return true;
        } else if (_source220.is_MapSubtraction) {
          return true;
        } else if (_source220.is_MultisetMerge) {
          return true;
        } else if (_source220.is_MultisetSubtraction) {
          return true;
        } else if (_source220.is_MultisetIntersection) {
          return true;
        } else if (_source220.is_Submultiset) {
          return false;
        } else if (_source220.is_ProperSubmultiset) {
          return false;
        } else if (_source220.is_MultisetDisjoint) {
          return true;
        } else if (_source220.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3837___mcc_h2 = _source220.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3831_op);
      bool _3838_becomesRightCallsLeft;
      _3838_becomesRightCallsLeft = ((System.Func<DAST._IBinOp, bool>)((_source221) => {
        if (_source221.is_Eq) {
          bool _3839___mcc_h4 = _source221.dtor_referential;
          return false;
        } else if (_source221.is_Div) {
          return false;
        } else if (_source221.is_EuclidianDiv) {
          return false;
        } else if (_source221.is_Mod) {
          return false;
        } else if (_source221.is_EuclidianMod) {
          return false;
        } else if (_source221.is_Lt) {
          return false;
        } else if (_source221.is_LtChar) {
          return false;
        } else if (_source221.is_Plus) {
          return false;
        } else if (_source221.is_Minus) {
          return false;
        } else if (_source221.is_Times) {
          return false;
        } else if (_source221.is_BitwiseAnd) {
          return false;
        } else if (_source221.is_BitwiseOr) {
          return false;
        } else if (_source221.is_BitwiseXor) {
          return false;
        } else if (_source221.is_BitwiseShiftRight) {
          return false;
        } else if (_source221.is_BitwiseShiftLeft) {
          return false;
        } else if (_source221.is_And) {
          return false;
        } else if (_source221.is_Or) {
          return false;
        } else if (_source221.is_In) {
          return true;
        } else if (_source221.is_SeqProperPrefix) {
          return false;
        } else if (_source221.is_SeqPrefix) {
          return false;
        } else if (_source221.is_SetMerge) {
          return false;
        } else if (_source221.is_SetSubtraction) {
          return false;
        } else if (_source221.is_SetIntersection) {
          return false;
        } else if (_source221.is_Subset) {
          return false;
        } else if (_source221.is_ProperSubset) {
          return false;
        } else if (_source221.is_SetDisjoint) {
          return false;
        } else if (_source221.is_MapMerge) {
          return false;
        } else if (_source221.is_MapSubtraction) {
          return false;
        } else if (_source221.is_MultisetMerge) {
          return false;
        } else if (_source221.is_MultisetSubtraction) {
          return false;
        } else if (_source221.is_MultisetIntersection) {
          return false;
        } else if (_source221.is_Submultiset) {
          return false;
        } else if (_source221.is_ProperSubmultiset) {
          return false;
        } else if (_source221.is_MultisetDisjoint) {
          return false;
        } else if (_source221.is_Concat) {
          return false;
        } else {
          Dafny.ISequence<Dafny.Rune> _3840___mcc_h6 = _source221.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3831_op);
      bool _3841_becomesCallLeftRight;
      _3841_becomesCallLeftRight = ((System.Func<DAST._IBinOp, bool>)((_source222) => {
        if (_source222.is_Eq) {
          bool _3842___mcc_h8 = _source222.dtor_referential;
          if ((_3842___mcc_h8) == (true)) {
            return false;
          } else {
            return false;
          }
        } else if (_source222.is_Div) {
          return false;
        } else if (_source222.is_EuclidianDiv) {
          return false;
        } else if (_source222.is_Mod) {
          return false;
        } else if (_source222.is_EuclidianMod) {
          return false;
        } else if (_source222.is_Lt) {
          return false;
        } else if (_source222.is_LtChar) {
          return false;
        } else if (_source222.is_Plus) {
          return false;
        } else if (_source222.is_Minus) {
          return false;
        } else if (_source222.is_Times) {
          return false;
        } else if (_source222.is_BitwiseAnd) {
          return false;
        } else if (_source222.is_BitwiseOr) {
          return false;
        } else if (_source222.is_BitwiseXor) {
          return false;
        } else if (_source222.is_BitwiseShiftRight) {
          return false;
        } else if (_source222.is_BitwiseShiftLeft) {
          return false;
        } else if (_source222.is_And) {
          return false;
        } else if (_source222.is_Or) {
          return false;
        } else if (_source222.is_In) {
          return false;
        } else if (_source222.is_SeqProperPrefix) {
          return false;
        } else if (_source222.is_SeqPrefix) {
          return false;
        } else if (_source222.is_SetMerge) {
          return true;
        } else if (_source222.is_SetSubtraction) {
          return true;
        } else if (_source222.is_SetIntersection) {
          return true;
        } else if (_source222.is_Subset) {
          return false;
        } else if (_source222.is_ProperSubset) {
          return false;
        } else if (_source222.is_SetDisjoint) {
          return true;
        } else if (_source222.is_MapMerge) {
          return true;
        } else if (_source222.is_MapSubtraction) {
          return true;
        } else if (_source222.is_MultisetMerge) {
          return true;
        } else if (_source222.is_MultisetSubtraction) {
          return true;
        } else if (_source222.is_MultisetIntersection) {
          return true;
        } else if (_source222.is_Submultiset) {
          return false;
        } else if (_source222.is_ProperSubmultiset) {
          return false;
        } else if (_source222.is_MultisetDisjoint) {
          return true;
        } else if (_source222.is_Concat) {
          return true;
        } else {
          Dafny.ISequence<Dafny.Rune> _3843___mcc_h10 = _source222.dtor_Passthrough_i_a0;
          return false;
        }
      }))(_3831_op);
      DCOMP._IOwnership _3844_expectedLeftOwnership;
      _3844_expectedLeftOwnership = ((_3835_becomesLeftCallsRight) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : ((((_3838_becomesRightCallsLeft) || (_3841_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      DCOMP._IOwnership _3845_expectedRightOwnership;
      _3845_expectedRightOwnership = (((_3835_becomesLeftCallsRight) || (_3841_becomesCallLeftRight)) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (((_3838_becomesRightCallsLeft) ? (DCOMP.Ownership.create_OwnershipAutoBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()))));
      RAST._IExpr _3846_left;
      DCOMP._IOwnership _3847___v101;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3848_recIdentsL;
      RAST._IExpr _out286;
      DCOMP._IOwnership _out287;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out288;
      (this).GenExpr(_3832_lExpr, selfIdent, env, _3844_expectedLeftOwnership, out _out286, out _out287, out _out288);
      _3846_left = _out286;
      _3847___v101 = _out287;
      _3848_recIdentsL = _out288;
      RAST._IExpr _3849_right;
      DCOMP._IOwnership _3850___v102;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3851_recIdentsR;
      RAST._IExpr _out289;
      DCOMP._IOwnership _out290;
      Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out291;
      (this).GenExpr(_3833_rExpr, selfIdent, env, _3845_expectedRightOwnership, out _out289, out _out290, out _out291);
      _3849_right = _out289;
      _3850___v102 = _out290;
      _3851_recIdentsR = _out291;
      DAST._IBinOp _source223 = _3831_op;
      if (_source223.is_Eq) {
        bool _3852___mcc_h12 = _source223.dtor_referential;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source224 = _3831_op;
            if (_source224.is_Eq) {
              bool _3853___mcc_h16 = _source224.dtor_referential;
              bool _3854_referential = _3853___mcc_h16;
              {
                if (_3854_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source224.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source224.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3855___mcc_h17 = _source224.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3856_op = _3855___mcc_h17;
              {
                r = RAST.Expr.create_BinaryOp(_3856_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Div) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source225 = _3831_op;
            if (_source225.is_Eq) {
              bool _3857___mcc_h18 = _source225.dtor_referential;
              bool _3858_referential = _3857___mcc_h18;
              {
                if (_3858_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source225.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source225.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3859___mcc_h19 = _source225.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3860_op = _3859___mcc_h19;
              {
                r = RAST.Expr.create_BinaryOp(_3860_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_EuclidianDiv) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source226 = _3831_op;
            if (_source226.is_Eq) {
              bool _3861___mcc_h20 = _source226.dtor_referential;
              bool _3862_referential = _3861___mcc_h20;
              {
                if (_3862_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source226.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source226.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3863___mcc_h21 = _source226.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3864_op = _3863___mcc_h21;
              {
                r = RAST.Expr.create_BinaryOp(_3864_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Mod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source227 = _3831_op;
            if (_source227.is_Eq) {
              bool _3865___mcc_h22 = _source227.dtor_referential;
              bool _3866_referential = _3865___mcc_h22;
              {
                if (_3866_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source227.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source227.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3867___mcc_h23 = _source227.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3868_op = _3867___mcc_h23;
              {
                r = RAST.Expr.create_BinaryOp(_3868_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_EuclidianMod) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source228 = _3831_op;
            if (_source228.is_Eq) {
              bool _3869___mcc_h24 = _source228.dtor_referential;
              bool _3870_referential = _3869___mcc_h24;
              {
                if (_3870_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source228.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source228.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3871___mcc_h25 = _source228.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3872_op = _3871___mcc_h25;
              {
                r = RAST.Expr.create_BinaryOp(_3872_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Lt) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source229 = _3831_op;
            if (_source229.is_Eq) {
              bool _3873___mcc_h26 = _source229.dtor_referential;
              bool _3874_referential = _3873___mcc_h26;
              {
                if (_3874_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source229.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source229.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3875___mcc_h27 = _source229.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3876_op = _3875___mcc_h27;
              {
                r = RAST.Expr.create_BinaryOp(_3876_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_LtChar) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source230 = _3831_op;
            if (_source230.is_Eq) {
              bool _3877___mcc_h28 = _source230.dtor_referential;
              bool _3878_referential = _3877___mcc_h28;
              {
                if (_3878_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source230.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source230.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3879___mcc_h29 = _source230.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3880_op = _3879___mcc_h29;
              {
                r = RAST.Expr.create_BinaryOp(_3880_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Plus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source231 = _3831_op;
            if (_source231.is_Eq) {
              bool _3881___mcc_h30 = _source231.dtor_referential;
              bool _3882_referential = _3881___mcc_h30;
              {
                if (_3882_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source231.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source231.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3883___mcc_h31 = _source231.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3884_op = _3883___mcc_h31;
              {
                r = RAST.Expr.create_BinaryOp(_3884_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Minus) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source232 = _3831_op;
            if (_source232.is_Eq) {
              bool _3885___mcc_h32 = _source232.dtor_referential;
              bool _3886_referential = _3885___mcc_h32;
              {
                if (_3886_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source232.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source232.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3887___mcc_h33 = _source232.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3888_op = _3887___mcc_h33;
              {
                r = RAST.Expr.create_BinaryOp(_3888_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Times) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source233 = _3831_op;
            if (_source233.is_Eq) {
              bool _3889___mcc_h34 = _source233.dtor_referential;
              bool _3890_referential = _3889___mcc_h34;
              {
                if (_3890_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source233.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source233.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3891___mcc_h35 = _source233.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3892_op = _3891___mcc_h35;
              {
                r = RAST.Expr.create_BinaryOp(_3892_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_BitwiseAnd) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source234 = _3831_op;
            if (_source234.is_Eq) {
              bool _3893___mcc_h36 = _source234.dtor_referential;
              bool _3894_referential = _3893___mcc_h36;
              {
                if (_3894_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source234.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source234.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3895___mcc_h37 = _source234.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3896_op = _3895___mcc_h37;
              {
                r = RAST.Expr.create_BinaryOp(_3896_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_BitwiseOr) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source235 = _3831_op;
            if (_source235.is_Eq) {
              bool _3897___mcc_h38 = _source235.dtor_referential;
              bool _3898_referential = _3897___mcc_h38;
              {
                if (_3898_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source235.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source235.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3899___mcc_h39 = _source235.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3900_op = _3899___mcc_h39;
              {
                r = RAST.Expr.create_BinaryOp(_3900_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_BitwiseXor) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source236 = _3831_op;
            if (_source236.is_Eq) {
              bool _3901___mcc_h40 = _source236.dtor_referential;
              bool _3902_referential = _3901___mcc_h40;
              {
                if (_3902_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source236.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source236.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3903___mcc_h41 = _source236.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3904_op = _3903___mcc_h41;
              {
                r = RAST.Expr.create_BinaryOp(_3904_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_BitwiseShiftRight) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source237 = _3831_op;
            if (_source237.is_Eq) {
              bool _3905___mcc_h42 = _source237.dtor_referential;
              bool _3906_referential = _3905___mcc_h42;
              {
                if (_3906_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source237.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source237.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3907___mcc_h43 = _source237.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3908_op = _3907___mcc_h43;
              {
                r = RAST.Expr.create_BinaryOp(_3908_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_BitwiseShiftLeft) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source238 = _3831_op;
            if (_source238.is_Eq) {
              bool _3909___mcc_h44 = _source238.dtor_referential;
              bool _3910_referential = _3909___mcc_h44;
              {
                if (_3910_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source238.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source238.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3911___mcc_h45 = _source238.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3912_op = _3911___mcc_h45;
              {
                r = RAST.Expr.create_BinaryOp(_3912_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_And) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source239 = _3831_op;
            if (_source239.is_Eq) {
              bool _3913___mcc_h46 = _source239.dtor_referential;
              bool _3914_referential = _3913___mcc_h46;
              {
                if (_3914_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source239.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source239.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3915___mcc_h47 = _source239.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3916_op = _3915___mcc_h47;
              {
                r = RAST.Expr.create_BinaryOp(_3916_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_Or) {
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source240 = _3831_op;
            if (_source240.is_Eq) {
              bool _3917___mcc_h48 = _source240.dtor_referential;
              bool _3918_referential = _3917___mcc_h48;
              {
                if (_3918_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source240.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source240.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3919___mcc_h49 = _source240.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3920_op = _3919___mcc_h49;
              {
                r = RAST.Expr.create_BinaryOp(_3920_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      } else if (_source223.is_In) {
        {
          r = ((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("contains"))).Apply1(_3846_left);
        }
      } else if (_source223.is_SeqProperPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3846_left, _3849_right, _3834_format);
      } else if (_source223.is_SeqPrefix) {
        r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3846_left, _3849_right, _3834_format);
      } else if (_source223.is_SetMerge) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3849_right);
        }
      } else if (_source223.is_SetSubtraction) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3849_right);
        }
      } else if (_source223.is_SetIntersection) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3849_right);
        }
      } else if (_source223.is_Subset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3846_left, _3849_right, _3834_format);
        }
      } else if (_source223.is_ProperSubset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3846_left, _3849_right, _3834_format);
        }
      } else if (_source223.is_SetDisjoint) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3849_right);
        }
      } else if (_source223.is_MapMerge) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3849_right);
        }
      } else if (_source223.is_MapSubtraction) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3849_right);
        }
      } else if (_source223.is_MultisetMerge) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("merge"))).Apply1(_3849_right);
        }
      } else if (_source223.is_MultisetSubtraction) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("subtract"))).Apply1(_3849_right);
        }
      } else if (_source223.is_MultisetIntersection) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("intersect"))).Apply1(_3849_right);
        }
      } else if (_source223.is_Submultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<="), _3846_left, _3849_right, _3834_format);
        }
      } else if (_source223.is_ProperSubmultiset) {
        {
          r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), _3846_left, _3849_right, _3834_format);
        }
      } else if (_source223.is_MultisetDisjoint) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("disjoint"))).Apply1(_3849_right);
        }
      } else if (_source223.is_Concat) {
        {
          r = ((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("concat"))).Apply1(_3849_right);
        }
      } else {
        Dafny.ISequence<Dafny.Rune> _3921___mcc_h14 = _source223.dtor_Passthrough_i_a0;
        {
          if ((DCOMP.COMP.OpTable).Contains(_3831_op)) {
            r = RAST.Expr.create_BinaryOp(Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.Select(DCOMP.COMP.OpTable,_3831_op), _3846_left, _3849_right, _3834_format);
          } else {
            DAST._IBinOp _source241 = _3831_op;
            if (_source241.is_Eq) {
              bool _3922___mcc_h50 = _source241.dtor_referential;
              bool _3923_referential = _3922___mcc_h50;
              {
                if (_3923_referential) {
                  if (((this).ObjectType).is_RawPointers) {
                    (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Cannot compare raw pointers yet - need to wrap them with a structure to ensure they are compared properly"));
                    r = RAST.Expr.create_RawExpr((this.error).dtor_value);
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                } else {
                  if (((_3833_rExpr).is_SeqValue) && ((new BigInteger(((_3833_rExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), ((((_3846_left).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else if (((_3832_lExpr).is_SeqValue) && ((new BigInteger(((_3832_lExpr).dtor_elements).Count)).Sign == 0)) {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), RAST.Expr.create_LiteralInt(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), ((((_3849_right).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("to_array"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), DAST.Format.BinaryOpFormat.create_NoFormat());
                  } else {
                    r = RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=="), _3846_left, _3849_right, DAST.Format.BinaryOpFormat.create_NoFormat());
                  }
                }
              }
            } else if (_source241.is_EuclidianDiv) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_division"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else if (_source241.is_EuclidianMod) {
              {
                r = (RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::euclidian_modulo"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3846_left, _3849_right));
              }
            } else {
              Dafny.ISequence<Dafny.Rune> _3924___mcc_h51 = _source241.dtor_Passthrough_i_a0;
              Dafny.ISequence<Dafny.Rune> _3925_op = _3924___mcc_h51;
              {
                r = RAST.Expr.create_BinaryOp(_3925_op, _3846_left, _3849_right, _3834_format);
              }
            }
          }
        }
      }
      RAST._IExpr _out292;
      DCOMP._IOwnership _out293;
      (this).FromOwned(r, expectedOwnership, out _out292, out _out293);
      r = _out292;
      resultingOwnership = _out293;
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_3848_recIdentsL, _3851_recIdentsR);
      return ;
    }
    public void GenExprConvertToNewtype(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs54 = e;
      DAST._IExpression _3926_expr = _let_tmp_rhs54.dtor_value;
      DAST._IType _3927_fromTpe = _let_tmp_rhs54.dtor_from;
      DAST._IType _3928_toTpe = _let_tmp_rhs54.dtor_typ;
      DAST._IType _let_tmp_rhs55 = _3928_toTpe;
      DAST._IResolvedType _let_tmp_rhs56 = _let_tmp_rhs55.dtor_resolved;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3929_path = _let_tmp_rhs56.dtor_path;
      Dafny.ISequence<DAST._IType> _3930_typeArgs = _let_tmp_rhs56.dtor_typeArgs;
      DAST._IResolvedTypeBase _let_tmp_rhs57 = _let_tmp_rhs56.dtor_kind;
      DAST._IType _3931_b = _let_tmp_rhs57.dtor_baseType;
      DAST._INewtypeRange _3932_range = _let_tmp_rhs57.dtor_range;
      bool _3933_erase = _let_tmp_rhs57.dtor_erase;
      Dafny.ISequence<DAST._IAttribute> _3934___v104 = _let_tmp_rhs56.dtor_attributes;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3935___v105 = _let_tmp_rhs56.dtor_properMethods;
      Dafny.ISequence<DAST._IType> _3936___v106 = _let_tmp_rhs56.dtor_extendedTypes;
      Std.Wrappers._IOption<RAST._IType> _3937_nativeToType;
      _3937_nativeToType = DCOMP.COMP.NewtypeToRustType(_3931_b, _3932_range);
      if (object.Equals(_3927_fromTpe, _3931_b)) {
        RAST._IExpr _3938_recursiveGen;
        DCOMP._IOwnership _3939_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3940_recIdents;
        RAST._IExpr _out294;
        DCOMP._IOwnership _out295;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out296;
        (this).GenExpr(_3926_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out294, out _out295, out _out296);
        _3938_recursiveGen = _out294;
        _3939_recOwned = _out295;
        _3940_recIdents = _out296;
        readIdents = _3940_recIdents;
        Std.Wrappers._IOption<RAST._IType> _source242 = _3937_nativeToType;
        if (_source242.is_None) {
          if (_3933_erase) {
            r = _3938_recursiveGen;
          } else {
            RAST._IType _3941_rhsType;
            RAST._IType _out297;
            _out297 = (this).GenType(_3928_toTpe, DCOMP.GenTypeContext.InBinding());
            _3941_rhsType = _out297;
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat((_3941_rhsType)._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), (_3938_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
          }
          RAST._IExpr _out298;
          DCOMP._IOwnership _out299;
          (this).FromOwnership(r, _3939_recOwned, expectedOwnership, out _out298, out _out299);
          r = _out298;
          resultingOwnership = _out299;
        } else {
          RAST._IType _3942___mcc_h0 = _source242.dtor_value;
          RAST._IType _3943_v = _3942___mcc_h0;
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("truncate!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3938_recursiveGen, RAST.Expr.create_ExprFromType(_3943_v)));
          RAST._IExpr _out300;
          DCOMP._IOwnership _out301;
          (this).FromOwned(r, expectedOwnership, out _out300, out _out301);
          r = _out300;
          resultingOwnership = _out301;
        }
      } else {
        if ((_3937_nativeToType).is_Some) {
          DAST._IType _source243 = _3927_fromTpe;
          if (_source243.is_UserDefined) {
            DAST._IResolvedType _3944___mcc_h1 = _source243.dtor_resolved;
            DAST._IResolvedType _source244 = _3944___mcc_h1;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3945___mcc_h3 = _source244.dtor_path;
            Dafny.ISequence<DAST._IType> _3946___mcc_h4 = _source244.dtor_typeArgs;
            DAST._IResolvedTypeBase _3947___mcc_h5 = _source244.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _3948___mcc_h6 = _source244.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3949___mcc_h7 = _source244.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _3950___mcc_h8 = _source244.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source245 = _3947___mcc_h5;
            if (_source245.is_Class) {
            } else if (_source245.is_Datatype) {
            } else if (_source245.is_Trait) {
            } else {
              DAST._IType _3951___mcc_h15 = _source245.dtor_baseType;
              DAST._INewtypeRange _3952___mcc_h16 = _source245.dtor_range;
              bool _3953___mcc_h17 = _source245.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _3954_attributes0 = _3948___mcc_h6;
              bool _3955_erase0 = _3953___mcc_h17;
              DAST._INewtypeRange _3956_range0 = _3952___mcc_h16;
              DAST._IType _3957_b0 = _3951___mcc_h15;
              {
                Std.Wrappers._IOption<RAST._IType> _3958_nativeFromType;
                _3958_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3957_b0, _3956_range0);
                if ((_3958_nativeFromType).is_Some) {
                  RAST._IExpr _3959_recursiveGen;
                  DCOMP._IOwnership _3960_recOwned;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3961_recIdents;
                  RAST._IExpr _out302;
                  DCOMP._IOwnership _out303;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out304;
                  (this).GenExpr(_3926_expr, selfIdent, env, expectedOwnership, out _out302, out _out303, out _out304);
                  _3959_recursiveGen = _out302;
                  _3960_recOwned = _out303;
                  _3961_recIdents = _out304;
                  RAST._IExpr _out305;
                  DCOMP._IOwnership _out306;
                  (this).FromOwnership(RAST.Expr.create_TypeAscription(_3959_recursiveGen, (_3937_nativeToType).dtor_value), _3960_recOwned, expectedOwnership, out _out305, out _out306);
                  r = _out305;
                  resultingOwnership = _out306;
                  readIdents = _3961_recIdents;
                  return ;
                }
              }
            }
          } else if (_source243.is_Tuple) {
            Dafny.ISequence<DAST._IType> _3962___mcc_h21 = _source243.dtor_Tuple_i_a0;
          } else if (_source243.is_Array) {
            DAST._IType _3963___mcc_h23 = _source243.dtor_element;
            BigInteger _3964___mcc_h24 = _source243.dtor_dims;
          } else if (_source243.is_Seq) {
            DAST._IType _3965___mcc_h27 = _source243.dtor_element;
          } else if (_source243.is_Set) {
            DAST._IType _3966___mcc_h29 = _source243.dtor_element;
          } else if (_source243.is_Multiset) {
            DAST._IType _3967___mcc_h31 = _source243.dtor_element;
          } else if (_source243.is_Map) {
            DAST._IType _3968___mcc_h33 = _source243.dtor_key;
            DAST._IType _3969___mcc_h34 = _source243.dtor_value;
          } else if (_source243.is_SetBuilder) {
            DAST._IType _3970___mcc_h37 = _source243.dtor_element;
          } else if (_source243.is_MapBuilder) {
            DAST._IType _3971___mcc_h39 = _source243.dtor_key;
            DAST._IType _3972___mcc_h40 = _source243.dtor_value;
          } else if (_source243.is_Arrow) {
            Dafny.ISequence<DAST._IType> _3973___mcc_h43 = _source243.dtor_args;
            DAST._IType _3974___mcc_h44 = _source243.dtor_result;
          } else if (_source243.is_Primitive) {
            DAST._IPrimitive _3975___mcc_h47 = _source243.dtor_Primitive_i_a0;
          } else if (_source243.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _3976___mcc_h49 = _source243.dtor_Passthrough_i_a0;
          } else if (_source243.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _3977___mcc_h51 = _source243.dtor_TypeArg_i_a0;
          } else {
          }
          if (object.Equals(_3927_fromTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
            RAST._IExpr _3978_recursiveGen;
            DCOMP._IOwnership _3979_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3980_recIdents;
            RAST._IExpr _out307;
            DCOMP._IOwnership _out308;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out309;
            (this).GenExpr(_3926_expr, selfIdent, env, expectedOwnership, out _out307, out _out308, out _out309);
            _3978_recursiveGen = _out307;
            _3979_recOwned = _out308;
            _3980_recIdents = _out309;
            RAST._IExpr _out310;
            DCOMP._IOwnership _out311;
            (this).FromOwnership(RAST.Expr.create_TypeAscription((_3978_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")), (_3937_nativeToType).dtor_value), _3979_recOwned, expectedOwnership, out _out310, out _out311);
            r = _out310;
            resultingOwnership = _out311;
            readIdents = _3980_recIdents;
            return ;
          }
        }
        RAST._IExpr _out312;
        DCOMP._IOwnership _out313;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out314;
        (this).GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3926_expr, _3927_fromTpe, _3931_b), _3931_b, _3928_toTpe), selfIdent, env, expectedOwnership, out _out312, out _out313, out _out314);
        r = _out312;
        resultingOwnership = _out313;
        readIdents = _out314;
      }
    }
    public void GenExprConvertFromNewtype(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs58 = e;
      DAST._IExpression _3981_expr = _let_tmp_rhs58.dtor_value;
      DAST._IType _3982_fromTpe = _let_tmp_rhs58.dtor_from;
      DAST._IType _3983_toTpe = _let_tmp_rhs58.dtor_typ;
      DAST._IType _let_tmp_rhs59 = _3982_fromTpe;
      DAST._IResolvedType _let_tmp_rhs60 = _let_tmp_rhs59.dtor_resolved;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3984___v112 = _let_tmp_rhs60.dtor_path;
      Dafny.ISequence<DAST._IType> _3985___v113 = _let_tmp_rhs60.dtor_typeArgs;
      DAST._IResolvedTypeBase _let_tmp_rhs61 = _let_tmp_rhs60.dtor_kind;
      DAST._IType _3986_b = _let_tmp_rhs61.dtor_baseType;
      DAST._INewtypeRange _3987_range = _let_tmp_rhs61.dtor_range;
      bool _3988_erase = _let_tmp_rhs61.dtor_erase;
      Dafny.ISequence<DAST._IAttribute> _3989_attributes = _let_tmp_rhs60.dtor_attributes;
      Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _3990___v114 = _let_tmp_rhs60.dtor_properMethods;
      Dafny.ISequence<DAST._IType> _3991___v115 = _let_tmp_rhs60.dtor_extendedTypes;
      Std.Wrappers._IOption<RAST._IType> _3992_nativeFromType;
      _3992_nativeFromType = DCOMP.COMP.NewtypeToRustType(_3986_b, _3987_range);
      if (object.Equals(_3986_b, _3983_toTpe)) {
        RAST._IExpr _3993_recursiveGen;
        DCOMP._IOwnership _3994_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _3995_recIdents;
        RAST._IExpr _out315;
        DCOMP._IOwnership _out316;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out317;
        (this).GenExpr(_3981_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out315, out _out316, out _out317);
        _3993_recursiveGen = _out315;
        _3994_recOwned = _out316;
        _3995_recIdents = _out317;
        readIdents = _3995_recIdents;
        Std.Wrappers._IOption<RAST._IType> _source246 = _3992_nativeFromType;
        if (_source246.is_None) {
          if (_3988_erase) {
            r = _3993_recursiveGen;
          } else {
            r = (_3993_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0"));
          }
          RAST._IExpr _out318;
          DCOMP._IOwnership _out319;
          (this).FromOwnership(r, _3994_recOwned, expectedOwnership, out _out318, out _out319);
          r = _out318;
          resultingOwnership = _out319;
        } else {
          RAST._IType _3996___mcc_h0 = _source246.dtor_value;
          RAST._IType _3997_v = _3996___mcc_h0;
          RAST._IType _3998_toTpeRust;
          RAST._IType _out320;
          _out320 = (this).GenType(_3983_toTpe, DCOMP.GenTypeContext.@default());
          _3998_toTpeRust = _out320;
          r = (((RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Into"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_3998_toTpeRust))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("into"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_3993_recursiveGen));
          RAST._IExpr _out321;
          DCOMP._IOwnership _out322;
          (this).FromOwned(r, expectedOwnership, out _out321, out _out322);
          r = _out321;
          resultingOwnership = _out322;
        }
      } else {
        if ((_3992_nativeFromType).is_Some) {
          if (object.Equals(_3983_toTpe, DAST.Type.create_Primitive(DAST.Primitive.create_Char()))) {
            RAST._IExpr _3999_recursiveGen;
            DCOMP._IOwnership _4000_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4001_recIdents;
            RAST._IExpr _out323;
            DCOMP._IOwnership _out324;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out325;
            (this).GenExpr(_3981_expr, selfIdent, env, expectedOwnership, out _out323, out _out324, out _out325);
            _3999_recursiveGen = _out323;
            _4000_recOwned = _out324;
            _4001_recIdents = _out325;
            RAST._IExpr _out326;
            DCOMP._IOwnership _out327;
            (this).FromOwnership(((RAST.__default.dafny__runtime).MSel((this).DafnyChar)).Apply1(RAST.Expr.create_TypeAscription(_3999_recursiveGen, (this).DafnyCharUnderlying)), _4000_recOwned, expectedOwnership, out _out326, out _out327);
            r = _out326;
            resultingOwnership = _out327;
            readIdents = _4001_recIdents;
            return ;
          }
        }
        RAST._IExpr _out328;
        DCOMP._IOwnership _out329;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out330;
        (this).GenExpr(DAST.Expression.create_Convert(DAST.Expression.create_Convert(_3981_expr, _3982_fromTpe, _3986_b), _3986_b, _3983_toTpe), selfIdent, env, expectedOwnership, out _out328, out _out329, out _out330);
        r = _out328;
        resultingOwnership = _out329;
        readIdents = _out330;
      }
    }
    public void GenExprConvertNotImplemented(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs62 = e;
      DAST._IExpression _4002_expr = _let_tmp_rhs62.dtor_value;
      DAST._IType _4003_fromTpe = _let_tmp_rhs62.dtor_from;
      DAST._IType _4004_toTpe = _let_tmp_rhs62.dtor_typ;
      RAST._IType _4005_fromTpeGen;
      RAST._IType _out331;
      _out331 = (this).GenType(_4003_fromTpe, DCOMP.GenTypeContext.InBinding());
      _4005_fromTpeGen = _out331;
      RAST._IType _4006_toTpeGen;
      RAST._IType _out332;
      _out332 = (this).GenType(_4004_toTpe, DCOMP.GenTypeContext.InBinding());
      _4006_toTpeGen = _out332;
      if (RAST.__default.IsUpcastConversion(_4005_fromTpeGen, _4006_toTpeGen)) {
        RAST._IExpr _4007_recursiveGen;
        DCOMP._IOwnership _4008_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4009_recIdents;
        RAST._IExpr _out333;
        DCOMP._IOwnership _out334;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out335;
        (this).GenExpr(_4002_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out333, out _out334, out _out335);
        _4007_recursiveGen = _out333;
        _4008_recOwned = _out334;
        _4009_recIdents = _out335;
        readIdents = _4009_recIdents;
        r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("UpcastTo"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4006_toTpeGen))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("upcast_to"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4007_recursiveGen));
        RAST._IExpr _out336;
        DCOMP._IOwnership _out337;
        (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipOwned(), expectedOwnership, out _out336, out _out337);
        r = _out336;
        resultingOwnership = _out337;
      } else {
        RAST._IExpr _4010_recursiveGen;
        DCOMP._IOwnership _4011_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4012_recIdents;
        RAST._IExpr _out338;
        DCOMP._IOwnership _out339;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out340;
        (this).GenExpr(_4002_expr, selfIdent, env, expectedOwnership, out _out338, out _out339, out _out340);
        _4010_recursiveGen = _out338;
        _4011_recOwned = _out339;
        _4012_recIdents = _out340;
        readIdents = _4012_recIdents;
        Dafny.ISequence<Dafny.Rune> _4013_msg;
        _4013_msg = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/* <i>Coercion from "), (_4005_fromTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" to ")), (_4006_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("</i> not yet implemented */"));
        (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_4013_msg);
        r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat((_4010_recursiveGen)._ToString(DCOMP.__default.IND), _4013_msg));
        RAST._IExpr _out341;
        DCOMP._IOwnership _out342;
        (this).FromOwnership(r, _4011_recOwned, expectedOwnership, out _out341, out _out342);
        r = _out341;
        resultingOwnership = _out342;
      }
    }
    public void GenExprConvert(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _let_tmp_rhs63 = e;
      DAST._IExpression _4014_expr = _let_tmp_rhs63.dtor_value;
      DAST._IType _4015_fromTpe = _let_tmp_rhs63.dtor_from;
      DAST._IType _4016_toTpe = _let_tmp_rhs63.dtor_typ;
      if (object.Equals(_4015_fromTpe, _4016_toTpe)) {
        RAST._IExpr _4017_recursiveGen;
        DCOMP._IOwnership _4018_recOwned;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4019_recIdents;
        RAST._IExpr _out343;
        DCOMP._IOwnership _out344;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out345;
        (this).GenExpr(_4014_expr, selfIdent, env, expectedOwnership, out _out343, out _out344, out _out345);
        _4017_recursiveGen = _out343;
        _4018_recOwned = _out344;
        _4019_recIdents = _out345;
        r = _4017_recursiveGen;
        RAST._IExpr _out346;
        DCOMP._IOwnership _out347;
        (this).FromOwnership(r, _4018_recOwned, expectedOwnership, out _out346, out _out347);
        r = _out346;
        resultingOwnership = _out347;
        readIdents = _4019_recIdents;
      } else {
        _System._ITuple2<DAST._IType, DAST._IType> _source247 = _System.Tuple2<DAST._IType, DAST._IType>.create(_4015_fromTpe, _4016_toTpe);
        DAST._IType _4020___mcc_h0 = _source247.dtor__0;
        DAST._IType _4021___mcc_h1 = _source247.dtor__1;
        DAST._IType _source248 = _4020___mcc_h0;
        if (_source248.is_UserDefined) {
          DAST._IResolvedType _4022___mcc_h4 = _source248.dtor_resolved;
          DAST._IResolvedType _source249 = _4022___mcc_h4;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4023___mcc_h7 = _source249.dtor_path;
          Dafny.ISequence<DAST._IType> _4024___mcc_h8 = _source249.dtor_typeArgs;
          DAST._IResolvedTypeBase _4025___mcc_h9 = _source249.dtor_kind;
          Dafny.ISequence<DAST._IAttribute> _4026___mcc_h10 = _source249.dtor_attributes;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4027___mcc_h11 = _source249.dtor_properMethods;
          Dafny.ISequence<DAST._IType> _4028___mcc_h12 = _source249.dtor_extendedTypes;
          DAST._IResolvedTypeBase _source250 = _4025___mcc_h9;
          if (_source250.is_Class) {
            DAST._IType _source251 = _4021___mcc_h1;
            if (_source251.is_UserDefined) {
              DAST._IResolvedType _4029___mcc_h25 = _source251.dtor_resolved;
              DAST._IResolvedType _source252 = _4029___mcc_h25;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4030___mcc_h27 = _source252.dtor_path;
              Dafny.ISequence<DAST._IType> _4031___mcc_h28 = _source252.dtor_typeArgs;
              DAST._IResolvedTypeBase _4032___mcc_h29 = _source252.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4033___mcc_h30 = _source252.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4034___mcc_h31 = _source252.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4035___mcc_h32 = _source252.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source253 = _4032___mcc_h29;
              if (_source253.is_Class) {
                {
                  RAST._IExpr _out348;
                  DCOMP._IOwnership _out349;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out350;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out348, out _out349, out _out350);
                  r = _out348;
                  resultingOwnership = _out349;
                  readIdents = _out350;
                }
              } else if (_source253.is_Datatype) {
                {
                  RAST._IExpr _out351;
                  DCOMP._IOwnership _out352;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out353;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out351, out _out352, out _out353);
                  r = _out351;
                  resultingOwnership = _out352;
                  readIdents = _out353;
                }
              } else if (_source253.is_Trait) {
                {
                  RAST._IExpr _out354;
                  DCOMP._IOwnership _out355;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out356;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out354, out _out355, out _out356);
                  r = _out354;
                  resultingOwnership = _out355;
                  readIdents = _out356;
                }
              } else {
                DAST._IType _4036___mcc_h39 = _source253.dtor_baseType;
                DAST._INewtypeRange _4037___mcc_h40 = _source253.dtor_range;
                bool _4038___mcc_h41 = _source253.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4039_attributes = _4033___mcc_h30;
                bool _4040_erase = _4038___mcc_h41;
                DAST._INewtypeRange _4041_range = _4037___mcc_h40;
                DAST._IType _4042_b = _4036___mcc_h39;
                {
                  RAST._IExpr _out357;
                  DCOMP._IOwnership _out358;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out359;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out357, out _out358, out _out359);
                  r = _out357;
                  resultingOwnership = _out358;
                  readIdents = _out359;
                }
              }
            } else if (_source251.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4043___mcc_h45 = _source251.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out360;
                DCOMP._IOwnership _out361;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out362;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out360, out _out361, out _out362);
                r = _out360;
                resultingOwnership = _out361;
                readIdents = _out362;
              }
            } else if (_source251.is_Array) {
              DAST._IType _4044___mcc_h47 = _source251.dtor_element;
              BigInteger _4045___mcc_h48 = _source251.dtor_dims;
              {
                RAST._IExpr _out363;
                DCOMP._IOwnership _out364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out365;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out363, out _out364, out _out365);
                r = _out363;
                resultingOwnership = _out364;
                readIdents = _out365;
              }
            } else if (_source251.is_Seq) {
              DAST._IType _4046___mcc_h51 = _source251.dtor_element;
              {
                RAST._IExpr _out366;
                DCOMP._IOwnership _out367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out368;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out366, out _out367, out _out368);
                r = _out366;
                resultingOwnership = _out367;
                readIdents = _out368;
              }
            } else if (_source251.is_Set) {
              DAST._IType _4047___mcc_h53 = _source251.dtor_element;
              {
                RAST._IExpr _out369;
                DCOMP._IOwnership _out370;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out371;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out369, out _out370, out _out371);
                r = _out369;
                resultingOwnership = _out370;
                readIdents = _out371;
              }
            } else if (_source251.is_Multiset) {
              DAST._IType _4048___mcc_h55 = _source251.dtor_element;
              {
                RAST._IExpr _out372;
                DCOMP._IOwnership _out373;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out374;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out372, out _out373, out _out374);
                r = _out372;
                resultingOwnership = _out373;
                readIdents = _out374;
              }
            } else if (_source251.is_Map) {
              DAST._IType _4049___mcc_h57 = _source251.dtor_key;
              DAST._IType _4050___mcc_h58 = _source251.dtor_value;
              {
                RAST._IExpr _out375;
                DCOMP._IOwnership _out376;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out377;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out375, out _out376, out _out377);
                r = _out375;
                resultingOwnership = _out376;
                readIdents = _out377;
              }
            } else if (_source251.is_SetBuilder) {
              DAST._IType _4051___mcc_h61 = _source251.dtor_element;
              {
                RAST._IExpr _out378;
                DCOMP._IOwnership _out379;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out380;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out378, out _out379, out _out380);
                r = _out378;
                resultingOwnership = _out379;
                readIdents = _out380;
              }
            } else if (_source251.is_MapBuilder) {
              DAST._IType _4052___mcc_h63 = _source251.dtor_key;
              DAST._IType _4053___mcc_h64 = _source251.dtor_value;
              {
                RAST._IExpr _out381;
                DCOMP._IOwnership _out382;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out383;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out381, out _out382, out _out383);
                r = _out381;
                resultingOwnership = _out382;
                readIdents = _out383;
              }
            } else if (_source251.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4054___mcc_h67 = _source251.dtor_args;
              DAST._IType _4055___mcc_h68 = _source251.dtor_result;
              {
                RAST._IExpr _out384;
                DCOMP._IOwnership _out385;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out386;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out384, out _out385, out _out386);
                r = _out384;
                resultingOwnership = _out385;
                readIdents = _out386;
              }
            } else if (_source251.is_Primitive) {
              DAST._IPrimitive _4056___mcc_h71 = _source251.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out387;
                DCOMP._IOwnership _out388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out389;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out387, out _out388, out _out389);
                r = _out387;
                resultingOwnership = _out388;
                readIdents = _out389;
              }
            } else if (_source251.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4057___mcc_h73 = _source251.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out390;
                DCOMP._IOwnership _out391;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out392;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out390, out _out391, out _out392);
                r = _out390;
                resultingOwnership = _out391;
                readIdents = _out392;
              }
            } else if (_source251.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4058___mcc_h75 = _source251.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out393;
                DCOMP._IOwnership _out394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out395;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out393, out _out394, out _out395);
                r = _out393;
                resultingOwnership = _out394;
                readIdents = _out395;
              }
            } else {
              {
                RAST._IExpr _out396;
                DCOMP._IOwnership _out397;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out398;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out396, out _out397, out _out398);
                r = _out396;
                resultingOwnership = _out397;
                readIdents = _out398;
              }
            }
          } else if (_source250.is_Datatype) {
            DAST._IType _source254 = _4021___mcc_h1;
            if (_source254.is_UserDefined) {
              DAST._IResolvedType _4059___mcc_h77 = _source254.dtor_resolved;
              DAST._IResolvedType _source255 = _4059___mcc_h77;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4060___mcc_h79 = _source255.dtor_path;
              Dafny.ISequence<DAST._IType> _4061___mcc_h80 = _source255.dtor_typeArgs;
              DAST._IResolvedTypeBase _4062___mcc_h81 = _source255.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4063___mcc_h82 = _source255.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4064___mcc_h83 = _source255.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4065___mcc_h84 = _source255.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source256 = _4062___mcc_h81;
              if (_source256.is_Class) {
                {
                  RAST._IExpr _out399;
                  DCOMP._IOwnership _out400;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out401;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out399, out _out400, out _out401);
                  r = _out399;
                  resultingOwnership = _out400;
                  readIdents = _out401;
                }
              } else if (_source256.is_Datatype) {
                {
                  RAST._IExpr _out402;
                  DCOMP._IOwnership _out403;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out404;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out402, out _out403, out _out404);
                  r = _out402;
                  resultingOwnership = _out403;
                  readIdents = _out404;
                }
              } else if (_source256.is_Trait) {
                {
                  RAST._IExpr _out405;
                  DCOMP._IOwnership _out406;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out407;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out405, out _out406, out _out407);
                  r = _out405;
                  resultingOwnership = _out406;
                  readIdents = _out407;
                }
              } else {
                DAST._IType _4066___mcc_h91 = _source256.dtor_baseType;
                DAST._INewtypeRange _4067___mcc_h92 = _source256.dtor_range;
                bool _4068___mcc_h93 = _source256.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4069_attributes = _4063___mcc_h82;
                bool _4070_erase = _4068___mcc_h93;
                DAST._INewtypeRange _4071_range = _4067___mcc_h92;
                DAST._IType _4072_b = _4066___mcc_h91;
                {
                  RAST._IExpr _out408;
                  DCOMP._IOwnership _out409;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out410;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out408, out _out409, out _out410);
                  r = _out408;
                  resultingOwnership = _out409;
                  readIdents = _out410;
                }
              }
            } else if (_source254.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4073___mcc_h97 = _source254.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out411;
                DCOMP._IOwnership _out412;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out413;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out411, out _out412, out _out413);
                r = _out411;
                resultingOwnership = _out412;
                readIdents = _out413;
              }
            } else if (_source254.is_Array) {
              DAST._IType _4074___mcc_h99 = _source254.dtor_element;
              BigInteger _4075___mcc_h100 = _source254.dtor_dims;
              {
                RAST._IExpr _out414;
                DCOMP._IOwnership _out415;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out416;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out414, out _out415, out _out416);
                r = _out414;
                resultingOwnership = _out415;
                readIdents = _out416;
              }
            } else if (_source254.is_Seq) {
              DAST._IType _4076___mcc_h103 = _source254.dtor_element;
              {
                RAST._IExpr _out417;
                DCOMP._IOwnership _out418;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out419;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out417, out _out418, out _out419);
                r = _out417;
                resultingOwnership = _out418;
                readIdents = _out419;
              }
            } else if (_source254.is_Set) {
              DAST._IType _4077___mcc_h105 = _source254.dtor_element;
              {
                RAST._IExpr _out420;
                DCOMP._IOwnership _out421;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out422;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out420, out _out421, out _out422);
                r = _out420;
                resultingOwnership = _out421;
                readIdents = _out422;
              }
            } else if (_source254.is_Multiset) {
              DAST._IType _4078___mcc_h107 = _source254.dtor_element;
              {
                RAST._IExpr _out423;
                DCOMP._IOwnership _out424;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out425;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out423, out _out424, out _out425);
                r = _out423;
                resultingOwnership = _out424;
                readIdents = _out425;
              }
            } else if (_source254.is_Map) {
              DAST._IType _4079___mcc_h109 = _source254.dtor_key;
              DAST._IType _4080___mcc_h110 = _source254.dtor_value;
              {
                RAST._IExpr _out426;
                DCOMP._IOwnership _out427;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out428;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out426, out _out427, out _out428);
                r = _out426;
                resultingOwnership = _out427;
                readIdents = _out428;
              }
            } else if (_source254.is_SetBuilder) {
              DAST._IType _4081___mcc_h113 = _source254.dtor_element;
              {
                RAST._IExpr _out429;
                DCOMP._IOwnership _out430;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out431;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out429, out _out430, out _out431);
                r = _out429;
                resultingOwnership = _out430;
                readIdents = _out431;
              }
            } else if (_source254.is_MapBuilder) {
              DAST._IType _4082___mcc_h115 = _source254.dtor_key;
              DAST._IType _4083___mcc_h116 = _source254.dtor_value;
              {
                RAST._IExpr _out432;
                DCOMP._IOwnership _out433;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out434;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out432, out _out433, out _out434);
                r = _out432;
                resultingOwnership = _out433;
                readIdents = _out434;
              }
            } else if (_source254.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4084___mcc_h119 = _source254.dtor_args;
              DAST._IType _4085___mcc_h120 = _source254.dtor_result;
              {
                RAST._IExpr _out435;
                DCOMP._IOwnership _out436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out437;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out435, out _out436, out _out437);
                r = _out435;
                resultingOwnership = _out436;
                readIdents = _out437;
              }
            } else if (_source254.is_Primitive) {
              DAST._IPrimitive _4086___mcc_h123 = _source254.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out438;
                DCOMP._IOwnership _out439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out440;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out438, out _out439, out _out440);
                r = _out438;
                resultingOwnership = _out439;
                readIdents = _out440;
              }
            } else if (_source254.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4087___mcc_h125 = _source254.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out441;
                DCOMP._IOwnership _out442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out443;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out441, out _out442, out _out443);
                r = _out441;
                resultingOwnership = _out442;
                readIdents = _out443;
              }
            } else if (_source254.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4088___mcc_h127 = _source254.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out444;
                DCOMP._IOwnership _out445;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out446;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out444, out _out445, out _out446);
                r = _out444;
                resultingOwnership = _out445;
                readIdents = _out446;
              }
            } else {
              {
                RAST._IExpr _out447;
                DCOMP._IOwnership _out448;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out449;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out447, out _out448, out _out449);
                r = _out447;
                resultingOwnership = _out448;
                readIdents = _out449;
              }
            }
          } else if (_source250.is_Trait) {
            DAST._IType _source257 = _4021___mcc_h1;
            if (_source257.is_UserDefined) {
              DAST._IResolvedType _4089___mcc_h129 = _source257.dtor_resolved;
              DAST._IResolvedType _source258 = _4089___mcc_h129;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4090___mcc_h131 = _source258.dtor_path;
              Dafny.ISequence<DAST._IType> _4091___mcc_h132 = _source258.dtor_typeArgs;
              DAST._IResolvedTypeBase _4092___mcc_h133 = _source258.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4093___mcc_h134 = _source258.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4094___mcc_h135 = _source258.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4095___mcc_h136 = _source258.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source259 = _4092___mcc_h133;
              if (_source259.is_Class) {
                {
                  RAST._IExpr _out450;
                  DCOMP._IOwnership _out451;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out452;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out450, out _out451, out _out452);
                  r = _out450;
                  resultingOwnership = _out451;
                  readIdents = _out452;
                }
              } else if (_source259.is_Datatype) {
                {
                  RAST._IExpr _out453;
                  DCOMP._IOwnership _out454;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out455;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out453, out _out454, out _out455);
                  r = _out453;
                  resultingOwnership = _out454;
                  readIdents = _out455;
                }
              } else if (_source259.is_Trait) {
                {
                  RAST._IExpr _out456;
                  DCOMP._IOwnership _out457;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out458;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out456, out _out457, out _out458);
                  r = _out456;
                  resultingOwnership = _out457;
                  readIdents = _out458;
                }
              } else {
                DAST._IType _4096___mcc_h143 = _source259.dtor_baseType;
                DAST._INewtypeRange _4097___mcc_h144 = _source259.dtor_range;
                bool _4098___mcc_h145 = _source259.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4099_attributes = _4093___mcc_h134;
                bool _4100_erase = _4098___mcc_h145;
                DAST._INewtypeRange _4101_range = _4097___mcc_h144;
                DAST._IType _4102_b = _4096___mcc_h143;
                {
                  RAST._IExpr _out459;
                  DCOMP._IOwnership _out460;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out461;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out459, out _out460, out _out461);
                  r = _out459;
                  resultingOwnership = _out460;
                  readIdents = _out461;
                }
              }
            } else if (_source257.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4103___mcc_h149 = _source257.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out462;
                DCOMP._IOwnership _out463;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out464;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out462, out _out463, out _out464);
                r = _out462;
                resultingOwnership = _out463;
                readIdents = _out464;
              }
            } else if (_source257.is_Array) {
              DAST._IType _4104___mcc_h151 = _source257.dtor_element;
              BigInteger _4105___mcc_h152 = _source257.dtor_dims;
              {
                RAST._IExpr _out465;
                DCOMP._IOwnership _out466;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out467;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out465, out _out466, out _out467);
                r = _out465;
                resultingOwnership = _out466;
                readIdents = _out467;
              }
            } else if (_source257.is_Seq) {
              DAST._IType _4106___mcc_h155 = _source257.dtor_element;
              {
                RAST._IExpr _out468;
                DCOMP._IOwnership _out469;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out470;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out468, out _out469, out _out470);
                r = _out468;
                resultingOwnership = _out469;
                readIdents = _out470;
              }
            } else if (_source257.is_Set) {
              DAST._IType _4107___mcc_h157 = _source257.dtor_element;
              {
                RAST._IExpr _out471;
                DCOMP._IOwnership _out472;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out473;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out471, out _out472, out _out473);
                r = _out471;
                resultingOwnership = _out472;
                readIdents = _out473;
              }
            } else if (_source257.is_Multiset) {
              DAST._IType _4108___mcc_h159 = _source257.dtor_element;
              {
                RAST._IExpr _out474;
                DCOMP._IOwnership _out475;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out476;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out474, out _out475, out _out476);
                r = _out474;
                resultingOwnership = _out475;
                readIdents = _out476;
              }
            } else if (_source257.is_Map) {
              DAST._IType _4109___mcc_h161 = _source257.dtor_key;
              DAST._IType _4110___mcc_h162 = _source257.dtor_value;
              {
                RAST._IExpr _out477;
                DCOMP._IOwnership _out478;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out479;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out477, out _out478, out _out479);
                r = _out477;
                resultingOwnership = _out478;
                readIdents = _out479;
              }
            } else if (_source257.is_SetBuilder) {
              DAST._IType _4111___mcc_h165 = _source257.dtor_element;
              {
                RAST._IExpr _out480;
                DCOMP._IOwnership _out481;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out482;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out480, out _out481, out _out482);
                r = _out480;
                resultingOwnership = _out481;
                readIdents = _out482;
              }
            } else if (_source257.is_MapBuilder) {
              DAST._IType _4112___mcc_h167 = _source257.dtor_key;
              DAST._IType _4113___mcc_h168 = _source257.dtor_value;
              {
                RAST._IExpr _out483;
                DCOMP._IOwnership _out484;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out485;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out483, out _out484, out _out485);
                r = _out483;
                resultingOwnership = _out484;
                readIdents = _out485;
              }
            } else if (_source257.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4114___mcc_h171 = _source257.dtor_args;
              DAST._IType _4115___mcc_h172 = _source257.dtor_result;
              {
                RAST._IExpr _out486;
                DCOMP._IOwnership _out487;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out488;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out486, out _out487, out _out488);
                r = _out486;
                resultingOwnership = _out487;
                readIdents = _out488;
              }
            } else if (_source257.is_Primitive) {
              DAST._IPrimitive _4116___mcc_h175 = _source257.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out489;
                DCOMP._IOwnership _out490;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out491;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out489, out _out490, out _out491);
                r = _out489;
                resultingOwnership = _out490;
                readIdents = _out491;
              }
            } else if (_source257.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4117___mcc_h177 = _source257.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out492;
                DCOMP._IOwnership _out493;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out494;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out492, out _out493, out _out494);
                r = _out492;
                resultingOwnership = _out493;
                readIdents = _out494;
              }
            } else if (_source257.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4118___mcc_h179 = _source257.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out495;
                DCOMP._IOwnership _out496;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out497;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out495, out _out496, out _out497);
                r = _out495;
                resultingOwnership = _out496;
                readIdents = _out497;
              }
            } else {
              {
                RAST._IExpr _out498;
                DCOMP._IOwnership _out499;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out500;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out498, out _out499, out _out500);
                r = _out498;
                resultingOwnership = _out499;
                readIdents = _out500;
              }
            }
          } else {
            DAST._IType _4119___mcc_h181 = _source250.dtor_baseType;
            DAST._INewtypeRange _4120___mcc_h182 = _source250.dtor_range;
            bool _4121___mcc_h183 = _source250.dtor_erase;
            DAST._IType _source260 = _4021___mcc_h1;
            if (_source260.is_UserDefined) {
              DAST._IResolvedType _4122___mcc_h190 = _source260.dtor_resolved;
              DAST._IResolvedType _source261 = _4122___mcc_h190;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4123___mcc_h193 = _source261.dtor_path;
              Dafny.ISequence<DAST._IType> _4124___mcc_h194 = _source261.dtor_typeArgs;
              DAST._IResolvedTypeBase _4125___mcc_h195 = _source261.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4126___mcc_h196 = _source261.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4127___mcc_h197 = _source261.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4128___mcc_h198 = _source261.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source262 = _4125___mcc_h195;
              if (_source262.is_Class) {
                Dafny.ISequence<DAST._IAttribute> _4129_attributes = _4026___mcc_h10;
                bool _4130_erase = _4121___mcc_h183;
                DAST._INewtypeRange _4131_range = _4120___mcc_h182;
                DAST._IType _4132_b = _4119___mcc_h181;
                {
                  RAST._IExpr _out501;
                  DCOMP._IOwnership _out502;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out503;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out501, out _out502, out _out503);
                  r = _out501;
                  resultingOwnership = _out502;
                  readIdents = _out503;
                }
              } else if (_source262.is_Datatype) {
                Dafny.ISequence<DAST._IAttribute> _4133_attributes = _4026___mcc_h10;
                bool _4134_erase = _4121___mcc_h183;
                DAST._INewtypeRange _4135_range = _4120___mcc_h182;
                DAST._IType _4136_b = _4119___mcc_h181;
                {
                  RAST._IExpr _out504;
                  DCOMP._IOwnership _out505;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out506;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out504, out _out505, out _out506);
                  r = _out504;
                  resultingOwnership = _out505;
                  readIdents = _out506;
                }
              } else if (_source262.is_Trait) {
                Dafny.ISequence<DAST._IAttribute> _4137_attributes = _4026___mcc_h10;
                bool _4138_erase = _4121___mcc_h183;
                DAST._INewtypeRange _4139_range = _4120___mcc_h182;
                DAST._IType _4140_b = _4119___mcc_h181;
                {
                  RAST._IExpr _out507;
                  DCOMP._IOwnership _out508;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out509;
                  (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out507, out _out508, out _out509);
                  r = _out507;
                  resultingOwnership = _out508;
                  readIdents = _out509;
                }
              } else {
                DAST._IType _4141___mcc_h211 = _source262.dtor_baseType;
                DAST._INewtypeRange _4142___mcc_h212 = _source262.dtor_range;
                bool _4143___mcc_h213 = _source262.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4144_attributes = _4126___mcc_h196;
                bool _4145_erase = _4143___mcc_h213;
                DAST._INewtypeRange _4146_range = _4142___mcc_h212;
                DAST._IType _4147_b = _4141___mcc_h211;
                {
                  RAST._IExpr _out510;
                  DCOMP._IOwnership _out511;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out512;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out510, out _out511, out _out512);
                  r = _out510;
                  resultingOwnership = _out511;
                  readIdents = _out512;
                }
              }
            } else if (_source260.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4148___mcc_h220 = _source260.dtor_Tuple_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4149_attributes = _4026___mcc_h10;
              bool _4150_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4151_range = _4120___mcc_h182;
              DAST._IType _4152_b = _4119___mcc_h181;
              {
                RAST._IExpr _out513;
                DCOMP._IOwnership _out514;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out515;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out513, out _out514, out _out515);
                r = _out513;
                resultingOwnership = _out514;
                readIdents = _out515;
              }
            } else if (_source260.is_Array) {
              DAST._IType _4153___mcc_h223 = _source260.dtor_element;
              BigInteger _4154___mcc_h224 = _source260.dtor_dims;
              Dafny.ISequence<DAST._IAttribute> _4155_attributes = _4026___mcc_h10;
              bool _4156_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4157_range = _4120___mcc_h182;
              DAST._IType _4158_b = _4119___mcc_h181;
              {
                RAST._IExpr _out516;
                DCOMP._IOwnership _out517;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out518;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out516, out _out517, out _out518);
                r = _out516;
                resultingOwnership = _out517;
                readIdents = _out518;
              }
            } else if (_source260.is_Seq) {
              DAST._IType _4159___mcc_h229 = _source260.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4160_attributes = _4026___mcc_h10;
              bool _4161_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4162_range = _4120___mcc_h182;
              DAST._IType _4163_b = _4119___mcc_h181;
              {
                RAST._IExpr _out519;
                DCOMP._IOwnership _out520;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out521;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out519, out _out520, out _out521);
                r = _out519;
                resultingOwnership = _out520;
                readIdents = _out521;
              }
            } else if (_source260.is_Set) {
              DAST._IType _4164___mcc_h232 = _source260.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4165_attributes = _4026___mcc_h10;
              bool _4166_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4167_range = _4120___mcc_h182;
              DAST._IType _4168_b = _4119___mcc_h181;
              {
                RAST._IExpr _out522;
                DCOMP._IOwnership _out523;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out524;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out522, out _out523, out _out524);
                r = _out522;
                resultingOwnership = _out523;
                readIdents = _out524;
              }
            } else if (_source260.is_Multiset) {
              DAST._IType _4169___mcc_h235 = _source260.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4170_attributes = _4026___mcc_h10;
              bool _4171_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4172_range = _4120___mcc_h182;
              DAST._IType _4173_b = _4119___mcc_h181;
              {
                RAST._IExpr _out525;
                DCOMP._IOwnership _out526;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out527;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out525, out _out526, out _out527);
                r = _out525;
                resultingOwnership = _out526;
                readIdents = _out527;
              }
            } else if (_source260.is_Map) {
              DAST._IType _4174___mcc_h238 = _source260.dtor_key;
              DAST._IType _4175___mcc_h239 = _source260.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4176_attributes = _4026___mcc_h10;
              bool _4177_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4178_range = _4120___mcc_h182;
              DAST._IType _4179_b = _4119___mcc_h181;
              {
                RAST._IExpr _out528;
                DCOMP._IOwnership _out529;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out530;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out528, out _out529, out _out530);
                r = _out528;
                resultingOwnership = _out529;
                readIdents = _out530;
              }
            } else if (_source260.is_SetBuilder) {
              DAST._IType _4180___mcc_h244 = _source260.dtor_element;
              Dafny.ISequence<DAST._IAttribute> _4181_attributes = _4026___mcc_h10;
              bool _4182_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4183_range = _4120___mcc_h182;
              DAST._IType _4184_b = _4119___mcc_h181;
              {
                RAST._IExpr _out531;
                DCOMP._IOwnership _out532;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out533;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out531, out _out532, out _out533);
                r = _out531;
                resultingOwnership = _out532;
                readIdents = _out533;
              }
            } else if (_source260.is_MapBuilder) {
              DAST._IType _4185___mcc_h247 = _source260.dtor_key;
              DAST._IType _4186___mcc_h248 = _source260.dtor_value;
              Dafny.ISequence<DAST._IAttribute> _4187_attributes = _4026___mcc_h10;
              bool _4188_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4189_range = _4120___mcc_h182;
              DAST._IType _4190_b = _4119___mcc_h181;
              {
                RAST._IExpr _out534;
                DCOMP._IOwnership _out535;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out536;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out534, out _out535, out _out536);
                r = _out534;
                resultingOwnership = _out535;
                readIdents = _out536;
              }
            } else if (_source260.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4191___mcc_h253 = _source260.dtor_args;
              DAST._IType _4192___mcc_h254 = _source260.dtor_result;
              Dafny.ISequence<DAST._IAttribute> _4193_attributes = _4026___mcc_h10;
              bool _4194_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4195_range = _4120___mcc_h182;
              DAST._IType _4196_b = _4119___mcc_h181;
              {
                RAST._IExpr _out537;
                DCOMP._IOwnership _out538;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out539;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out537, out _out538, out _out539);
                r = _out537;
                resultingOwnership = _out538;
                readIdents = _out539;
              }
            } else if (_source260.is_Primitive) {
              DAST._IPrimitive _4197___mcc_h259 = _source260.dtor_Primitive_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4198_attributes = _4026___mcc_h10;
              bool _4199_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4200_range = _4120___mcc_h182;
              DAST._IType _4201_b = _4119___mcc_h181;
              {
                RAST._IExpr _out540;
                DCOMP._IOwnership _out541;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out542;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out540, out _out541, out _out542);
                r = _out540;
                resultingOwnership = _out541;
                readIdents = _out542;
              }
            } else if (_source260.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4202___mcc_h262 = _source260.dtor_Passthrough_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4203_attributes = _4026___mcc_h10;
              bool _4204_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4205_range = _4120___mcc_h182;
              DAST._IType _4206_b = _4119___mcc_h181;
              {
                RAST._IExpr _out543;
                DCOMP._IOwnership _out544;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out545;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out543, out _out544, out _out545);
                r = _out543;
                resultingOwnership = _out544;
                readIdents = _out545;
              }
            } else if (_source260.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4207___mcc_h265 = _source260.dtor_TypeArg_i_a0;
              Dafny.ISequence<DAST._IAttribute> _4208_attributes = _4026___mcc_h10;
              bool _4209_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4210_range = _4120___mcc_h182;
              DAST._IType _4211_b = _4119___mcc_h181;
              {
                RAST._IExpr _out546;
                DCOMP._IOwnership _out547;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out548;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out546, out _out547, out _out548);
                r = _out546;
                resultingOwnership = _out547;
                readIdents = _out548;
              }
            } else {
              Dafny.ISequence<DAST._IAttribute> _4212_attributes = _4026___mcc_h10;
              bool _4213_erase = _4121___mcc_h183;
              DAST._INewtypeRange _4214_range = _4120___mcc_h182;
              DAST._IType _4215_b = _4119___mcc_h181;
              {
                RAST._IExpr _out549;
                DCOMP._IOwnership _out550;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out551;
                (this).GenExprConvertFromNewtype(e, selfIdent, env, expectedOwnership, out _out549, out _out550, out _out551);
                r = _out549;
                resultingOwnership = _out550;
                readIdents = _out551;
              }
            }
          }
        } else if (_source248.is_Tuple) {
          Dafny.ISequence<DAST._IType> _4216___mcc_h268 = _source248.dtor_Tuple_i_a0;
          DAST._IType _source263 = _4021___mcc_h1;
          if (_source263.is_UserDefined) {
            DAST._IResolvedType _4217___mcc_h271 = _source263.dtor_resolved;
            DAST._IResolvedType _source264 = _4217___mcc_h271;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4218___mcc_h273 = _source264.dtor_path;
            Dafny.ISequence<DAST._IType> _4219___mcc_h274 = _source264.dtor_typeArgs;
            DAST._IResolvedTypeBase _4220___mcc_h275 = _source264.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4221___mcc_h276 = _source264.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4222___mcc_h277 = _source264.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4223___mcc_h278 = _source264.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source265 = _4220___mcc_h275;
            if (_source265.is_Class) {
              {
                RAST._IExpr _out552;
                DCOMP._IOwnership _out553;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out554;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out552, out _out553, out _out554);
                r = _out552;
                resultingOwnership = _out553;
                readIdents = _out554;
              }
            } else if (_source265.is_Datatype) {
              {
                RAST._IExpr _out555;
                DCOMP._IOwnership _out556;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out557;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out555, out _out556, out _out557);
                r = _out555;
                resultingOwnership = _out556;
                readIdents = _out557;
              }
            } else if (_source265.is_Trait) {
              {
                RAST._IExpr _out558;
                DCOMP._IOwnership _out559;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out560;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out558, out _out559, out _out560);
                r = _out558;
                resultingOwnership = _out559;
                readIdents = _out560;
              }
            } else {
              DAST._IType _4224___mcc_h285 = _source265.dtor_baseType;
              DAST._INewtypeRange _4225___mcc_h286 = _source265.dtor_range;
              bool _4226___mcc_h287 = _source265.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4227_attributes = _4221___mcc_h276;
              bool _4228_erase = _4226___mcc_h287;
              DAST._INewtypeRange _4229_range = _4225___mcc_h286;
              DAST._IType _4230_b = _4224___mcc_h285;
              {
                RAST._IExpr _out561;
                DCOMP._IOwnership _out562;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out563;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out561, out _out562, out _out563);
                r = _out561;
                resultingOwnership = _out562;
                readIdents = _out563;
              }
            }
          } else if (_source263.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4231___mcc_h291 = _source263.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out564;
              DCOMP._IOwnership _out565;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out566;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out564, out _out565, out _out566);
              r = _out564;
              resultingOwnership = _out565;
              readIdents = _out566;
            }
          } else if (_source263.is_Array) {
            DAST._IType _4232___mcc_h293 = _source263.dtor_element;
            BigInteger _4233___mcc_h294 = _source263.dtor_dims;
            {
              RAST._IExpr _out567;
              DCOMP._IOwnership _out568;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out569;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out567, out _out568, out _out569);
              r = _out567;
              resultingOwnership = _out568;
              readIdents = _out569;
            }
          } else if (_source263.is_Seq) {
            DAST._IType _4234___mcc_h297 = _source263.dtor_element;
            {
              RAST._IExpr _out570;
              DCOMP._IOwnership _out571;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out572;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out570, out _out571, out _out572);
              r = _out570;
              resultingOwnership = _out571;
              readIdents = _out572;
            }
          } else if (_source263.is_Set) {
            DAST._IType _4235___mcc_h299 = _source263.dtor_element;
            {
              RAST._IExpr _out573;
              DCOMP._IOwnership _out574;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out575;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out573, out _out574, out _out575);
              r = _out573;
              resultingOwnership = _out574;
              readIdents = _out575;
            }
          } else if (_source263.is_Multiset) {
            DAST._IType _4236___mcc_h301 = _source263.dtor_element;
            {
              RAST._IExpr _out576;
              DCOMP._IOwnership _out577;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out578;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out576, out _out577, out _out578);
              r = _out576;
              resultingOwnership = _out577;
              readIdents = _out578;
            }
          } else if (_source263.is_Map) {
            DAST._IType _4237___mcc_h303 = _source263.dtor_key;
            DAST._IType _4238___mcc_h304 = _source263.dtor_value;
            {
              RAST._IExpr _out579;
              DCOMP._IOwnership _out580;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out581;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out579, out _out580, out _out581);
              r = _out579;
              resultingOwnership = _out580;
              readIdents = _out581;
            }
          } else if (_source263.is_SetBuilder) {
            DAST._IType _4239___mcc_h307 = _source263.dtor_element;
            {
              RAST._IExpr _out582;
              DCOMP._IOwnership _out583;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out584;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out582, out _out583, out _out584);
              r = _out582;
              resultingOwnership = _out583;
              readIdents = _out584;
            }
          } else if (_source263.is_MapBuilder) {
            DAST._IType _4240___mcc_h309 = _source263.dtor_key;
            DAST._IType _4241___mcc_h310 = _source263.dtor_value;
            {
              RAST._IExpr _out585;
              DCOMP._IOwnership _out586;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out587;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out585, out _out586, out _out587);
              r = _out585;
              resultingOwnership = _out586;
              readIdents = _out587;
            }
          } else if (_source263.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4242___mcc_h313 = _source263.dtor_args;
            DAST._IType _4243___mcc_h314 = _source263.dtor_result;
            {
              RAST._IExpr _out588;
              DCOMP._IOwnership _out589;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out590;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out588, out _out589, out _out590);
              r = _out588;
              resultingOwnership = _out589;
              readIdents = _out590;
            }
          } else if (_source263.is_Primitive) {
            DAST._IPrimitive _4244___mcc_h317 = _source263.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out591;
              DCOMP._IOwnership _out592;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out593;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out591, out _out592, out _out593);
              r = _out591;
              resultingOwnership = _out592;
              readIdents = _out593;
            }
          } else if (_source263.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4245___mcc_h319 = _source263.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out594;
              DCOMP._IOwnership _out595;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out596;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out594, out _out595, out _out596);
              r = _out594;
              resultingOwnership = _out595;
              readIdents = _out596;
            }
          } else if (_source263.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4246___mcc_h321 = _source263.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out597;
              DCOMP._IOwnership _out598;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out599;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out597, out _out598, out _out599);
              r = _out597;
              resultingOwnership = _out598;
              readIdents = _out599;
            }
          } else {
            {
              RAST._IExpr _out600;
              DCOMP._IOwnership _out601;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out602;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out600, out _out601, out _out602);
              r = _out600;
              resultingOwnership = _out601;
              readIdents = _out602;
            }
          }
        } else if (_source248.is_Array) {
          DAST._IType _4247___mcc_h323 = _source248.dtor_element;
          BigInteger _4248___mcc_h324 = _source248.dtor_dims;
          DAST._IType _source266 = _4021___mcc_h1;
          if (_source266.is_UserDefined) {
            DAST._IResolvedType _4249___mcc_h329 = _source266.dtor_resolved;
            DAST._IResolvedType _source267 = _4249___mcc_h329;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4250___mcc_h331 = _source267.dtor_path;
            Dafny.ISequence<DAST._IType> _4251___mcc_h332 = _source267.dtor_typeArgs;
            DAST._IResolvedTypeBase _4252___mcc_h333 = _source267.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4253___mcc_h334 = _source267.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4254___mcc_h335 = _source267.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4255___mcc_h336 = _source267.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source268 = _4252___mcc_h333;
            if (_source268.is_Class) {
              {
                RAST._IExpr _out603;
                DCOMP._IOwnership _out604;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out605;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out603, out _out604, out _out605);
                r = _out603;
                resultingOwnership = _out604;
                readIdents = _out605;
              }
            } else if (_source268.is_Datatype) {
              {
                RAST._IExpr _out606;
                DCOMP._IOwnership _out607;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out608;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out606, out _out607, out _out608);
                r = _out606;
                resultingOwnership = _out607;
                readIdents = _out608;
              }
            } else if (_source268.is_Trait) {
              {
                RAST._IExpr _out609;
                DCOMP._IOwnership _out610;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out611;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out609, out _out610, out _out611);
                r = _out609;
                resultingOwnership = _out610;
                readIdents = _out611;
              }
            } else {
              DAST._IType _4256___mcc_h343 = _source268.dtor_baseType;
              DAST._INewtypeRange _4257___mcc_h344 = _source268.dtor_range;
              bool _4258___mcc_h345 = _source268.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4259_attributes = _4253___mcc_h334;
              bool _4260_erase = _4258___mcc_h345;
              DAST._INewtypeRange _4261_range = _4257___mcc_h344;
              DAST._IType _4262_b = _4256___mcc_h343;
              {
                RAST._IExpr _out612;
                DCOMP._IOwnership _out613;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out614;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out612, out _out613, out _out614);
                r = _out612;
                resultingOwnership = _out613;
                readIdents = _out614;
              }
            }
          } else if (_source266.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4263___mcc_h349 = _source266.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out615;
              DCOMP._IOwnership _out616;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out617;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out615, out _out616, out _out617);
              r = _out615;
              resultingOwnership = _out616;
              readIdents = _out617;
            }
          } else if (_source266.is_Array) {
            DAST._IType _4264___mcc_h351 = _source266.dtor_element;
            BigInteger _4265___mcc_h352 = _source266.dtor_dims;
            {
              RAST._IExpr _out618;
              DCOMP._IOwnership _out619;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out620;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out618, out _out619, out _out620);
              r = _out618;
              resultingOwnership = _out619;
              readIdents = _out620;
            }
          } else if (_source266.is_Seq) {
            DAST._IType _4266___mcc_h355 = _source266.dtor_element;
            {
              RAST._IExpr _out621;
              DCOMP._IOwnership _out622;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out623;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out621, out _out622, out _out623);
              r = _out621;
              resultingOwnership = _out622;
              readIdents = _out623;
            }
          } else if (_source266.is_Set) {
            DAST._IType _4267___mcc_h357 = _source266.dtor_element;
            {
              RAST._IExpr _out624;
              DCOMP._IOwnership _out625;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out626;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out624, out _out625, out _out626);
              r = _out624;
              resultingOwnership = _out625;
              readIdents = _out626;
            }
          } else if (_source266.is_Multiset) {
            DAST._IType _4268___mcc_h359 = _source266.dtor_element;
            {
              RAST._IExpr _out627;
              DCOMP._IOwnership _out628;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out629;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out627, out _out628, out _out629);
              r = _out627;
              resultingOwnership = _out628;
              readIdents = _out629;
            }
          } else if (_source266.is_Map) {
            DAST._IType _4269___mcc_h361 = _source266.dtor_key;
            DAST._IType _4270___mcc_h362 = _source266.dtor_value;
            {
              RAST._IExpr _out630;
              DCOMP._IOwnership _out631;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out632;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out630, out _out631, out _out632);
              r = _out630;
              resultingOwnership = _out631;
              readIdents = _out632;
            }
          } else if (_source266.is_SetBuilder) {
            DAST._IType _4271___mcc_h365 = _source266.dtor_element;
            {
              RAST._IExpr _out633;
              DCOMP._IOwnership _out634;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out635;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out633, out _out634, out _out635);
              r = _out633;
              resultingOwnership = _out634;
              readIdents = _out635;
            }
          } else if (_source266.is_MapBuilder) {
            DAST._IType _4272___mcc_h367 = _source266.dtor_key;
            DAST._IType _4273___mcc_h368 = _source266.dtor_value;
            {
              RAST._IExpr _out636;
              DCOMP._IOwnership _out637;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out638;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out636, out _out637, out _out638);
              r = _out636;
              resultingOwnership = _out637;
              readIdents = _out638;
            }
          } else if (_source266.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4274___mcc_h371 = _source266.dtor_args;
            DAST._IType _4275___mcc_h372 = _source266.dtor_result;
            {
              RAST._IExpr _out639;
              DCOMP._IOwnership _out640;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out641;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out639, out _out640, out _out641);
              r = _out639;
              resultingOwnership = _out640;
              readIdents = _out641;
            }
          } else if (_source266.is_Primitive) {
            DAST._IPrimitive _4276___mcc_h375 = _source266.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out642;
              DCOMP._IOwnership _out643;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out644;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out642, out _out643, out _out644);
              r = _out642;
              resultingOwnership = _out643;
              readIdents = _out644;
            }
          } else if (_source266.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4277___mcc_h377 = _source266.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out645;
              DCOMP._IOwnership _out646;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out647;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out645, out _out646, out _out647);
              r = _out645;
              resultingOwnership = _out646;
              readIdents = _out647;
            }
          } else if (_source266.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4278___mcc_h379 = _source266.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out648;
              DCOMP._IOwnership _out649;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out650;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out648, out _out649, out _out650);
              r = _out648;
              resultingOwnership = _out649;
              readIdents = _out650;
            }
          } else {
            {
              RAST._IExpr _out651;
              DCOMP._IOwnership _out652;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out653;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out651, out _out652, out _out653);
              r = _out651;
              resultingOwnership = _out652;
              readIdents = _out653;
            }
          }
        } else if (_source248.is_Seq) {
          DAST._IType _4279___mcc_h381 = _source248.dtor_element;
          DAST._IType _source269 = _4021___mcc_h1;
          if (_source269.is_UserDefined) {
            DAST._IResolvedType _4280___mcc_h384 = _source269.dtor_resolved;
            DAST._IResolvedType _source270 = _4280___mcc_h384;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4281___mcc_h386 = _source270.dtor_path;
            Dafny.ISequence<DAST._IType> _4282___mcc_h387 = _source270.dtor_typeArgs;
            DAST._IResolvedTypeBase _4283___mcc_h388 = _source270.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4284___mcc_h389 = _source270.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4285___mcc_h390 = _source270.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4286___mcc_h391 = _source270.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source271 = _4283___mcc_h388;
            if (_source271.is_Class) {
              {
                RAST._IExpr _out654;
                DCOMP._IOwnership _out655;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out656;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out654, out _out655, out _out656);
                r = _out654;
                resultingOwnership = _out655;
                readIdents = _out656;
              }
            } else if (_source271.is_Datatype) {
              {
                RAST._IExpr _out657;
                DCOMP._IOwnership _out658;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out659;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out657, out _out658, out _out659);
                r = _out657;
                resultingOwnership = _out658;
                readIdents = _out659;
              }
            } else if (_source271.is_Trait) {
              {
                RAST._IExpr _out660;
                DCOMP._IOwnership _out661;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out662;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out660, out _out661, out _out662);
                r = _out660;
                resultingOwnership = _out661;
                readIdents = _out662;
              }
            } else {
              DAST._IType _4287___mcc_h398 = _source271.dtor_baseType;
              DAST._INewtypeRange _4288___mcc_h399 = _source271.dtor_range;
              bool _4289___mcc_h400 = _source271.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4290_attributes = _4284___mcc_h389;
              bool _4291_erase = _4289___mcc_h400;
              DAST._INewtypeRange _4292_range = _4288___mcc_h399;
              DAST._IType _4293_b = _4287___mcc_h398;
              {
                RAST._IExpr _out663;
                DCOMP._IOwnership _out664;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out665;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out663, out _out664, out _out665);
                r = _out663;
                resultingOwnership = _out664;
                readIdents = _out665;
              }
            }
          } else if (_source269.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4294___mcc_h404 = _source269.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out666;
              DCOMP._IOwnership _out667;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out668;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out666, out _out667, out _out668);
              r = _out666;
              resultingOwnership = _out667;
              readIdents = _out668;
            }
          } else if (_source269.is_Array) {
            DAST._IType _4295___mcc_h406 = _source269.dtor_element;
            BigInteger _4296___mcc_h407 = _source269.dtor_dims;
            {
              RAST._IExpr _out669;
              DCOMP._IOwnership _out670;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out671;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out669, out _out670, out _out671);
              r = _out669;
              resultingOwnership = _out670;
              readIdents = _out671;
            }
          } else if (_source269.is_Seq) {
            DAST._IType _4297___mcc_h410 = _source269.dtor_element;
            {
              RAST._IExpr _out672;
              DCOMP._IOwnership _out673;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out674;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out672, out _out673, out _out674);
              r = _out672;
              resultingOwnership = _out673;
              readIdents = _out674;
            }
          } else if (_source269.is_Set) {
            DAST._IType _4298___mcc_h412 = _source269.dtor_element;
            {
              RAST._IExpr _out675;
              DCOMP._IOwnership _out676;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out677;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out675, out _out676, out _out677);
              r = _out675;
              resultingOwnership = _out676;
              readIdents = _out677;
            }
          } else if (_source269.is_Multiset) {
            DAST._IType _4299___mcc_h414 = _source269.dtor_element;
            {
              RAST._IExpr _out678;
              DCOMP._IOwnership _out679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out680;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out678, out _out679, out _out680);
              r = _out678;
              resultingOwnership = _out679;
              readIdents = _out680;
            }
          } else if (_source269.is_Map) {
            DAST._IType _4300___mcc_h416 = _source269.dtor_key;
            DAST._IType _4301___mcc_h417 = _source269.dtor_value;
            {
              RAST._IExpr _out681;
              DCOMP._IOwnership _out682;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out683;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out681, out _out682, out _out683);
              r = _out681;
              resultingOwnership = _out682;
              readIdents = _out683;
            }
          } else if (_source269.is_SetBuilder) {
            DAST._IType _4302___mcc_h420 = _source269.dtor_element;
            {
              RAST._IExpr _out684;
              DCOMP._IOwnership _out685;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out686;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out684, out _out685, out _out686);
              r = _out684;
              resultingOwnership = _out685;
              readIdents = _out686;
            }
          } else if (_source269.is_MapBuilder) {
            DAST._IType _4303___mcc_h422 = _source269.dtor_key;
            DAST._IType _4304___mcc_h423 = _source269.dtor_value;
            {
              RAST._IExpr _out687;
              DCOMP._IOwnership _out688;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out689;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out687, out _out688, out _out689);
              r = _out687;
              resultingOwnership = _out688;
              readIdents = _out689;
            }
          } else if (_source269.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4305___mcc_h426 = _source269.dtor_args;
            DAST._IType _4306___mcc_h427 = _source269.dtor_result;
            {
              RAST._IExpr _out690;
              DCOMP._IOwnership _out691;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out692;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out690, out _out691, out _out692);
              r = _out690;
              resultingOwnership = _out691;
              readIdents = _out692;
            }
          } else if (_source269.is_Primitive) {
            DAST._IPrimitive _4307___mcc_h430 = _source269.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out693;
              DCOMP._IOwnership _out694;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out695;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out693, out _out694, out _out695);
              r = _out693;
              resultingOwnership = _out694;
              readIdents = _out695;
            }
          } else if (_source269.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4308___mcc_h432 = _source269.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out696;
              DCOMP._IOwnership _out697;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out698;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out696, out _out697, out _out698);
              r = _out696;
              resultingOwnership = _out697;
              readIdents = _out698;
            }
          } else if (_source269.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4309___mcc_h434 = _source269.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out699;
              DCOMP._IOwnership _out700;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out701;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out699, out _out700, out _out701);
              r = _out699;
              resultingOwnership = _out700;
              readIdents = _out701;
            }
          } else {
            {
              RAST._IExpr _out702;
              DCOMP._IOwnership _out703;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out704;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out702, out _out703, out _out704);
              r = _out702;
              resultingOwnership = _out703;
              readIdents = _out704;
            }
          }
        } else if (_source248.is_Set) {
          DAST._IType _4310___mcc_h436 = _source248.dtor_element;
          DAST._IType _source272 = _4021___mcc_h1;
          if (_source272.is_UserDefined) {
            DAST._IResolvedType _4311___mcc_h439 = _source272.dtor_resolved;
            DAST._IResolvedType _source273 = _4311___mcc_h439;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4312___mcc_h441 = _source273.dtor_path;
            Dafny.ISequence<DAST._IType> _4313___mcc_h442 = _source273.dtor_typeArgs;
            DAST._IResolvedTypeBase _4314___mcc_h443 = _source273.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4315___mcc_h444 = _source273.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4316___mcc_h445 = _source273.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4317___mcc_h446 = _source273.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source274 = _4314___mcc_h443;
            if (_source274.is_Class) {
              {
                RAST._IExpr _out705;
                DCOMP._IOwnership _out706;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out707;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out705, out _out706, out _out707);
                r = _out705;
                resultingOwnership = _out706;
                readIdents = _out707;
              }
            } else if (_source274.is_Datatype) {
              {
                RAST._IExpr _out708;
                DCOMP._IOwnership _out709;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out710;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out708, out _out709, out _out710);
                r = _out708;
                resultingOwnership = _out709;
                readIdents = _out710;
              }
            } else if (_source274.is_Trait) {
              {
                RAST._IExpr _out711;
                DCOMP._IOwnership _out712;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out713;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out711, out _out712, out _out713);
                r = _out711;
                resultingOwnership = _out712;
                readIdents = _out713;
              }
            } else {
              DAST._IType _4318___mcc_h453 = _source274.dtor_baseType;
              DAST._INewtypeRange _4319___mcc_h454 = _source274.dtor_range;
              bool _4320___mcc_h455 = _source274.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4321_attributes = _4315___mcc_h444;
              bool _4322_erase = _4320___mcc_h455;
              DAST._INewtypeRange _4323_range = _4319___mcc_h454;
              DAST._IType _4324_b = _4318___mcc_h453;
              {
                RAST._IExpr _out714;
                DCOMP._IOwnership _out715;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out716;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out714, out _out715, out _out716);
                r = _out714;
                resultingOwnership = _out715;
                readIdents = _out716;
              }
            }
          } else if (_source272.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4325___mcc_h459 = _source272.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out717;
              DCOMP._IOwnership _out718;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out719;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out717, out _out718, out _out719);
              r = _out717;
              resultingOwnership = _out718;
              readIdents = _out719;
            }
          } else if (_source272.is_Array) {
            DAST._IType _4326___mcc_h461 = _source272.dtor_element;
            BigInteger _4327___mcc_h462 = _source272.dtor_dims;
            {
              RAST._IExpr _out720;
              DCOMP._IOwnership _out721;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out722;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out720, out _out721, out _out722);
              r = _out720;
              resultingOwnership = _out721;
              readIdents = _out722;
            }
          } else if (_source272.is_Seq) {
            DAST._IType _4328___mcc_h465 = _source272.dtor_element;
            {
              RAST._IExpr _out723;
              DCOMP._IOwnership _out724;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out725;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out723, out _out724, out _out725);
              r = _out723;
              resultingOwnership = _out724;
              readIdents = _out725;
            }
          } else if (_source272.is_Set) {
            DAST._IType _4329___mcc_h467 = _source272.dtor_element;
            {
              RAST._IExpr _out726;
              DCOMP._IOwnership _out727;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out728;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out726, out _out727, out _out728);
              r = _out726;
              resultingOwnership = _out727;
              readIdents = _out728;
            }
          } else if (_source272.is_Multiset) {
            DAST._IType _4330___mcc_h469 = _source272.dtor_element;
            {
              RAST._IExpr _out729;
              DCOMP._IOwnership _out730;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out731;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out729, out _out730, out _out731);
              r = _out729;
              resultingOwnership = _out730;
              readIdents = _out731;
            }
          } else if (_source272.is_Map) {
            DAST._IType _4331___mcc_h471 = _source272.dtor_key;
            DAST._IType _4332___mcc_h472 = _source272.dtor_value;
            {
              RAST._IExpr _out732;
              DCOMP._IOwnership _out733;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out734;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out732, out _out733, out _out734);
              r = _out732;
              resultingOwnership = _out733;
              readIdents = _out734;
            }
          } else if (_source272.is_SetBuilder) {
            DAST._IType _4333___mcc_h475 = _source272.dtor_element;
            {
              RAST._IExpr _out735;
              DCOMP._IOwnership _out736;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out737;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out735, out _out736, out _out737);
              r = _out735;
              resultingOwnership = _out736;
              readIdents = _out737;
            }
          } else if (_source272.is_MapBuilder) {
            DAST._IType _4334___mcc_h477 = _source272.dtor_key;
            DAST._IType _4335___mcc_h478 = _source272.dtor_value;
            {
              RAST._IExpr _out738;
              DCOMP._IOwnership _out739;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out740;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out738, out _out739, out _out740);
              r = _out738;
              resultingOwnership = _out739;
              readIdents = _out740;
            }
          } else if (_source272.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4336___mcc_h481 = _source272.dtor_args;
            DAST._IType _4337___mcc_h482 = _source272.dtor_result;
            {
              RAST._IExpr _out741;
              DCOMP._IOwnership _out742;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out743;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out741, out _out742, out _out743);
              r = _out741;
              resultingOwnership = _out742;
              readIdents = _out743;
            }
          } else if (_source272.is_Primitive) {
            DAST._IPrimitive _4338___mcc_h485 = _source272.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out744;
              DCOMP._IOwnership _out745;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out746;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out744, out _out745, out _out746);
              r = _out744;
              resultingOwnership = _out745;
              readIdents = _out746;
            }
          } else if (_source272.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4339___mcc_h487 = _source272.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out747;
              DCOMP._IOwnership _out748;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out749;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out747, out _out748, out _out749);
              r = _out747;
              resultingOwnership = _out748;
              readIdents = _out749;
            }
          } else if (_source272.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4340___mcc_h489 = _source272.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out750;
              DCOMP._IOwnership _out751;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out752;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out750, out _out751, out _out752);
              r = _out750;
              resultingOwnership = _out751;
              readIdents = _out752;
            }
          } else {
            {
              RAST._IExpr _out753;
              DCOMP._IOwnership _out754;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out755;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out753, out _out754, out _out755);
              r = _out753;
              resultingOwnership = _out754;
              readIdents = _out755;
            }
          }
        } else if (_source248.is_Multiset) {
          DAST._IType _4341___mcc_h491 = _source248.dtor_element;
          DAST._IType _source275 = _4021___mcc_h1;
          if (_source275.is_UserDefined) {
            DAST._IResolvedType _4342___mcc_h494 = _source275.dtor_resolved;
            DAST._IResolvedType _source276 = _4342___mcc_h494;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4343___mcc_h496 = _source276.dtor_path;
            Dafny.ISequence<DAST._IType> _4344___mcc_h497 = _source276.dtor_typeArgs;
            DAST._IResolvedTypeBase _4345___mcc_h498 = _source276.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4346___mcc_h499 = _source276.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4347___mcc_h500 = _source276.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4348___mcc_h501 = _source276.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source277 = _4345___mcc_h498;
            if (_source277.is_Class) {
              {
                RAST._IExpr _out756;
                DCOMP._IOwnership _out757;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out758;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out756, out _out757, out _out758);
                r = _out756;
                resultingOwnership = _out757;
                readIdents = _out758;
              }
            } else if (_source277.is_Datatype) {
              {
                RAST._IExpr _out759;
                DCOMP._IOwnership _out760;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out761;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out759, out _out760, out _out761);
                r = _out759;
                resultingOwnership = _out760;
                readIdents = _out761;
              }
            } else if (_source277.is_Trait) {
              {
                RAST._IExpr _out762;
                DCOMP._IOwnership _out763;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out764;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out762, out _out763, out _out764);
                r = _out762;
                resultingOwnership = _out763;
                readIdents = _out764;
              }
            } else {
              DAST._IType _4349___mcc_h508 = _source277.dtor_baseType;
              DAST._INewtypeRange _4350___mcc_h509 = _source277.dtor_range;
              bool _4351___mcc_h510 = _source277.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4352_attributes = _4346___mcc_h499;
              bool _4353_erase = _4351___mcc_h510;
              DAST._INewtypeRange _4354_range = _4350___mcc_h509;
              DAST._IType _4355_b = _4349___mcc_h508;
              {
                RAST._IExpr _out765;
                DCOMP._IOwnership _out766;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out767;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out765, out _out766, out _out767);
                r = _out765;
                resultingOwnership = _out766;
                readIdents = _out767;
              }
            }
          } else if (_source275.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4356___mcc_h514 = _source275.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out768;
              DCOMP._IOwnership _out769;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out770;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out768, out _out769, out _out770);
              r = _out768;
              resultingOwnership = _out769;
              readIdents = _out770;
            }
          } else if (_source275.is_Array) {
            DAST._IType _4357___mcc_h516 = _source275.dtor_element;
            BigInteger _4358___mcc_h517 = _source275.dtor_dims;
            {
              RAST._IExpr _out771;
              DCOMP._IOwnership _out772;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out773;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out771, out _out772, out _out773);
              r = _out771;
              resultingOwnership = _out772;
              readIdents = _out773;
            }
          } else if (_source275.is_Seq) {
            DAST._IType _4359___mcc_h520 = _source275.dtor_element;
            {
              RAST._IExpr _out774;
              DCOMP._IOwnership _out775;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out776;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out774, out _out775, out _out776);
              r = _out774;
              resultingOwnership = _out775;
              readIdents = _out776;
            }
          } else if (_source275.is_Set) {
            DAST._IType _4360___mcc_h522 = _source275.dtor_element;
            {
              RAST._IExpr _out777;
              DCOMP._IOwnership _out778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out779;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out777, out _out778, out _out779);
              r = _out777;
              resultingOwnership = _out778;
              readIdents = _out779;
            }
          } else if (_source275.is_Multiset) {
            DAST._IType _4361___mcc_h524 = _source275.dtor_element;
            {
              RAST._IExpr _out780;
              DCOMP._IOwnership _out781;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out782;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out780, out _out781, out _out782);
              r = _out780;
              resultingOwnership = _out781;
              readIdents = _out782;
            }
          } else if (_source275.is_Map) {
            DAST._IType _4362___mcc_h526 = _source275.dtor_key;
            DAST._IType _4363___mcc_h527 = _source275.dtor_value;
            {
              RAST._IExpr _out783;
              DCOMP._IOwnership _out784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out785;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out783, out _out784, out _out785);
              r = _out783;
              resultingOwnership = _out784;
              readIdents = _out785;
            }
          } else if (_source275.is_SetBuilder) {
            DAST._IType _4364___mcc_h530 = _source275.dtor_element;
            {
              RAST._IExpr _out786;
              DCOMP._IOwnership _out787;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out788;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out786, out _out787, out _out788);
              r = _out786;
              resultingOwnership = _out787;
              readIdents = _out788;
            }
          } else if (_source275.is_MapBuilder) {
            DAST._IType _4365___mcc_h532 = _source275.dtor_key;
            DAST._IType _4366___mcc_h533 = _source275.dtor_value;
            {
              RAST._IExpr _out789;
              DCOMP._IOwnership _out790;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out791;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out789, out _out790, out _out791);
              r = _out789;
              resultingOwnership = _out790;
              readIdents = _out791;
            }
          } else if (_source275.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4367___mcc_h536 = _source275.dtor_args;
            DAST._IType _4368___mcc_h537 = _source275.dtor_result;
            {
              RAST._IExpr _out792;
              DCOMP._IOwnership _out793;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out794;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out792, out _out793, out _out794);
              r = _out792;
              resultingOwnership = _out793;
              readIdents = _out794;
            }
          } else if (_source275.is_Primitive) {
            DAST._IPrimitive _4369___mcc_h540 = _source275.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out795;
              DCOMP._IOwnership _out796;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out797;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out795, out _out796, out _out797);
              r = _out795;
              resultingOwnership = _out796;
              readIdents = _out797;
            }
          } else if (_source275.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4370___mcc_h542 = _source275.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out798;
              DCOMP._IOwnership _out799;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out800;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out798, out _out799, out _out800);
              r = _out798;
              resultingOwnership = _out799;
              readIdents = _out800;
            }
          } else if (_source275.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4371___mcc_h544 = _source275.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out801;
              DCOMP._IOwnership _out802;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out803;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out801, out _out802, out _out803);
              r = _out801;
              resultingOwnership = _out802;
              readIdents = _out803;
            }
          } else {
            {
              RAST._IExpr _out804;
              DCOMP._IOwnership _out805;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out806;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out804, out _out805, out _out806);
              r = _out804;
              resultingOwnership = _out805;
              readIdents = _out806;
            }
          }
        } else if (_source248.is_Map) {
          DAST._IType _4372___mcc_h546 = _source248.dtor_key;
          DAST._IType _4373___mcc_h547 = _source248.dtor_value;
          DAST._IType _source278 = _4021___mcc_h1;
          if (_source278.is_UserDefined) {
            DAST._IResolvedType _4374___mcc_h552 = _source278.dtor_resolved;
            DAST._IResolvedType _source279 = _4374___mcc_h552;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4375___mcc_h554 = _source279.dtor_path;
            Dafny.ISequence<DAST._IType> _4376___mcc_h555 = _source279.dtor_typeArgs;
            DAST._IResolvedTypeBase _4377___mcc_h556 = _source279.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4378___mcc_h557 = _source279.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4379___mcc_h558 = _source279.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4380___mcc_h559 = _source279.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source280 = _4377___mcc_h556;
            if (_source280.is_Class) {
              {
                RAST._IExpr _out807;
                DCOMP._IOwnership _out808;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out809;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out807, out _out808, out _out809);
                r = _out807;
                resultingOwnership = _out808;
                readIdents = _out809;
              }
            } else if (_source280.is_Datatype) {
              {
                RAST._IExpr _out810;
                DCOMP._IOwnership _out811;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out812;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out810, out _out811, out _out812);
                r = _out810;
                resultingOwnership = _out811;
                readIdents = _out812;
              }
            } else if (_source280.is_Trait) {
              {
                RAST._IExpr _out813;
                DCOMP._IOwnership _out814;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out815;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out813, out _out814, out _out815);
                r = _out813;
                resultingOwnership = _out814;
                readIdents = _out815;
              }
            } else {
              DAST._IType _4381___mcc_h566 = _source280.dtor_baseType;
              DAST._INewtypeRange _4382___mcc_h567 = _source280.dtor_range;
              bool _4383___mcc_h568 = _source280.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4384_attributes = _4378___mcc_h557;
              bool _4385_erase = _4383___mcc_h568;
              DAST._INewtypeRange _4386_range = _4382___mcc_h567;
              DAST._IType _4387_b = _4381___mcc_h566;
              {
                RAST._IExpr _out816;
                DCOMP._IOwnership _out817;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out818;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out816, out _out817, out _out818);
                r = _out816;
                resultingOwnership = _out817;
                readIdents = _out818;
              }
            }
          } else if (_source278.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4388___mcc_h572 = _source278.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out819;
              DCOMP._IOwnership _out820;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out821;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out819, out _out820, out _out821);
              r = _out819;
              resultingOwnership = _out820;
              readIdents = _out821;
            }
          } else if (_source278.is_Array) {
            DAST._IType _4389___mcc_h574 = _source278.dtor_element;
            BigInteger _4390___mcc_h575 = _source278.dtor_dims;
            {
              RAST._IExpr _out822;
              DCOMP._IOwnership _out823;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out824;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out822, out _out823, out _out824);
              r = _out822;
              resultingOwnership = _out823;
              readIdents = _out824;
            }
          } else if (_source278.is_Seq) {
            DAST._IType _4391___mcc_h578 = _source278.dtor_element;
            {
              RAST._IExpr _out825;
              DCOMP._IOwnership _out826;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out827;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out825, out _out826, out _out827);
              r = _out825;
              resultingOwnership = _out826;
              readIdents = _out827;
            }
          } else if (_source278.is_Set) {
            DAST._IType _4392___mcc_h580 = _source278.dtor_element;
            {
              RAST._IExpr _out828;
              DCOMP._IOwnership _out829;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out830;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out828, out _out829, out _out830);
              r = _out828;
              resultingOwnership = _out829;
              readIdents = _out830;
            }
          } else if (_source278.is_Multiset) {
            DAST._IType _4393___mcc_h582 = _source278.dtor_element;
            {
              RAST._IExpr _out831;
              DCOMP._IOwnership _out832;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out833;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out831, out _out832, out _out833);
              r = _out831;
              resultingOwnership = _out832;
              readIdents = _out833;
            }
          } else if (_source278.is_Map) {
            DAST._IType _4394___mcc_h584 = _source278.dtor_key;
            DAST._IType _4395___mcc_h585 = _source278.dtor_value;
            {
              RAST._IExpr _out834;
              DCOMP._IOwnership _out835;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out836;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out834, out _out835, out _out836);
              r = _out834;
              resultingOwnership = _out835;
              readIdents = _out836;
            }
          } else if (_source278.is_SetBuilder) {
            DAST._IType _4396___mcc_h588 = _source278.dtor_element;
            {
              RAST._IExpr _out837;
              DCOMP._IOwnership _out838;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out839;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out837, out _out838, out _out839);
              r = _out837;
              resultingOwnership = _out838;
              readIdents = _out839;
            }
          } else if (_source278.is_MapBuilder) {
            DAST._IType _4397___mcc_h590 = _source278.dtor_key;
            DAST._IType _4398___mcc_h591 = _source278.dtor_value;
            {
              RAST._IExpr _out840;
              DCOMP._IOwnership _out841;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out842;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out840, out _out841, out _out842);
              r = _out840;
              resultingOwnership = _out841;
              readIdents = _out842;
            }
          } else if (_source278.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4399___mcc_h594 = _source278.dtor_args;
            DAST._IType _4400___mcc_h595 = _source278.dtor_result;
            {
              RAST._IExpr _out843;
              DCOMP._IOwnership _out844;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out845;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out843, out _out844, out _out845);
              r = _out843;
              resultingOwnership = _out844;
              readIdents = _out845;
            }
          } else if (_source278.is_Primitive) {
            DAST._IPrimitive _4401___mcc_h598 = _source278.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out846;
              DCOMP._IOwnership _out847;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out848;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out846, out _out847, out _out848);
              r = _out846;
              resultingOwnership = _out847;
              readIdents = _out848;
            }
          } else if (_source278.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4402___mcc_h600 = _source278.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out849;
              DCOMP._IOwnership _out850;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out851;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out849, out _out850, out _out851);
              r = _out849;
              resultingOwnership = _out850;
              readIdents = _out851;
            }
          } else if (_source278.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4403___mcc_h602 = _source278.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out852;
              DCOMP._IOwnership _out853;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out854;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out852, out _out853, out _out854);
              r = _out852;
              resultingOwnership = _out853;
              readIdents = _out854;
            }
          } else {
            {
              RAST._IExpr _out855;
              DCOMP._IOwnership _out856;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out857;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out855, out _out856, out _out857);
              r = _out855;
              resultingOwnership = _out856;
              readIdents = _out857;
            }
          }
        } else if (_source248.is_SetBuilder) {
          DAST._IType _4404___mcc_h604 = _source248.dtor_element;
          DAST._IType _source281 = _4021___mcc_h1;
          if (_source281.is_UserDefined) {
            DAST._IResolvedType _4405___mcc_h607 = _source281.dtor_resolved;
            DAST._IResolvedType _source282 = _4405___mcc_h607;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4406___mcc_h609 = _source282.dtor_path;
            Dafny.ISequence<DAST._IType> _4407___mcc_h610 = _source282.dtor_typeArgs;
            DAST._IResolvedTypeBase _4408___mcc_h611 = _source282.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4409___mcc_h612 = _source282.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4410___mcc_h613 = _source282.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4411___mcc_h614 = _source282.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source283 = _4408___mcc_h611;
            if (_source283.is_Class) {
              {
                RAST._IExpr _out858;
                DCOMP._IOwnership _out859;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out860;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out858, out _out859, out _out860);
                r = _out858;
                resultingOwnership = _out859;
                readIdents = _out860;
              }
            } else if (_source283.is_Datatype) {
              {
                RAST._IExpr _out861;
                DCOMP._IOwnership _out862;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out863;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out861, out _out862, out _out863);
                r = _out861;
                resultingOwnership = _out862;
                readIdents = _out863;
              }
            } else if (_source283.is_Trait) {
              {
                RAST._IExpr _out864;
                DCOMP._IOwnership _out865;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out866;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out864, out _out865, out _out866);
                r = _out864;
                resultingOwnership = _out865;
                readIdents = _out866;
              }
            } else {
              DAST._IType _4412___mcc_h621 = _source283.dtor_baseType;
              DAST._INewtypeRange _4413___mcc_h622 = _source283.dtor_range;
              bool _4414___mcc_h623 = _source283.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4415_attributes = _4409___mcc_h612;
              bool _4416_erase = _4414___mcc_h623;
              DAST._INewtypeRange _4417_range = _4413___mcc_h622;
              DAST._IType _4418_b = _4412___mcc_h621;
              {
                RAST._IExpr _out867;
                DCOMP._IOwnership _out868;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out869;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out867, out _out868, out _out869);
                r = _out867;
                resultingOwnership = _out868;
                readIdents = _out869;
              }
            }
          } else if (_source281.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4419___mcc_h627 = _source281.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out870;
              DCOMP._IOwnership _out871;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out872;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out870, out _out871, out _out872);
              r = _out870;
              resultingOwnership = _out871;
              readIdents = _out872;
            }
          } else if (_source281.is_Array) {
            DAST._IType _4420___mcc_h629 = _source281.dtor_element;
            BigInteger _4421___mcc_h630 = _source281.dtor_dims;
            {
              RAST._IExpr _out873;
              DCOMP._IOwnership _out874;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out875;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out873, out _out874, out _out875);
              r = _out873;
              resultingOwnership = _out874;
              readIdents = _out875;
            }
          } else if (_source281.is_Seq) {
            DAST._IType _4422___mcc_h633 = _source281.dtor_element;
            {
              RAST._IExpr _out876;
              DCOMP._IOwnership _out877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out878;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out876, out _out877, out _out878);
              r = _out876;
              resultingOwnership = _out877;
              readIdents = _out878;
            }
          } else if (_source281.is_Set) {
            DAST._IType _4423___mcc_h635 = _source281.dtor_element;
            {
              RAST._IExpr _out879;
              DCOMP._IOwnership _out880;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out881;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out879, out _out880, out _out881);
              r = _out879;
              resultingOwnership = _out880;
              readIdents = _out881;
            }
          } else if (_source281.is_Multiset) {
            DAST._IType _4424___mcc_h637 = _source281.dtor_element;
            {
              RAST._IExpr _out882;
              DCOMP._IOwnership _out883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out884;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out882, out _out883, out _out884);
              r = _out882;
              resultingOwnership = _out883;
              readIdents = _out884;
            }
          } else if (_source281.is_Map) {
            DAST._IType _4425___mcc_h639 = _source281.dtor_key;
            DAST._IType _4426___mcc_h640 = _source281.dtor_value;
            {
              RAST._IExpr _out885;
              DCOMP._IOwnership _out886;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out887;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out885, out _out886, out _out887);
              r = _out885;
              resultingOwnership = _out886;
              readIdents = _out887;
            }
          } else if (_source281.is_SetBuilder) {
            DAST._IType _4427___mcc_h643 = _source281.dtor_element;
            {
              RAST._IExpr _out888;
              DCOMP._IOwnership _out889;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out890;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out888, out _out889, out _out890);
              r = _out888;
              resultingOwnership = _out889;
              readIdents = _out890;
            }
          } else if (_source281.is_MapBuilder) {
            DAST._IType _4428___mcc_h645 = _source281.dtor_key;
            DAST._IType _4429___mcc_h646 = _source281.dtor_value;
            {
              RAST._IExpr _out891;
              DCOMP._IOwnership _out892;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out893;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out891, out _out892, out _out893);
              r = _out891;
              resultingOwnership = _out892;
              readIdents = _out893;
            }
          } else if (_source281.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4430___mcc_h649 = _source281.dtor_args;
            DAST._IType _4431___mcc_h650 = _source281.dtor_result;
            {
              RAST._IExpr _out894;
              DCOMP._IOwnership _out895;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out896;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out894, out _out895, out _out896);
              r = _out894;
              resultingOwnership = _out895;
              readIdents = _out896;
            }
          } else if (_source281.is_Primitive) {
            DAST._IPrimitive _4432___mcc_h653 = _source281.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out897;
              DCOMP._IOwnership _out898;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out899;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out897, out _out898, out _out899);
              r = _out897;
              resultingOwnership = _out898;
              readIdents = _out899;
            }
          } else if (_source281.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4433___mcc_h655 = _source281.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out900;
              DCOMP._IOwnership _out901;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out902;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out900, out _out901, out _out902);
              r = _out900;
              resultingOwnership = _out901;
              readIdents = _out902;
            }
          } else if (_source281.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4434___mcc_h657 = _source281.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out903;
              DCOMP._IOwnership _out904;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out905;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out903, out _out904, out _out905);
              r = _out903;
              resultingOwnership = _out904;
              readIdents = _out905;
            }
          } else {
            {
              RAST._IExpr _out906;
              DCOMP._IOwnership _out907;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out908;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out906, out _out907, out _out908);
              r = _out906;
              resultingOwnership = _out907;
              readIdents = _out908;
            }
          }
        } else if (_source248.is_MapBuilder) {
          DAST._IType _4435___mcc_h659 = _source248.dtor_key;
          DAST._IType _4436___mcc_h660 = _source248.dtor_value;
          DAST._IType _source284 = _4021___mcc_h1;
          if (_source284.is_UserDefined) {
            DAST._IResolvedType _4437___mcc_h665 = _source284.dtor_resolved;
            DAST._IResolvedType _source285 = _4437___mcc_h665;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4438___mcc_h667 = _source285.dtor_path;
            Dafny.ISequence<DAST._IType> _4439___mcc_h668 = _source285.dtor_typeArgs;
            DAST._IResolvedTypeBase _4440___mcc_h669 = _source285.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4441___mcc_h670 = _source285.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4442___mcc_h671 = _source285.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4443___mcc_h672 = _source285.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source286 = _4440___mcc_h669;
            if (_source286.is_Class) {
              {
                RAST._IExpr _out909;
                DCOMP._IOwnership _out910;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out911;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out909, out _out910, out _out911);
                r = _out909;
                resultingOwnership = _out910;
                readIdents = _out911;
              }
            } else if (_source286.is_Datatype) {
              {
                RAST._IExpr _out912;
                DCOMP._IOwnership _out913;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out914;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out912, out _out913, out _out914);
                r = _out912;
                resultingOwnership = _out913;
                readIdents = _out914;
              }
            } else if (_source286.is_Trait) {
              {
                RAST._IExpr _out915;
                DCOMP._IOwnership _out916;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out917;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out915, out _out916, out _out917);
                r = _out915;
                resultingOwnership = _out916;
                readIdents = _out917;
              }
            } else {
              DAST._IType _4444___mcc_h679 = _source286.dtor_baseType;
              DAST._INewtypeRange _4445___mcc_h680 = _source286.dtor_range;
              bool _4446___mcc_h681 = _source286.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4447_attributes = _4441___mcc_h670;
              bool _4448_erase = _4446___mcc_h681;
              DAST._INewtypeRange _4449_range = _4445___mcc_h680;
              DAST._IType _4450_b = _4444___mcc_h679;
              {
                RAST._IExpr _out918;
                DCOMP._IOwnership _out919;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out920;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out918, out _out919, out _out920);
                r = _out918;
                resultingOwnership = _out919;
                readIdents = _out920;
              }
            }
          } else if (_source284.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4451___mcc_h685 = _source284.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out921;
              DCOMP._IOwnership _out922;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out923;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out921, out _out922, out _out923);
              r = _out921;
              resultingOwnership = _out922;
              readIdents = _out923;
            }
          } else if (_source284.is_Array) {
            DAST._IType _4452___mcc_h687 = _source284.dtor_element;
            BigInteger _4453___mcc_h688 = _source284.dtor_dims;
            {
              RAST._IExpr _out924;
              DCOMP._IOwnership _out925;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out926;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out924, out _out925, out _out926);
              r = _out924;
              resultingOwnership = _out925;
              readIdents = _out926;
            }
          } else if (_source284.is_Seq) {
            DAST._IType _4454___mcc_h691 = _source284.dtor_element;
            {
              RAST._IExpr _out927;
              DCOMP._IOwnership _out928;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out929;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out927, out _out928, out _out929);
              r = _out927;
              resultingOwnership = _out928;
              readIdents = _out929;
            }
          } else if (_source284.is_Set) {
            DAST._IType _4455___mcc_h693 = _source284.dtor_element;
            {
              RAST._IExpr _out930;
              DCOMP._IOwnership _out931;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out932;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out930, out _out931, out _out932);
              r = _out930;
              resultingOwnership = _out931;
              readIdents = _out932;
            }
          } else if (_source284.is_Multiset) {
            DAST._IType _4456___mcc_h695 = _source284.dtor_element;
            {
              RAST._IExpr _out933;
              DCOMP._IOwnership _out934;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out935;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out933, out _out934, out _out935);
              r = _out933;
              resultingOwnership = _out934;
              readIdents = _out935;
            }
          } else if (_source284.is_Map) {
            DAST._IType _4457___mcc_h697 = _source284.dtor_key;
            DAST._IType _4458___mcc_h698 = _source284.dtor_value;
            {
              RAST._IExpr _out936;
              DCOMP._IOwnership _out937;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out938;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out936, out _out937, out _out938);
              r = _out936;
              resultingOwnership = _out937;
              readIdents = _out938;
            }
          } else if (_source284.is_SetBuilder) {
            DAST._IType _4459___mcc_h701 = _source284.dtor_element;
            {
              RAST._IExpr _out939;
              DCOMP._IOwnership _out940;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out941;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out939, out _out940, out _out941);
              r = _out939;
              resultingOwnership = _out940;
              readIdents = _out941;
            }
          } else if (_source284.is_MapBuilder) {
            DAST._IType _4460___mcc_h703 = _source284.dtor_key;
            DAST._IType _4461___mcc_h704 = _source284.dtor_value;
            {
              RAST._IExpr _out942;
              DCOMP._IOwnership _out943;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out944;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out942, out _out943, out _out944);
              r = _out942;
              resultingOwnership = _out943;
              readIdents = _out944;
            }
          } else if (_source284.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4462___mcc_h707 = _source284.dtor_args;
            DAST._IType _4463___mcc_h708 = _source284.dtor_result;
            {
              RAST._IExpr _out945;
              DCOMP._IOwnership _out946;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out947;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out945, out _out946, out _out947);
              r = _out945;
              resultingOwnership = _out946;
              readIdents = _out947;
            }
          } else if (_source284.is_Primitive) {
            DAST._IPrimitive _4464___mcc_h711 = _source284.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out948;
              DCOMP._IOwnership _out949;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out950;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out948, out _out949, out _out950);
              r = _out948;
              resultingOwnership = _out949;
              readIdents = _out950;
            }
          } else if (_source284.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4465___mcc_h713 = _source284.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out951;
              DCOMP._IOwnership _out952;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out953;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out951, out _out952, out _out953);
              r = _out951;
              resultingOwnership = _out952;
              readIdents = _out953;
            }
          } else if (_source284.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4466___mcc_h715 = _source284.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out954;
              DCOMP._IOwnership _out955;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out956;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out954, out _out955, out _out956);
              r = _out954;
              resultingOwnership = _out955;
              readIdents = _out956;
            }
          } else {
            {
              RAST._IExpr _out957;
              DCOMP._IOwnership _out958;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out959;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out957, out _out958, out _out959);
              r = _out957;
              resultingOwnership = _out958;
              readIdents = _out959;
            }
          }
        } else if (_source248.is_Arrow) {
          Dafny.ISequence<DAST._IType> _4467___mcc_h717 = _source248.dtor_args;
          DAST._IType _4468___mcc_h718 = _source248.dtor_result;
          DAST._IType _source287 = _4021___mcc_h1;
          if (_source287.is_UserDefined) {
            DAST._IResolvedType _4469___mcc_h723 = _source287.dtor_resolved;
            DAST._IResolvedType _source288 = _4469___mcc_h723;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4470___mcc_h725 = _source288.dtor_path;
            Dafny.ISequence<DAST._IType> _4471___mcc_h726 = _source288.dtor_typeArgs;
            DAST._IResolvedTypeBase _4472___mcc_h727 = _source288.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4473___mcc_h728 = _source288.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4474___mcc_h729 = _source288.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4475___mcc_h730 = _source288.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source289 = _4472___mcc_h727;
            if (_source289.is_Class) {
              {
                RAST._IExpr _out960;
                DCOMP._IOwnership _out961;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out962;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out960, out _out961, out _out962);
                r = _out960;
                resultingOwnership = _out961;
                readIdents = _out962;
              }
            } else if (_source289.is_Datatype) {
              {
                RAST._IExpr _out963;
                DCOMP._IOwnership _out964;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out965;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out963, out _out964, out _out965);
                r = _out963;
                resultingOwnership = _out964;
                readIdents = _out965;
              }
            } else if (_source289.is_Trait) {
              {
                RAST._IExpr _out966;
                DCOMP._IOwnership _out967;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out968;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out966, out _out967, out _out968);
                r = _out966;
                resultingOwnership = _out967;
                readIdents = _out968;
              }
            } else {
              DAST._IType _4476___mcc_h737 = _source289.dtor_baseType;
              DAST._INewtypeRange _4477___mcc_h738 = _source289.dtor_range;
              bool _4478___mcc_h739 = _source289.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4479_attributes = _4473___mcc_h728;
              bool _4480_erase = _4478___mcc_h739;
              DAST._INewtypeRange _4481_range = _4477___mcc_h738;
              DAST._IType _4482_b = _4476___mcc_h737;
              {
                RAST._IExpr _out969;
                DCOMP._IOwnership _out970;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out971;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out969, out _out970, out _out971);
                r = _out969;
                resultingOwnership = _out970;
                readIdents = _out971;
              }
            }
          } else if (_source287.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4483___mcc_h743 = _source287.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out972;
              DCOMP._IOwnership _out973;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out974;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out972, out _out973, out _out974);
              r = _out972;
              resultingOwnership = _out973;
              readIdents = _out974;
            }
          } else if (_source287.is_Array) {
            DAST._IType _4484___mcc_h745 = _source287.dtor_element;
            BigInteger _4485___mcc_h746 = _source287.dtor_dims;
            {
              RAST._IExpr _out975;
              DCOMP._IOwnership _out976;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out977;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out975, out _out976, out _out977);
              r = _out975;
              resultingOwnership = _out976;
              readIdents = _out977;
            }
          } else if (_source287.is_Seq) {
            DAST._IType _4486___mcc_h749 = _source287.dtor_element;
            {
              RAST._IExpr _out978;
              DCOMP._IOwnership _out979;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out980;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out978, out _out979, out _out980);
              r = _out978;
              resultingOwnership = _out979;
              readIdents = _out980;
            }
          } else if (_source287.is_Set) {
            DAST._IType _4487___mcc_h751 = _source287.dtor_element;
            {
              RAST._IExpr _out981;
              DCOMP._IOwnership _out982;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out983;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out981, out _out982, out _out983);
              r = _out981;
              resultingOwnership = _out982;
              readIdents = _out983;
            }
          } else if (_source287.is_Multiset) {
            DAST._IType _4488___mcc_h753 = _source287.dtor_element;
            {
              RAST._IExpr _out984;
              DCOMP._IOwnership _out985;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out986;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out984, out _out985, out _out986);
              r = _out984;
              resultingOwnership = _out985;
              readIdents = _out986;
            }
          } else if (_source287.is_Map) {
            DAST._IType _4489___mcc_h755 = _source287.dtor_key;
            DAST._IType _4490___mcc_h756 = _source287.dtor_value;
            {
              RAST._IExpr _out987;
              DCOMP._IOwnership _out988;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out989;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out987, out _out988, out _out989);
              r = _out987;
              resultingOwnership = _out988;
              readIdents = _out989;
            }
          } else if (_source287.is_SetBuilder) {
            DAST._IType _4491___mcc_h759 = _source287.dtor_element;
            {
              RAST._IExpr _out990;
              DCOMP._IOwnership _out991;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out992;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out990, out _out991, out _out992);
              r = _out990;
              resultingOwnership = _out991;
              readIdents = _out992;
            }
          } else if (_source287.is_MapBuilder) {
            DAST._IType _4492___mcc_h761 = _source287.dtor_key;
            DAST._IType _4493___mcc_h762 = _source287.dtor_value;
            {
              RAST._IExpr _out993;
              DCOMP._IOwnership _out994;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out995;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out993, out _out994, out _out995);
              r = _out993;
              resultingOwnership = _out994;
              readIdents = _out995;
            }
          } else if (_source287.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4494___mcc_h765 = _source287.dtor_args;
            DAST._IType _4495___mcc_h766 = _source287.dtor_result;
            {
              RAST._IExpr _out996;
              DCOMP._IOwnership _out997;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out998;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out996, out _out997, out _out998);
              r = _out996;
              resultingOwnership = _out997;
              readIdents = _out998;
            }
          } else if (_source287.is_Primitive) {
            DAST._IPrimitive _4496___mcc_h769 = _source287.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out999;
              DCOMP._IOwnership _out1000;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1001;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out999, out _out1000, out _out1001);
              r = _out999;
              resultingOwnership = _out1000;
              readIdents = _out1001;
            }
          } else if (_source287.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4497___mcc_h771 = _source287.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1002;
              DCOMP._IOwnership _out1003;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1004;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1002, out _out1003, out _out1004);
              r = _out1002;
              resultingOwnership = _out1003;
              readIdents = _out1004;
            }
          } else if (_source287.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4498___mcc_h773 = _source287.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1005;
              DCOMP._IOwnership _out1006;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1007;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1005, out _out1006, out _out1007);
              r = _out1005;
              resultingOwnership = _out1006;
              readIdents = _out1007;
            }
          } else {
            {
              RAST._IExpr _out1008;
              DCOMP._IOwnership _out1009;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1010;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1008, out _out1009, out _out1010);
              r = _out1008;
              resultingOwnership = _out1009;
              readIdents = _out1010;
            }
          }
        } else if (_source248.is_Primitive) {
          DAST._IPrimitive _4499___mcc_h775 = _source248.dtor_Primitive_i_a0;
          DAST._IPrimitive _source290 = _4499___mcc_h775;
          if (_source290.is_Int) {
            DAST._IType _source291 = _4021___mcc_h1;
            if (_source291.is_UserDefined) {
              DAST._IResolvedType _4500___mcc_h778 = _source291.dtor_resolved;
              DAST._IResolvedType _source292 = _4500___mcc_h778;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4501___mcc_h780 = _source292.dtor_path;
              Dafny.ISequence<DAST._IType> _4502___mcc_h781 = _source292.dtor_typeArgs;
              DAST._IResolvedTypeBase _4503___mcc_h782 = _source292.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4504___mcc_h783 = _source292.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4505___mcc_h784 = _source292.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4506___mcc_h785 = _source292.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source293 = _4503___mcc_h782;
              if (_source293.is_Class) {
                {
                  RAST._IExpr _out1011;
                  DCOMP._IOwnership _out1012;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1013;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1011, out _out1012, out _out1013);
                  r = _out1011;
                  resultingOwnership = _out1012;
                  readIdents = _out1013;
                }
              } else if (_source293.is_Datatype) {
                {
                  RAST._IExpr _out1014;
                  DCOMP._IOwnership _out1015;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1016;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1014, out _out1015, out _out1016);
                  r = _out1014;
                  resultingOwnership = _out1015;
                  readIdents = _out1016;
                }
              } else if (_source293.is_Trait) {
                {
                  RAST._IExpr _out1017;
                  DCOMP._IOwnership _out1018;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1019;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1017, out _out1018, out _out1019);
                  r = _out1017;
                  resultingOwnership = _out1018;
                  readIdents = _out1019;
                }
              } else {
                DAST._IType _4507___mcc_h792 = _source293.dtor_baseType;
                DAST._INewtypeRange _4508___mcc_h793 = _source293.dtor_range;
                bool _4509___mcc_h794 = _source293.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4510_attributes = _4504___mcc_h783;
                bool _4511_erase = _4509___mcc_h794;
                DAST._INewtypeRange _4512_range = _4508___mcc_h793;
                DAST._IType _4513_b = _4507___mcc_h792;
                {
                  RAST._IExpr _out1020;
                  DCOMP._IOwnership _out1021;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1022;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1020, out _out1021, out _out1022);
                  r = _out1020;
                  resultingOwnership = _out1021;
                  readIdents = _out1022;
                }
              }
            } else if (_source291.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4514___mcc_h798 = _source291.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1023;
                DCOMP._IOwnership _out1024;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1025;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1023, out _out1024, out _out1025);
                r = _out1023;
                resultingOwnership = _out1024;
                readIdents = _out1025;
              }
            } else if (_source291.is_Array) {
              DAST._IType _4515___mcc_h800 = _source291.dtor_element;
              BigInteger _4516___mcc_h801 = _source291.dtor_dims;
              {
                RAST._IExpr _out1026;
                DCOMP._IOwnership _out1027;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1028;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1026, out _out1027, out _out1028);
                r = _out1026;
                resultingOwnership = _out1027;
                readIdents = _out1028;
              }
            } else if (_source291.is_Seq) {
              DAST._IType _4517___mcc_h804 = _source291.dtor_element;
              {
                RAST._IExpr _out1029;
                DCOMP._IOwnership _out1030;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1031;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1029, out _out1030, out _out1031);
                r = _out1029;
                resultingOwnership = _out1030;
                readIdents = _out1031;
              }
            } else if (_source291.is_Set) {
              DAST._IType _4518___mcc_h806 = _source291.dtor_element;
              {
                RAST._IExpr _out1032;
                DCOMP._IOwnership _out1033;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1034;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1032, out _out1033, out _out1034);
                r = _out1032;
                resultingOwnership = _out1033;
                readIdents = _out1034;
              }
            } else if (_source291.is_Multiset) {
              DAST._IType _4519___mcc_h808 = _source291.dtor_element;
              {
                RAST._IExpr _out1035;
                DCOMP._IOwnership _out1036;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1037;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1035, out _out1036, out _out1037);
                r = _out1035;
                resultingOwnership = _out1036;
                readIdents = _out1037;
              }
            } else if (_source291.is_Map) {
              DAST._IType _4520___mcc_h810 = _source291.dtor_key;
              DAST._IType _4521___mcc_h811 = _source291.dtor_value;
              {
                RAST._IExpr _out1038;
                DCOMP._IOwnership _out1039;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1040;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1038, out _out1039, out _out1040);
                r = _out1038;
                resultingOwnership = _out1039;
                readIdents = _out1040;
              }
            } else if (_source291.is_SetBuilder) {
              DAST._IType _4522___mcc_h814 = _source291.dtor_element;
              {
                RAST._IExpr _out1041;
                DCOMP._IOwnership _out1042;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1043;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1041, out _out1042, out _out1043);
                r = _out1041;
                resultingOwnership = _out1042;
                readIdents = _out1043;
              }
            } else if (_source291.is_MapBuilder) {
              DAST._IType _4523___mcc_h816 = _source291.dtor_key;
              DAST._IType _4524___mcc_h817 = _source291.dtor_value;
              {
                RAST._IExpr _out1044;
                DCOMP._IOwnership _out1045;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1046;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1044, out _out1045, out _out1046);
                r = _out1044;
                resultingOwnership = _out1045;
                readIdents = _out1046;
              }
            } else if (_source291.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4525___mcc_h820 = _source291.dtor_args;
              DAST._IType _4526___mcc_h821 = _source291.dtor_result;
              {
                RAST._IExpr _out1047;
                DCOMP._IOwnership _out1048;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1049;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1047, out _out1048, out _out1049);
                r = _out1047;
                resultingOwnership = _out1048;
                readIdents = _out1049;
              }
            } else if (_source291.is_Primitive) {
              DAST._IPrimitive _4527___mcc_h824 = _source291.dtor_Primitive_i_a0;
              DAST._IPrimitive _source294 = _4527___mcc_h824;
              if (_source294.is_Int) {
                {
                  RAST._IExpr _out1050;
                  DCOMP._IOwnership _out1051;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1052;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1050, out _out1051, out _out1052);
                  r = _out1050;
                  resultingOwnership = _out1051;
                  readIdents = _out1052;
                }
              } else if (_source294.is_Real) {
                {
                  RAST._IExpr _4528_recursiveGen;
                  DCOMP._IOwnership _4529___v126;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4530_recIdents;
                  RAST._IExpr _out1053;
                  DCOMP._IOwnership _out1054;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1055;
                  (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1053, out _out1054, out _out1055);
                  _4528_recursiveGen = _out1053;
                  _4529___v126 = _out1054;
                  _4530_recIdents = _out1055;
                  r = RAST.__default.RcNew(RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::BigRational::from_integer("), (_4528_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")"))));
                  RAST._IExpr _out1056;
                  DCOMP._IOwnership _out1057;
                  (this).FromOwned(r, expectedOwnership, out _out1056, out _out1057);
                  r = _out1056;
                  resultingOwnership = _out1057;
                  readIdents = _4530_recIdents;
                }
              } else if (_source294.is_String) {
                {
                  RAST._IExpr _out1058;
                  DCOMP._IOwnership _out1059;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1060;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1058, out _out1059, out _out1060);
                  r = _out1058;
                  resultingOwnership = _out1059;
                  readIdents = _out1060;
                }
              } else if (_source294.is_Bool) {
                {
                  RAST._IExpr _out1061;
                  DCOMP._IOwnership _out1062;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1063;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1061, out _out1062, out _out1063);
                  r = _out1061;
                  resultingOwnership = _out1062;
                  readIdents = _out1063;
                }
              } else {
                {
                  RAST._IType _4531_rhsType;
                  RAST._IType _out1064;
                  _out1064 = (this).GenType(_4016_toTpe, DCOMP.GenTypeContext.InBinding());
                  _4531_rhsType = _out1064;
                  RAST._IExpr _4532_recursiveGen;
                  DCOMP._IOwnership _4533___v132;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4534_recIdents;
                  RAST._IExpr _out1065;
                  DCOMP._IOwnership _out1066;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1067;
                  (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1065, out _out1066, out _out1067);
                  _4532_recursiveGen = _out1065;
                  _4533___v132 = _out1066;
                  _4534_recIdents = _out1067;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char::from_u32(<u32 as ::dafny_runtime::NumCast>::from("), (_4532_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()).unwrap()")));
                  RAST._IExpr _out1068;
                  DCOMP._IOwnership _out1069;
                  (this).FromOwned(r, expectedOwnership, out _out1068, out _out1069);
                  r = _out1068;
                  resultingOwnership = _out1069;
                  readIdents = _4534_recIdents;
                }
              }
            } else if (_source291.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4535___mcc_h826 = _source291.dtor_Passthrough_i_a0;
              {
                RAST._IType _4536_rhsType;
                RAST._IType _out1070;
                _out1070 = (this).GenType(_4016_toTpe, DCOMP.GenTypeContext.InBinding());
                _4536_rhsType = _out1070;
                RAST._IExpr _4537_recursiveGen;
                DCOMP._IOwnership _4538___v129;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4539_recIdents;
                RAST._IExpr _out1071;
                DCOMP._IOwnership _out1072;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1073;
                (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1071, out _out1072, out _out1073);
                _4537_recursiveGen = _out1071;
                _4538___v129 = _out1072;
                _4539_recIdents = _out1073;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_4536_rhsType)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as ::dafny_runtime::NumCast>::from(")), (_4537_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").unwrap()")));
                RAST._IExpr _out1074;
                DCOMP._IOwnership _out1075;
                (this).FromOwned(r, expectedOwnership, out _out1074, out _out1075);
                r = _out1074;
                resultingOwnership = _out1075;
                readIdents = _4539_recIdents;
              }
            } else if (_source291.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4540___mcc_h828 = _source291.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1076;
                DCOMP._IOwnership _out1077;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1078;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1076, out _out1077, out _out1078);
                r = _out1076;
                resultingOwnership = _out1077;
                readIdents = _out1078;
              }
            } else {
              {
                RAST._IExpr _out1079;
                DCOMP._IOwnership _out1080;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1081;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1079, out _out1080, out _out1081);
                r = _out1079;
                resultingOwnership = _out1080;
                readIdents = _out1081;
              }
            }
          } else if (_source290.is_Real) {
            DAST._IType _source295 = _4021___mcc_h1;
            if (_source295.is_UserDefined) {
              DAST._IResolvedType _4541___mcc_h830 = _source295.dtor_resolved;
              DAST._IResolvedType _source296 = _4541___mcc_h830;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4542___mcc_h832 = _source296.dtor_path;
              Dafny.ISequence<DAST._IType> _4543___mcc_h833 = _source296.dtor_typeArgs;
              DAST._IResolvedTypeBase _4544___mcc_h834 = _source296.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4545___mcc_h835 = _source296.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4546___mcc_h836 = _source296.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4547___mcc_h837 = _source296.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source297 = _4544___mcc_h834;
              if (_source297.is_Class) {
                {
                  RAST._IExpr _out1082;
                  DCOMP._IOwnership _out1083;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1084;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1082, out _out1083, out _out1084);
                  r = _out1082;
                  resultingOwnership = _out1083;
                  readIdents = _out1084;
                }
              } else if (_source297.is_Datatype) {
                {
                  RAST._IExpr _out1085;
                  DCOMP._IOwnership _out1086;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1087;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1085, out _out1086, out _out1087);
                  r = _out1085;
                  resultingOwnership = _out1086;
                  readIdents = _out1087;
                }
              } else if (_source297.is_Trait) {
                {
                  RAST._IExpr _out1088;
                  DCOMP._IOwnership _out1089;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1090;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1088, out _out1089, out _out1090);
                  r = _out1088;
                  resultingOwnership = _out1089;
                  readIdents = _out1090;
                }
              } else {
                DAST._IType _4548___mcc_h844 = _source297.dtor_baseType;
                DAST._INewtypeRange _4549___mcc_h845 = _source297.dtor_range;
                bool _4550___mcc_h846 = _source297.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4551_attributes = _4545___mcc_h835;
                bool _4552_erase = _4550___mcc_h846;
                DAST._INewtypeRange _4553_range = _4549___mcc_h845;
                DAST._IType _4554_b = _4548___mcc_h844;
                {
                  RAST._IExpr _out1091;
                  DCOMP._IOwnership _out1092;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1093;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1091, out _out1092, out _out1093);
                  r = _out1091;
                  resultingOwnership = _out1092;
                  readIdents = _out1093;
                }
              }
            } else if (_source295.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4555___mcc_h850 = _source295.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1094;
                DCOMP._IOwnership _out1095;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1096;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1094, out _out1095, out _out1096);
                r = _out1094;
                resultingOwnership = _out1095;
                readIdents = _out1096;
              }
            } else if (_source295.is_Array) {
              DAST._IType _4556___mcc_h852 = _source295.dtor_element;
              BigInteger _4557___mcc_h853 = _source295.dtor_dims;
              {
                RAST._IExpr _out1097;
                DCOMP._IOwnership _out1098;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1099;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1097, out _out1098, out _out1099);
                r = _out1097;
                resultingOwnership = _out1098;
                readIdents = _out1099;
              }
            } else if (_source295.is_Seq) {
              DAST._IType _4558___mcc_h856 = _source295.dtor_element;
              {
                RAST._IExpr _out1100;
                DCOMP._IOwnership _out1101;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1102;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1100, out _out1101, out _out1102);
                r = _out1100;
                resultingOwnership = _out1101;
                readIdents = _out1102;
              }
            } else if (_source295.is_Set) {
              DAST._IType _4559___mcc_h858 = _source295.dtor_element;
              {
                RAST._IExpr _out1103;
                DCOMP._IOwnership _out1104;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1105;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1103, out _out1104, out _out1105);
                r = _out1103;
                resultingOwnership = _out1104;
                readIdents = _out1105;
              }
            } else if (_source295.is_Multiset) {
              DAST._IType _4560___mcc_h860 = _source295.dtor_element;
              {
                RAST._IExpr _out1106;
                DCOMP._IOwnership _out1107;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1108;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1106, out _out1107, out _out1108);
                r = _out1106;
                resultingOwnership = _out1107;
                readIdents = _out1108;
              }
            } else if (_source295.is_Map) {
              DAST._IType _4561___mcc_h862 = _source295.dtor_key;
              DAST._IType _4562___mcc_h863 = _source295.dtor_value;
              {
                RAST._IExpr _out1109;
                DCOMP._IOwnership _out1110;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1111;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1109, out _out1110, out _out1111);
                r = _out1109;
                resultingOwnership = _out1110;
                readIdents = _out1111;
              }
            } else if (_source295.is_SetBuilder) {
              DAST._IType _4563___mcc_h866 = _source295.dtor_element;
              {
                RAST._IExpr _out1112;
                DCOMP._IOwnership _out1113;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1114;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1112, out _out1113, out _out1114);
                r = _out1112;
                resultingOwnership = _out1113;
                readIdents = _out1114;
              }
            } else if (_source295.is_MapBuilder) {
              DAST._IType _4564___mcc_h868 = _source295.dtor_key;
              DAST._IType _4565___mcc_h869 = _source295.dtor_value;
              {
                RAST._IExpr _out1115;
                DCOMP._IOwnership _out1116;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1117;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1115, out _out1116, out _out1117);
                r = _out1115;
                resultingOwnership = _out1116;
                readIdents = _out1117;
              }
            } else if (_source295.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4566___mcc_h872 = _source295.dtor_args;
              DAST._IType _4567___mcc_h873 = _source295.dtor_result;
              {
                RAST._IExpr _out1118;
                DCOMP._IOwnership _out1119;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1120;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1118, out _out1119, out _out1120);
                r = _out1118;
                resultingOwnership = _out1119;
                readIdents = _out1120;
              }
            } else if (_source295.is_Primitive) {
              DAST._IPrimitive _4568___mcc_h876 = _source295.dtor_Primitive_i_a0;
              DAST._IPrimitive _source298 = _4568___mcc_h876;
              if (_source298.is_Int) {
                {
                  RAST._IExpr _4569_recursiveGen;
                  DCOMP._IOwnership _4570___v127;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4571_recIdents;
                  RAST._IExpr _out1121;
                  DCOMP._IOwnership _out1122;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1123;
                  (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1121, out _out1122, out _out1123);
                  _4569_recursiveGen = _out1121;
                  _4570___v127 = _out1122;
                  _4571_recIdents = _out1123;
                  r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::dafny_rational_to_int("), (_4569_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
                  RAST._IExpr _out1124;
                  DCOMP._IOwnership _out1125;
                  (this).FromOwned(r, expectedOwnership, out _out1124, out _out1125);
                  r = _out1124;
                  resultingOwnership = _out1125;
                  readIdents = _4571_recIdents;
                }
              } else if (_source298.is_Real) {
                {
                  RAST._IExpr _out1126;
                  DCOMP._IOwnership _out1127;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1128;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1126, out _out1127, out _out1128);
                  r = _out1126;
                  resultingOwnership = _out1127;
                  readIdents = _out1128;
                }
              } else if (_source298.is_String) {
                {
                  RAST._IExpr _out1129;
                  DCOMP._IOwnership _out1130;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1131;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1129, out _out1130, out _out1131);
                  r = _out1129;
                  resultingOwnership = _out1130;
                  readIdents = _out1131;
                }
              } else if (_source298.is_Bool) {
                {
                  RAST._IExpr _out1132;
                  DCOMP._IOwnership _out1133;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1134;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1132, out _out1133, out _out1134);
                  r = _out1132;
                  resultingOwnership = _out1133;
                  readIdents = _out1134;
                }
              } else {
                {
                  RAST._IExpr _out1135;
                  DCOMP._IOwnership _out1136;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1137;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1135, out _out1136, out _out1137);
                  r = _out1135;
                  resultingOwnership = _out1136;
                  readIdents = _out1137;
                }
              }
            } else if (_source295.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4572___mcc_h878 = _source295.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1138;
                DCOMP._IOwnership _out1139;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1140;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1138, out _out1139, out _out1140);
                r = _out1138;
                resultingOwnership = _out1139;
                readIdents = _out1140;
              }
            } else if (_source295.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4573___mcc_h880 = _source295.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1141;
                DCOMP._IOwnership _out1142;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1143;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1141, out _out1142, out _out1143);
                r = _out1141;
                resultingOwnership = _out1142;
                readIdents = _out1143;
              }
            } else {
              {
                RAST._IExpr _out1144;
                DCOMP._IOwnership _out1145;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1146;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1144, out _out1145, out _out1146);
                r = _out1144;
                resultingOwnership = _out1145;
                readIdents = _out1146;
              }
            }
          } else if (_source290.is_String) {
            DAST._IType _source299 = _4021___mcc_h1;
            if (_source299.is_UserDefined) {
              DAST._IResolvedType _4574___mcc_h882 = _source299.dtor_resolved;
              DAST._IResolvedType _source300 = _4574___mcc_h882;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4575___mcc_h884 = _source300.dtor_path;
              Dafny.ISequence<DAST._IType> _4576___mcc_h885 = _source300.dtor_typeArgs;
              DAST._IResolvedTypeBase _4577___mcc_h886 = _source300.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4578___mcc_h887 = _source300.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4579___mcc_h888 = _source300.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4580___mcc_h889 = _source300.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source301 = _4577___mcc_h886;
              if (_source301.is_Class) {
                {
                  RAST._IExpr _out1147;
                  DCOMP._IOwnership _out1148;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1149;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1147, out _out1148, out _out1149);
                  r = _out1147;
                  resultingOwnership = _out1148;
                  readIdents = _out1149;
                }
              } else if (_source301.is_Datatype) {
                {
                  RAST._IExpr _out1150;
                  DCOMP._IOwnership _out1151;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1152;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1150, out _out1151, out _out1152);
                  r = _out1150;
                  resultingOwnership = _out1151;
                  readIdents = _out1152;
                }
              } else if (_source301.is_Trait) {
                {
                  RAST._IExpr _out1153;
                  DCOMP._IOwnership _out1154;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1155;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1153, out _out1154, out _out1155);
                  r = _out1153;
                  resultingOwnership = _out1154;
                  readIdents = _out1155;
                }
              } else {
                DAST._IType _4581___mcc_h896 = _source301.dtor_baseType;
                DAST._INewtypeRange _4582___mcc_h897 = _source301.dtor_range;
                bool _4583___mcc_h898 = _source301.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4584_attributes = _4578___mcc_h887;
                bool _4585_erase = _4583___mcc_h898;
                DAST._INewtypeRange _4586_range = _4582___mcc_h897;
                DAST._IType _4587_b = _4581___mcc_h896;
                {
                  RAST._IExpr _out1156;
                  DCOMP._IOwnership _out1157;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1158;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1156, out _out1157, out _out1158);
                  r = _out1156;
                  resultingOwnership = _out1157;
                  readIdents = _out1158;
                }
              }
            } else if (_source299.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4588___mcc_h902 = _source299.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1159;
                DCOMP._IOwnership _out1160;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1161;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1159, out _out1160, out _out1161);
                r = _out1159;
                resultingOwnership = _out1160;
                readIdents = _out1161;
              }
            } else if (_source299.is_Array) {
              DAST._IType _4589___mcc_h904 = _source299.dtor_element;
              BigInteger _4590___mcc_h905 = _source299.dtor_dims;
              {
                RAST._IExpr _out1162;
                DCOMP._IOwnership _out1163;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1164;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1162, out _out1163, out _out1164);
                r = _out1162;
                resultingOwnership = _out1163;
                readIdents = _out1164;
              }
            } else if (_source299.is_Seq) {
              DAST._IType _4591___mcc_h908 = _source299.dtor_element;
              {
                RAST._IExpr _out1165;
                DCOMP._IOwnership _out1166;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1167;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1165, out _out1166, out _out1167);
                r = _out1165;
                resultingOwnership = _out1166;
                readIdents = _out1167;
              }
            } else if (_source299.is_Set) {
              DAST._IType _4592___mcc_h910 = _source299.dtor_element;
              {
                RAST._IExpr _out1168;
                DCOMP._IOwnership _out1169;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1170;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1168, out _out1169, out _out1170);
                r = _out1168;
                resultingOwnership = _out1169;
                readIdents = _out1170;
              }
            } else if (_source299.is_Multiset) {
              DAST._IType _4593___mcc_h912 = _source299.dtor_element;
              {
                RAST._IExpr _out1171;
                DCOMP._IOwnership _out1172;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1173;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1171, out _out1172, out _out1173);
                r = _out1171;
                resultingOwnership = _out1172;
                readIdents = _out1173;
              }
            } else if (_source299.is_Map) {
              DAST._IType _4594___mcc_h914 = _source299.dtor_key;
              DAST._IType _4595___mcc_h915 = _source299.dtor_value;
              {
                RAST._IExpr _out1174;
                DCOMP._IOwnership _out1175;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1176;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1174, out _out1175, out _out1176);
                r = _out1174;
                resultingOwnership = _out1175;
                readIdents = _out1176;
              }
            } else if (_source299.is_SetBuilder) {
              DAST._IType _4596___mcc_h918 = _source299.dtor_element;
              {
                RAST._IExpr _out1177;
                DCOMP._IOwnership _out1178;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1179;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1177, out _out1178, out _out1179);
                r = _out1177;
                resultingOwnership = _out1178;
                readIdents = _out1179;
              }
            } else if (_source299.is_MapBuilder) {
              DAST._IType _4597___mcc_h920 = _source299.dtor_key;
              DAST._IType _4598___mcc_h921 = _source299.dtor_value;
              {
                RAST._IExpr _out1180;
                DCOMP._IOwnership _out1181;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1182;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1180, out _out1181, out _out1182);
                r = _out1180;
                resultingOwnership = _out1181;
                readIdents = _out1182;
              }
            } else if (_source299.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4599___mcc_h924 = _source299.dtor_args;
              DAST._IType _4600___mcc_h925 = _source299.dtor_result;
              {
                RAST._IExpr _out1183;
                DCOMP._IOwnership _out1184;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1185;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1183, out _out1184, out _out1185);
                r = _out1183;
                resultingOwnership = _out1184;
                readIdents = _out1185;
              }
            } else if (_source299.is_Primitive) {
              DAST._IPrimitive _4601___mcc_h928 = _source299.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out1186;
                DCOMP._IOwnership _out1187;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1188;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1186, out _out1187, out _out1188);
                r = _out1186;
                resultingOwnership = _out1187;
                readIdents = _out1188;
              }
            } else if (_source299.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4602___mcc_h930 = _source299.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1189;
                DCOMP._IOwnership _out1190;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1191;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1189, out _out1190, out _out1191);
                r = _out1189;
                resultingOwnership = _out1190;
                readIdents = _out1191;
              }
            } else if (_source299.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4603___mcc_h932 = _source299.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1192;
                DCOMP._IOwnership _out1193;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1194;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1192, out _out1193, out _out1194);
                r = _out1192;
                resultingOwnership = _out1193;
                readIdents = _out1194;
              }
            } else {
              {
                RAST._IExpr _out1195;
                DCOMP._IOwnership _out1196;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1197;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1195, out _out1196, out _out1197);
                r = _out1195;
                resultingOwnership = _out1196;
                readIdents = _out1197;
              }
            }
          } else if (_source290.is_Bool) {
            DAST._IType _source302 = _4021___mcc_h1;
            if (_source302.is_UserDefined) {
              DAST._IResolvedType _4604___mcc_h934 = _source302.dtor_resolved;
              DAST._IResolvedType _source303 = _4604___mcc_h934;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4605___mcc_h936 = _source303.dtor_path;
              Dafny.ISequence<DAST._IType> _4606___mcc_h937 = _source303.dtor_typeArgs;
              DAST._IResolvedTypeBase _4607___mcc_h938 = _source303.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4608___mcc_h939 = _source303.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4609___mcc_h940 = _source303.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4610___mcc_h941 = _source303.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source304 = _4607___mcc_h938;
              if (_source304.is_Class) {
                {
                  RAST._IExpr _out1198;
                  DCOMP._IOwnership _out1199;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1200;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1198, out _out1199, out _out1200);
                  r = _out1198;
                  resultingOwnership = _out1199;
                  readIdents = _out1200;
                }
              } else if (_source304.is_Datatype) {
                {
                  RAST._IExpr _out1201;
                  DCOMP._IOwnership _out1202;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1203;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1201, out _out1202, out _out1203);
                  r = _out1201;
                  resultingOwnership = _out1202;
                  readIdents = _out1203;
                }
              } else if (_source304.is_Trait) {
                {
                  RAST._IExpr _out1204;
                  DCOMP._IOwnership _out1205;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1206;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1204, out _out1205, out _out1206);
                  r = _out1204;
                  resultingOwnership = _out1205;
                  readIdents = _out1206;
                }
              } else {
                DAST._IType _4611___mcc_h948 = _source304.dtor_baseType;
                DAST._INewtypeRange _4612___mcc_h949 = _source304.dtor_range;
                bool _4613___mcc_h950 = _source304.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4614_attributes = _4608___mcc_h939;
                bool _4615_erase = _4613___mcc_h950;
                DAST._INewtypeRange _4616_range = _4612___mcc_h949;
                DAST._IType _4617_b = _4611___mcc_h948;
                {
                  RAST._IExpr _out1207;
                  DCOMP._IOwnership _out1208;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1209;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1207, out _out1208, out _out1209);
                  r = _out1207;
                  resultingOwnership = _out1208;
                  readIdents = _out1209;
                }
              }
            } else if (_source302.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4618___mcc_h954 = _source302.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1210;
                DCOMP._IOwnership _out1211;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1212;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1210, out _out1211, out _out1212);
                r = _out1210;
                resultingOwnership = _out1211;
                readIdents = _out1212;
              }
            } else if (_source302.is_Array) {
              DAST._IType _4619___mcc_h956 = _source302.dtor_element;
              BigInteger _4620___mcc_h957 = _source302.dtor_dims;
              {
                RAST._IExpr _out1213;
                DCOMP._IOwnership _out1214;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1215;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1213, out _out1214, out _out1215);
                r = _out1213;
                resultingOwnership = _out1214;
                readIdents = _out1215;
              }
            } else if (_source302.is_Seq) {
              DAST._IType _4621___mcc_h960 = _source302.dtor_element;
              {
                RAST._IExpr _out1216;
                DCOMP._IOwnership _out1217;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1218;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1216, out _out1217, out _out1218);
                r = _out1216;
                resultingOwnership = _out1217;
                readIdents = _out1218;
              }
            } else if (_source302.is_Set) {
              DAST._IType _4622___mcc_h962 = _source302.dtor_element;
              {
                RAST._IExpr _out1219;
                DCOMP._IOwnership _out1220;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1221;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1219, out _out1220, out _out1221);
                r = _out1219;
                resultingOwnership = _out1220;
                readIdents = _out1221;
              }
            } else if (_source302.is_Multiset) {
              DAST._IType _4623___mcc_h964 = _source302.dtor_element;
              {
                RAST._IExpr _out1222;
                DCOMP._IOwnership _out1223;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1224;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1222, out _out1223, out _out1224);
                r = _out1222;
                resultingOwnership = _out1223;
                readIdents = _out1224;
              }
            } else if (_source302.is_Map) {
              DAST._IType _4624___mcc_h966 = _source302.dtor_key;
              DAST._IType _4625___mcc_h967 = _source302.dtor_value;
              {
                RAST._IExpr _out1225;
                DCOMP._IOwnership _out1226;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1227;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1225, out _out1226, out _out1227);
                r = _out1225;
                resultingOwnership = _out1226;
                readIdents = _out1227;
              }
            } else if (_source302.is_SetBuilder) {
              DAST._IType _4626___mcc_h970 = _source302.dtor_element;
              {
                RAST._IExpr _out1228;
                DCOMP._IOwnership _out1229;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1230;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1228, out _out1229, out _out1230);
                r = _out1228;
                resultingOwnership = _out1229;
                readIdents = _out1230;
              }
            } else if (_source302.is_MapBuilder) {
              DAST._IType _4627___mcc_h972 = _source302.dtor_key;
              DAST._IType _4628___mcc_h973 = _source302.dtor_value;
              {
                RAST._IExpr _out1231;
                DCOMP._IOwnership _out1232;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1233;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1231, out _out1232, out _out1233);
                r = _out1231;
                resultingOwnership = _out1232;
                readIdents = _out1233;
              }
            } else if (_source302.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4629___mcc_h976 = _source302.dtor_args;
              DAST._IType _4630___mcc_h977 = _source302.dtor_result;
              {
                RAST._IExpr _out1234;
                DCOMP._IOwnership _out1235;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1236;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1234, out _out1235, out _out1236);
                r = _out1234;
                resultingOwnership = _out1235;
                readIdents = _out1236;
              }
            } else if (_source302.is_Primitive) {
              DAST._IPrimitive _4631___mcc_h980 = _source302.dtor_Primitive_i_a0;
              {
                RAST._IExpr _out1237;
                DCOMP._IOwnership _out1238;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1239;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1237, out _out1238, out _out1239);
                r = _out1237;
                resultingOwnership = _out1238;
                readIdents = _out1239;
              }
            } else if (_source302.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4632___mcc_h982 = _source302.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1240;
                DCOMP._IOwnership _out1241;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1242;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1240, out _out1241, out _out1242);
                r = _out1240;
                resultingOwnership = _out1241;
                readIdents = _out1242;
              }
            } else if (_source302.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4633___mcc_h984 = _source302.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1243;
                DCOMP._IOwnership _out1244;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1245;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1243, out _out1244, out _out1245);
                r = _out1243;
                resultingOwnership = _out1244;
                readIdents = _out1245;
              }
            } else {
              {
                RAST._IExpr _out1246;
                DCOMP._IOwnership _out1247;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1248;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1246, out _out1247, out _out1248);
                r = _out1246;
                resultingOwnership = _out1247;
                readIdents = _out1248;
              }
            }
          } else {
            DAST._IType _source305 = _4021___mcc_h1;
            if (_source305.is_UserDefined) {
              DAST._IResolvedType _4634___mcc_h986 = _source305.dtor_resolved;
              DAST._IResolvedType _source306 = _4634___mcc_h986;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4635___mcc_h988 = _source306.dtor_path;
              Dafny.ISequence<DAST._IType> _4636___mcc_h989 = _source306.dtor_typeArgs;
              DAST._IResolvedTypeBase _4637___mcc_h990 = _source306.dtor_kind;
              Dafny.ISequence<DAST._IAttribute> _4638___mcc_h991 = _source306.dtor_attributes;
              Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4639___mcc_h992 = _source306.dtor_properMethods;
              Dafny.ISequence<DAST._IType> _4640___mcc_h993 = _source306.dtor_extendedTypes;
              DAST._IResolvedTypeBase _source307 = _4637___mcc_h990;
              if (_source307.is_Class) {
                {
                  RAST._IExpr _out1249;
                  DCOMP._IOwnership _out1250;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1251;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1249, out _out1250, out _out1251);
                  r = _out1249;
                  resultingOwnership = _out1250;
                  readIdents = _out1251;
                }
              } else if (_source307.is_Datatype) {
                {
                  RAST._IExpr _out1252;
                  DCOMP._IOwnership _out1253;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1254;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1252, out _out1253, out _out1254);
                  r = _out1252;
                  resultingOwnership = _out1253;
                  readIdents = _out1254;
                }
              } else if (_source307.is_Trait) {
                {
                  RAST._IExpr _out1255;
                  DCOMP._IOwnership _out1256;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1257;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1255, out _out1256, out _out1257);
                  r = _out1255;
                  resultingOwnership = _out1256;
                  readIdents = _out1257;
                }
              } else {
                DAST._IType _4641___mcc_h1000 = _source307.dtor_baseType;
                DAST._INewtypeRange _4642___mcc_h1001 = _source307.dtor_range;
                bool _4643___mcc_h1002 = _source307.dtor_erase;
                Dafny.ISequence<DAST._IAttribute> _4644_attributes = _4638___mcc_h991;
                bool _4645_erase = _4643___mcc_h1002;
                DAST._INewtypeRange _4646_range = _4642___mcc_h1001;
                DAST._IType _4647_b = _4641___mcc_h1000;
                {
                  RAST._IExpr _out1258;
                  DCOMP._IOwnership _out1259;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1260;
                  (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1258, out _out1259, out _out1260);
                  r = _out1258;
                  resultingOwnership = _out1259;
                  readIdents = _out1260;
                }
              }
            } else if (_source305.is_Tuple) {
              Dafny.ISequence<DAST._IType> _4648___mcc_h1006 = _source305.dtor_Tuple_i_a0;
              {
                RAST._IExpr _out1261;
                DCOMP._IOwnership _out1262;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1263;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1261, out _out1262, out _out1263);
                r = _out1261;
                resultingOwnership = _out1262;
                readIdents = _out1263;
              }
            } else if (_source305.is_Array) {
              DAST._IType _4649___mcc_h1008 = _source305.dtor_element;
              BigInteger _4650___mcc_h1009 = _source305.dtor_dims;
              {
                RAST._IExpr _out1264;
                DCOMP._IOwnership _out1265;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1266;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1264, out _out1265, out _out1266);
                r = _out1264;
                resultingOwnership = _out1265;
                readIdents = _out1266;
              }
            } else if (_source305.is_Seq) {
              DAST._IType _4651___mcc_h1012 = _source305.dtor_element;
              {
                RAST._IExpr _out1267;
                DCOMP._IOwnership _out1268;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1269;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1267, out _out1268, out _out1269);
                r = _out1267;
                resultingOwnership = _out1268;
                readIdents = _out1269;
              }
            } else if (_source305.is_Set) {
              DAST._IType _4652___mcc_h1014 = _source305.dtor_element;
              {
                RAST._IExpr _out1270;
                DCOMP._IOwnership _out1271;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1272;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1270, out _out1271, out _out1272);
                r = _out1270;
                resultingOwnership = _out1271;
                readIdents = _out1272;
              }
            } else if (_source305.is_Multiset) {
              DAST._IType _4653___mcc_h1016 = _source305.dtor_element;
              {
                RAST._IExpr _out1273;
                DCOMP._IOwnership _out1274;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1275;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1273, out _out1274, out _out1275);
                r = _out1273;
                resultingOwnership = _out1274;
                readIdents = _out1275;
              }
            } else if (_source305.is_Map) {
              DAST._IType _4654___mcc_h1018 = _source305.dtor_key;
              DAST._IType _4655___mcc_h1019 = _source305.dtor_value;
              {
                RAST._IExpr _out1276;
                DCOMP._IOwnership _out1277;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1278;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1276, out _out1277, out _out1278);
                r = _out1276;
                resultingOwnership = _out1277;
                readIdents = _out1278;
              }
            } else if (_source305.is_SetBuilder) {
              DAST._IType _4656___mcc_h1022 = _source305.dtor_element;
              {
                RAST._IExpr _out1279;
                DCOMP._IOwnership _out1280;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1281;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1279, out _out1280, out _out1281);
                r = _out1279;
                resultingOwnership = _out1280;
                readIdents = _out1281;
              }
            } else if (_source305.is_MapBuilder) {
              DAST._IType _4657___mcc_h1024 = _source305.dtor_key;
              DAST._IType _4658___mcc_h1025 = _source305.dtor_value;
              {
                RAST._IExpr _out1282;
                DCOMP._IOwnership _out1283;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1284;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1282, out _out1283, out _out1284);
                r = _out1282;
                resultingOwnership = _out1283;
                readIdents = _out1284;
              }
            } else if (_source305.is_Arrow) {
              Dafny.ISequence<DAST._IType> _4659___mcc_h1028 = _source305.dtor_args;
              DAST._IType _4660___mcc_h1029 = _source305.dtor_result;
              {
                RAST._IExpr _out1285;
                DCOMP._IOwnership _out1286;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1287;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1285, out _out1286, out _out1287);
                r = _out1285;
                resultingOwnership = _out1286;
                readIdents = _out1287;
              }
            } else if (_source305.is_Primitive) {
              DAST._IPrimitive _4661___mcc_h1032 = _source305.dtor_Primitive_i_a0;
              DAST._IPrimitive _source308 = _4661___mcc_h1032;
              if (_source308.is_Int) {
                {
                  RAST._IType _4662_rhsType;
                  RAST._IType _out1288;
                  _out1288 = (this).GenType(_4015_fromTpe, DCOMP.GenTypeContext.InBinding());
                  _4662_rhsType = _out1288;
                  RAST._IExpr _4663_recursiveGen;
                  DCOMP._IOwnership _4664___v133;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4665_recIdents;
                  RAST._IExpr _out1289;
                  DCOMP._IOwnership _out1290;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1291;
                  (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1289, out _out1290, out _out1291);
                  _4663_recursiveGen = _out1289;
                  _4664___v133 = _out1290;
                  _4665_recIdents = _out1291;
                  r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1((_4663_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("0")));
                  RAST._IExpr _out1292;
                  DCOMP._IOwnership _out1293;
                  (this).FromOwned(r, expectedOwnership, out _out1292, out _out1293);
                  r = _out1292;
                  resultingOwnership = _out1293;
                  readIdents = _4665_recIdents;
                }
              } else if (_source308.is_Real) {
                {
                  RAST._IExpr _out1294;
                  DCOMP._IOwnership _out1295;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1296;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1294, out _out1295, out _out1296);
                  r = _out1294;
                  resultingOwnership = _out1295;
                  readIdents = _out1296;
                }
              } else if (_source308.is_String) {
                {
                  RAST._IExpr _out1297;
                  DCOMP._IOwnership _out1298;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1299;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1297, out _out1298, out _out1299);
                  r = _out1297;
                  resultingOwnership = _out1298;
                  readIdents = _out1299;
                }
              } else if (_source308.is_Bool) {
                {
                  RAST._IExpr _out1300;
                  DCOMP._IOwnership _out1301;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1302;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1300, out _out1301, out _out1302);
                  r = _out1300;
                  resultingOwnership = _out1301;
                  readIdents = _out1302;
                }
              } else {
                {
                  RAST._IExpr _out1303;
                  DCOMP._IOwnership _out1304;
                  Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1305;
                  (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1303, out _out1304, out _out1305);
                  r = _out1303;
                  resultingOwnership = _out1304;
                  readIdents = _out1305;
                }
              }
            } else if (_source305.is_Passthrough) {
              Dafny.ISequence<Dafny.Rune> _4666___mcc_h1034 = _source305.dtor_Passthrough_i_a0;
              {
                RAST._IExpr _out1306;
                DCOMP._IOwnership _out1307;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1308;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1306, out _out1307, out _out1308);
                r = _out1306;
                resultingOwnership = _out1307;
                readIdents = _out1308;
              }
            } else if (_source305.is_TypeArg) {
              Dafny.ISequence<Dafny.Rune> _4667___mcc_h1036 = _source305.dtor_TypeArg_i_a0;
              {
                RAST._IExpr _out1309;
                DCOMP._IOwnership _out1310;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1311;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1309, out _out1310, out _out1311);
                r = _out1309;
                resultingOwnership = _out1310;
                readIdents = _out1311;
              }
            } else {
              {
                RAST._IExpr _out1312;
                DCOMP._IOwnership _out1313;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1314;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1312, out _out1313, out _out1314);
                r = _out1312;
                resultingOwnership = _out1313;
                readIdents = _out1314;
              }
            }
          }
        } else if (_source248.is_Passthrough) {
          Dafny.ISequence<Dafny.Rune> _4668___mcc_h1038 = _source248.dtor_Passthrough_i_a0;
          DAST._IType _source309 = _4021___mcc_h1;
          if (_source309.is_UserDefined) {
            DAST._IResolvedType _4669___mcc_h1041 = _source309.dtor_resolved;
            DAST._IResolvedType _source310 = _4669___mcc_h1041;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4670___mcc_h1043 = _source310.dtor_path;
            Dafny.ISequence<DAST._IType> _4671___mcc_h1044 = _source310.dtor_typeArgs;
            DAST._IResolvedTypeBase _4672___mcc_h1045 = _source310.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4673___mcc_h1046 = _source310.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4674___mcc_h1047 = _source310.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4675___mcc_h1048 = _source310.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source311 = _4672___mcc_h1045;
            if (_source311.is_Class) {
              {
                RAST._IExpr _out1315;
                DCOMP._IOwnership _out1316;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1317;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1315, out _out1316, out _out1317);
                r = _out1315;
                resultingOwnership = _out1316;
                readIdents = _out1317;
              }
            } else if (_source311.is_Datatype) {
              {
                RAST._IExpr _out1318;
                DCOMP._IOwnership _out1319;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1320;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1318, out _out1319, out _out1320);
                r = _out1318;
                resultingOwnership = _out1319;
                readIdents = _out1320;
              }
            } else if (_source311.is_Trait) {
              {
                RAST._IExpr _out1321;
                DCOMP._IOwnership _out1322;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1323;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1321, out _out1322, out _out1323);
                r = _out1321;
                resultingOwnership = _out1322;
                readIdents = _out1323;
              }
            } else {
              DAST._IType _4676___mcc_h1055 = _source311.dtor_baseType;
              DAST._INewtypeRange _4677___mcc_h1056 = _source311.dtor_range;
              bool _4678___mcc_h1057 = _source311.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4679_attributes = _4673___mcc_h1046;
              bool _4680_erase = _4678___mcc_h1057;
              DAST._INewtypeRange _4681_range = _4677___mcc_h1056;
              DAST._IType _4682_b = _4676___mcc_h1055;
              {
                RAST._IExpr _out1324;
                DCOMP._IOwnership _out1325;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1326;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1324, out _out1325, out _out1326);
                r = _out1324;
                resultingOwnership = _out1325;
                readIdents = _out1326;
              }
            }
          } else if (_source309.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4683___mcc_h1061 = _source309.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1327;
              DCOMP._IOwnership _out1328;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1329;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1327, out _out1328, out _out1329);
              r = _out1327;
              resultingOwnership = _out1328;
              readIdents = _out1329;
            }
          } else if (_source309.is_Array) {
            DAST._IType _4684___mcc_h1063 = _source309.dtor_element;
            BigInteger _4685___mcc_h1064 = _source309.dtor_dims;
            {
              RAST._IExpr _out1330;
              DCOMP._IOwnership _out1331;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1332;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1330, out _out1331, out _out1332);
              r = _out1330;
              resultingOwnership = _out1331;
              readIdents = _out1332;
            }
          } else if (_source309.is_Seq) {
            DAST._IType _4686___mcc_h1067 = _source309.dtor_element;
            {
              RAST._IExpr _out1333;
              DCOMP._IOwnership _out1334;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1335;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1333, out _out1334, out _out1335);
              r = _out1333;
              resultingOwnership = _out1334;
              readIdents = _out1335;
            }
          } else if (_source309.is_Set) {
            DAST._IType _4687___mcc_h1069 = _source309.dtor_element;
            {
              RAST._IExpr _out1336;
              DCOMP._IOwnership _out1337;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1338;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1336, out _out1337, out _out1338);
              r = _out1336;
              resultingOwnership = _out1337;
              readIdents = _out1338;
            }
          } else if (_source309.is_Multiset) {
            DAST._IType _4688___mcc_h1071 = _source309.dtor_element;
            {
              RAST._IExpr _out1339;
              DCOMP._IOwnership _out1340;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1341;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1339, out _out1340, out _out1341);
              r = _out1339;
              resultingOwnership = _out1340;
              readIdents = _out1341;
            }
          } else if (_source309.is_Map) {
            DAST._IType _4689___mcc_h1073 = _source309.dtor_key;
            DAST._IType _4690___mcc_h1074 = _source309.dtor_value;
            {
              RAST._IExpr _out1342;
              DCOMP._IOwnership _out1343;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1344;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1342, out _out1343, out _out1344);
              r = _out1342;
              resultingOwnership = _out1343;
              readIdents = _out1344;
            }
          } else if (_source309.is_SetBuilder) {
            DAST._IType _4691___mcc_h1077 = _source309.dtor_element;
            {
              RAST._IExpr _out1345;
              DCOMP._IOwnership _out1346;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1347;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1345, out _out1346, out _out1347);
              r = _out1345;
              resultingOwnership = _out1346;
              readIdents = _out1347;
            }
          } else if (_source309.is_MapBuilder) {
            DAST._IType _4692___mcc_h1079 = _source309.dtor_key;
            DAST._IType _4693___mcc_h1080 = _source309.dtor_value;
            {
              RAST._IExpr _out1348;
              DCOMP._IOwnership _out1349;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1350;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1348, out _out1349, out _out1350);
              r = _out1348;
              resultingOwnership = _out1349;
              readIdents = _out1350;
            }
          } else if (_source309.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4694___mcc_h1083 = _source309.dtor_args;
            DAST._IType _4695___mcc_h1084 = _source309.dtor_result;
            {
              RAST._IExpr _out1351;
              DCOMP._IOwnership _out1352;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1353;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1351, out _out1352, out _out1353);
              r = _out1351;
              resultingOwnership = _out1352;
              readIdents = _out1353;
            }
          } else if (_source309.is_Primitive) {
            DAST._IPrimitive _4696___mcc_h1087 = _source309.dtor_Primitive_i_a0;
            DAST._IPrimitive _source312 = _4696___mcc_h1087;
            if (_source312.is_Int) {
              {
                RAST._IType _4697_rhsType;
                RAST._IType _out1354;
                _out1354 = (this).GenType(_4015_fromTpe, DCOMP.GenTypeContext.InBinding());
                _4697_rhsType = _out1354;
                RAST._IExpr _4698_recursiveGen;
                DCOMP._IOwnership _4699___v131;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4700_recIdents;
                RAST._IExpr _out1355;
                DCOMP._IOwnership _out1356;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1357;
                (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1355, out _out1356, out _out1357);
                _4698_recursiveGen = _out1355;
                _4699___v131 = _out1356;
                _4700_recIdents = _out1357;
                r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::DafnyInt::new(::std::rc::Rc::new(::dafny_runtime::BigInt::from("), (_4698_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")))")));
                RAST._IExpr _out1358;
                DCOMP._IOwnership _out1359;
                (this).FromOwned(r, expectedOwnership, out _out1358, out _out1359);
                r = _out1358;
                resultingOwnership = _out1359;
                readIdents = _4700_recIdents;
              }
            } else if (_source312.is_Real) {
              {
                RAST._IExpr _out1360;
                DCOMP._IOwnership _out1361;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1362;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1360, out _out1361, out _out1362);
                r = _out1360;
                resultingOwnership = _out1361;
                readIdents = _out1362;
              }
            } else if (_source312.is_String) {
              {
                RAST._IExpr _out1363;
                DCOMP._IOwnership _out1364;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1365;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1363, out _out1364, out _out1365);
                r = _out1363;
                resultingOwnership = _out1364;
                readIdents = _out1365;
              }
            } else if (_source312.is_Bool) {
              {
                RAST._IExpr _out1366;
                DCOMP._IOwnership _out1367;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1368;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1366, out _out1367, out _out1368);
                r = _out1366;
                resultingOwnership = _out1367;
                readIdents = _out1368;
              }
            } else {
              {
                RAST._IExpr _out1369;
                DCOMP._IOwnership _out1370;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1371;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1369, out _out1370, out _out1371);
                r = _out1369;
                resultingOwnership = _out1370;
                readIdents = _out1371;
              }
            }
          } else if (_source309.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4701___mcc_h1089 = _source309.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _4702_recursiveGen;
              DCOMP._IOwnership _4703___v136;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4704_recIdents;
              RAST._IExpr _out1372;
              DCOMP._IOwnership _out1373;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1374;
              (this).GenExpr(_4014_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1372, out _out1373, out _out1374);
              _4702_recursiveGen = _out1372;
              _4703___v136 = _out1373;
              _4704_recIdents = _out1374;
              RAST._IType _4705_toTpeGen;
              RAST._IType _out1375;
              _out1375 = (this).GenType(_4016_toTpe, DCOMP.GenTypeContext.InBinding());
              _4705_toTpeGen = _out1375;
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(("), (_4702_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ")), (_4705_toTpeGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")));
              RAST._IExpr _out1376;
              DCOMP._IOwnership _out1377;
              (this).FromOwned(r, expectedOwnership, out _out1376, out _out1377);
              r = _out1376;
              resultingOwnership = _out1377;
              readIdents = _4704_recIdents;
            }
          } else if (_source309.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4706___mcc_h1091 = _source309.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1378;
              DCOMP._IOwnership _out1379;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1380;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1378, out _out1379, out _out1380);
              r = _out1378;
              resultingOwnership = _out1379;
              readIdents = _out1380;
            }
          } else {
            {
              RAST._IExpr _out1381;
              DCOMP._IOwnership _out1382;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1383;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1381, out _out1382, out _out1383);
              r = _out1381;
              resultingOwnership = _out1382;
              readIdents = _out1383;
            }
          }
        } else if (_source248.is_TypeArg) {
          Dafny.ISequence<Dafny.Rune> _4707___mcc_h1093 = _source248.dtor_TypeArg_i_a0;
          DAST._IType _source313 = _4021___mcc_h1;
          if (_source313.is_UserDefined) {
            DAST._IResolvedType _4708___mcc_h1096 = _source313.dtor_resolved;
            DAST._IResolvedType _source314 = _4708___mcc_h1096;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4709___mcc_h1098 = _source314.dtor_path;
            Dafny.ISequence<DAST._IType> _4710___mcc_h1099 = _source314.dtor_typeArgs;
            DAST._IResolvedTypeBase _4711___mcc_h1100 = _source314.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4712___mcc_h1101 = _source314.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4713___mcc_h1102 = _source314.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4714___mcc_h1103 = _source314.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source315 = _4711___mcc_h1100;
            if (_source315.is_Class) {
              {
                RAST._IExpr _out1384;
                DCOMP._IOwnership _out1385;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1386;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1384, out _out1385, out _out1386);
                r = _out1384;
                resultingOwnership = _out1385;
                readIdents = _out1386;
              }
            } else if (_source315.is_Datatype) {
              {
                RAST._IExpr _out1387;
                DCOMP._IOwnership _out1388;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1389;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1387, out _out1388, out _out1389);
                r = _out1387;
                resultingOwnership = _out1388;
                readIdents = _out1389;
              }
            } else if (_source315.is_Trait) {
              {
                RAST._IExpr _out1390;
                DCOMP._IOwnership _out1391;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1392;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1390, out _out1391, out _out1392);
                r = _out1390;
                resultingOwnership = _out1391;
                readIdents = _out1392;
              }
            } else {
              DAST._IType _4715___mcc_h1110 = _source315.dtor_baseType;
              DAST._INewtypeRange _4716___mcc_h1111 = _source315.dtor_range;
              bool _4717___mcc_h1112 = _source315.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4718_attributes = _4712___mcc_h1101;
              bool _4719_erase = _4717___mcc_h1112;
              DAST._INewtypeRange _4720_range = _4716___mcc_h1111;
              DAST._IType _4721_b = _4715___mcc_h1110;
              {
                RAST._IExpr _out1393;
                DCOMP._IOwnership _out1394;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1395;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1393, out _out1394, out _out1395);
                r = _out1393;
                resultingOwnership = _out1394;
                readIdents = _out1395;
              }
            }
          } else if (_source313.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4722___mcc_h1116 = _source313.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1396;
              DCOMP._IOwnership _out1397;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1398;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1396, out _out1397, out _out1398);
              r = _out1396;
              resultingOwnership = _out1397;
              readIdents = _out1398;
            }
          } else if (_source313.is_Array) {
            DAST._IType _4723___mcc_h1118 = _source313.dtor_element;
            BigInteger _4724___mcc_h1119 = _source313.dtor_dims;
            {
              RAST._IExpr _out1399;
              DCOMP._IOwnership _out1400;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1401;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1399, out _out1400, out _out1401);
              r = _out1399;
              resultingOwnership = _out1400;
              readIdents = _out1401;
            }
          } else if (_source313.is_Seq) {
            DAST._IType _4725___mcc_h1122 = _source313.dtor_element;
            {
              RAST._IExpr _out1402;
              DCOMP._IOwnership _out1403;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1404;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1402, out _out1403, out _out1404);
              r = _out1402;
              resultingOwnership = _out1403;
              readIdents = _out1404;
            }
          } else if (_source313.is_Set) {
            DAST._IType _4726___mcc_h1124 = _source313.dtor_element;
            {
              RAST._IExpr _out1405;
              DCOMP._IOwnership _out1406;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1407;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1405, out _out1406, out _out1407);
              r = _out1405;
              resultingOwnership = _out1406;
              readIdents = _out1407;
            }
          } else if (_source313.is_Multiset) {
            DAST._IType _4727___mcc_h1126 = _source313.dtor_element;
            {
              RAST._IExpr _out1408;
              DCOMP._IOwnership _out1409;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1410;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1408, out _out1409, out _out1410);
              r = _out1408;
              resultingOwnership = _out1409;
              readIdents = _out1410;
            }
          } else if (_source313.is_Map) {
            DAST._IType _4728___mcc_h1128 = _source313.dtor_key;
            DAST._IType _4729___mcc_h1129 = _source313.dtor_value;
            {
              RAST._IExpr _out1411;
              DCOMP._IOwnership _out1412;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1413;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1411, out _out1412, out _out1413);
              r = _out1411;
              resultingOwnership = _out1412;
              readIdents = _out1413;
            }
          } else if (_source313.is_SetBuilder) {
            DAST._IType _4730___mcc_h1132 = _source313.dtor_element;
            {
              RAST._IExpr _out1414;
              DCOMP._IOwnership _out1415;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1416;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1414, out _out1415, out _out1416);
              r = _out1414;
              resultingOwnership = _out1415;
              readIdents = _out1416;
            }
          } else if (_source313.is_MapBuilder) {
            DAST._IType _4731___mcc_h1134 = _source313.dtor_key;
            DAST._IType _4732___mcc_h1135 = _source313.dtor_value;
            {
              RAST._IExpr _out1417;
              DCOMP._IOwnership _out1418;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1419;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1417, out _out1418, out _out1419);
              r = _out1417;
              resultingOwnership = _out1418;
              readIdents = _out1419;
            }
          } else if (_source313.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4733___mcc_h1138 = _source313.dtor_args;
            DAST._IType _4734___mcc_h1139 = _source313.dtor_result;
            {
              RAST._IExpr _out1420;
              DCOMP._IOwnership _out1421;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1422;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1420, out _out1421, out _out1422);
              r = _out1420;
              resultingOwnership = _out1421;
              readIdents = _out1422;
            }
          } else if (_source313.is_Primitive) {
            DAST._IPrimitive _4735___mcc_h1142 = _source313.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out1423;
              DCOMP._IOwnership _out1424;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1425;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1423, out _out1424, out _out1425);
              r = _out1423;
              resultingOwnership = _out1424;
              readIdents = _out1425;
            }
          } else if (_source313.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4736___mcc_h1144 = _source313.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1426;
              DCOMP._IOwnership _out1427;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1428;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1426, out _out1427, out _out1428);
              r = _out1426;
              resultingOwnership = _out1427;
              readIdents = _out1428;
            }
          } else if (_source313.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4737___mcc_h1146 = _source313.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1429;
              DCOMP._IOwnership _out1430;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1431;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1429, out _out1430, out _out1431);
              r = _out1429;
              resultingOwnership = _out1430;
              readIdents = _out1431;
            }
          } else {
            {
              RAST._IExpr _out1432;
              DCOMP._IOwnership _out1433;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1434;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1432, out _out1433, out _out1434);
              r = _out1432;
              resultingOwnership = _out1433;
              readIdents = _out1434;
            }
          }
        } else {
          DAST._IType _source316 = _4021___mcc_h1;
          if (_source316.is_UserDefined) {
            DAST._IResolvedType _4738___mcc_h1148 = _source316.dtor_resolved;
            DAST._IResolvedType _source317 = _4738___mcc_h1148;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4739___mcc_h1150 = _source317.dtor_path;
            Dafny.ISequence<DAST._IType> _4740___mcc_h1151 = _source317.dtor_typeArgs;
            DAST._IResolvedTypeBase _4741___mcc_h1152 = _source317.dtor_kind;
            Dafny.ISequence<DAST._IAttribute> _4742___mcc_h1153 = _source317.dtor_attributes;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4743___mcc_h1154 = _source317.dtor_properMethods;
            Dafny.ISequence<DAST._IType> _4744___mcc_h1155 = _source317.dtor_extendedTypes;
            DAST._IResolvedTypeBase _source318 = _4741___mcc_h1152;
            if (_source318.is_Class) {
              {
                RAST._IExpr _out1435;
                DCOMP._IOwnership _out1436;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1437;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1435, out _out1436, out _out1437);
                r = _out1435;
                resultingOwnership = _out1436;
                readIdents = _out1437;
              }
            } else if (_source318.is_Datatype) {
              {
                RAST._IExpr _out1438;
                DCOMP._IOwnership _out1439;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1440;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1438, out _out1439, out _out1440);
                r = _out1438;
                resultingOwnership = _out1439;
                readIdents = _out1440;
              }
            } else if (_source318.is_Trait) {
              {
                RAST._IExpr _out1441;
                DCOMP._IOwnership _out1442;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1443;
                (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1441, out _out1442, out _out1443);
                r = _out1441;
                resultingOwnership = _out1442;
                readIdents = _out1443;
              }
            } else {
              DAST._IType _4745___mcc_h1162 = _source318.dtor_baseType;
              DAST._INewtypeRange _4746___mcc_h1163 = _source318.dtor_range;
              bool _4747___mcc_h1164 = _source318.dtor_erase;
              Dafny.ISequence<DAST._IAttribute> _4748_attributes = _4742___mcc_h1153;
              bool _4749_erase = _4747___mcc_h1164;
              DAST._INewtypeRange _4750_range = _4746___mcc_h1163;
              DAST._IType _4751_b = _4745___mcc_h1162;
              {
                RAST._IExpr _out1444;
                DCOMP._IOwnership _out1445;
                Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1446;
                (this).GenExprConvertToNewtype(e, selfIdent, env, expectedOwnership, out _out1444, out _out1445, out _out1446);
                r = _out1444;
                resultingOwnership = _out1445;
                readIdents = _out1446;
              }
            }
          } else if (_source316.is_Tuple) {
            Dafny.ISequence<DAST._IType> _4752___mcc_h1168 = _source316.dtor_Tuple_i_a0;
            {
              RAST._IExpr _out1447;
              DCOMP._IOwnership _out1448;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1449;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1447, out _out1448, out _out1449);
              r = _out1447;
              resultingOwnership = _out1448;
              readIdents = _out1449;
            }
          } else if (_source316.is_Array) {
            DAST._IType _4753___mcc_h1170 = _source316.dtor_element;
            BigInteger _4754___mcc_h1171 = _source316.dtor_dims;
            {
              RAST._IExpr _out1450;
              DCOMP._IOwnership _out1451;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1452;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1450, out _out1451, out _out1452);
              r = _out1450;
              resultingOwnership = _out1451;
              readIdents = _out1452;
            }
          } else if (_source316.is_Seq) {
            DAST._IType _4755___mcc_h1174 = _source316.dtor_element;
            {
              RAST._IExpr _out1453;
              DCOMP._IOwnership _out1454;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1455;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1453, out _out1454, out _out1455);
              r = _out1453;
              resultingOwnership = _out1454;
              readIdents = _out1455;
            }
          } else if (_source316.is_Set) {
            DAST._IType _4756___mcc_h1176 = _source316.dtor_element;
            {
              RAST._IExpr _out1456;
              DCOMP._IOwnership _out1457;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1458;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1456, out _out1457, out _out1458);
              r = _out1456;
              resultingOwnership = _out1457;
              readIdents = _out1458;
            }
          } else if (_source316.is_Multiset) {
            DAST._IType _4757___mcc_h1178 = _source316.dtor_element;
            {
              RAST._IExpr _out1459;
              DCOMP._IOwnership _out1460;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1461;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1459, out _out1460, out _out1461);
              r = _out1459;
              resultingOwnership = _out1460;
              readIdents = _out1461;
            }
          } else if (_source316.is_Map) {
            DAST._IType _4758___mcc_h1180 = _source316.dtor_key;
            DAST._IType _4759___mcc_h1181 = _source316.dtor_value;
            {
              RAST._IExpr _out1462;
              DCOMP._IOwnership _out1463;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1464;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1462, out _out1463, out _out1464);
              r = _out1462;
              resultingOwnership = _out1463;
              readIdents = _out1464;
            }
          } else if (_source316.is_SetBuilder) {
            DAST._IType _4760___mcc_h1184 = _source316.dtor_element;
            {
              RAST._IExpr _out1465;
              DCOMP._IOwnership _out1466;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1467;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1465, out _out1466, out _out1467);
              r = _out1465;
              resultingOwnership = _out1466;
              readIdents = _out1467;
            }
          } else if (_source316.is_MapBuilder) {
            DAST._IType _4761___mcc_h1186 = _source316.dtor_key;
            DAST._IType _4762___mcc_h1187 = _source316.dtor_value;
            {
              RAST._IExpr _out1468;
              DCOMP._IOwnership _out1469;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1470;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1468, out _out1469, out _out1470);
              r = _out1468;
              resultingOwnership = _out1469;
              readIdents = _out1470;
            }
          } else if (_source316.is_Arrow) {
            Dafny.ISequence<DAST._IType> _4763___mcc_h1190 = _source316.dtor_args;
            DAST._IType _4764___mcc_h1191 = _source316.dtor_result;
            {
              RAST._IExpr _out1471;
              DCOMP._IOwnership _out1472;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1473;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1471, out _out1472, out _out1473);
              r = _out1471;
              resultingOwnership = _out1472;
              readIdents = _out1473;
            }
          } else if (_source316.is_Primitive) {
            DAST._IPrimitive _4765___mcc_h1194 = _source316.dtor_Primitive_i_a0;
            {
              RAST._IExpr _out1474;
              DCOMP._IOwnership _out1475;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1476;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1474, out _out1475, out _out1476);
              r = _out1474;
              resultingOwnership = _out1475;
              readIdents = _out1476;
            }
          } else if (_source316.is_Passthrough) {
            Dafny.ISequence<Dafny.Rune> _4766___mcc_h1196 = _source316.dtor_Passthrough_i_a0;
            {
              RAST._IExpr _out1477;
              DCOMP._IOwnership _out1478;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1479;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1477, out _out1478, out _out1479);
              r = _out1477;
              resultingOwnership = _out1478;
              readIdents = _out1479;
            }
          } else if (_source316.is_TypeArg) {
            Dafny.ISequence<Dafny.Rune> _4767___mcc_h1198 = _source316.dtor_TypeArg_i_a0;
            {
              RAST._IExpr _out1480;
              DCOMP._IOwnership _out1481;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1482;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1480, out _out1481, out _out1482);
              r = _out1480;
              resultingOwnership = _out1481;
              readIdents = _out1482;
            }
          } else {
            {
              RAST._IExpr _out1483;
              DCOMP._IOwnership _out1484;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1485;
              (this).GenExprConvertNotImplemented(e, selfIdent, env, expectedOwnership, out _out1483, out _out1484, out _out1485);
              r = _out1483;
              resultingOwnership = _out1484;
              readIdents = _out1485;
            }
          }
        }
      }
      return ;
    }
    public void GenIdent(Dafny.ISequence<Dafny.Rune> rName, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      r = RAST.Expr.create_Identifier(rName);
      Std.Wrappers._IOption<RAST._IType> _4768_tpe;
      _4768_tpe = (env).GetType(rName);
      Std.Wrappers._IOption<RAST._IType> _4769_placeboOpt;
      _4769_placeboOpt = (((_4768_tpe).is_Some) ? (((_4768_tpe).dtor_value).ExtractMaybePlacebo()) : (Std.Wrappers.Option<RAST._IType>.create_None()));
      bool _4770_currentlyBorrowed;
      _4770_currentlyBorrowed = (env).IsBorrowed(rName);
      bool _4771_noNeedOfClone;
      _4771_noNeedOfClone = (env).CanReadWithoutClone(rName);
      if ((_4769_placeboOpt).is_Some) {
        r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
        _4770_currentlyBorrowed = false;
        _4771_noNeedOfClone = true;
        _4768_tpe = Std.Wrappers.Option<RAST._IType>.create_Some((_4769_placeboOpt).dtor_value);
      }
      if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed())) {
        resultingOwnership = ((_4770_currentlyBorrowed) ? (DCOMP.Ownership.create_OwnershipBorrowed()) : (DCOMP.Ownership.create_OwnershipOwned()));
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowedMut())) {
        if ((rName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
          resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
        } else {
          if (((_4768_tpe).is_Some) && (((_4768_tpe).dtor_value).IsObjectOrPointer())) {
            r = ((this).modify__macro).Apply1(r);
          } else {
            r = RAST.__default.BorrowMut(r);
          }
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
        if (((rName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) && (((this).ObjectType).is_RcMut)) {
          r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Object"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"))))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(r));
        } else {
          if (!(_4771_noNeedOfClone)) {
            r = (r).Clone();
          }
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
      } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
        if (!(_4771_noNeedOfClone)) {
          r = (r).Clone();
        }
        r = RAST.__default.BoxNew(r);
        resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
      } else if (_4770_currentlyBorrowed) {
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      } else {
        if (!(rName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
          if (((_4768_tpe).is_Some) && (((_4768_tpe).dtor_value).IsPointer())) {
            r = ((this).read__macro).Apply1(r);
          } else {
            r = RAST.__default.Borrow(r);
          }
        }
        resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
      }
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(rName);
      return ;
    }
    public void GenExpr(DAST._IExpression e, Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> selfIdent, DCOMP._IEnvironment env, DCOMP._IOwnership expectedOwnership, out RAST._IExpr r, out DCOMP._IOwnership resultingOwnership, out Dafny.ISet<Dafny.ISequence<Dafny.Rune>> readIdents)
    {
      r = RAST.Expr.Default();
      resultingOwnership = DCOMP.Ownership.Default();
      readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Empty;
      DAST._IExpression _source319 = e;
      if (_source319.is_Literal) {
        DAST._ILiteral _4772___mcc_h0 = _source319.dtor_Literal_i_a0;
        RAST._IExpr _out1486;
        DCOMP._IOwnership _out1487;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1488;
        (this).GenExprLiteral(e, selfIdent, env, expectedOwnership, out _out1486, out _out1487, out _out1488);
        r = _out1486;
        resultingOwnership = _out1487;
        readIdents = _out1488;
      } else if (_source319.is_Ident) {
        Dafny.ISequence<Dafny.Rune> _4773___mcc_h1 = _source319.dtor_Ident_i_a0;
        Dafny.ISequence<Dafny.Rune> _4774_name = _4773___mcc_h1;
        {
          RAST._IExpr _out1489;
          DCOMP._IOwnership _out1490;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1491;
          (this).GenIdent(DCOMP.__default.escapeName(_4774_name), selfIdent, env, expectedOwnership, out _out1489, out _out1490, out _out1491);
          r = _out1489;
          resultingOwnership = _out1490;
          readIdents = _out1491;
        }
      } else if (_source319.is_Companion) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4775___mcc_h2 = _source319.dtor_Companion_i_a0;
        Dafny.ISequence<DAST._IType> _4776___mcc_h3 = _source319.dtor_typeArgs;
        Dafny.ISequence<DAST._IType> _4777_typeArgs = _4776___mcc_h3;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4778_path = _4775___mcc_h2;
        {
          RAST._IExpr _out1492;
          _out1492 = DCOMP.COMP.GenPathExpr(_4778_path);
          r = _out1492;
          if ((new BigInteger((_4777_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _4779_typeExprs;
            _4779_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi35 = new BigInteger((_4777_typeArgs).Count);
            for (BigInteger _4780_i = BigInteger.Zero; _4780_i < _hi35; _4780_i++) {
              RAST._IType _4781_typeExpr;
              RAST._IType _out1493;
              _out1493 = (this).GenType((_4777_typeArgs).Select(_4780_i), DCOMP.GenTypeContext.@default());
              _4781_typeExpr = _out1493;
              _4779_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_4779_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_4781_typeExpr));
            }
            r = (r).ApplyType(_4779_typeExprs);
          }
          if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
          } else if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) {
            resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
          } else {
            RAST._IExpr _out1494;
            DCOMP._IOwnership _out1495;
            (this).FromOwned(r, expectedOwnership, out _out1494, out _out1495);
            r = _out1494;
            resultingOwnership = _out1495;
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source319.is_Tuple) {
        Dafny.ISequence<DAST._IExpression> _4782___mcc_h4 = _source319.dtor_Tuple_i_a0;
        Dafny.ISequence<DAST._IExpression> _4783_values = _4782___mcc_h4;
        {
          Dafny.ISequence<RAST._IExpr> _4784_exprs;
          _4784_exprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi36 = new BigInteger((_4783_values).Count);
          for (BigInteger _4785_i = BigInteger.Zero; _4785_i < _hi36; _4785_i++) {
            RAST._IExpr _4786_recursiveGen;
            DCOMP._IOwnership _4787___v139;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4788_recIdents;
            RAST._IExpr _out1496;
            DCOMP._IOwnership _out1497;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1498;
            (this).GenExpr((_4783_values).Select(_4785_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1496, out _out1497, out _out1498);
            _4786_recursiveGen = _out1496;
            _4787___v139 = _out1497;
            _4788_recIdents = _out1498;
            _4784_exprs = Dafny.Sequence<RAST._IExpr>.Concat(_4784_exprs, Dafny.Sequence<RAST._IExpr>.FromElements(_4786_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4788_recIdents);
          }
          r = RAST.Expr.create_Tuple(_4784_exprs);
          RAST._IExpr _out1499;
          DCOMP._IOwnership _out1500;
          (this).FromOwned(r, expectedOwnership, out _out1499, out _out1500);
          r = _out1499;
          resultingOwnership = _out1500;
          return ;
        }
      } else if (_source319.is_New) {
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4789___mcc_h5 = _source319.dtor_path;
        Dafny.ISequence<DAST._IType> _4790___mcc_h6 = _source319.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _4791___mcc_h7 = _source319.dtor_args;
        Dafny.ISequence<DAST._IExpression> _4792_args = _4791___mcc_h7;
        Dafny.ISequence<DAST._IType> _4793_typeArgs = _4790___mcc_h6;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _4794_path = _4789___mcc_h5;
        {
          RAST._IExpr _out1501;
          _out1501 = DCOMP.COMP.GenPathExpr(_4794_path);
          r = _out1501;
          if ((new BigInteger((_4793_typeArgs).Count)).Sign == 1) {
            Dafny.ISequence<RAST._IType> _4795_typeExprs;
            _4795_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
            BigInteger _hi37 = new BigInteger((_4793_typeArgs).Count);
            for (BigInteger _4796_i = BigInteger.Zero; _4796_i < _hi37; _4796_i++) {
              RAST._IType _4797_typeExpr;
              RAST._IType _out1502;
              _out1502 = (this).GenType((_4793_typeArgs).Select(_4796_i), DCOMP.GenTypeContext.@default());
              _4797_typeExpr = _out1502;
              _4795_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_4795_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_4797_typeExpr));
            }
            r = (r).ApplyType(_4795_typeExprs);
          }
          r = (r).MSel((this).allocate__fn);
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IExpr> _4798_arguments;
          _4798_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi38 = new BigInteger((_4792_args).Count);
          for (BigInteger _4799_i = BigInteger.Zero; _4799_i < _hi38; _4799_i++) {
            RAST._IExpr _4800_recursiveGen;
            DCOMP._IOwnership _4801___v140;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4802_recIdents;
            RAST._IExpr _out1503;
            DCOMP._IOwnership _out1504;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1505;
            (this).GenExpr((_4792_args).Select(_4799_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1503, out _out1504, out _out1505);
            _4800_recursiveGen = _out1503;
            _4801___v140 = _out1504;
            _4802_recIdents = _out1505;
            _4798_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_4798_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_4800_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4802_recIdents);
          }
          r = (r).Apply(_4798_arguments);
          RAST._IExpr _out1506;
          DCOMP._IOwnership _out1507;
          (this).FromOwned(r, expectedOwnership, out _out1506, out _out1507);
          r = _out1506;
          resultingOwnership = _out1507;
          return ;
        }
      } else if (_source319.is_NewUninitArray) {
        Dafny.ISequence<DAST._IExpression> _4803___mcc_h8 = _source319.dtor_dims;
        DAST._IType _4804___mcc_h9 = _source319.dtor_typ;
        DAST._IType _4805_typ = _4804___mcc_h9;
        Dafny.ISequence<DAST._IExpression> _4806_dims = _4803___mcc_h8;
        {
          if ((new BigInteger(16)) < (new BigInteger((_4806_dims).Count))) {
            Dafny.ISequence<Dafny.Rune> _4807_msg;
            _4807_msg = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Unsupported: Creation of arrays of more than 16 dimensions");
            if ((this.error).is_None) {
              (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_4807_msg);
            }
            r = RAST.Expr.create_RawExpr(_4807_msg);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          } else {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
            RAST._IType _4808_typeGen;
            RAST._IType _out1508;
            _out1508 = (this).GenType(_4805_typ, DCOMP.GenTypeContext.@default());
            _4808_typeGen = _out1508;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            Dafny.ISequence<RAST._IExpr> _4809_dimExprs;
            _4809_dimExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
            BigInteger _hi39 = new BigInteger((_4806_dims).Count);
            for (BigInteger _4810_i = BigInteger.Zero; _4810_i < _hi39; _4810_i++) {
              RAST._IExpr _4811_recursiveGen;
              DCOMP._IOwnership _4812___v141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4813_recIdents;
              RAST._IExpr _out1509;
              DCOMP._IOwnership _out1510;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1511;
              (this).GenExpr((_4806_dims).Select(_4810_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1509, out _out1510, out _out1511);
              _4811_recursiveGen = _out1509;
              _4812___v141 = _out1510;
              _4813_recIdents = _out1511;
              _4809_dimExprs = Dafny.Sequence<RAST._IExpr>.Concat(_4809_dimExprs, Dafny.Sequence<RAST._IExpr>.FromElements(((_4811_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_usize"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4813_recIdents);
            }
            if ((new BigInteger((_4806_dims).Count)) > (BigInteger.One)) {
              Dafny.ISequence<Dafny.Rune> _4814_class__name;
              _4814_class__name = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array"), Std.Strings.__default.OfNat(new BigInteger((_4806_dims).Count)));
              r = ((((RAST.__default.dafny__runtime).MSel(_4814_class__name)).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4808_typeGen))).MSel((this).placebos__usize)).Apply(_4809_dimExprs);
            } else {
              r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("array"))).MSel((this).placebos__usize)).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4808_typeGen))).Apply(_4809_dimExprs);
            }
          }
          RAST._IExpr _out1512;
          DCOMP._IOwnership _out1513;
          (this).FromOwned(r, expectedOwnership, out _out1512, out _out1513);
          r = _out1512;
          resultingOwnership = _out1513;
        }
      } else if (_source319.is_ArrayIndexToInt) {
        DAST._IExpression _4815___mcc_h10 = _source319.dtor_value;
        DAST._IExpression _4816_underlying = _4815___mcc_h10;
        {
          RAST._IExpr _4817_recursiveGen;
          DCOMP._IOwnership _4818___v142;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4819_recIdents;
          RAST._IExpr _out1514;
          DCOMP._IOwnership _out1515;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1516;
          (this).GenExpr(_4816_underlying, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1514, out _out1515, out _out1516);
          _4817_recursiveGen = _out1514;
          _4818___v142 = _out1515;
          _4819_recIdents = _out1516;
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(_4817_recursiveGen);
          readIdents = _4819_recIdents;
          RAST._IExpr _out1517;
          DCOMP._IOwnership _out1518;
          (this).FromOwned(r, expectedOwnership, out _out1517, out _out1518);
          r = _out1517;
          resultingOwnership = _out1518;
        }
      } else if (_source319.is_FinalizeNewArray) {
        DAST._IExpression _4820___mcc_h11 = _source319.dtor_value;
        DAST._IType _4821___mcc_h12 = _source319.dtor_typ;
        DAST._IType _4822_typ = _4821___mcc_h12;
        DAST._IExpression _4823_underlying = _4820___mcc_h11;
        {
          RAST._IType _4824_tpe;
          RAST._IType _out1519;
          _out1519 = (this).GenType(_4822_typ, DCOMP.GenTypeContext.@default());
          _4824_tpe = _out1519;
          RAST._IExpr _4825_recursiveGen;
          DCOMP._IOwnership _4826___v143;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4827_recIdents;
          RAST._IExpr _out1520;
          DCOMP._IOwnership _out1521;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1522;
          (this).GenExpr(_4823_underlying, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1520, out _out1521, out _out1522);
          _4825_recursiveGen = _out1520;
          _4826___v143 = _out1521;
          _4827_recIdents = _out1522;
          readIdents = _4827_recIdents;
          if ((_4824_tpe).IsObjectOrPointer()) {
            RAST._IType _4828_t;
            _4828_t = (_4824_tpe).ObjectOrPointerUnderlying();
            if ((_4828_t).is_Array) {
              r = (((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("array"))).MSel((this).array__construct)).Apply1(_4825_recursiveGen);
            } else if ((_4828_t).IsMultiArray()) {
              Dafny.ISequence<Dafny.Rune> _4829_c;
              _4829_c = (_4828_t).MultiArrayClass();
              r = (((RAST.__default.dafny__runtime).MSel(_4829_c)).MSel((this).array__construct)).Apply1(_4825_recursiveGen);
            } else {
              (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Finalize New Array with a pointer or object type to something that is not an array or a multi array: "), (_4824_tpe)._ToString(DCOMP.__default.IND)));
              r = RAST.Expr.create_RawExpr((this.error).dtor_value);
            }
          } else {
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Finalize New Array with a type that is not a pointer or an object: "), (_4824_tpe)._ToString(DCOMP.__default.IND)));
            r = RAST.Expr.create_RawExpr((this.error).dtor_value);
          }
          RAST._IExpr _out1523;
          DCOMP._IOwnership _out1524;
          (this).FromOwned(r, expectedOwnership, out _out1523, out _out1524);
          r = _out1523;
          resultingOwnership = _out1524;
        }
      } else if (_source319.is_DatatypeValue) {
        DAST._IResolvedType _4830___mcc_h13 = _source319.dtor_datatypeType;
        Dafny.ISequence<DAST._IType> _4831___mcc_h14 = _source319.dtor_typeArgs;
        Dafny.ISequence<Dafny.Rune> _4832___mcc_h15 = _source319.dtor_variant;
        bool _4833___mcc_h16 = _source319.dtor_isCo;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _4834___mcc_h17 = _source319.dtor_contents;
        Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _4835_values = _4834___mcc_h17;
        bool _4836_isCo = _4833___mcc_h16;
        Dafny.ISequence<Dafny.Rune> _4837_variant = _4832___mcc_h15;
        Dafny.ISequence<DAST._IType> _4838_typeArgs = _4831___mcc_h14;
        DAST._IResolvedType _4839_datatypeType = _4830___mcc_h13;
        {
          RAST._IExpr _out1525;
          _out1525 = DCOMP.COMP.GenPathExpr((_4839_datatypeType).dtor_path);
          r = _out1525;
          Dafny.ISequence<RAST._IType> _4840_genTypeArgs;
          _4840_genTypeArgs = Dafny.Sequence<RAST._IType>.FromElements();
          BigInteger _hi40 = new BigInteger((_4838_typeArgs).Count);
          for (BigInteger _4841_i = BigInteger.Zero; _4841_i < _hi40; _4841_i++) {
            RAST._IType _4842_typeExpr;
            RAST._IType _out1526;
            _out1526 = (this).GenType((_4838_typeArgs).Select(_4841_i), DCOMP.GenTypeContext.@default());
            _4842_typeExpr = _out1526;
            _4840_genTypeArgs = Dafny.Sequence<RAST._IType>.Concat(_4840_genTypeArgs, Dafny.Sequence<RAST._IType>.FromElements(_4842_typeExpr));
          }
          if ((new BigInteger((_4838_typeArgs).Count)).Sign == 1) {
            r = (r).ApplyType(_4840_genTypeArgs);
          }
          r = (r).MSel(DCOMP.__default.escapeName(_4837_variant));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IAssignIdentifier> _4843_assignments;
          _4843_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.FromElements();
          BigInteger _hi41 = new BigInteger((_4835_values).Count);
          for (BigInteger _4844_i = BigInteger.Zero; _4844_i < _hi41; _4844_i++) {
            _System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression> _let_tmp_rhs64 = (_4835_values).Select(_4844_i);
            Dafny.ISequence<Dafny.Rune> _4845_name = _let_tmp_rhs64.dtor__0;
            DAST._IExpression _4846_value = _let_tmp_rhs64.dtor__1;
            if (_4836_isCo) {
              RAST._IExpr _4847_recursiveGen;
              DCOMP._IOwnership _4848___v144;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4849_recIdents;
              RAST._IExpr _out1527;
              DCOMP._IOwnership _out1528;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1529;
              (this).GenExpr(_4846_value, selfIdent, DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out1527, out _out1528, out _out1529);
              _4847_recursiveGen = _out1527;
              _4848___v144 = _out1528;
              _4849_recIdents = _out1529;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4849_recIdents);
              Dafny.ISequence<Dafny.Rune> _4850_allReadCloned;
              _4850_allReadCloned = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
              while (!(_4849_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
                Dafny.ISequence<Dafny.Rune> _4851_next;
                foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_2 in (_4849_recIdents).Elements) {
                  _4851_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_2;
                  if ((_4849_recIdents).Contains(_4851_next)) {
                    goto after__ASSIGN_SUCH_THAT_2;
                  }
                }
                throw new System.Exception("assign-such-that search produced no value (line 3768)");
              after__ASSIGN_SUCH_THAT_2: ;
                _4850_allReadCloned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_4850_allReadCloned, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let ")), _4851_next), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" = ")), _4851_next), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(".clone();\n"));
                _4849_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_4849_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_4851_next));
              }
              Dafny.ISequence<Dafny.Rune> _4852_wasAssigned;
              _4852_wasAssigned = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::dafny_runtime::LazyFieldWrapper(::dafny_runtime::Lazy::new(::std::boxed::Box::new({\n"), _4850_allReadCloned), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move || (")), (_4847_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")})))"));
              _4843_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_4843_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_4845_name), RAST.Expr.create_RawExpr(_4852_wasAssigned))));
            } else {
              RAST._IExpr _4853_recursiveGen;
              DCOMP._IOwnership _4854___v145;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4855_recIdents;
              RAST._IExpr _out1530;
              DCOMP._IOwnership _out1531;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1532;
              (this).GenExpr(_4846_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1530, out _out1531, out _out1532);
              _4853_recursiveGen = _out1530;
              _4854___v145 = _out1531;
              _4855_recIdents = _out1532;
              _4843_assignments = Dafny.Sequence<RAST._IAssignIdentifier>.Concat(_4843_assignments, Dafny.Sequence<RAST._IAssignIdentifier>.FromElements(RAST.AssignIdentifier.create(DCOMP.__default.escapeIdent(_4845_name), _4853_recursiveGen)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4855_recIdents);
            }
          }
          r = RAST.Expr.create_StructBuild(r, _4843_assignments);
          if ((this).IsRcWrapped((_4839_datatypeType).dtor_attributes)) {
            r = RAST.__default.RcNew(r);
          }
          RAST._IExpr _out1533;
          DCOMP._IOwnership _out1534;
          (this).FromOwned(r, expectedOwnership, out _out1533, out _out1534);
          r = _out1533;
          resultingOwnership = _out1534;
          return ;
        }
      } else if (_source319.is_Convert) {
        DAST._IExpression _4856___mcc_h18 = _source319.dtor_value;
        DAST._IType _4857___mcc_h19 = _source319.dtor_from;
        DAST._IType _4858___mcc_h20 = _source319.dtor_typ;
        {
          RAST._IExpr _out1535;
          DCOMP._IOwnership _out1536;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1537;
          (this).GenExprConvert(e, selfIdent, env, expectedOwnership, out _out1535, out _out1536, out _out1537);
          r = _out1535;
          resultingOwnership = _out1536;
          readIdents = _out1537;
        }
      } else if (_source319.is_SeqConstruct) {
        DAST._IExpression _4859___mcc_h21 = _source319.dtor_length;
        DAST._IExpression _4860___mcc_h22 = _source319.dtor_elem;
        DAST._IExpression _4861_expr = _4860___mcc_h22;
        DAST._IExpression _4862_length = _4859___mcc_h21;
        {
          RAST._IExpr _4863_recursiveGen;
          DCOMP._IOwnership _4864___v149;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4865_recIdents;
          RAST._IExpr _out1538;
          DCOMP._IOwnership _out1539;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1540;
          (this).GenExpr(_4861_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1538, out _out1539, out _out1540);
          _4863_recursiveGen = _out1538;
          _4864___v149 = _out1539;
          _4865_recIdents = _out1540;
          RAST._IExpr _4866_lengthGen;
          DCOMP._IOwnership _4867___v150;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4868_lengthIdents;
          RAST._IExpr _out1541;
          DCOMP._IOwnership _out1542;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1543;
          (this).GenExpr(_4862_length, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1541, out _out1542, out _out1543);
          _4866_lengthGen = _out1541;
          _4867___v150 = _out1542;
          _4868_lengthIdents = _out1543;
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\nlet _initializer = "), (_4863_recursiveGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n::dafny_runtime::integer_range(::dafny_runtime::Zero::zero(), ")), (_4866_lengthGen)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").map(|i| _initializer(&i)).collect::<::dafny_runtime::Sequence<_>>()\n}")));
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4865_recIdents, _4868_lengthIdents);
          RAST._IExpr _out1544;
          DCOMP._IOwnership _out1545;
          (this).FromOwned(r, expectedOwnership, out _out1544, out _out1545);
          r = _out1544;
          resultingOwnership = _out1545;
          return ;
        }
      } else if (_source319.is_SeqValue) {
        Dafny.ISequence<DAST._IExpression> _4869___mcc_h23 = _source319.dtor_elements;
        DAST._IType _4870___mcc_h24 = _source319.dtor_typ;
        DAST._IType _4871_typ = _4870___mcc_h24;
        Dafny.ISequence<DAST._IExpression> _4872_exprs = _4869___mcc_h23;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IType _4873_genTpe;
          RAST._IType _out1546;
          _out1546 = (this).GenType(_4871_typ, DCOMP.GenTypeContext.@default());
          _4873_genTpe = _out1546;
          BigInteger _4874_i;
          _4874_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _4875_args;
          _4875_args = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_4874_i) < (new BigInteger((_4872_exprs).Count))) {
            RAST._IExpr _4876_recursiveGen;
            DCOMP._IOwnership _4877___v151;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4878_recIdents;
            RAST._IExpr _out1547;
            DCOMP._IOwnership _out1548;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1549;
            (this).GenExpr((_4872_exprs).Select(_4874_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1547, out _out1548, out _out1549);
            _4876_recursiveGen = _out1547;
            _4877___v151 = _out1548;
            _4878_recIdents = _out1549;
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4878_recIdents);
            _4875_args = Dafny.Sequence<RAST._IExpr>.Concat(_4875_args, Dafny.Sequence<RAST._IExpr>.FromElements(_4876_recursiveGen));
            _4874_i = (_4874_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("seq!"))).Apply(_4875_args);
          if ((new BigInteger((_4875_args).Count)).Sign == 0) {
            r = RAST.Expr.create_TypeAscription(r, ((RAST.__default.dafny__runtime__type).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Sequence"))).Apply1(_4873_genTpe));
          }
          RAST._IExpr _out1550;
          DCOMP._IOwnership _out1551;
          (this).FromOwned(r, expectedOwnership, out _out1550, out _out1551);
          r = _out1550;
          resultingOwnership = _out1551;
          return ;
        }
      } else if (_source319.is_SetValue) {
        Dafny.ISequence<DAST._IExpression> _4879___mcc_h25 = _source319.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _4880_exprs = _4879___mcc_h25;
        {
          Dafny.ISequence<RAST._IExpr> _4881_generatedValues;
          _4881_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4882_i;
          _4882_i = BigInteger.Zero;
          while ((_4882_i) < (new BigInteger((_4880_exprs).Count))) {
            RAST._IExpr _4883_recursiveGen;
            DCOMP._IOwnership _4884___v152;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4885_recIdents;
            RAST._IExpr _out1552;
            DCOMP._IOwnership _out1553;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1554;
            (this).GenExpr((_4880_exprs).Select(_4882_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1552, out _out1553, out _out1554);
            _4883_recursiveGen = _out1552;
            _4884___v152 = _out1553;
            _4885_recIdents = _out1554;
            _4881_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_4881_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_4883_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4885_recIdents);
            _4882_i = (_4882_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("set!"))).Apply(_4881_generatedValues);
          RAST._IExpr _out1555;
          DCOMP._IOwnership _out1556;
          (this).FromOwned(r, expectedOwnership, out _out1555, out _out1556);
          r = _out1555;
          resultingOwnership = _out1556;
          return ;
        }
      } else if (_source319.is_MultisetValue) {
        Dafny.ISequence<DAST._IExpression> _4886___mcc_h26 = _source319.dtor_elements;
        Dafny.ISequence<DAST._IExpression> _4887_exprs = _4886___mcc_h26;
        {
          Dafny.ISequence<RAST._IExpr> _4888_generatedValues;
          _4888_generatedValues = Dafny.Sequence<RAST._IExpr>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4889_i;
          _4889_i = BigInteger.Zero;
          while ((_4889_i) < (new BigInteger((_4887_exprs).Count))) {
            RAST._IExpr _4890_recursiveGen;
            DCOMP._IOwnership _4891___v153;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4892_recIdents;
            RAST._IExpr _out1557;
            DCOMP._IOwnership _out1558;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1559;
            (this).GenExpr((_4887_exprs).Select(_4889_i), selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1557, out _out1558, out _out1559);
            _4890_recursiveGen = _out1557;
            _4891___v153 = _out1558;
            _4892_recIdents = _out1559;
            _4888_generatedValues = Dafny.Sequence<RAST._IExpr>.Concat(_4888_generatedValues, Dafny.Sequence<RAST._IExpr>.FromElements(_4890_recursiveGen));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4892_recIdents);
            _4889_i = (_4889_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("multiset!"))).Apply(_4888_generatedValues);
          RAST._IExpr _out1560;
          DCOMP._IOwnership _out1561;
          (this).FromOwned(r, expectedOwnership, out _out1560, out _out1561);
          r = _out1560;
          resultingOwnership = _out1561;
          return ;
        }
      } else if (_source319.is_MapValue) {
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _4893___mcc_h27 = _source319.dtor_mapElems;
        Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _4894_mapElems = _4893___mcc_h27;
        {
          Dafny.ISequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>> _4895_generatedValues;
          _4895_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements();
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _4896_i;
          _4896_i = BigInteger.Zero;
          while ((_4896_i) < (new BigInteger((_4894_mapElems).Count))) {
            RAST._IExpr _4897_recursiveGenKey;
            DCOMP._IOwnership _4898___v155;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4899_recIdentsKey;
            RAST._IExpr _out1562;
            DCOMP._IOwnership _out1563;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1564;
            (this).GenExpr(((_4894_mapElems).Select(_4896_i)).dtor__0, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1562, out _out1563, out _out1564);
            _4897_recursiveGenKey = _out1562;
            _4898___v155 = _out1563;
            _4899_recIdentsKey = _out1564;
            RAST._IExpr _4900_recursiveGenValue;
            DCOMP._IOwnership _4901___v156;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4902_recIdentsValue;
            RAST._IExpr _out1565;
            DCOMP._IOwnership _out1566;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1567;
            (this).GenExpr(((_4894_mapElems).Select(_4896_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1565, out _out1566, out _out1567);
            _4900_recursiveGenValue = _out1565;
            _4901___v156 = _out1566;
            _4902_recIdentsValue = _out1567;
            _4895_generatedValues = Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.Concat(_4895_generatedValues, Dafny.Sequence<_System._ITuple2<RAST._IExpr, RAST._IExpr>>.FromElements(_System.Tuple2<RAST._IExpr, RAST._IExpr>.create(_4897_recursiveGenKey, _4900_recursiveGenValue)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _4899_recIdentsKey), _4902_recIdentsValue);
            _4896_i = (_4896_i) + (BigInteger.One);
          }
          _4896_i = BigInteger.Zero;
          Dafny.ISequence<RAST._IExpr> _4903_arguments;
          _4903_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          while ((_4896_i) < (new BigInteger((_4895_generatedValues).Count))) {
            RAST._IExpr _4904_genKey;
            _4904_genKey = ((_4895_generatedValues).Select(_4896_i)).dtor__0;
            RAST._IExpr _4905_genValue;
            _4905_genValue = ((_4895_generatedValues).Select(_4896_i)).dtor__1;
            _4903_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_4903_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(RAST.Expr.create_BinaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("=>"), _4904_genKey, _4905_genValue, DAST.Format.BinaryOpFormat.create_NoFormat())));
            _4896_i = (_4896_i) + (BigInteger.One);
          }
          r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("map!"))).Apply(_4903_arguments);
          RAST._IExpr _out1568;
          DCOMP._IOwnership _out1569;
          (this).FromOwned(r, expectedOwnership, out _out1568, out _out1569);
          r = _out1568;
          resultingOwnership = _out1569;
          return ;
        }
      } else if (_source319.is_MapBuilder) {
        DAST._IType _4906___mcc_h28 = _source319.dtor_keyType;
        DAST._IType _4907___mcc_h29 = _source319.dtor_valueType;
        DAST._IType _4908_valueType = _4907___mcc_h29;
        DAST._IType _4909_keyType = _4906___mcc_h28;
        {
          RAST._IType _4910_kType;
          RAST._IType _out1570;
          _out1570 = (this).GenType(_4909_keyType, DCOMP.GenTypeContext.@default());
          _4910_kType = _out1570;
          RAST._IType _4911_vType;
          RAST._IType _out1571;
          _out1571 = (this).GenType(_4908_valueType, DCOMP.GenTypeContext.@default());
          _4911_vType = _out1571;
          r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("MapBuilder"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4910_kType, _4911_vType))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1572;
          DCOMP._IOwnership _out1573;
          (this).FromOwned(r, expectedOwnership, out _out1572, out _out1573);
          r = _out1572;
          resultingOwnership = _out1573;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source319.is_SeqUpdate) {
        DAST._IExpression _4912___mcc_h30 = _source319.dtor_expr;
        DAST._IExpression _4913___mcc_h31 = _source319.dtor_indexExpr;
        DAST._IExpression _4914___mcc_h32 = _source319.dtor_value;
        DAST._IExpression _4915_value = _4914___mcc_h32;
        DAST._IExpression _4916_index = _4913___mcc_h31;
        DAST._IExpression _4917_expr = _4912___mcc_h30;
        {
          RAST._IExpr _4918_exprR;
          DCOMP._IOwnership _4919___v157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4920_exprIdents;
          RAST._IExpr _out1574;
          DCOMP._IOwnership _out1575;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1576;
          (this).GenExpr(_4917_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1574, out _out1575, out _out1576);
          _4918_exprR = _out1574;
          _4919___v157 = _out1575;
          _4920_exprIdents = _out1576;
          RAST._IExpr _4921_indexR;
          DCOMP._IOwnership _4922_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4923_indexIdents;
          RAST._IExpr _out1577;
          DCOMP._IOwnership _out1578;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1579;
          (this).GenExpr(_4916_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1577, out _out1578, out _out1579);
          _4921_indexR = _out1577;
          _4922_indexOwnership = _out1578;
          _4923_indexIdents = _out1579;
          RAST._IExpr _4924_valueR;
          DCOMP._IOwnership _4925_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4926_valueIdents;
          RAST._IExpr _out1580;
          DCOMP._IOwnership _out1581;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1582;
          (this).GenExpr(_4915_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1580, out _out1581, out _out1582);
          _4924_valueR = _out1580;
          _4925_valueOwnership = _out1581;
          _4926_valueIdents = _out1582;
          r = ((_4918_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4921_indexR, _4924_valueR));
          RAST._IExpr _out1583;
          DCOMP._IOwnership _out1584;
          (this).FromOwned(r, expectedOwnership, out _out1583, out _out1584);
          r = _out1583;
          resultingOwnership = _out1584;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4920_exprIdents, _4923_indexIdents), _4926_valueIdents);
          return ;
        }
      } else if (_source319.is_MapUpdate) {
        DAST._IExpression _4927___mcc_h33 = _source319.dtor_expr;
        DAST._IExpression _4928___mcc_h34 = _source319.dtor_indexExpr;
        DAST._IExpression _4929___mcc_h35 = _source319.dtor_value;
        DAST._IExpression _4930_value = _4929___mcc_h35;
        DAST._IExpression _4931_index = _4928___mcc_h34;
        DAST._IExpression _4932_expr = _4927___mcc_h33;
        {
          RAST._IExpr _4933_exprR;
          DCOMP._IOwnership _4934___v158;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4935_exprIdents;
          RAST._IExpr _out1585;
          DCOMP._IOwnership _out1586;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1587;
          (this).GenExpr(_4932_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1585, out _out1586, out _out1587);
          _4933_exprR = _out1585;
          _4934___v158 = _out1586;
          _4935_exprIdents = _out1587;
          RAST._IExpr _4936_indexR;
          DCOMP._IOwnership _4937_indexOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4938_indexIdents;
          RAST._IExpr _out1588;
          DCOMP._IOwnership _out1589;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1590;
          (this).GenExpr(_4931_index, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1588, out _out1589, out _out1590);
          _4936_indexR = _out1588;
          _4937_indexOwnership = _out1589;
          _4938_indexIdents = _out1590;
          RAST._IExpr _4939_valueR;
          DCOMP._IOwnership _4940_valueOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4941_valueIdents;
          RAST._IExpr _out1591;
          DCOMP._IOwnership _out1592;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1593;
          (this).GenExpr(_4930_value, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1591, out _out1592, out _out1593);
          _4939_valueR = _out1591;
          _4940_valueOwnership = _out1592;
          _4941_valueIdents = _out1593;
          r = ((_4933_exprR).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_index"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_4936_indexR, _4939_valueR));
          RAST._IExpr _out1594;
          DCOMP._IOwnership _out1595;
          (this).FromOwned(r, expectedOwnership, out _out1594, out _out1595);
          r = _out1594;
          resultingOwnership = _out1595;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4935_exprIdents, _4938_indexIdents), _4941_valueIdents);
          return ;
        }
      } else if (_source319.is_SetBuilder) {
        DAST._IType _4942___mcc_h36 = _source319.dtor_elemType;
        DAST._IType _4943_elemType = _4942___mcc_h36;
        {
          RAST._IType _4944_eType;
          RAST._IType _out1596;
          _out1596 = (this).GenType(_4943_elemType, DCOMP.GenTypeContext.@default());
          _4944_eType = _out1596;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("SetBuilder"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(_4944_eType))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("new"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1597;
          DCOMP._IOwnership _out1598;
          (this).FromOwned(r, expectedOwnership, out _out1597, out _out1598);
          r = _out1597;
          resultingOwnership = _out1598;
          return ;
        }
      } else if (_source319.is_ToMultiset) {
        DAST._IExpression _4945___mcc_h37 = _source319.dtor_ToMultiset_i_a0;
        DAST._IExpression _4946_expr = _4945___mcc_h37;
        {
          RAST._IExpr _4947_recursiveGen;
          DCOMP._IOwnership _4948___v154;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4949_recIdents;
          RAST._IExpr _out1599;
          DCOMP._IOwnership _out1600;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1601;
          (this).GenExpr(_4946_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1599, out _out1600, out _out1601);
          _4947_recursiveGen = _out1599;
          _4948___v154 = _out1600;
          _4949_recIdents = _out1601;
          r = ((_4947_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_dafny_multiset"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _4949_recIdents;
          RAST._IExpr _out1602;
          DCOMP._IOwnership _out1603;
          (this).FromOwned(r, expectedOwnership, out _out1602, out _out1603);
          r = _out1602;
          resultingOwnership = _out1603;
          return ;
        }
      } else if (_source319.is_This) {
        {
          Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _source320 = selfIdent;
          if (_source320.is_None) {
            {
              r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("panic!(\"this outside of a method\")"));
              RAST._IExpr _out1604;
              DCOMP._IOwnership _out1605;
              (this).FromOwned(r, expectedOwnership, out _out1604, out _out1605);
              r = _out1604;
              resultingOwnership = _out1605;
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
            }
          } else {
            Dafny.ISequence<Dafny.Rune> _4950___mcc_h321 = _source320.dtor_value;
            Dafny.ISequence<Dafny.Rune> _4951_id = _4950___mcc_h321;
            {
              r = RAST.Expr.create_Identifier(_4951_id);
              if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwned())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox()))) {
                if ((((this).ObjectType).is_RcMut) && ((_4951_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self")))) {
                  r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Object"))).ApplyType(Dafny.Sequence<RAST._IType>.FromElements(RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"))))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(r));
                } else {
                  r = (r).Clone();
                }
                if (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipOwnedBox())) {
                  r = RAST.__default.BoxNew(r);
                  resultingOwnership = DCOMP.Ownership.create_OwnershipOwnedBox();
                } else {
                  resultingOwnership = DCOMP.Ownership.create_OwnershipOwned();
                }
              } else if ((object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipBorrowed())) || (object.Equals(expectedOwnership, DCOMP.Ownership.create_OwnershipAutoBorrowed()))) {
                if (!(_4951_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.Borrow(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
              } else {
                if (!(_4951_id).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"))) {
                  r = RAST.__default.BorrowMut(r);
                }
                resultingOwnership = DCOMP.Ownership.create_OwnershipBorrowedMut();
              }
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_4951_id);
            }
          }
          return ;
        }
      } else if (_source319.is_Ite) {
        DAST._IExpression _4952___mcc_h38 = _source319.dtor_cond;
        DAST._IExpression _4953___mcc_h39 = _source319.dtor_thn;
        DAST._IExpression _4954___mcc_h40 = _source319.dtor_els;
        DAST._IExpression _4955_f = _4954___mcc_h40;
        DAST._IExpression _4956_t = _4953___mcc_h39;
        DAST._IExpression _4957_cond = _4952___mcc_h38;
        {
          RAST._IExpr _4958_cond;
          DCOMP._IOwnership _4959___v159;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4960_recIdentsCond;
          RAST._IExpr _out1606;
          DCOMP._IOwnership _out1607;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1608;
          (this).GenExpr(_4957_cond, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1606, out _out1607, out _out1608);
          _4958_cond = _out1606;
          _4959___v159 = _out1607;
          _4960_recIdentsCond = _out1608;
          RAST._IExpr _4961_fExpr;
          DCOMP._IOwnership _4962_fOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4963_recIdentsF;
          RAST._IExpr _out1609;
          DCOMP._IOwnership _out1610;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1611;
          (this).GenExpr(_4955_f, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1609, out _out1610, out _out1611);
          _4961_fExpr = _out1609;
          _4962_fOwned = _out1610;
          _4963_recIdentsF = _out1611;
          RAST._IExpr _4964_tExpr;
          DCOMP._IOwnership _4965___v160;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4966_recIdentsT;
          RAST._IExpr _out1612;
          DCOMP._IOwnership _out1613;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1614;
          (this).GenExpr(_4956_t, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1612, out _out1613, out _out1614);
          _4964_tExpr = _out1612;
          _4965___v160 = _out1613;
          _4966_recIdentsT = _out1614;
          r = RAST.Expr.create_IfExpr(_4958_cond, _4964_tExpr, _4961_fExpr);
          RAST._IExpr _out1615;
          DCOMP._IOwnership _out1616;
          (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipOwned(), expectedOwnership, out _out1615, out _out1616);
          r = _out1615;
          resultingOwnership = _out1616;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_4960_recIdentsCond, _4966_recIdentsT), _4963_recIdentsF);
          return ;
        }
      } else if (_source319.is_UnOp) {
        DAST._IUnaryOp _4967___mcc_h41 = _source319.dtor_unOp;
        DAST._IExpression _4968___mcc_h42 = _source319.dtor_expr;
        DAST.Format._IUnaryOpFormat _4969___mcc_h43 = _source319.dtor_format1;
        DAST._IUnaryOp _source321 = _4967___mcc_h41;
        if (_source321.is_Not) {
          DAST.Format._IUnaryOpFormat _4970_format = _4969___mcc_h43;
          DAST._IExpression _4971_e = _4968___mcc_h42;
          {
            RAST._IExpr _4972_recursiveGen;
            DCOMP._IOwnership _4973___v161;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4974_recIdents;
            RAST._IExpr _out1617;
            DCOMP._IOwnership _out1618;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1619;
            (this).GenExpr(_4971_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1617, out _out1618, out _out1619);
            _4972_recursiveGen = _out1617;
            _4973___v161 = _out1618;
            _4974_recIdents = _out1619;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("!"), _4972_recursiveGen, _4970_format);
            RAST._IExpr _out1620;
            DCOMP._IOwnership _out1621;
            (this).FromOwned(r, expectedOwnership, out _out1620, out _out1621);
            r = _out1620;
            resultingOwnership = _out1621;
            readIdents = _4974_recIdents;
            return ;
          }
        } else if (_source321.is_BitwiseNot) {
          DAST.Format._IUnaryOpFormat _4975_format = _4969___mcc_h43;
          DAST._IExpression _4976_e = _4968___mcc_h42;
          {
            RAST._IExpr _4977_recursiveGen;
            DCOMP._IOwnership _4978___v162;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4979_recIdents;
            RAST._IExpr _out1622;
            DCOMP._IOwnership _out1623;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1624;
            (this).GenExpr(_4976_e, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1622, out _out1623, out _out1624);
            _4977_recursiveGen = _out1622;
            _4978___v162 = _out1623;
            _4979_recIdents = _out1624;
            r = RAST.Expr.create_UnaryOp(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("~"), _4977_recursiveGen, _4975_format);
            RAST._IExpr _out1625;
            DCOMP._IOwnership _out1626;
            (this).FromOwned(r, expectedOwnership, out _out1625, out _out1626);
            r = _out1625;
            resultingOwnership = _out1626;
            readIdents = _4979_recIdents;
            return ;
          }
        } else {
          DAST.Format._IUnaryOpFormat _4980_format = _4969___mcc_h43;
          DAST._IExpression _4981_e = _4968___mcc_h42;
          {
            RAST._IExpr _4982_recursiveGen;
            DCOMP._IOwnership _4983_recOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4984_recIdents;
            RAST._IExpr _out1627;
            DCOMP._IOwnership _out1628;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1629;
            (this).GenExpr(_4981_e, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1627, out _out1628, out _out1629);
            _4982_recursiveGen = _out1627;
            _4983_recOwned = _out1628;
            _4984_recIdents = _out1629;
            r = ((_4982_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("cardinality"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out1630;
            DCOMP._IOwnership _out1631;
            (this).FromOwned(r, expectedOwnership, out _out1630, out _out1631);
            r = _out1630;
            resultingOwnership = _out1631;
            readIdents = _4984_recIdents;
            return ;
          }
        }
      } else if (_source319.is_BinOp) {
        DAST._IBinOp _4985___mcc_h44 = _source319.dtor_op;
        DAST._IExpression _4986___mcc_h45 = _source319.dtor_left;
        DAST._IExpression _4987___mcc_h46 = _source319.dtor_right;
        DAST.Format._IBinaryOpFormat _4988___mcc_h47 = _source319.dtor_format2;
        RAST._IExpr _out1632;
        DCOMP._IOwnership _out1633;
        Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1634;
        (this).GenExprBinary(e, selfIdent, env, expectedOwnership, out _out1632, out _out1633, out _out1634);
        r = _out1632;
        resultingOwnership = _out1633;
        readIdents = _out1634;
      } else if (_source319.is_ArrayLen) {
        DAST._IExpression _4989___mcc_h48 = _source319.dtor_expr;
        DAST._IType _4990___mcc_h49 = _source319.dtor_exprType;
        BigInteger _4991___mcc_h50 = _source319.dtor_dim;
        bool _4992___mcc_h51 = _source319.dtor_native;
        bool _4993_native = _4992___mcc_h51;
        BigInteger _4994_dim = _4991___mcc_h50;
        DAST._IType _4995_exprType = _4990___mcc_h49;
        DAST._IExpression _4996_expr = _4989___mcc_h48;
        {
          RAST._IExpr _4997_recursiveGen;
          DCOMP._IOwnership _4998___v167;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _4999_recIdents;
          RAST._IExpr _out1635;
          DCOMP._IOwnership _out1636;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1637;
          (this).GenExpr(_4996_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1635, out _out1636, out _out1637);
          _4997_recursiveGen = _out1635;
          _4998___v167 = _out1636;
          _4999_recIdents = _out1637;
          RAST._IType _5000_arrayType;
          RAST._IType _out1638;
          _out1638 = (this).GenType(_4995_exprType, DCOMP.GenTypeContext.@default());
          _5000_arrayType = _out1638;
          if (!((_5000_arrayType).IsObjectOrPointer())) {
            Dafny.ISequence<Dafny.Rune> _5001_msg;
            _5001_msg = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Array length of something not an array but "), (_5000_arrayType)._ToString(DCOMP.__default.IND));
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(_5001_msg);
            r = RAST.Expr.create_RawExpr(_5001_msg);
          } else {
            RAST._IType _5002_underlying;
            _5002_underlying = (_5000_arrayType).ObjectOrPointerUnderlying();
            if (((_4994_dim).Sign == 0) && ((_5002_underlying).is_Array)) {
              r = ((((this).read__macro).Apply1(_4997_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            } else {
              if ((_4994_dim).Sign == 0) {
                r = (((((this).read__macro).Apply1(_4997_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("data"))).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("len"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              } else {
                r = (((this).read__macro).Apply1(_4997_recursiveGen)).Sel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Length"), Std.Strings.__default.OfNat(_4994_dim)));
              }
            }
            if (!(_4993_native)) {
              r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("int!"))).Apply1(r);
            }
          }
          RAST._IExpr _out1639;
          DCOMP._IOwnership _out1640;
          (this).FromOwned(r, expectedOwnership, out _out1639, out _out1640);
          r = _out1639;
          resultingOwnership = _out1640;
          readIdents = _4999_recIdents;
          return ;
        }
      } else if (_source319.is_MapKeys) {
        DAST._IExpression _5003___mcc_h52 = _source319.dtor_expr;
        DAST._IExpression _5004_expr = _5003___mcc_h52;
        {
          RAST._IExpr _5005_recursiveGen;
          DCOMP._IOwnership _5006___v168;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5007_recIdents;
          RAST._IExpr _out1641;
          DCOMP._IOwnership _out1642;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1643;
          (this).GenExpr(_5004_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1641, out _out1642, out _out1643);
          _5005_recursiveGen = _out1641;
          _5006___v168 = _out1642;
          _5007_recIdents = _out1643;
          readIdents = _5007_recIdents;
          r = ((_5005_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1644;
          DCOMP._IOwnership _out1645;
          (this).FromOwned(r, expectedOwnership, out _out1644, out _out1645);
          r = _out1644;
          resultingOwnership = _out1645;
          return ;
        }
      } else if (_source319.is_MapValues) {
        DAST._IExpression _5008___mcc_h53 = _source319.dtor_expr;
        DAST._IExpression _5009_expr = _5008___mcc_h53;
        {
          RAST._IExpr _5010_recursiveGen;
          DCOMP._IOwnership _5011___v169;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5012_recIdents;
          RAST._IExpr _out1646;
          DCOMP._IOwnership _out1647;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1648;
          (this).GenExpr(_5009_expr, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out1646, out _out1647, out _out1648);
          _5010_recursiveGen = _out1646;
          _5011___v169 = _out1647;
          _5012_recIdents = _out1648;
          readIdents = _5012_recIdents;
          r = ((_5010_recursiveGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("values"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out1649;
          DCOMP._IOwnership _out1650;
          (this).FromOwned(r, expectedOwnership, out _out1649, out _out1650);
          r = _out1649;
          resultingOwnership = _out1650;
          return ;
        }
      } else if (_source319.is_Select) {
        DAST._IExpression _5013___mcc_h54 = _source319.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _5014___mcc_h55 = _source319.dtor_field;
        bool _5015___mcc_h56 = _source319.dtor_isConstant;
        bool _5016___mcc_h57 = _source319.dtor_onDatatype;
        DAST._IType _5017___mcc_h58 = _source319.dtor_fieldType;
        DAST._IExpression _source322 = _5013___mcc_h54;
        if (_source322.is_Literal) {
          DAST._ILiteral _5018___mcc_h59 = _source322.dtor_Literal_i_a0;
          DAST._IType _5019_fieldType = _5017___mcc_h58;
          bool _5020_isDatatype = _5016___mcc_h57;
          bool _5021_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5022_field = _5014___mcc_h55;
          DAST._IExpression _5023_on = _5013___mcc_h54;
          {
            if (_5020_isDatatype) {
              RAST._IExpr _5024_onExpr;
              DCOMP._IOwnership _5025_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5026_recIdents;
              RAST._IExpr _out1651;
              DCOMP._IOwnership _out1652;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1653;
              (this).GenExpr(_5023_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1651, out _out1652, out _out1653);
              _5024_onExpr = _out1651;
              _5025_onOwned = _out1652;
              _5026_recIdents = _out1653;
              r = ((_5024_onExpr).Sel(DCOMP.__default.escapeName(_5022_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5027_typ;
              RAST._IType _out1654;
              _out1654 = (this).GenType(_5019_fieldType, DCOMP.GenTypeContext.@default());
              _5027_typ = _out1654;
              RAST._IExpr _out1655;
              DCOMP._IOwnership _out1656;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1655, out _out1656);
              r = _out1655;
              resultingOwnership = _out1656;
              readIdents = _5026_recIdents;
            } else {
              RAST._IExpr _5028_onExpr;
              DCOMP._IOwnership _5029_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5030_recIdents;
              RAST._IExpr _out1657;
              DCOMP._IOwnership _out1658;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1659;
              (this).GenExpr(_5023_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1657, out _out1658, out _out1659);
              _5028_onExpr = _out1657;
              _5029_onOwned = _out1658;
              _5030_recIdents = _out1659;
              r = _5028_onExpr;
              if (!object.Equals(_5028_onExpr, RAST.__default.self)) {
                RAST._IExpr _source323 = _5028_onExpr;
                if (_source323.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5031___mcc_h322 = _source323.dtor_content;
                } else if (_source323.is_ExprFromType) {
                  RAST._IType _5032___mcc_h324 = _source323.dtor_tpe;
                } else if (_source323.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5033___mcc_h326 = _source323.dtor_name;
                } else if (_source323.is_Match) {
                  RAST._IExpr _5034___mcc_h328 = _source323.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5035___mcc_h329 = _source323.dtor_cases;
                } else if (_source323.is_StmtExpr) {
                  RAST._IExpr _5036___mcc_h332 = _source323.dtor_stmt;
                  RAST._IExpr _5037___mcc_h333 = _source323.dtor_rhs;
                } else if (_source323.is_Block) {
                  RAST._IExpr _5038___mcc_h336 = _source323.dtor_underlying;
                } else if (_source323.is_StructBuild) {
                  RAST._IExpr _5039___mcc_h338 = _source323.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5040___mcc_h339 = _source323.dtor_assignments;
                } else if (_source323.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5041___mcc_h342 = _source323.dtor_arguments;
                } else if (_source323.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5042___mcc_h344 = _source323.dtor_op1;
                  RAST._IExpr _5043___mcc_h345 = _source323.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5044___mcc_h346 = _source323.dtor_format;
                  if (object.Equals(_5042___mcc_h344, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source324 = _5043___mcc_h345;
                    if (_source324.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5045___mcc_h350 = _source324.dtor_content;
                    } else if (_source324.is_ExprFromType) {
                      RAST._IType _5046___mcc_h352 = _source324.dtor_tpe;
                    } else if (_source324.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5047___mcc_h354 = _source324.dtor_name;
                      if (object.Equals(_5047___mcc_h354, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source324.is_Match) {
                      RAST._IExpr _5048___mcc_h356 = _source324.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5049___mcc_h357 = _source324.dtor_cases;
                    } else if (_source324.is_StmtExpr) {
                      RAST._IExpr _5050___mcc_h360 = _source324.dtor_stmt;
                      RAST._IExpr _5051___mcc_h361 = _source324.dtor_rhs;
                    } else if (_source324.is_Block) {
                      RAST._IExpr _5052___mcc_h364 = _source324.dtor_underlying;
                    } else if (_source324.is_StructBuild) {
                      RAST._IExpr _5053___mcc_h366 = _source324.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5054___mcc_h367 = _source324.dtor_assignments;
                    } else if (_source324.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5055___mcc_h370 = _source324.dtor_arguments;
                    } else if (_source324.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5056___mcc_h372 = _source324.dtor_op1;
                      RAST._IExpr _5057___mcc_h373 = _source324.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5058___mcc_h374 = _source324.dtor_format;
                    } else if (_source324.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5059___mcc_h378 = _source324.dtor_op2;
                      RAST._IExpr _5060___mcc_h379 = _source324.dtor_left;
                      RAST._IExpr _5061___mcc_h380 = _source324.dtor_right;
                      DAST.Format._IBinaryOpFormat _5062___mcc_h381 = _source324.dtor_format2;
                    } else if (_source324.is_TypeAscription) {
                      RAST._IExpr _5063___mcc_h386 = _source324.dtor_left;
                      RAST._IType _5064___mcc_h387 = _source324.dtor_tpe;
                    } else if (_source324.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5065___mcc_h390 = _source324.dtor_value;
                    } else if (_source324.is_LiteralBool) {
                      bool _5066___mcc_h392 = _source324.dtor_bvalue;
                    } else if (_source324.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5067___mcc_h394 = _source324.dtor_value;
                      bool _5068___mcc_h395 = _source324.dtor_binary;
                    } else if (_source324.is_DeclareVar) {
                      RAST._IDeclareType _5069___mcc_h398 = _source324.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5070___mcc_h399 = _source324.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5071___mcc_h400 = _source324.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5072___mcc_h401 = _source324.dtor_optRhs;
                    } else if (_source324.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5073___mcc_h406 = _source324.dtor_names;
                      RAST._IExpr _5074___mcc_h407 = _source324.dtor_rhs;
                    } else if (_source324.is_IfExpr) {
                      RAST._IExpr _5075___mcc_h410 = _source324.dtor_cond;
                      RAST._IExpr _5076___mcc_h411 = _source324.dtor_thn;
                      RAST._IExpr _5077___mcc_h412 = _source324.dtor_els;
                    } else if (_source324.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5078___mcc_h416 = _source324.dtor_optCond;
                      RAST._IExpr _5079___mcc_h417 = _source324.dtor_underlying;
                    } else if (_source324.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5080___mcc_h420 = _source324.dtor_name;
                      RAST._IExpr _5081___mcc_h421 = _source324.dtor_range;
                      RAST._IExpr _5082___mcc_h422 = _source324.dtor_body;
                    } else if (_source324.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5083___mcc_h426 = _source324.dtor_lbl;
                      RAST._IExpr _5084___mcc_h427 = _source324.dtor_underlying;
                    } else if (_source324.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5085___mcc_h430 = _source324.dtor_optLbl;
                    } else if (_source324.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5086___mcc_h432 = _source324.dtor_optLbl;
                    } else if (_source324.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5087___mcc_h434 = _source324.dtor_optExpr;
                    } else if (_source324.is_CallType) {
                      RAST._IExpr _5088___mcc_h436 = _source324.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5089___mcc_h437 = _source324.dtor_typeParameters;
                    } else if (_source324.is_Call) {
                      RAST._IExpr _5090___mcc_h440 = _source324.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5091___mcc_h441 = _source324.dtor_arguments;
                    } else if (_source324.is_Select) {
                      RAST._IExpr _5092___mcc_h444 = _source324.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5093___mcc_h445 = _source324.dtor_name;
                    } else if (_source324.is_MemberSelect) {
                      RAST._IExpr _5094___mcc_h448 = _source324.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5095___mcc_h449 = _source324.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5096___mcc_h452 = _source324.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5097___mcc_h453 = _source324.dtor_retType;
                      RAST._IExpr _5098___mcc_h454 = _source324.dtor_body;
                    }
                  } else {
                  }
                } else if (_source323.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5099___mcc_h458 = _source323.dtor_op2;
                  RAST._IExpr _5100___mcc_h459 = _source323.dtor_left;
                  RAST._IExpr _5101___mcc_h460 = _source323.dtor_right;
                  DAST.Format._IBinaryOpFormat _5102___mcc_h461 = _source323.dtor_format2;
                } else if (_source323.is_TypeAscription) {
                  RAST._IExpr _5103___mcc_h466 = _source323.dtor_left;
                  RAST._IType _5104___mcc_h467 = _source323.dtor_tpe;
                } else if (_source323.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5105___mcc_h470 = _source323.dtor_value;
                } else if (_source323.is_LiteralBool) {
                  bool _5106___mcc_h472 = _source323.dtor_bvalue;
                } else if (_source323.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5107___mcc_h474 = _source323.dtor_value;
                  bool _5108___mcc_h475 = _source323.dtor_binary;
                } else if (_source323.is_DeclareVar) {
                  RAST._IDeclareType _5109___mcc_h478 = _source323.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5110___mcc_h479 = _source323.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5111___mcc_h480 = _source323.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5112___mcc_h481 = _source323.dtor_optRhs;
                } else if (_source323.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5113___mcc_h486 = _source323.dtor_names;
                  RAST._IExpr _5114___mcc_h487 = _source323.dtor_rhs;
                } else if (_source323.is_IfExpr) {
                  RAST._IExpr _5115___mcc_h490 = _source323.dtor_cond;
                  RAST._IExpr _5116___mcc_h491 = _source323.dtor_thn;
                  RAST._IExpr _5117___mcc_h492 = _source323.dtor_els;
                } else if (_source323.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5118___mcc_h496 = _source323.dtor_optCond;
                  RAST._IExpr _5119___mcc_h497 = _source323.dtor_underlying;
                } else if (_source323.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5120___mcc_h500 = _source323.dtor_name;
                  RAST._IExpr _5121___mcc_h501 = _source323.dtor_range;
                  RAST._IExpr _5122___mcc_h502 = _source323.dtor_body;
                } else if (_source323.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5123___mcc_h506 = _source323.dtor_lbl;
                  RAST._IExpr _5124___mcc_h507 = _source323.dtor_underlying;
                } else if (_source323.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5125___mcc_h510 = _source323.dtor_optLbl;
                } else if (_source323.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5126___mcc_h512 = _source323.dtor_optLbl;
                } else if (_source323.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5127___mcc_h514 = _source323.dtor_optExpr;
                } else if (_source323.is_CallType) {
                  RAST._IExpr _5128___mcc_h516 = _source323.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5129___mcc_h517 = _source323.dtor_typeParameters;
                } else if (_source323.is_Call) {
                  RAST._IExpr _5130___mcc_h520 = _source323.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5131___mcc_h521 = _source323.dtor_arguments;
                } else if (_source323.is_Select) {
                  RAST._IExpr _5132___mcc_h524 = _source323.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5133___mcc_h525 = _source323.dtor_name;
                } else if (_source323.is_MemberSelect) {
                  RAST._IExpr _5134___mcc_h528 = _source323.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5135___mcc_h529 = _source323.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5136___mcc_h532 = _source323.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5137___mcc_h533 = _source323.dtor_retType;
                  RAST._IExpr _5138___mcc_h534 = _source323.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5022_field));
              if (_5021_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1660;
              DCOMP._IOwnership _out1661;
              (this).FromOwned(r, expectedOwnership, out _out1660, out _out1661);
              r = _out1660;
              resultingOwnership = _out1661;
              readIdents = _5030_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Ident) {
          Dafny.ISequence<Dafny.Rune> _5139___mcc_h61 = _source322.dtor_Ident_i_a0;
          DAST._IType _5140_fieldType = _5017___mcc_h58;
          bool _5141_isDatatype = _5016___mcc_h57;
          bool _5142_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5143_field = _5014___mcc_h55;
          DAST._IExpression _5144_on = _5013___mcc_h54;
          {
            if (_5141_isDatatype) {
              RAST._IExpr _5145_onExpr;
              DCOMP._IOwnership _5146_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5147_recIdents;
              RAST._IExpr _out1662;
              DCOMP._IOwnership _out1663;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1664;
              (this).GenExpr(_5144_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1662, out _out1663, out _out1664);
              _5145_onExpr = _out1662;
              _5146_onOwned = _out1663;
              _5147_recIdents = _out1664;
              r = ((_5145_onExpr).Sel(DCOMP.__default.escapeName(_5143_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5148_typ;
              RAST._IType _out1665;
              _out1665 = (this).GenType(_5140_fieldType, DCOMP.GenTypeContext.@default());
              _5148_typ = _out1665;
              RAST._IExpr _out1666;
              DCOMP._IOwnership _out1667;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1666, out _out1667);
              r = _out1666;
              resultingOwnership = _out1667;
              readIdents = _5147_recIdents;
            } else {
              RAST._IExpr _5149_onExpr;
              DCOMP._IOwnership _5150_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5151_recIdents;
              RAST._IExpr _out1668;
              DCOMP._IOwnership _out1669;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1670;
              (this).GenExpr(_5144_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1668, out _out1669, out _out1670);
              _5149_onExpr = _out1668;
              _5150_onOwned = _out1669;
              _5151_recIdents = _out1670;
              r = _5149_onExpr;
              if (!object.Equals(_5149_onExpr, RAST.__default.self)) {
                RAST._IExpr _source325 = _5149_onExpr;
                if (_source325.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5152___mcc_h538 = _source325.dtor_content;
                } else if (_source325.is_ExprFromType) {
                  RAST._IType _5153___mcc_h540 = _source325.dtor_tpe;
                } else if (_source325.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5154___mcc_h542 = _source325.dtor_name;
                } else if (_source325.is_Match) {
                  RAST._IExpr _5155___mcc_h544 = _source325.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5156___mcc_h545 = _source325.dtor_cases;
                } else if (_source325.is_StmtExpr) {
                  RAST._IExpr _5157___mcc_h548 = _source325.dtor_stmt;
                  RAST._IExpr _5158___mcc_h549 = _source325.dtor_rhs;
                } else if (_source325.is_Block) {
                  RAST._IExpr _5159___mcc_h552 = _source325.dtor_underlying;
                } else if (_source325.is_StructBuild) {
                  RAST._IExpr _5160___mcc_h554 = _source325.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5161___mcc_h555 = _source325.dtor_assignments;
                } else if (_source325.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5162___mcc_h558 = _source325.dtor_arguments;
                } else if (_source325.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5163___mcc_h560 = _source325.dtor_op1;
                  RAST._IExpr _5164___mcc_h561 = _source325.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5165___mcc_h562 = _source325.dtor_format;
                  if (object.Equals(_5163___mcc_h560, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source326 = _5164___mcc_h561;
                    if (_source326.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5166___mcc_h566 = _source326.dtor_content;
                    } else if (_source326.is_ExprFromType) {
                      RAST._IType _5167___mcc_h568 = _source326.dtor_tpe;
                    } else if (_source326.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5168___mcc_h570 = _source326.dtor_name;
                      if (object.Equals(_5168___mcc_h570, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source326.is_Match) {
                      RAST._IExpr _5169___mcc_h572 = _source326.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5170___mcc_h573 = _source326.dtor_cases;
                    } else if (_source326.is_StmtExpr) {
                      RAST._IExpr _5171___mcc_h576 = _source326.dtor_stmt;
                      RAST._IExpr _5172___mcc_h577 = _source326.dtor_rhs;
                    } else if (_source326.is_Block) {
                      RAST._IExpr _5173___mcc_h580 = _source326.dtor_underlying;
                    } else if (_source326.is_StructBuild) {
                      RAST._IExpr _5174___mcc_h582 = _source326.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5175___mcc_h583 = _source326.dtor_assignments;
                    } else if (_source326.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5176___mcc_h586 = _source326.dtor_arguments;
                    } else if (_source326.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5177___mcc_h588 = _source326.dtor_op1;
                      RAST._IExpr _5178___mcc_h589 = _source326.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5179___mcc_h590 = _source326.dtor_format;
                    } else if (_source326.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5180___mcc_h594 = _source326.dtor_op2;
                      RAST._IExpr _5181___mcc_h595 = _source326.dtor_left;
                      RAST._IExpr _5182___mcc_h596 = _source326.dtor_right;
                      DAST.Format._IBinaryOpFormat _5183___mcc_h597 = _source326.dtor_format2;
                    } else if (_source326.is_TypeAscription) {
                      RAST._IExpr _5184___mcc_h602 = _source326.dtor_left;
                      RAST._IType _5185___mcc_h603 = _source326.dtor_tpe;
                    } else if (_source326.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5186___mcc_h606 = _source326.dtor_value;
                    } else if (_source326.is_LiteralBool) {
                      bool _5187___mcc_h608 = _source326.dtor_bvalue;
                    } else if (_source326.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5188___mcc_h610 = _source326.dtor_value;
                      bool _5189___mcc_h611 = _source326.dtor_binary;
                    } else if (_source326.is_DeclareVar) {
                      RAST._IDeclareType _5190___mcc_h614 = _source326.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5191___mcc_h615 = _source326.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5192___mcc_h616 = _source326.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5193___mcc_h617 = _source326.dtor_optRhs;
                    } else if (_source326.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5194___mcc_h622 = _source326.dtor_names;
                      RAST._IExpr _5195___mcc_h623 = _source326.dtor_rhs;
                    } else if (_source326.is_IfExpr) {
                      RAST._IExpr _5196___mcc_h626 = _source326.dtor_cond;
                      RAST._IExpr _5197___mcc_h627 = _source326.dtor_thn;
                      RAST._IExpr _5198___mcc_h628 = _source326.dtor_els;
                    } else if (_source326.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5199___mcc_h632 = _source326.dtor_optCond;
                      RAST._IExpr _5200___mcc_h633 = _source326.dtor_underlying;
                    } else if (_source326.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5201___mcc_h636 = _source326.dtor_name;
                      RAST._IExpr _5202___mcc_h637 = _source326.dtor_range;
                      RAST._IExpr _5203___mcc_h638 = _source326.dtor_body;
                    } else if (_source326.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5204___mcc_h642 = _source326.dtor_lbl;
                      RAST._IExpr _5205___mcc_h643 = _source326.dtor_underlying;
                    } else if (_source326.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5206___mcc_h646 = _source326.dtor_optLbl;
                    } else if (_source326.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5207___mcc_h648 = _source326.dtor_optLbl;
                    } else if (_source326.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5208___mcc_h650 = _source326.dtor_optExpr;
                    } else if (_source326.is_CallType) {
                      RAST._IExpr _5209___mcc_h652 = _source326.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5210___mcc_h653 = _source326.dtor_typeParameters;
                    } else if (_source326.is_Call) {
                      RAST._IExpr _5211___mcc_h656 = _source326.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5212___mcc_h657 = _source326.dtor_arguments;
                    } else if (_source326.is_Select) {
                      RAST._IExpr _5213___mcc_h660 = _source326.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5214___mcc_h661 = _source326.dtor_name;
                    } else if (_source326.is_MemberSelect) {
                      RAST._IExpr _5215___mcc_h664 = _source326.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5216___mcc_h665 = _source326.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5217___mcc_h668 = _source326.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5218___mcc_h669 = _source326.dtor_retType;
                      RAST._IExpr _5219___mcc_h670 = _source326.dtor_body;
                    }
                  } else {
                  }
                } else if (_source325.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5220___mcc_h674 = _source325.dtor_op2;
                  RAST._IExpr _5221___mcc_h675 = _source325.dtor_left;
                  RAST._IExpr _5222___mcc_h676 = _source325.dtor_right;
                  DAST.Format._IBinaryOpFormat _5223___mcc_h677 = _source325.dtor_format2;
                } else if (_source325.is_TypeAscription) {
                  RAST._IExpr _5224___mcc_h682 = _source325.dtor_left;
                  RAST._IType _5225___mcc_h683 = _source325.dtor_tpe;
                } else if (_source325.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5226___mcc_h686 = _source325.dtor_value;
                } else if (_source325.is_LiteralBool) {
                  bool _5227___mcc_h688 = _source325.dtor_bvalue;
                } else if (_source325.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5228___mcc_h690 = _source325.dtor_value;
                  bool _5229___mcc_h691 = _source325.dtor_binary;
                } else if (_source325.is_DeclareVar) {
                  RAST._IDeclareType _5230___mcc_h694 = _source325.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5231___mcc_h695 = _source325.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5232___mcc_h696 = _source325.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5233___mcc_h697 = _source325.dtor_optRhs;
                } else if (_source325.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5234___mcc_h702 = _source325.dtor_names;
                  RAST._IExpr _5235___mcc_h703 = _source325.dtor_rhs;
                } else if (_source325.is_IfExpr) {
                  RAST._IExpr _5236___mcc_h706 = _source325.dtor_cond;
                  RAST._IExpr _5237___mcc_h707 = _source325.dtor_thn;
                  RAST._IExpr _5238___mcc_h708 = _source325.dtor_els;
                } else if (_source325.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5239___mcc_h712 = _source325.dtor_optCond;
                  RAST._IExpr _5240___mcc_h713 = _source325.dtor_underlying;
                } else if (_source325.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5241___mcc_h716 = _source325.dtor_name;
                  RAST._IExpr _5242___mcc_h717 = _source325.dtor_range;
                  RAST._IExpr _5243___mcc_h718 = _source325.dtor_body;
                } else if (_source325.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5244___mcc_h722 = _source325.dtor_lbl;
                  RAST._IExpr _5245___mcc_h723 = _source325.dtor_underlying;
                } else if (_source325.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5246___mcc_h726 = _source325.dtor_optLbl;
                } else if (_source325.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5247___mcc_h728 = _source325.dtor_optLbl;
                } else if (_source325.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5248___mcc_h730 = _source325.dtor_optExpr;
                } else if (_source325.is_CallType) {
                  RAST._IExpr _5249___mcc_h732 = _source325.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5250___mcc_h733 = _source325.dtor_typeParameters;
                } else if (_source325.is_Call) {
                  RAST._IExpr _5251___mcc_h736 = _source325.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5252___mcc_h737 = _source325.dtor_arguments;
                } else if (_source325.is_Select) {
                  RAST._IExpr _5253___mcc_h740 = _source325.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5254___mcc_h741 = _source325.dtor_name;
                } else if (_source325.is_MemberSelect) {
                  RAST._IExpr _5255___mcc_h744 = _source325.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5256___mcc_h745 = _source325.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5257___mcc_h748 = _source325.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5258___mcc_h749 = _source325.dtor_retType;
                  RAST._IExpr _5259___mcc_h750 = _source325.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5143_field));
              if (_5142_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1671;
              DCOMP._IOwnership _out1672;
              (this).FromOwned(r, expectedOwnership, out _out1671, out _out1672);
              r = _out1671;
              resultingOwnership = _out1672;
              readIdents = _5151_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Companion) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5260___mcc_h63 = _source322.dtor_Companion_i_a0;
          Dafny.ISequence<DAST._IType> _5261___mcc_h64 = _source322.dtor_typeArgs;
          DAST._IType _5262_fieldType = _5017___mcc_h58;
          bool _5263_isDatatype = _5016___mcc_h57;
          bool _5264_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5265_field = _5014___mcc_h55;
          Dafny.ISequence<DAST._IType> _5266_typeArgs = _5261___mcc_h64;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5267_c = _5260___mcc_h63;
          {
            RAST._IExpr _5268_onExpr;
            DCOMP._IOwnership _5269_onOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5270_recIdents;
            RAST._IExpr _out1673;
            DCOMP._IOwnership _out1674;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1675;
            (this).GenExpr(DAST.Expression.create_Companion(_5267_c, _5266_typeArgs), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out1673, out _out1674, out _out1675);
            _5268_onExpr = _out1673;
            _5269_onOwned = _out1674;
            _5270_recIdents = _out1675;
            r = ((_5268_onExpr).MSel(DCOMP.__default.escapeName(_5265_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            RAST._IExpr _out1676;
            DCOMP._IOwnership _out1677;
            (this).FromOwned(r, expectedOwnership, out _out1676, out _out1677);
            r = _out1676;
            resultingOwnership = _out1677;
            readIdents = _5270_recIdents;
            return ;
          }
        } else if (_source322.is_Tuple) {
          Dafny.ISequence<DAST._IExpression> _5271___mcc_h67 = _source322.dtor_Tuple_i_a0;
          DAST._IType _5272_fieldType = _5017___mcc_h58;
          bool _5273_isDatatype = _5016___mcc_h57;
          bool _5274_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5275_field = _5014___mcc_h55;
          DAST._IExpression _5276_on = _5013___mcc_h54;
          {
            if (_5273_isDatatype) {
              RAST._IExpr _5277_onExpr;
              DCOMP._IOwnership _5278_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5279_recIdents;
              RAST._IExpr _out1678;
              DCOMP._IOwnership _out1679;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1680;
              (this).GenExpr(_5276_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1678, out _out1679, out _out1680);
              _5277_onExpr = _out1678;
              _5278_onOwned = _out1679;
              _5279_recIdents = _out1680;
              r = ((_5277_onExpr).Sel(DCOMP.__default.escapeName(_5275_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5280_typ;
              RAST._IType _out1681;
              _out1681 = (this).GenType(_5272_fieldType, DCOMP.GenTypeContext.@default());
              _5280_typ = _out1681;
              RAST._IExpr _out1682;
              DCOMP._IOwnership _out1683;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1682, out _out1683);
              r = _out1682;
              resultingOwnership = _out1683;
              readIdents = _5279_recIdents;
            } else {
              RAST._IExpr _5281_onExpr;
              DCOMP._IOwnership _5282_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5283_recIdents;
              RAST._IExpr _out1684;
              DCOMP._IOwnership _out1685;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1686;
              (this).GenExpr(_5276_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1684, out _out1685, out _out1686);
              _5281_onExpr = _out1684;
              _5282_onOwned = _out1685;
              _5283_recIdents = _out1686;
              r = _5281_onExpr;
              if (!object.Equals(_5281_onExpr, RAST.__default.self)) {
                RAST._IExpr _source327 = _5281_onExpr;
                if (_source327.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5284___mcc_h754 = _source327.dtor_content;
                } else if (_source327.is_ExprFromType) {
                  RAST._IType _5285___mcc_h756 = _source327.dtor_tpe;
                } else if (_source327.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5286___mcc_h758 = _source327.dtor_name;
                } else if (_source327.is_Match) {
                  RAST._IExpr _5287___mcc_h760 = _source327.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5288___mcc_h761 = _source327.dtor_cases;
                } else if (_source327.is_StmtExpr) {
                  RAST._IExpr _5289___mcc_h764 = _source327.dtor_stmt;
                  RAST._IExpr _5290___mcc_h765 = _source327.dtor_rhs;
                } else if (_source327.is_Block) {
                  RAST._IExpr _5291___mcc_h768 = _source327.dtor_underlying;
                } else if (_source327.is_StructBuild) {
                  RAST._IExpr _5292___mcc_h770 = _source327.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5293___mcc_h771 = _source327.dtor_assignments;
                } else if (_source327.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5294___mcc_h774 = _source327.dtor_arguments;
                } else if (_source327.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5295___mcc_h776 = _source327.dtor_op1;
                  RAST._IExpr _5296___mcc_h777 = _source327.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5297___mcc_h778 = _source327.dtor_format;
                  if (object.Equals(_5295___mcc_h776, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source328 = _5296___mcc_h777;
                    if (_source328.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5298___mcc_h782 = _source328.dtor_content;
                    } else if (_source328.is_ExprFromType) {
                      RAST._IType _5299___mcc_h784 = _source328.dtor_tpe;
                    } else if (_source328.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5300___mcc_h786 = _source328.dtor_name;
                      if (object.Equals(_5300___mcc_h786, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source328.is_Match) {
                      RAST._IExpr _5301___mcc_h788 = _source328.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5302___mcc_h789 = _source328.dtor_cases;
                    } else if (_source328.is_StmtExpr) {
                      RAST._IExpr _5303___mcc_h792 = _source328.dtor_stmt;
                      RAST._IExpr _5304___mcc_h793 = _source328.dtor_rhs;
                    } else if (_source328.is_Block) {
                      RAST._IExpr _5305___mcc_h796 = _source328.dtor_underlying;
                    } else if (_source328.is_StructBuild) {
                      RAST._IExpr _5306___mcc_h798 = _source328.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5307___mcc_h799 = _source328.dtor_assignments;
                    } else if (_source328.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5308___mcc_h802 = _source328.dtor_arguments;
                    } else if (_source328.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5309___mcc_h804 = _source328.dtor_op1;
                      RAST._IExpr _5310___mcc_h805 = _source328.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5311___mcc_h806 = _source328.dtor_format;
                    } else if (_source328.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5312___mcc_h810 = _source328.dtor_op2;
                      RAST._IExpr _5313___mcc_h811 = _source328.dtor_left;
                      RAST._IExpr _5314___mcc_h812 = _source328.dtor_right;
                      DAST.Format._IBinaryOpFormat _5315___mcc_h813 = _source328.dtor_format2;
                    } else if (_source328.is_TypeAscription) {
                      RAST._IExpr _5316___mcc_h818 = _source328.dtor_left;
                      RAST._IType _5317___mcc_h819 = _source328.dtor_tpe;
                    } else if (_source328.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5318___mcc_h822 = _source328.dtor_value;
                    } else if (_source328.is_LiteralBool) {
                      bool _5319___mcc_h824 = _source328.dtor_bvalue;
                    } else if (_source328.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5320___mcc_h826 = _source328.dtor_value;
                      bool _5321___mcc_h827 = _source328.dtor_binary;
                    } else if (_source328.is_DeclareVar) {
                      RAST._IDeclareType _5322___mcc_h830 = _source328.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5323___mcc_h831 = _source328.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5324___mcc_h832 = _source328.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5325___mcc_h833 = _source328.dtor_optRhs;
                    } else if (_source328.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5326___mcc_h838 = _source328.dtor_names;
                      RAST._IExpr _5327___mcc_h839 = _source328.dtor_rhs;
                    } else if (_source328.is_IfExpr) {
                      RAST._IExpr _5328___mcc_h842 = _source328.dtor_cond;
                      RAST._IExpr _5329___mcc_h843 = _source328.dtor_thn;
                      RAST._IExpr _5330___mcc_h844 = _source328.dtor_els;
                    } else if (_source328.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5331___mcc_h848 = _source328.dtor_optCond;
                      RAST._IExpr _5332___mcc_h849 = _source328.dtor_underlying;
                    } else if (_source328.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5333___mcc_h852 = _source328.dtor_name;
                      RAST._IExpr _5334___mcc_h853 = _source328.dtor_range;
                      RAST._IExpr _5335___mcc_h854 = _source328.dtor_body;
                    } else if (_source328.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5336___mcc_h858 = _source328.dtor_lbl;
                      RAST._IExpr _5337___mcc_h859 = _source328.dtor_underlying;
                    } else if (_source328.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5338___mcc_h862 = _source328.dtor_optLbl;
                    } else if (_source328.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5339___mcc_h864 = _source328.dtor_optLbl;
                    } else if (_source328.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5340___mcc_h866 = _source328.dtor_optExpr;
                    } else if (_source328.is_CallType) {
                      RAST._IExpr _5341___mcc_h868 = _source328.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5342___mcc_h869 = _source328.dtor_typeParameters;
                    } else if (_source328.is_Call) {
                      RAST._IExpr _5343___mcc_h872 = _source328.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5344___mcc_h873 = _source328.dtor_arguments;
                    } else if (_source328.is_Select) {
                      RAST._IExpr _5345___mcc_h876 = _source328.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5346___mcc_h877 = _source328.dtor_name;
                    } else if (_source328.is_MemberSelect) {
                      RAST._IExpr _5347___mcc_h880 = _source328.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5348___mcc_h881 = _source328.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5349___mcc_h884 = _source328.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5350___mcc_h885 = _source328.dtor_retType;
                      RAST._IExpr _5351___mcc_h886 = _source328.dtor_body;
                    }
                  } else {
                  }
                } else if (_source327.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5352___mcc_h890 = _source327.dtor_op2;
                  RAST._IExpr _5353___mcc_h891 = _source327.dtor_left;
                  RAST._IExpr _5354___mcc_h892 = _source327.dtor_right;
                  DAST.Format._IBinaryOpFormat _5355___mcc_h893 = _source327.dtor_format2;
                } else if (_source327.is_TypeAscription) {
                  RAST._IExpr _5356___mcc_h898 = _source327.dtor_left;
                  RAST._IType _5357___mcc_h899 = _source327.dtor_tpe;
                } else if (_source327.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5358___mcc_h902 = _source327.dtor_value;
                } else if (_source327.is_LiteralBool) {
                  bool _5359___mcc_h904 = _source327.dtor_bvalue;
                } else if (_source327.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5360___mcc_h906 = _source327.dtor_value;
                  bool _5361___mcc_h907 = _source327.dtor_binary;
                } else if (_source327.is_DeclareVar) {
                  RAST._IDeclareType _5362___mcc_h910 = _source327.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5363___mcc_h911 = _source327.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5364___mcc_h912 = _source327.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5365___mcc_h913 = _source327.dtor_optRhs;
                } else if (_source327.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5366___mcc_h918 = _source327.dtor_names;
                  RAST._IExpr _5367___mcc_h919 = _source327.dtor_rhs;
                } else if (_source327.is_IfExpr) {
                  RAST._IExpr _5368___mcc_h922 = _source327.dtor_cond;
                  RAST._IExpr _5369___mcc_h923 = _source327.dtor_thn;
                  RAST._IExpr _5370___mcc_h924 = _source327.dtor_els;
                } else if (_source327.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5371___mcc_h928 = _source327.dtor_optCond;
                  RAST._IExpr _5372___mcc_h929 = _source327.dtor_underlying;
                } else if (_source327.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5373___mcc_h932 = _source327.dtor_name;
                  RAST._IExpr _5374___mcc_h933 = _source327.dtor_range;
                  RAST._IExpr _5375___mcc_h934 = _source327.dtor_body;
                } else if (_source327.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5376___mcc_h938 = _source327.dtor_lbl;
                  RAST._IExpr _5377___mcc_h939 = _source327.dtor_underlying;
                } else if (_source327.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5378___mcc_h942 = _source327.dtor_optLbl;
                } else if (_source327.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5379___mcc_h944 = _source327.dtor_optLbl;
                } else if (_source327.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5380___mcc_h946 = _source327.dtor_optExpr;
                } else if (_source327.is_CallType) {
                  RAST._IExpr _5381___mcc_h948 = _source327.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5382___mcc_h949 = _source327.dtor_typeParameters;
                } else if (_source327.is_Call) {
                  RAST._IExpr _5383___mcc_h952 = _source327.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5384___mcc_h953 = _source327.dtor_arguments;
                } else if (_source327.is_Select) {
                  RAST._IExpr _5385___mcc_h956 = _source327.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5386___mcc_h957 = _source327.dtor_name;
                } else if (_source327.is_MemberSelect) {
                  RAST._IExpr _5387___mcc_h960 = _source327.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5388___mcc_h961 = _source327.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5389___mcc_h964 = _source327.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5390___mcc_h965 = _source327.dtor_retType;
                  RAST._IExpr _5391___mcc_h966 = _source327.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5275_field));
              if (_5274_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1687;
              DCOMP._IOwnership _out1688;
              (this).FromOwned(r, expectedOwnership, out _out1687, out _out1688);
              r = _out1687;
              resultingOwnership = _out1688;
              readIdents = _5283_recIdents;
            }
            return ;
          }
        } else if (_source322.is_New) {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _5392___mcc_h69 = _source322.dtor_path;
          Dafny.ISequence<DAST._IType> _5393___mcc_h70 = _source322.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _5394___mcc_h71 = _source322.dtor_args;
          DAST._IType _5395_fieldType = _5017___mcc_h58;
          bool _5396_isDatatype = _5016___mcc_h57;
          bool _5397_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5398_field = _5014___mcc_h55;
          DAST._IExpression _5399_on = _5013___mcc_h54;
          {
            if (_5396_isDatatype) {
              RAST._IExpr _5400_onExpr;
              DCOMP._IOwnership _5401_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5402_recIdents;
              RAST._IExpr _out1689;
              DCOMP._IOwnership _out1690;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1691;
              (this).GenExpr(_5399_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1689, out _out1690, out _out1691);
              _5400_onExpr = _out1689;
              _5401_onOwned = _out1690;
              _5402_recIdents = _out1691;
              r = ((_5400_onExpr).Sel(DCOMP.__default.escapeName(_5398_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5403_typ;
              RAST._IType _out1692;
              _out1692 = (this).GenType(_5395_fieldType, DCOMP.GenTypeContext.@default());
              _5403_typ = _out1692;
              RAST._IExpr _out1693;
              DCOMP._IOwnership _out1694;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1693, out _out1694);
              r = _out1693;
              resultingOwnership = _out1694;
              readIdents = _5402_recIdents;
            } else {
              RAST._IExpr _5404_onExpr;
              DCOMP._IOwnership _5405_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5406_recIdents;
              RAST._IExpr _out1695;
              DCOMP._IOwnership _out1696;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1697;
              (this).GenExpr(_5399_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1695, out _out1696, out _out1697);
              _5404_onExpr = _out1695;
              _5405_onOwned = _out1696;
              _5406_recIdents = _out1697;
              r = _5404_onExpr;
              if (!object.Equals(_5404_onExpr, RAST.__default.self)) {
                RAST._IExpr _source329 = _5404_onExpr;
                if (_source329.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5407___mcc_h970 = _source329.dtor_content;
                } else if (_source329.is_ExprFromType) {
                  RAST._IType _5408___mcc_h972 = _source329.dtor_tpe;
                } else if (_source329.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5409___mcc_h974 = _source329.dtor_name;
                } else if (_source329.is_Match) {
                  RAST._IExpr _5410___mcc_h976 = _source329.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5411___mcc_h977 = _source329.dtor_cases;
                } else if (_source329.is_StmtExpr) {
                  RAST._IExpr _5412___mcc_h980 = _source329.dtor_stmt;
                  RAST._IExpr _5413___mcc_h981 = _source329.dtor_rhs;
                } else if (_source329.is_Block) {
                  RAST._IExpr _5414___mcc_h984 = _source329.dtor_underlying;
                } else if (_source329.is_StructBuild) {
                  RAST._IExpr _5415___mcc_h986 = _source329.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5416___mcc_h987 = _source329.dtor_assignments;
                } else if (_source329.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5417___mcc_h990 = _source329.dtor_arguments;
                } else if (_source329.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5418___mcc_h992 = _source329.dtor_op1;
                  RAST._IExpr _5419___mcc_h993 = _source329.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5420___mcc_h994 = _source329.dtor_format;
                  if (object.Equals(_5418___mcc_h992, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source330 = _5419___mcc_h993;
                    if (_source330.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5421___mcc_h998 = _source330.dtor_content;
                    } else if (_source330.is_ExprFromType) {
                      RAST._IType _5422___mcc_h1000 = _source330.dtor_tpe;
                    } else if (_source330.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5423___mcc_h1002 = _source330.dtor_name;
                      if (object.Equals(_5423___mcc_h1002, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source330.is_Match) {
                      RAST._IExpr _5424___mcc_h1004 = _source330.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5425___mcc_h1005 = _source330.dtor_cases;
                    } else if (_source330.is_StmtExpr) {
                      RAST._IExpr _5426___mcc_h1008 = _source330.dtor_stmt;
                      RAST._IExpr _5427___mcc_h1009 = _source330.dtor_rhs;
                    } else if (_source330.is_Block) {
                      RAST._IExpr _5428___mcc_h1012 = _source330.dtor_underlying;
                    } else if (_source330.is_StructBuild) {
                      RAST._IExpr _5429___mcc_h1014 = _source330.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5430___mcc_h1015 = _source330.dtor_assignments;
                    } else if (_source330.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5431___mcc_h1018 = _source330.dtor_arguments;
                    } else if (_source330.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5432___mcc_h1020 = _source330.dtor_op1;
                      RAST._IExpr _5433___mcc_h1021 = _source330.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5434___mcc_h1022 = _source330.dtor_format;
                    } else if (_source330.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5435___mcc_h1026 = _source330.dtor_op2;
                      RAST._IExpr _5436___mcc_h1027 = _source330.dtor_left;
                      RAST._IExpr _5437___mcc_h1028 = _source330.dtor_right;
                      DAST.Format._IBinaryOpFormat _5438___mcc_h1029 = _source330.dtor_format2;
                    } else if (_source330.is_TypeAscription) {
                      RAST._IExpr _5439___mcc_h1034 = _source330.dtor_left;
                      RAST._IType _5440___mcc_h1035 = _source330.dtor_tpe;
                    } else if (_source330.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5441___mcc_h1038 = _source330.dtor_value;
                    } else if (_source330.is_LiteralBool) {
                      bool _5442___mcc_h1040 = _source330.dtor_bvalue;
                    } else if (_source330.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5443___mcc_h1042 = _source330.dtor_value;
                      bool _5444___mcc_h1043 = _source330.dtor_binary;
                    } else if (_source330.is_DeclareVar) {
                      RAST._IDeclareType _5445___mcc_h1046 = _source330.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5446___mcc_h1047 = _source330.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5447___mcc_h1048 = _source330.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5448___mcc_h1049 = _source330.dtor_optRhs;
                    } else if (_source330.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5449___mcc_h1054 = _source330.dtor_names;
                      RAST._IExpr _5450___mcc_h1055 = _source330.dtor_rhs;
                    } else if (_source330.is_IfExpr) {
                      RAST._IExpr _5451___mcc_h1058 = _source330.dtor_cond;
                      RAST._IExpr _5452___mcc_h1059 = _source330.dtor_thn;
                      RAST._IExpr _5453___mcc_h1060 = _source330.dtor_els;
                    } else if (_source330.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5454___mcc_h1064 = _source330.dtor_optCond;
                      RAST._IExpr _5455___mcc_h1065 = _source330.dtor_underlying;
                    } else if (_source330.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5456___mcc_h1068 = _source330.dtor_name;
                      RAST._IExpr _5457___mcc_h1069 = _source330.dtor_range;
                      RAST._IExpr _5458___mcc_h1070 = _source330.dtor_body;
                    } else if (_source330.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5459___mcc_h1074 = _source330.dtor_lbl;
                      RAST._IExpr _5460___mcc_h1075 = _source330.dtor_underlying;
                    } else if (_source330.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5461___mcc_h1078 = _source330.dtor_optLbl;
                    } else if (_source330.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5462___mcc_h1080 = _source330.dtor_optLbl;
                    } else if (_source330.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5463___mcc_h1082 = _source330.dtor_optExpr;
                    } else if (_source330.is_CallType) {
                      RAST._IExpr _5464___mcc_h1084 = _source330.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5465___mcc_h1085 = _source330.dtor_typeParameters;
                    } else if (_source330.is_Call) {
                      RAST._IExpr _5466___mcc_h1088 = _source330.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5467___mcc_h1089 = _source330.dtor_arguments;
                    } else if (_source330.is_Select) {
                      RAST._IExpr _5468___mcc_h1092 = _source330.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5469___mcc_h1093 = _source330.dtor_name;
                    } else if (_source330.is_MemberSelect) {
                      RAST._IExpr _5470___mcc_h1096 = _source330.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5471___mcc_h1097 = _source330.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5472___mcc_h1100 = _source330.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5473___mcc_h1101 = _source330.dtor_retType;
                      RAST._IExpr _5474___mcc_h1102 = _source330.dtor_body;
                    }
                  } else {
                  }
                } else if (_source329.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5475___mcc_h1106 = _source329.dtor_op2;
                  RAST._IExpr _5476___mcc_h1107 = _source329.dtor_left;
                  RAST._IExpr _5477___mcc_h1108 = _source329.dtor_right;
                  DAST.Format._IBinaryOpFormat _5478___mcc_h1109 = _source329.dtor_format2;
                } else if (_source329.is_TypeAscription) {
                  RAST._IExpr _5479___mcc_h1114 = _source329.dtor_left;
                  RAST._IType _5480___mcc_h1115 = _source329.dtor_tpe;
                } else if (_source329.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5481___mcc_h1118 = _source329.dtor_value;
                } else if (_source329.is_LiteralBool) {
                  bool _5482___mcc_h1120 = _source329.dtor_bvalue;
                } else if (_source329.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5483___mcc_h1122 = _source329.dtor_value;
                  bool _5484___mcc_h1123 = _source329.dtor_binary;
                } else if (_source329.is_DeclareVar) {
                  RAST._IDeclareType _5485___mcc_h1126 = _source329.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5486___mcc_h1127 = _source329.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5487___mcc_h1128 = _source329.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5488___mcc_h1129 = _source329.dtor_optRhs;
                } else if (_source329.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5489___mcc_h1134 = _source329.dtor_names;
                  RAST._IExpr _5490___mcc_h1135 = _source329.dtor_rhs;
                } else if (_source329.is_IfExpr) {
                  RAST._IExpr _5491___mcc_h1138 = _source329.dtor_cond;
                  RAST._IExpr _5492___mcc_h1139 = _source329.dtor_thn;
                  RAST._IExpr _5493___mcc_h1140 = _source329.dtor_els;
                } else if (_source329.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5494___mcc_h1144 = _source329.dtor_optCond;
                  RAST._IExpr _5495___mcc_h1145 = _source329.dtor_underlying;
                } else if (_source329.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5496___mcc_h1148 = _source329.dtor_name;
                  RAST._IExpr _5497___mcc_h1149 = _source329.dtor_range;
                  RAST._IExpr _5498___mcc_h1150 = _source329.dtor_body;
                } else if (_source329.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5499___mcc_h1154 = _source329.dtor_lbl;
                  RAST._IExpr _5500___mcc_h1155 = _source329.dtor_underlying;
                } else if (_source329.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5501___mcc_h1158 = _source329.dtor_optLbl;
                } else if (_source329.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5502___mcc_h1160 = _source329.dtor_optLbl;
                } else if (_source329.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5503___mcc_h1162 = _source329.dtor_optExpr;
                } else if (_source329.is_CallType) {
                  RAST._IExpr _5504___mcc_h1164 = _source329.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5505___mcc_h1165 = _source329.dtor_typeParameters;
                } else if (_source329.is_Call) {
                  RAST._IExpr _5506___mcc_h1168 = _source329.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5507___mcc_h1169 = _source329.dtor_arguments;
                } else if (_source329.is_Select) {
                  RAST._IExpr _5508___mcc_h1172 = _source329.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5509___mcc_h1173 = _source329.dtor_name;
                } else if (_source329.is_MemberSelect) {
                  RAST._IExpr _5510___mcc_h1176 = _source329.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5511___mcc_h1177 = _source329.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5512___mcc_h1180 = _source329.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5513___mcc_h1181 = _source329.dtor_retType;
                  RAST._IExpr _5514___mcc_h1182 = _source329.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5398_field));
              if (_5397_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1698;
              DCOMP._IOwnership _out1699;
              (this).FromOwned(r, expectedOwnership, out _out1698, out _out1699);
              r = _out1698;
              resultingOwnership = _out1699;
              readIdents = _5406_recIdents;
            }
            return ;
          }
        } else if (_source322.is_NewUninitArray) {
          Dafny.ISequence<DAST._IExpression> _5515___mcc_h75 = _source322.dtor_dims;
          DAST._IType _5516___mcc_h76 = _source322.dtor_typ;
          DAST._IType _5517_fieldType = _5017___mcc_h58;
          bool _5518_isDatatype = _5016___mcc_h57;
          bool _5519_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5520_field = _5014___mcc_h55;
          DAST._IExpression _5521_on = _5013___mcc_h54;
          {
            if (_5518_isDatatype) {
              RAST._IExpr _5522_onExpr;
              DCOMP._IOwnership _5523_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5524_recIdents;
              RAST._IExpr _out1700;
              DCOMP._IOwnership _out1701;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1702;
              (this).GenExpr(_5521_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1700, out _out1701, out _out1702);
              _5522_onExpr = _out1700;
              _5523_onOwned = _out1701;
              _5524_recIdents = _out1702;
              r = ((_5522_onExpr).Sel(DCOMP.__default.escapeName(_5520_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5525_typ;
              RAST._IType _out1703;
              _out1703 = (this).GenType(_5517_fieldType, DCOMP.GenTypeContext.@default());
              _5525_typ = _out1703;
              RAST._IExpr _out1704;
              DCOMP._IOwnership _out1705;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1704, out _out1705);
              r = _out1704;
              resultingOwnership = _out1705;
              readIdents = _5524_recIdents;
            } else {
              RAST._IExpr _5526_onExpr;
              DCOMP._IOwnership _5527_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5528_recIdents;
              RAST._IExpr _out1706;
              DCOMP._IOwnership _out1707;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1708;
              (this).GenExpr(_5521_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1706, out _out1707, out _out1708);
              _5526_onExpr = _out1706;
              _5527_onOwned = _out1707;
              _5528_recIdents = _out1708;
              r = _5526_onExpr;
              if (!object.Equals(_5526_onExpr, RAST.__default.self)) {
                RAST._IExpr _source331 = _5526_onExpr;
                if (_source331.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5529___mcc_h1186 = _source331.dtor_content;
                } else if (_source331.is_ExprFromType) {
                  RAST._IType _5530___mcc_h1188 = _source331.dtor_tpe;
                } else if (_source331.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5531___mcc_h1190 = _source331.dtor_name;
                } else if (_source331.is_Match) {
                  RAST._IExpr _5532___mcc_h1192 = _source331.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5533___mcc_h1193 = _source331.dtor_cases;
                } else if (_source331.is_StmtExpr) {
                  RAST._IExpr _5534___mcc_h1196 = _source331.dtor_stmt;
                  RAST._IExpr _5535___mcc_h1197 = _source331.dtor_rhs;
                } else if (_source331.is_Block) {
                  RAST._IExpr _5536___mcc_h1200 = _source331.dtor_underlying;
                } else if (_source331.is_StructBuild) {
                  RAST._IExpr _5537___mcc_h1202 = _source331.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5538___mcc_h1203 = _source331.dtor_assignments;
                } else if (_source331.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5539___mcc_h1206 = _source331.dtor_arguments;
                } else if (_source331.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5540___mcc_h1208 = _source331.dtor_op1;
                  RAST._IExpr _5541___mcc_h1209 = _source331.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5542___mcc_h1210 = _source331.dtor_format;
                  if (object.Equals(_5540___mcc_h1208, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source332 = _5541___mcc_h1209;
                    if (_source332.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5543___mcc_h1214 = _source332.dtor_content;
                    } else if (_source332.is_ExprFromType) {
                      RAST._IType _5544___mcc_h1216 = _source332.dtor_tpe;
                    } else if (_source332.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5545___mcc_h1218 = _source332.dtor_name;
                      if (object.Equals(_5545___mcc_h1218, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source332.is_Match) {
                      RAST._IExpr _5546___mcc_h1220 = _source332.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5547___mcc_h1221 = _source332.dtor_cases;
                    } else if (_source332.is_StmtExpr) {
                      RAST._IExpr _5548___mcc_h1224 = _source332.dtor_stmt;
                      RAST._IExpr _5549___mcc_h1225 = _source332.dtor_rhs;
                    } else if (_source332.is_Block) {
                      RAST._IExpr _5550___mcc_h1228 = _source332.dtor_underlying;
                    } else if (_source332.is_StructBuild) {
                      RAST._IExpr _5551___mcc_h1230 = _source332.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5552___mcc_h1231 = _source332.dtor_assignments;
                    } else if (_source332.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5553___mcc_h1234 = _source332.dtor_arguments;
                    } else if (_source332.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5554___mcc_h1236 = _source332.dtor_op1;
                      RAST._IExpr _5555___mcc_h1237 = _source332.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5556___mcc_h1238 = _source332.dtor_format;
                    } else if (_source332.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5557___mcc_h1242 = _source332.dtor_op2;
                      RAST._IExpr _5558___mcc_h1243 = _source332.dtor_left;
                      RAST._IExpr _5559___mcc_h1244 = _source332.dtor_right;
                      DAST.Format._IBinaryOpFormat _5560___mcc_h1245 = _source332.dtor_format2;
                    } else if (_source332.is_TypeAscription) {
                      RAST._IExpr _5561___mcc_h1250 = _source332.dtor_left;
                      RAST._IType _5562___mcc_h1251 = _source332.dtor_tpe;
                    } else if (_source332.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5563___mcc_h1254 = _source332.dtor_value;
                    } else if (_source332.is_LiteralBool) {
                      bool _5564___mcc_h1256 = _source332.dtor_bvalue;
                    } else if (_source332.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5565___mcc_h1258 = _source332.dtor_value;
                      bool _5566___mcc_h1259 = _source332.dtor_binary;
                    } else if (_source332.is_DeclareVar) {
                      RAST._IDeclareType _5567___mcc_h1262 = _source332.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5568___mcc_h1263 = _source332.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5569___mcc_h1264 = _source332.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5570___mcc_h1265 = _source332.dtor_optRhs;
                    } else if (_source332.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5571___mcc_h1270 = _source332.dtor_names;
                      RAST._IExpr _5572___mcc_h1271 = _source332.dtor_rhs;
                    } else if (_source332.is_IfExpr) {
                      RAST._IExpr _5573___mcc_h1274 = _source332.dtor_cond;
                      RAST._IExpr _5574___mcc_h1275 = _source332.dtor_thn;
                      RAST._IExpr _5575___mcc_h1276 = _source332.dtor_els;
                    } else if (_source332.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5576___mcc_h1280 = _source332.dtor_optCond;
                      RAST._IExpr _5577___mcc_h1281 = _source332.dtor_underlying;
                    } else if (_source332.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5578___mcc_h1284 = _source332.dtor_name;
                      RAST._IExpr _5579___mcc_h1285 = _source332.dtor_range;
                      RAST._IExpr _5580___mcc_h1286 = _source332.dtor_body;
                    } else if (_source332.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5581___mcc_h1290 = _source332.dtor_lbl;
                      RAST._IExpr _5582___mcc_h1291 = _source332.dtor_underlying;
                    } else if (_source332.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5583___mcc_h1294 = _source332.dtor_optLbl;
                    } else if (_source332.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5584___mcc_h1296 = _source332.dtor_optLbl;
                    } else if (_source332.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5585___mcc_h1298 = _source332.dtor_optExpr;
                    } else if (_source332.is_CallType) {
                      RAST._IExpr _5586___mcc_h1300 = _source332.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5587___mcc_h1301 = _source332.dtor_typeParameters;
                    } else if (_source332.is_Call) {
                      RAST._IExpr _5588___mcc_h1304 = _source332.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5589___mcc_h1305 = _source332.dtor_arguments;
                    } else if (_source332.is_Select) {
                      RAST._IExpr _5590___mcc_h1308 = _source332.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5591___mcc_h1309 = _source332.dtor_name;
                    } else if (_source332.is_MemberSelect) {
                      RAST._IExpr _5592___mcc_h1312 = _source332.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5593___mcc_h1313 = _source332.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5594___mcc_h1316 = _source332.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5595___mcc_h1317 = _source332.dtor_retType;
                      RAST._IExpr _5596___mcc_h1318 = _source332.dtor_body;
                    }
                  } else {
                  }
                } else if (_source331.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5597___mcc_h1322 = _source331.dtor_op2;
                  RAST._IExpr _5598___mcc_h1323 = _source331.dtor_left;
                  RAST._IExpr _5599___mcc_h1324 = _source331.dtor_right;
                  DAST.Format._IBinaryOpFormat _5600___mcc_h1325 = _source331.dtor_format2;
                } else if (_source331.is_TypeAscription) {
                  RAST._IExpr _5601___mcc_h1330 = _source331.dtor_left;
                  RAST._IType _5602___mcc_h1331 = _source331.dtor_tpe;
                } else if (_source331.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5603___mcc_h1334 = _source331.dtor_value;
                } else if (_source331.is_LiteralBool) {
                  bool _5604___mcc_h1336 = _source331.dtor_bvalue;
                } else if (_source331.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5605___mcc_h1338 = _source331.dtor_value;
                  bool _5606___mcc_h1339 = _source331.dtor_binary;
                } else if (_source331.is_DeclareVar) {
                  RAST._IDeclareType _5607___mcc_h1342 = _source331.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5608___mcc_h1343 = _source331.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5609___mcc_h1344 = _source331.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5610___mcc_h1345 = _source331.dtor_optRhs;
                } else if (_source331.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5611___mcc_h1350 = _source331.dtor_names;
                  RAST._IExpr _5612___mcc_h1351 = _source331.dtor_rhs;
                } else if (_source331.is_IfExpr) {
                  RAST._IExpr _5613___mcc_h1354 = _source331.dtor_cond;
                  RAST._IExpr _5614___mcc_h1355 = _source331.dtor_thn;
                  RAST._IExpr _5615___mcc_h1356 = _source331.dtor_els;
                } else if (_source331.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5616___mcc_h1360 = _source331.dtor_optCond;
                  RAST._IExpr _5617___mcc_h1361 = _source331.dtor_underlying;
                } else if (_source331.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5618___mcc_h1364 = _source331.dtor_name;
                  RAST._IExpr _5619___mcc_h1365 = _source331.dtor_range;
                  RAST._IExpr _5620___mcc_h1366 = _source331.dtor_body;
                } else if (_source331.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5621___mcc_h1370 = _source331.dtor_lbl;
                  RAST._IExpr _5622___mcc_h1371 = _source331.dtor_underlying;
                } else if (_source331.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5623___mcc_h1374 = _source331.dtor_optLbl;
                } else if (_source331.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5624___mcc_h1376 = _source331.dtor_optLbl;
                } else if (_source331.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5625___mcc_h1378 = _source331.dtor_optExpr;
                } else if (_source331.is_CallType) {
                  RAST._IExpr _5626___mcc_h1380 = _source331.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5627___mcc_h1381 = _source331.dtor_typeParameters;
                } else if (_source331.is_Call) {
                  RAST._IExpr _5628___mcc_h1384 = _source331.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5629___mcc_h1385 = _source331.dtor_arguments;
                } else if (_source331.is_Select) {
                  RAST._IExpr _5630___mcc_h1388 = _source331.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5631___mcc_h1389 = _source331.dtor_name;
                } else if (_source331.is_MemberSelect) {
                  RAST._IExpr _5632___mcc_h1392 = _source331.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5633___mcc_h1393 = _source331.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5634___mcc_h1396 = _source331.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5635___mcc_h1397 = _source331.dtor_retType;
                  RAST._IExpr _5636___mcc_h1398 = _source331.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5520_field));
              if (_5519_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1709;
              DCOMP._IOwnership _out1710;
              (this).FromOwned(r, expectedOwnership, out _out1709, out _out1710);
              r = _out1709;
              resultingOwnership = _out1710;
              readIdents = _5528_recIdents;
            }
            return ;
          }
        } else if (_source322.is_ArrayIndexToInt) {
          DAST._IExpression _5637___mcc_h79 = _source322.dtor_value;
          DAST._IType _5638_fieldType = _5017___mcc_h58;
          bool _5639_isDatatype = _5016___mcc_h57;
          bool _5640_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5641_field = _5014___mcc_h55;
          DAST._IExpression _5642_on = _5013___mcc_h54;
          {
            if (_5639_isDatatype) {
              RAST._IExpr _5643_onExpr;
              DCOMP._IOwnership _5644_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5645_recIdents;
              RAST._IExpr _out1711;
              DCOMP._IOwnership _out1712;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1713;
              (this).GenExpr(_5642_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1711, out _out1712, out _out1713);
              _5643_onExpr = _out1711;
              _5644_onOwned = _out1712;
              _5645_recIdents = _out1713;
              r = ((_5643_onExpr).Sel(DCOMP.__default.escapeName(_5641_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5646_typ;
              RAST._IType _out1714;
              _out1714 = (this).GenType(_5638_fieldType, DCOMP.GenTypeContext.@default());
              _5646_typ = _out1714;
              RAST._IExpr _out1715;
              DCOMP._IOwnership _out1716;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1715, out _out1716);
              r = _out1715;
              resultingOwnership = _out1716;
              readIdents = _5645_recIdents;
            } else {
              RAST._IExpr _5647_onExpr;
              DCOMP._IOwnership _5648_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5649_recIdents;
              RAST._IExpr _out1717;
              DCOMP._IOwnership _out1718;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1719;
              (this).GenExpr(_5642_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1717, out _out1718, out _out1719);
              _5647_onExpr = _out1717;
              _5648_onOwned = _out1718;
              _5649_recIdents = _out1719;
              r = _5647_onExpr;
              if (!object.Equals(_5647_onExpr, RAST.__default.self)) {
                RAST._IExpr _source333 = _5647_onExpr;
                if (_source333.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5650___mcc_h1402 = _source333.dtor_content;
                } else if (_source333.is_ExprFromType) {
                  RAST._IType _5651___mcc_h1404 = _source333.dtor_tpe;
                } else if (_source333.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5652___mcc_h1406 = _source333.dtor_name;
                } else if (_source333.is_Match) {
                  RAST._IExpr _5653___mcc_h1408 = _source333.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5654___mcc_h1409 = _source333.dtor_cases;
                } else if (_source333.is_StmtExpr) {
                  RAST._IExpr _5655___mcc_h1412 = _source333.dtor_stmt;
                  RAST._IExpr _5656___mcc_h1413 = _source333.dtor_rhs;
                } else if (_source333.is_Block) {
                  RAST._IExpr _5657___mcc_h1416 = _source333.dtor_underlying;
                } else if (_source333.is_StructBuild) {
                  RAST._IExpr _5658___mcc_h1418 = _source333.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5659___mcc_h1419 = _source333.dtor_assignments;
                } else if (_source333.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5660___mcc_h1422 = _source333.dtor_arguments;
                } else if (_source333.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5661___mcc_h1424 = _source333.dtor_op1;
                  RAST._IExpr _5662___mcc_h1425 = _source333.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5663___mcc_h1426 = _source333.dtor_format;
                  if (object.Equals(_5661___mcc_h1424, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source334 = _5662___mcc_h1425;
                    if (_source334.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5664___mcc_h1430 = _source334.dtor_content;
                    } else if (_source334.is_ExprFromType) {
                      RAST._IType _5665___mcc_h1432 = _source334.dtor_tpe;
                    } else if (_source334.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5666___mcc_h1434 = _source334.dtor_name;
                      if (object.Equals(_5666___mcc_h1434, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source334.is_Match) {
                      RAST._IExpr _5667___mcc_h1436 = _source334.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5668___mcc_h1437 = _source334.dtor_cases;
                    } else if (_source334.is_StmtExpr) {
                      RAST._IExpr _5669___mcc_h1440 = _source334.dtor_stmt;
                      RAST._IExpr _5670___mcc_h1441 = _source334.dtor_rhs;
                    } else if (_source334.is_Block) {
                      RAST._IExpr _5671___mcc_h1444 = _source334.dtor_underlying;
                    } else if (_source334.is_StructBuild) {
                      RAST._IExpr _5672___mcc_h1446 = _source334.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5673___mcc_h1447 = _source334.dtor_assignments;
                    } else if (_source334.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5674___mcc_h1450 = _source334.dtor_arguments;
                    } else if (_source334.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5675___mcc_h1452 = _source334.dtor_op1;
                      RAST._IExpr _5676___mcc_h1453 = _source334.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5677___mcc_h1454 = _source334.dtor_format;
                    } else if (_source334.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5678___mcc_h1458 = _source334.dtor_op2;
                      RAST._IExpr _5679___mcc_h1459 = _source334.dtor_left;
                      RAST._IExpr _5680___mcc_h1460 = _source334.dtor_right;
                      DAST.Format._IBinaryOpFormat _5681___mcc_h1461 = _source334.dtor_format2;
                    } else if (_source334.is_TypeAscription) {
                      RAST._IExpr _5682___mcc_h1466 = _source334.dtor_left;
                      RAST._IType _5683___mcc_h1467 = _source334.dtor_tpe;
                    } else if (_source334.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5684___mcc_h1470 = _source334.dtor_value;
                    } else if (_source334.is_LiteralBool) {
                      bool _5685___mcc_h1472 = _source334.dtor_bvalue;
                    } else if (_source334.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5686___mcc_h1474 = _source334.dtor_value;
                      bool _5687___mcc_h1475 = _source334.dtor_binary;
                    } else if (_source334.is_DeclareVar) {
                      RAST._IDeclareType _5688___mcc_h1478 = _source334.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5689___mcc_h1479 = _source334.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5690___mcc_h1480 = _source334.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5691___mcc_h1481 = _source334.dtor_optRhs;
                    } else if (_source334.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5692___mcc_h1486 = _source334.dtor_names;
                      RAST._IExpr _5693___mcc_h1487 = _source334.dtor_rhs;
                    } else if (_source334.is_IfExpr) {
                      RAST._IExpr _5694___mcc_h1490 = _source334.dtor_cond;
                      RAST._IExpr _5695___mcc_h1491 = _source334.dtor_thn;
                      RAST._IExpr _5696___mcc_h1492 = _source334.dtor_els;
                    } else if (_source334.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5697___mcc_h1496 = _source334.dtor_optCond;
                      RAST._IExpr _5698___mcc_h1497 = _source334.dtor_underlying;
                    } else if (_source334.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5699___mcc_h1500 = _source334.dtor_name;
                      RAST._IExpr _5700___mcc_h1501 = _source334.dtor_range;
                      RAST._IExpr _5701___mcc_h1502 = _source334.dtor_body;
                    } else if (_source334.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5702___mcc_h1506 = _source334.dtor_lbl;
                      RAST._IExpr _5703___mcc_h1507 = _source334.dtor_underlying;
                    } else if (_source334.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5704___mcc_h1510 = _source334.dtor_optLbl;
                    } else if (_source334.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5705___mcc_h1512 = _source334.dtor_optLbl;
                    } else if (_source334.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5706___mcc_h1514 = _source334.dtor_optExpr;
                    } else if (_source334.is_CallType) {
                      RAST._IExpr _5707___mcc_h1516 = _source334.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5708___mcc_h1517 = _source334.dtor_typeParameters;
                    } else if (_source334.is_Call) {
                      RAST._IExpr _5709___mcc_h1520 = _source334.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5710___mcc_h1521 = _source334.dtor_arguments;
                    } else if (_source334.is_Select) {
                      RAST._IExpr _5711___mcc_h1524 = _source334.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5712___mcc_h1525 = _source334.dtor_name;
                    } else if (_source334.is_MemberSelect) {
                      RAST._IExpr _5713___mcc_h1528 = _source334.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5714___mcc_h1529 = _source334.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5715___mcc_h1532 = _source334.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5716___mcc_h1533 = _source334.dtor_retType;
                      RAST._IExpr _5717___mcc_h1534 = _source334.dtor_body;
                    }
                  } else {
                  }
                } else if (_source333.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5718___mcc_h1538 = _source333.dtor_op2;
                  RAST._IExpr _5719___mcc_h1539 = _source333.dtor_left;
                  RAST._IExpr _5720___mcc_h1540 = _source333.dtor_right;
                  DAST.Format._IBinaryOpFormat _5721___mcc_h1541 = _source333.dtor_format2;
                } else if (_source333.is_TypeAscription) {
                  RAST._IExpr _5722___mcc_h1546 = _source333.dtor_left;
                  RAST._IType _5723___mcc_h1547 = _source333.dtor_tpe;
                } else if (_source333.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5724___mcc_h1550 = _source333.dtor_value;
                } else if (_source333.is_LiteralBool) {
                  bool _5725___mcc_h1552 = _source333.dtor_bvalue;
                } else if (_source333.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5726___mcc_h1554 = _source333.dtor_value;
                  bool _5727___mcc_h1555 = _source333.dtor_binary;
                } else if (_source333.is_DeclareVar) {
                  RAST._IDeclareType _5728___mcc_h1558 = _source333.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5729___mcc_h1559 = _source333.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5730___mcc_h1560 = _source333.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5731___mcc_h1561 = _source333.dtor_optRhs;
                } else if (_source333.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5732___mcc_h1566 = _source333.dtor_names;
                  RAST._IExpr _5733___mcc_h1567 = _source333.dtor_rhs;
                } else if (_source333.is_IfExpr) {
                  RAST._IExpr _5734___mcc_h1570 = _source333.dtor_cond;
                  RAST._IExpr _5735___mcc_h1571 = _source333.dtor_thn;
                  RAST._IExpr _5736___mcc_h1572 = _source333.dtor_els;
                } else if (_source333.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5737___mcc_h1576 = _source333.dtor_optCond;
                  RAST._IExpr _5738___mcc_h1577 = _source333.dtor_underlying;
                } else if (_source333.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5739___mcc_h1580 = _source333.dtor_name;
                  RAST._IExpr _5740___mcc_h1581 = _source333.dtor_range;
                  RAST._IExpr _5741___mcc_h1582 = _source333.dtor_body;
                } else if (_source333.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5742___mcc_h1586 = _source333.dtor_lbl;
                  RAST._IExpr _5743___mcc_h1587 = _source333.dtor_underlying;
                } else if (_source333.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5744___mcc_h1590 = _source333.dtor_optLbl;
                } else if (_source333.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5745___mcc_h1592 = _source333.dtor_optLbl;
                } else if (_source333.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5746___mcc_h1594 = _source333.dtor_optExpr;
                } else if (_source333.is_CallType) {
                  RAST._IExpr _5747___mcc_h1596 = _source333.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5748___mcc_h1597 = _source333.dtor_typeParameters;
                } else if (_source333.is_Call) {
                  RAST._IExpr _5749___mcc_h1600 = _source333.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5750___mcc_h1601 = _source333.dtor_arguments;
                } else if (_source333.is_Select) {
                  RAST._IExpr _5751___mcc_h1604 = _source333.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5752___mcc_h1605 = _source333.dtor_name;
                } else if (_source333.is_MemberSelect) {
                  RAST._IExpr _5753___mcc_h1608 = _source333.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5754___mcc_h1609 = _source333.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5755___mcc_h1612 = _source333.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5756___mcc_h1613 = _source333.dtor_retType;
                  RAST._IExpr _5757___mcc_h1614 = _source333.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5641_field));
              if (_5640_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1720;
              DCOMP._IOwnership _out1721;
              (this).FromOwned(r, expectedOwnership, out _out1720, out _out1721);
              r = _out1720;
              resultingOwnership = _out1721;
              readIdents = _5649_recIdents;
            }
            return ;
          }
        } else if (_source322.is_FinalizeNewArray) {
          DAST._IExpression _5758___mcc_h81 = _source322.dtor_value;
          DAST._IType _5759___mcc_h82 = _source322.dtor_typ;
          DAST._IType _5760_fieldType = _5017___mcc_h58;
          bool _5761_isDatatype = _5016___mcc_h57;
          bool _5762_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5763_field = _5014___mcc_h55;
          DAST._IExpression _5764_on = _5013___mcc_h54;
          {
            if (_5761_isDatatype) {
              RAST._IExpr _5765_onExpr;
              DCOMP._IOwnership _5766_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5767_recIdents;
              RAST._IExpr _out1722;
              DCOMP._IOwnership _out1723;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1724;
              (this).GenExpr(_5764_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1722, out _out1723, out _out1724);
              _5765_onExpr = _out1722;
              _5766_onOwned = _out1723;
              _5767_recIdents = _out1724;
              r = ((_5765_onExpr).Sel(DCOMP.__default.escapeName(_5763_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5768_typ;
              RAST._IType _out1725;
              _out1725 = (this).GenType(_5760_fieldType, DCOMP.GenTypeContext.@default());
              _5768_typ = _out1725;
              RAST._IExpr _out1726;
              DCOMP._IOwnership _out1727;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1726, out _out1727);
              r = _out1726;
              resultingOwnership = _out1727;
              readIdents = _5767_recIdents;
            } else {
              RAST._IExpr _5769_onExpr;
              DCOMP._IOwnership _5770_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5771_recIdents;
              RAST._IExpr _out1728;
              DCOMP._IOwnership _out1729;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1730;
              (this).GenExpr(_5764_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1728, out _out1729, out _out1730);
              _5769_onExpr = _out1728;
              _5770_onOwned = _out1729;
              _5771_recIdents = _out1730;
              r = _5769_onExpr;
              if (!object.Equals(_5769_onExpr, RAST.__default.self)) {
                RAST._IExpr _source335 = _5769_onExpr;
                if (_source335.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5772___mcc_h1618 = _source335.dtor_content;
                } else if (_source335.is_ExprFromType) {
                  RAST._IType _5773___mcc_h1620 = _source335.dtor_tpe;
                } else if (_source335.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5774___mcc_h1622 = _source335.dtor_name;
                } else if (_source335.is_Match) {
                  RAST._IExpr _5775___mcc_h1624 = _source335.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5776___mcc_h1625 = _source335.dtor_cases;
                } else if (_source335.is_StmtExpr) {
                  RAST._IExpr _5777___mcc_h1628 = _source335.dtor_stmt;
                  RAST._IExpr _5778___mcc_h1629 = _source335.dtor_rhs;
                } else if (_source335.is_Block) {
                  RAST._IExpr _5779___mcc_h1632 = _source335.dtor_underlying;
                } else if (_source335.is_StructBuild) {
                  RAST._IExpr _5780___mcc_h1634 = _source335.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5781___mcc_h1635 = _source335.dtor_assignments;
                } else if (_source335.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5782___mcc_h1638 = _source335.dtor_arguments;
                } else if (_source335.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5783___mcc_h1640 = _source335.dtor_op1;
                  RAST._IExpr _5784___mcc_h1641 = _source335.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5785___mcc_h1642 = _source335.dtor_format;
                  if (object.Equals(_5783___mcc_h1640, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source336 = _5784___mcc_h1641;
                    if (_source336.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5786___mcc_h1646 = _source336.dtor_content;
                    } else if (_source336.is_ExprFromType) {
                      RAST._IType _5787___mcc_h1648 = _source336.dtor_tpe;
                    } else if (_source336.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5788___mcc_h1650 = _source336.dtor_name;
                      if (object.Equals(_5788___mcc_h1650, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source336.is_Match) {
                      RAST._IExpr _5789___mcc_h1652 = _source336.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5790___mcc_h1653 = _source336.dtor_cases;
                    } else if (_source336.is_StmtExpr) {
                      RAST._IExpr _5791___mcc_h1656 = _source336.dtor_stmt;
                      RAST._IExpr _5792___mcc_h1657 = _source336.dtor_rhs;
                    } else if (_source336.is_Block) {
                      RAST._IExpr _5793___mcc_h1660 = _source336.dtor_underlying;
                    } else if (_source336.is_StructBuild) {
                      RAST._IExpr _5794___mcc_h1662 = _source336.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5795___mcc_h1663 = _source336.dtor_assignments;
                    } else if (_source336.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5796___mcc_h1666 = _source336.dtor_arguments;
                    } else if (_source336.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5797___mcc_h1668 = _source336.dtor_op1;
                      RAST._IExpr _5798___mcc_h1669 = _source336.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5799___mcc_h1670 = _source336.dtor_format;
                    } else if (_source336.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5800___mcc_h1674 = _source336.dtor_op2;
                      RAST._IExpr _5801___mcc_h1675 = _source336.dtor_left;
                      RAST._IExpr _5802___mcc_h1676 = _source336.dtor_right;
                      DAST.Format._IBinaryOpFormat _5803___mcc_h1677 = _source336.dtor_format2;
                    } else if (_source336.is_TypeAscription) {
                      RAST._IExpr _5804___mcc_h1682 = _source336.dtor_left;
                      RAST._IType _5805___mcc_h1683 = _source336.dtor_tpe;
                    } else if (_source336.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5806___mcc_h1686 = _source336.dtor_value;
                    } else if (_source336.is_LiteralBool) {
                      bool _5807___mcc_h1688 = _source336.dtor_bvalue;
                    } else if (_source336.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5808___mcc_h1690 = _source336.dtor_value;
                      bool _5809___mcc_h1691 = _source336.dtor_binary;
                    } else if (_source336.is_DeclareVar) {
                      RAST._IDeclareType _5810___mcc_h1694 = _source336.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5811___mcc_h1695 = _source336.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5812___mcc_h1696 = _source336.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5813___mcc_h1697 = _source336.dtor_optRhs;
                    } else if (_source336.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5814___mcc_h1702 = _source336.dtor_names;
                      RAST._IExpr _5815___mcc_h1703 = _source336.dtor_rhs;
                    } else if (_source336.is_IfExpr) {
                      RAST._IExpr _5816___mcc_h1706 = _source336.dtor_cond;
                      RAST._IExpr _5817___mcc_h1707 = _source336.dtor_thn;
                      RAST._IExpr _5818___mcc_h1708 = _source336.dtor_els;
                    } else if (_source336.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5819___mcc_h1712 = _source336.dtor_optCond;
                      RAST._IExpr _5820___mcc_h1713 = _source336.dtor_underlying;
                    } else if (_source336.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5821___mcc_h1716 = _source336.dtor_name;
                      RAST._IExpr _5822___mcc_h1717 = _source336.dtor_range;
                      RAST._IExpr _5823___mcc_h1718 = _source336.dtor_body;
                    } else if (_source336.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5824___mcc_h1722 = _source336.dtor_lbl;
                      RAST._IExpr _5825___mcc_h1723 = _source336.dtor_underlying;
                    } else if (_source336.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5826___mcc_h1726 = _source336.dtor_optLbl;
                    } else if (_source336.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5827___mcc_h1728 = _source336.dtor_optLbl;
                    } else if (_source336.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5828___mcc_h1730 = _source336.dtor_optExpr;
                    } else if (_source336.is_CallType) {
                      RAST._IExpr _5829___mcc_h1732 = _source336.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5830___mcc_h1733 = _source336.dtor_typeParameters;
                    } else if (_source336.is_Call) {
                      RAST._IExpr _5831___mcc_h1736 = _source336.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5832___mcc_h1737 = _source336.dtor_arguments;
                    } else if (_source336.is_Select) {
                      RAST._IExpr _5833___mcc_h1740 = _source336.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5834___mcc_h1741 = _source336.dtor_name;
                    } else if (_source336.is_MemberSelect) {
                      RAST._IExpr _5835___mcc_h1744 = _source336.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5836___mcc_h1745 = _source336.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5837___mcc_h1748 = _source336.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5838___mcc_h1749 = _source336.dtor_retType;
                      RAST._IExpr _5839___mcc_h1750 = _source336.dtor_body;
                    }
                  } else {
                  }
                } else if (_source335.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5840___mcc_h1754 = _source335.dtor_op2;
                  RAST._IExpr _5841___mcc_h1755 = _source335.dtor_left;
                  RAST._IExpr _5842___mcc_h1756 = _source335.dtor_right;
                  DAST.Format._IBinaryOpFormat _5843___mcc_h1757 = _source335.dtor_format2;
                } else if (_source335.is_TypeAscription) {
                  RAST._IExpr _5844___mcc_h1762 = _source335.dtor_left;
                  RAST._IType _5845___mcc_h1763 = _source335.dtor_tpe;
                } else if (_source335.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5846___mcc_h1766 = _source335.dtor_value;
                } else if (_source335.is_LiteralBool) {
                  bool _5847___mcc_h1768 = _source335.dtor_bvalue;
                } else if (_source335.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5848___mcc_h1770 = _source335.dtor_value;
                  bool _5849___mcc_h1771 = _source335.dtor_binary;
                } else if (_source335.is_DeclareVar) {
                  RAST._IDeclareType _5850___mcc_h1774 = _source335.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5851___mcc_h1775 = _source335.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5852___mcc_h1776 = _source335.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5853___mcc_h1777 = _source335.dtor_optRhs;
                } else if (_source335.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5854___mcc_h1782 = _source335.dtor_names;
                  RAST._IExpr _5855___mcc_h1783 = _source335.dtor_rhs;
                } else if (_source335.is_IfExpr) {
                  RAST._IExpr _5856___mcc_h1786 = _source335.dtor_cond;
                  RAST._IExpr _5857___mcc_h1787 = _source335.dtor_thn;
                  RAST._IExpr _5858___mcc_h1788 = _source335.dtor_els;
                } else if (_source335.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5859___mcc_h1792 = _source335.dtor_optCond;
                  RAST._IExpr _5860___mcc_h1793 = _source335.dtor_underlying;
                } else if (_source335.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5861___mcc_h1796 = _source335.dtor_name;
                  RAST._IExpr _5862___mcc_h1797 = _source335.dtor_range;
                  RAST._IExpr _5863___mcc_h1798 = _source335.dtor_body;
                } else if (_source335.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5864___mcc_h1802 = _source335.dtor_lbl;
                  RAST._IExpr _5865___mcc_h1803 = _source335.dtor_underlying;
                } else if (_source335.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5866___mcc_h1806 = _source335.dtor_optLbl;
                } else if (_source335.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5867___mcc_h1808 = _source335.dtor_optLbl;
                } else if (_source335.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5868___mcc_h1810 = _source335.dtor_optExpr;
                } else if (_source335.is_CallType) {
                  RAST._IExpr _5869___mcc_h1812 = _source335.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5870___mcc_h1813 = _source335.dtor_typeParameters;
                } else if (_source335.is_Call) {
                  RAST._IExpr _5871___mcc_h1816 = _source335.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5872___mcc_h1817 = _source335.dtor_arguments;
                } else if (_source335.is_Select) {
                  RAST._IExpr _5873___mcc_h1820 = _source335.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5874___mcc_h1821 = _source335.dtor_name;
                } else if (_source335.is_MemberSelect) {
                  RAST._IExpr _5875___mcc_h1824 = _source335.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5876___mcc_h1825 = _source335.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _5877___mcc_h1828 = _source335.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _5878___mcc_h1829 = _source335.dtor_retType;
                  RAST._IExpr _5879___mcc_h1830 = _source335.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5763_field));
              if (_5762_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1731;
              DCOMP._IOwnership _out1732;
              (this).FromOwned(r, expectedOwnership, out _out1731, out _out1732);
              r = _out1731;
              resultingOwnership = _out1732;
              readIdents = _5771_recIdents;
            }
            return ;
          }
        } else if (_source322.is_DatatypeValue) {
          DAST._IResolvedType _5880___mcc_h85 = _source322.dtor_datatypeType;
          Dafny.ISequence<DAST._IType> _5881___mcc_h86 = _source322.dtor_typeArgs;
          Dafny.ISequence<Dafny.Rune> _5882___mcc_h87 = _source322.dtor_variant;
          bool _5883___mcc_h88 = _source322.dtor_isCo;
          Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _5884___mcc_h89 = _source322.dtor_contents;
          DAST._IType _5885_fieldType = _5017___mcc_h58;
          bool _5886_isDatatype = _5016___mcc_h57;
          bool _5887_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _5888_field = _5014___mcc_h55;
          DAST._IExpression _5889_on = _5013___mcc_h54;
          {
            if (_5886_isDatatype) {
              RAST._IExpr _5890_onExpr;
              DCOMP._IOwnership _5891_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5892_recIdents;
              RAST._IExpr _out1733;
              DCOMP._IOwnership _out1734;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1735;
              (this).GenExpr(_5889_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1733, out _out1734, out _out1735);
              _5890_onExpr = _out1733;
              _5891_onOwned = _out1734;
              _5892_recIdents = _out1735;
              r = ((_5890_onExpr).Sel(DCOMP.__default.escapeName(_5888_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _5893_typ;
              RAST._IType _out1736;
              _out1736 = (this).GenType(_5885_fieldType, DCOMP.GenTypeContext.@default());
              _5893_typ = _out1736;
              RAST._IExpr _out1737;
              DCOMP._IOwnership _out1738;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1737, out _out1738);
              r = _out1737;
              resultingOwnership = _out1738;
              readIdents = _5892_recIdents;
            } else {
              RAST._IExpr _5894_onExpr;
              DCOMP._IOwnership _5895_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _5896_recIdents;
              RAST._IExpr _out1739;
              DCOMP._IOwnership _out1740;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1741;
              (this).GenExpr(_5889_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1739, out _out1740, out _out1741);
              _5894_onExpr = _out1739;
              _5895_onOwned = _out1740;
              _5896_recIdents = _out1741;
              r = _5894_onExpr;
              if (!object.Equals(_5894_onExpr, RAST.__default.self)) {
                RAST._IExpr _source337 = _5894_onExpr;
                if (_source337.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _5897___mcc_h1834 = _source337.dtor_content;
                } else if (_source337.is_ExprFromType) {
                  RAST._IType _5898___mcc_h1836 = _source337.dtor_tpe;
                } else if (_source337.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _5899___mcc_h1838 = _source337.dtor_name;
                } else if (_source337.is_Match) {
                  RAST._IExpr _5900___mcc_h1840 = _source337.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _5901___mcc_h1841 = _source337.dtor_cases;
                } else if (_source337.is_StmtExpr) {
                  RAST._IExpr _5902___mcc_h1844 = _source337.dtor_stmt;
                  RAST._IExpr _5903___mcc_h1845 = _source337.dtor_rhs;
                } else if (_source337.is_Block) {
                  RAST._IExpr _5904___mcc_h1848 = _source337.dtor_underlying;
                } else if (_source337.is_StructBuild) {
                  RAST._IExpr _5905___mcc_h1850 = _source337.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _5906___mcc_h1851 = _source337.dtor_assignments;
                } else if (_source337.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _5907___mcc_h1854 = _source337.dtor_arguments;
                } else if (_source337.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5908___mcc_h1856 = _source337.dtor_op1;
                  RAST._IExpr _5909___mcc_h1857 = _source337.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _5910___mcc_h1858 = _source337.dtor_format;
                  if (object.Equals(_5908___mcc_h1856, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source338 = _5909___mcc_h1857;
                    if (_source338.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _5911___mcc_h1862 = _source338.dtor_content;
                    } else if (_source338.is_ExprFromType) {
                      RAST._IType _5912___mcc_h1864 = _source338.dtor_tpe;
                    } else if (_source338.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _5913___mcc_h1866 = _source338.dtor_name;
                      if (object.Equals(_5913___mcc_h1866, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source338.is_Match) {
                      RAST._IExpr _5914___mcc_h1868 = _source338.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _5915___mcc_h1869 = _source338.dtor_cases;
                    } else if (_source338.is_StmtExpr) {
                      RAST._IExpr _5916___mcc_h1872 = _source338.dtor_stmt;
                      RAST._IExpr _5917___mcc_h1873 = _source338.dtor_rhs;
                    } else if (_source338.is_Block) {
                      RAST._IExpr _5918___mcc_h1876 = _source338.dtor_underlying;
                    } else if (_source338.is_StructBuild) {
                      RAST._IExpr _5919___mcc_h1878 = _source338.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _5920___mcc_h1879 = _source338.dtor_assignments;
                    } else if (_source338.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _5921___mcc_h1882 = _source338.dtor_arguments;
                    } else if (_source338.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5922___mcc_h1884 = _source338.dtor_op1;
                      RAST._IExpr _5923___mcc_h1885 = _source338.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _5924___mcc_h1886 = _source338.dtor_format;
                    } else if (_source338.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _5925___mcc_h1890 = _source338.dtor_op2;
                      RAST._IExpr _5926___mcc_h1891 = _source338.dtor_left;
                      RAST._IExpr _5927___mcc_h1892 = _source338.dtor_right;
                      DAST.Format._IBinaryOpFormat _5928___mcc_h1893 = _source338.dtor_format2;
                    } else if (_source338.is_TypeAscription) {
                      RAST._IExpr _5929___mcc_h1898 = _source338.dtor_left;
                      RAST._IType _5930___mcc_h1899 = _source338.dtor_tpe;
                    } else if (_source338.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _5931___mcc_h1902 = _source338.dtor_value;
                    } else if (_source338.is_LiteralBool) {
                      bool _5932___mcc_h1904 = _source338.dtor_bvalue;
                    } else if (_source338.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _5933___mcc_h1906 = _source338.dtor_value;
                      bool _5934___mcc_h1907 = _source338.dtor_binary;
                    } else if (_source338.is_DeclareVar) {
                      RAST._IDeclareType _5935___mcc_h1910 = _source338.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _5936___mcc_h1911 = _source338.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _5937___mcc_h1912 = _source338.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _5938___mcc_h1913 = _source338.dtor_optRhs;
                    } else if (_source338.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _5939___mcc_h1918 = _source338.dtor_names;
                      RAST._IExpr _5940___mcc_h1919 = _source338.dtor_rhs;
                    } else if (_source338.is_IfExpr) {
                      RAST._IExpr _5941___mcc_h1922 = _source338.dtor_cond;
                      RAST._IExpr _5942___mcc_h1923 = _source338.dtor_thn;
                      RAST._IExpr _5943___mcc_h1924 = _source338.dtor_els;
                    } else if (_source338.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _5944___mcc_h1928 = _source338.dtor_optCond;
                      RAST._IExpr _5945___mcc_h1929 = _source338.dtor_underlying;
                    } else if (_source338.is_For) {
                      Dafny.ISequence<Dafny.Rune> _5946___mcc_h1932 = _source338.dtor_name;
                      RAST._IExpr _5947___mcc_h1933 = _source338.dtor_range;
                      RAST._IExpr _5948___mcc_h1934 = _source338.dtor_body;
                    } else if (_source338.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _5949___mcc_h1938 = _source338.dtor_lbl;
                      RAST._IExpr _5950___mcc_h1939 = _source338.dtor_underlying;
                    } else if (_source338.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5951___mcc_h1942 = _source338.dtor_optLbl;
                    } else if (_source338.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5952___mcc_h1944 = _source338.dtor_optLbl;
                    } else if (_source338.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _5953___mcc_h1946 = _source338.dtor_optExpr;
                    } else if (_source338.is_CallType) {
                      RAST._IExpr _5954___mcc_h1948 = _source338.dtor_obj;
                      Dafny.ISequence<RAST._IType> _5955___mcc_h1949 = _source338.dtor_typeParameters;
                    } else if (_source338.is_Call) {
                      RAST._IExpr _5956___mcc_h1952 = _source338.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _5957___mcc_h1953 = _source338.dtor_arguments;
                    } else if (_source338.is_Select) {
                      RAST._IExpr _5958___mcc_h1956 = _source338.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5959___mcc_h1957 = _source338.dtor_name;
                    } else if (_source338.is_MemberSelect) {
                      RAST._IExpr _5960___mcc_h1960 = _source338.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _5961___mcc_h1961 = _source338.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _5962___mcc_h1964 = _source338.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _5963___mcc_h1965 = _source338.dtor_retType;
                      RAST._IExpr _5964___mcc_h1966 = _source338.dtor_body;
                    }
                  } else {
                  }
                } else if (_source337.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _5965___mcc_h1970 = _source337.dtor_op2;
                  RAST._IExpr _5966___mcc_h1971 = _source337.dtor_left;
                  RAST._IExpr _5967___mcc_h1972 = _source337.dtor_right;
                  DAST.Format._IBinaryOpFormat _5968___mcc_h1973 = _source337.dtor_format2;
                } else if (_source337.is_TypeAscription) {
                  RAST._IExpr _5969___mcc_h1978 = _source337.dtor_left;
                  RAST._IType _5970___mcc_h1979 = _source337.dtor_tpe;
                } else if (_source337.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _5971___mcc_h1982 = _source337.dtor_value;
                } else if (_source337.is_LiteralBool) {
                  bool _5972___mcc_h1984 = _source337.dtor_bvalue;
                } else if (_source337.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _5973___mcc_h1986 = _source337.dtor_value;
                  bool _5974___mcc_h1987 = _source337.dtor_binary;
                } else if (_source337.is_DeclareVar) {
                  RAST._IDeclareType _5975___mcc_h1990 = _source337.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _5976___mcc_h1991 = _source337.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _5977___mcc_h1992 = _source337.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _5978___mcc_h1993 = _source337.dtor_optRhs;
                } else if (_source337.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _5979___mcc_h1998 = _source337.dtor_names;
                  RAST._IExpr _5980___mcc_h1999 = _source337.dtor_rhs;
                } else if (_source337.is_IfExpr) {
                  RAST._IExpr _5981___mcc_h2002 = _source337.dtor_cond;
                  RAST._IExpr _5982___mcc_h2003 = _source337.dtor_thn;
                  RAST._IExpr _5983___mcc_h2004 = _source337.dtor_els;
                } else if (_source337.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _5984___mcc_h2008 = _source337.dtor_optCond;
                  RAST._IExpr _5985___mcc_h2009 = _source337.dtor_underlying;
                } else if (_source337.is_For) {
                  Dafny.ISequence<Dafny.Rune> _5986___mcc_h2012 = _source337.dtor_name;
                  RAST._IExpr _5987___mcc_h2013 = _source337.dtor_range;
                  RAST._IExpr _5988___mcc_h2014 = _source337.dtor_body;
                } else if (_source337.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _5989___mcc_h2018 = _source337.dtor_lbl;
                  RAST._IExpr _5990___mcc_h2019 = _source337.dtor_underlying;
                } else if (_source337.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5991___mcc_h2022 = _source337.dtor_optLbl;
                } else if (_source337.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _5992___mcc_h2024 = _source337.dtor_optLbl;
                } else if (_source337.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _5993___mcc_h2026 = _source337.dtor_optExpr;
                } else if (_source337.is_CallType) {
                  RAST._IExpr _5994___mcc_h2028 = _source337.dtor_obj;
                  Dafny.ISequence<RAST._IType> _5995___mcc_h2029 = _source337.dtor_typeParameters;
                } else if (_source337.is_Call) {
                  RAST._IExpr _5996___mcc_h2032 = _source337.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _5997___mcc_h2033 = _source337.dtor_arguments;
                } else if (_source337.is_Select) {
                  RAST._IExpr _5998___mcc_h2036 = _source337.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _5999___mcc_h2037 = _source337.dtor_name;
                } else if (_source337.is_MemberSelect) {
                  RAST._IExpr _6000___mcc_h2040 = _source337.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6001___mcc_h2041 = _source337.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6002___mcc_h2044 = _source337.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6003___mcc_h2045 = _source337.dtor_retType;
                  RAST._IExpr _6004___mcc_h2046 = _source337.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_5888_field));
              if (_5887_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1742;
              DCOMP._IOwnership _out1743;
              (this).FromOwned(r, expectedOwnership, out _out1742, out _out1743);
              r = _out1742;
              resultingOwnership = _out1743;
              readIdents = _5896_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Convert) {
          DAST._IExpression _6005___mcc_h95 = _source322.dtor_value;
          DAST._IType _6006___mcc_h96 = _source322.dtor_from;
          DAST._IType _6007___mcc_h97 = _source322.dtor_typ;
          DAST._IType _6008_fieldType = _5017___mcc_h58;
          bool _6009_isDatatype = _5016___mcc_h57;
          bool _6010_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6011_field = _5014___mcc_h55;
          DAST._IExpression _6012_on = _5013___mcc_h54;
          {
            if (_6009_isDatatype) {
              RAST._IExpr _6013_onExpr;
              DCOMP._IOwnership _6014_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6015_recIdents;
              RAST._IExpr _out1744;
              DCOMP._IOwnership _out1745;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1746;
              (this).GenExpr(_6012_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1744, out _out1745, out _out1746);
              _6013_onExpr = _out1744;
              _6014_onOwned = _out1745;
              _6015_recIdents = _out1746;
              r = ((_6013_onExpr).Sel(DCOMP.__default.escapeName(_6011_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6016_typ;
              RAST._IType _out1747;
              _out1747 = (this).GenType(_6008_fieldType, DCOMP.GenTypeContext.@default());
              _6016_typ = _out1747;
              RAST._IExpr _out1748;
              DCOMP._IOwnership _out1749;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1748, out _out1749);
              r = _out1748;
              resultingOwnership = _out1749;
              readIdents = _6015_recIdents;
            } else {
              RAST._IExpr _6017_onExpr;
              DCOMP._IOwnership _6018_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6019_recIdents;
              RAST._IExpr _out1750;
              DCOMP._IOwnership _out1751;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1752;
              (this).GenExpr(_6012_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1750, out _out1751, out _out1752);
              _6017_onExpr = _out1750;
              _6018_onOwned = _out1751;
              _6019_recIdents = _out1752;
              r = _6017_onExpr;
              if (!object.Equals(_6017_onExpr, RAST.__default.self)) {
                RAST._IExpr _source339 = _6017_onExpr;
                if (_source339.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6020___mcc_h2050 = _source339.dtor_content;
                } else if (_source339.is_ExprFromType) {
                  RAST._IType _6021___mcc_h2052 = _source339.dtor_tpe;
                } else if (_source339.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6022___mcc_h2054 = _source339.dtor_name;
                } else if (_source339.is_Match) {
                  RAST._IExpr _6023___mcc_h2056 = _source339.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6024___mcc_h2057 = _source339.dtor_cases;
                } else if (_source339.is_StmtExpr) {
                  RAST._IExpr _6025___mcc_h2060 = _source339.dtor_stmt;
                  RAST._IExpr _6026___mcc_h2061 = _source339.dtor_rhs;
                } else if (_source339.is_Block) {
                  RAST._IExpr _6027___mcc_h2064 = _source339.dtor_underlying;
                } else if (_source339.is_StructBuild) {
                  RAST._IExpr _6028___mcc_h2066 = _source339.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6029___mcc_h2067 = _source339.dtor_assignments;
                } else if (_source339.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6030___mcc_h2070 = _source339.dtor_arguments;
                } else if (_source339.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6031___mcc_h2072 = _source339.dtor_op1;
                  RAST._IExpr _6032___mcc_h2073 = _source339.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6033___mcc_h2074 = _source339.dtor_format;
                  if (object.Equals(_6031___mcc_h2072, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source340 = _6032___mcc_h2073;
                    if (_source340.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6034___mcc_h2078 = _source340.dtor_content;
                    } else if (_source340.is_ExprFromType) {
                      RAST._IType _6035___mcc_h2080 = _source340.dtor_tpe;
                    } else if (_source340.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6036___mcc_h2082 = _source340.dtor_name;
                      if (object.Equals(_6036___mcc_h2082, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source340.is_Match) {
                      RAST._IExpr _6037___mcc_h2084 = _source340.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6038___mcc_h2085 = _source340.dtor_cases;
                    } else if (_source340.is_StmtExpr) {
                      RAST._IExpr _6039___mcc_h2088 = _source340.dtor_stmt;
                      RAST._IExpr _6040___mcc_h2089 = _source340.dtor_rhs;
                    } else if (_source340.is_Block) {
                      RAST._IExpr _6041___mcc_h2092 = _source340.dtor_underlying;
                    } else if (_source340.is_StructBuild) {
                      RAST._IExpr _6042___mcc_h2094 = _source340.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6043___mcc_h2095 = _source340.dtor_assignments;
                    } else if (_source340.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6044___mcc_h2098 = _source340.dtor_arguments;
                    } else if (_source340.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6045___mcc_h2100 = _source340.dtor_op1;
                      RAST._IExpr _6046___mcc_h2101 = _source340.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6047___mcc_h2102 = _source340.dtor_format;
                    } else if (_source340.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6048___mcc_h2106 = _source340.dtor_op2;
                      RAST._IExpr _6049___mcc_h2107 = _source340.dtor_left;
                      RAST._IExpr _6050___mcc_h2108 = _source340.dtor_right;
                      DAST.Format._IBinaryOpFormat _6051___mcc_h2109 = _source340.dtor_format2;
                    } else if (_source340.is_TypeAscription) {
                      RAST._IExpr _6052___mcc_h2114 = _source340.dtor_left;
                      RAST._IType _6053___mcc_h2115 = _source340.dtor_tpe;
                    } else if (_source340.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6054___mcc_h2118 = _source340.dtor_value;
                    } else if (_source340.is_LiteralBool) {
                      bool _6055___mcc_h2120 = _source340.dtor_bvalue;
                    } else if (_source340.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6056___mcc_h2122 = _source340.dtor_value;
                      bool _6057___mcc_h2123 = _source340.dtor_binary;
                    } else if (_source340.is_DeclareVar) {
                      RAST._IDeclareType _6058___mcc_h2126 = _source340.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6059___mcc_h2127 = _source340.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6060___mcc_h2128 = _source340.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6061___mcc_h2129 = _source340.dtor_optRhs;
                    } else if (_source340.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6062___mcc_h2134 = _source340.dtor_names;
                      RAST._IExpr _6063___mcc_h2135 = _source340.dtor_rhs;
                    } else if (_source340.is_IfExpr) {
                      RAST._IExpr _6064___mcc_h2138 = _source340.dtor_cond;
                      RAST._IExpr _6065___mcc_h2139 = _source340.dtor_thn;
                      RAST._IExpr _6066___mcc_h2140 = _source340.dtor_els;
                    } else if (_source340.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6067___mcc_h2144 = _source340.dtor_optCond;
                      RAST._IExpr _6068___mcc_h2145 = _source340.dtor_underlying;
                    } else if (_source340.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6069___mcc_h2148 = _source340.dtor_name;
                      RAST._IExpr _6070___mcc_h2149 = _source340.dtor_range;
                      RAST._IExpr _6071___mcc_h2150 = _source340.dtor_body;
                    } else if (_source340.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6072___mcc_h2154 = _source340.dtor_lbl;
                      RAST._IExpr _6073___mcc_h2155 = _source340.dtor_underlying;
                    } else if (_source340.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6074___mcc_h2158 = _source340.dtor_optLbl;
                    } else if (_source340.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6075___mcc_h2160 = _source340.dtor_optLbl;
                    } else if (_source340.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6076___mcc_h2162 = _source340.dtor_optExpr;
                    } else if (_source340.is_CallType) {
                      RAST._IExpr _6077___mcc_h2164 = _source340.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6078___mcc_h2165 = _source340.dtor_typeParameters;
                    } else if (_source340.is_Call) {
                      RAST._IExpr _6079___mcc_h2168 = _source340.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6080___mcc_h2169 = _source340.dtor_arguments;
                    } else if (_source340.is_Select) {
                      RAST._IExpr _6081___mcc_h2172 = _source340.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6082___mcc_h2173 = _source340.dtor_name;
                    } else if (_source340.is_MemberSelect) {
                      RAST._IExpr _6083___mcc_h2176 = _source340.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6084___mcc_h2177 = _source340.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6085___mcc_h2180 = _source340.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6086___mcc_h2181 = _source340.dtor_retType;
                      RAST._IExpr _6087___mcc_h2182 = _source340.dtor_body;
                    }
                  } else {
                  }
                } else if (_source339.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6088___mcc_h2186 = _source339.dtor_op2;
                  RAST._IExpr _6089___mcc_h2187 = _source339.dtor_left;
                  RAST._IExpr _6090___mcc_h2188 = _source339.dtor_right;
                  DAST.Format._IBinaryOpFormat _6091___mcc_h2189 = _source339.dtor_format2;
                } else if (_source339.is_TypeAscription) {
                  RAST._IExpr _6092___mcc_h2194 = _source339.dtor_left;
                  RAST._IType _6093___mcc_h2195 = _source339.dtor_tpe;
                } else if (_source339.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6094___mcc_h2198 = _source339.dtor_value;
                } else if (_source339.is_LiteralBool) {
                  bool _6095___mcc_h2200 = _source339.dtor_bvalue;
                } else if (_source339.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6096___mcc_h2202 = _source339.dtor_value;
                  bool _6097___mcc_h2203 = _source339.dtor_binary;
                } else if (_source339.is_DeclareVar) {
                  RAST._IDeclareType _6098___mcc_h2206 = _source339.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6099___mcc_h2207 = _source339.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6100___mcc_h2208 = _source339.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6101___mcc_h2209 = _source339.dtor_optRhs;
                } else if (_source339.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6102___mcc_h2214 = _source339.dtor_names;
                  RAST._IExpr _6103___mcc_h2215 = _source339.dtor_rhs;
                } else if (_source339.is_IfExpr) {
                  RAST._IExpr _6104___mcc_h2218 = _source339.dtor_cond;
                  RAST._IExpr _6105___mcc_h2219 = _source339.dtor_thn;
                  RAST._IExpr _6106___mcc_h2220 = _source339.dtor_els;
                } else if (_source339.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6107___mcc_h2224 = _source339.dtor_optCond;
                  RAST._IExpr _6108___mcc_h2225 = _source339.dtor_underlying;
                } else if (_source339.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6109___mcc_h2228 = _source339.dtor_name;
                  RAST._IExpr _6110___mcc_h2229 = _source339.dtor_range;
                  RAST._IExpr _6111___mcc_h2230 = _source339.dtor_body;
                } else if (_source339.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6112___mcc_h2234 = _source339.dtor_lbl;
                  RAST._IExpr _6113___mcc_h2235 = _source339.dtor_underlying;
                } else if (_source339.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6114___mcc_h2238 = _source339.dtor_optLbl;
                } else if (_source339.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6115___mcc_h2240 = _source339.dtor_optLbl;
                } else if (_source339.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6116___mcc_h2242 = _source339.dtor_optExpr;
                } else if (_source339.is_CallType) {
                  RAST._IExpr _6117___mcc_h2244 = _source339.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6118___mcc_h2245 = _source339.dtor_typeParameters;
                } else if (_source339.is_Call) {
                  RAST._IExpr _6119___mcc_h2248 = _source339.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6120___mcc_h2249 = _source339.dtor_arguments;
                } else if (_source339.is_Select) {
                  RAST._IExpr _6121___mcc_h2252 = _source339.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6122___mcc_h2253 = _source339.dtor_name;
                } else if (_source339.is_MemberSelect) {
                  RAST._IExpr _6123___mcc_h2256 = _source339.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6124___mcc_h2257 = _source339.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6125___mcc_h2260 = _source339.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6126___mcc_h2261 = _source339.dtor_retType;
                  RAST._IExpr _6127___mcc_h2262 = _source339.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6011_field));
              if (_6010_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1753;
              DCOMP._IOwnership _out1754;
              (this).FromOwned(r, expectedOwnership, out _out1753, out _out1754);
              r = _out1753;
              resultingOwnership = _out1754;
              readIdents = _6019_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SeqConstruct) {
          DAST._IExpression _6128___mcc_h101 = _source322.dtor_length;
          DAST._IExpression _6129___mcc_h102 = _source322.dtor_elem;
          DAST._IType _6130_fieldType = _5017___mcc_h58;
          bool _6131_isDatatype = _5016___mcc_h57;
          bool _6132_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6133_field = _5014___mcc_h55;
          DAST._IExpression _6134_on = _5013___mcc_h54;
          {
            if (_6131_isDatatype) {
              RAST._IExpr _6135_onExpr;
              DCOMP._IOwnership _6136_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6137_recIdents;
              RAST._IExpr _out1755;
              DCOMP._IOwnership _out1756;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1757;
              (this).GenExpr(_6134_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1755, out _out1756, out _out1757);
              _6135_onExpr = _out1755;
              _6136_onOwned = _out1756;
              _6137_recIdents = _out1757;
              r = ((_6135_onExpr).Sel(DCOMP.__default.escapeName(_6133_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6138_typ;
              RAST._IType _out1758;
              _out1758 = (this).GenType(_6130_fieldType, DCOMP.GenTypeContext.@default());
              _6138_typ = _out1758;
              RAST._IExpr _out1759;
              DCOMP._IOwnership _out1760;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1759, out _out1760);
              r = _out1759;
              resultingOwnership = _out1760;
              readIdents = _6137_recIdents;
            } else {
              RAST._IExpr _6139_onExpr;
              DCOMP._IOwnership _6140_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6141_recIdents;
              RAST._IExpr _out1761;
              DCOMP._IOwnership _out1762;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1763;
              (this).GenExpr(_6134_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1761, out _out1762, out _out1763);
              _6139_onExpr = _out1761;
              _6140_onOwned = _out1762;
              _6141_recIdents = _out1763;
              r = _6139_onExpr;
              if (!object.Equals(_6139_onExpr, RAST.__default.self)) {
                RAST._IExpr _source341 = _6139_onExpr;
                if (_source341.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6142___mcc_h2266 = _source341.dtor_content;
                } else if (_source341.is_ExprFromType) {
                  RAST._IType _6143___mcc_h2268 = _source341.dtor_tpe;
                } else if (_source341.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6144___mcc_h2270 = _source341.dtor_name;
                } else if (_source341.is_Match) {
                  RAST._IExpr _6145___mcc_h2272 = _source341.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6146___mcc_h2273 = _source341.dtor_cases;
                } else if (_source341.is_StmtExpr) {
                  RAST._IExpr _6147___mcc_h2276 = _source341.dtor_stmt;
                  RAST._IExpr _6148___mcc_h2277 = _source341.dtor_rhs;
                } else if (_source341.is_Block) {
                  RAST._IExpr _6149___mcc_h2280 = _source341.dtor_underlying;
                } else if (_source341.is_StructBuild) {
                  RAST._IExpr _6150___mcc_h2282 = _source341.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6151___mcc_h2283 = _source341.dtor_assignments;
                } else if (_source341.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6152___mcc_h2286 = _source341.dtor_arguments;
                } else if (_source341.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6153___mcc_h2288 = _source341.dtor_op1;
                  RAST._IExpr _6154___mcc_h2289 = _source341.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6155___mcc_h2290 = _source341.dtor_format;
                  if (object.Equals(_6153___mcc_h2288, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source342 = _6154___mcc_h2289;
                    if (_source342.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6156___mcc_h2294 = _source342.dtor_content;
                    } else if (_source342.is_ExprFromType) {
                      RAST._IType _6157___mcc_h2296 = _source342.dtor_tpe;
                    } else if (_source342.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6158___mcc_h2298 = _source342.dtor_name;
                      if (object.Equals(_6158___mcc_h2298, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source342.is_Match) {
                      RAST._IExpr _6159___mcc_h2300 = _source342.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6160___mcc_h2301 = _source342.dtor_cases;
                    } else if (_source342.is_StmtExpr) {
                      RAST._IExpr _6161___mcc_h2304 = _source342.dtor_stmt;
                      RAST._IExpr _6162___mcc_h2305 = _source342.dtor_rhs;
                    } else if (_source342.is_Block) {
                      RAST._IExpr _6163___mcc_h2308 = _source342.dtor_underlying;
                    } else if (_source342.is_StructBuild) {
                      RAST._IExpr _6164___mcc_h2310 = _source342.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6165___mcc_h2311 = _source342.dtor_assignments;
                    } else if (_source342.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6166___mcc_h2314 = _source342.dtor_arguments;
                    } else if (_source342.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6167___mcc_h2316 = _source342.dtor_op1;
                      RAST._IExpr _6168___mcc_h2317 = _source342.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6169___mcc_h2318 = _source342.dtor_format;
                    } else if (_source342.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6170___mcc_h2322 = _source342.dtor_op2;
                      RAST._IExpr _6171___mcc_h2323 = _source342.dtor_left;
                      RAST._IExpr _6172___mcc_h2324 = _source342.dtor_right;
                      DAST.Format._IBinaryOpFormat _6173___mcc_h2325 = _source342.dtor_format2;
                    } else if (_source342.is_TypeAscription) {
                      RAST._IExpr _6174___mcc_h2330 = _source342.dtor_left;
                      RAST._IType _6175___mcc_h2331 = _source342.dtor_tpe;
                    } else if (_source342.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6176___mcc_h2334 = _source342.dtor_value;
                    } else if (_source342.is_LiteralBool) {
                      bool _6177___mcc_h2336 = _source342.dtor_bvalue;
                    } else if (_source342.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6178___mcc_h2338 = _source342.dtor_value;
                      bool _6179___mcc_h2339 = _source342.dtor_binary;
                    } else if (_source342.is_DeclareVar) {
                      RAST._IDeclareType _6180___mcc_h2342 = _source342.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6181___mcc_h2343 = _source342.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6182___mcc_h2344 = _source342.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6183___mcc_h2345 = _source342.dtor_optRhs;
                    } else if (_source342.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6184___mcc_h2350 = _source342.dtor_names;
                      RAST._IExpr _6185___mcc_h2351 = _source342.dtor_rhs;
                    } else if (_source342.is_IfExpr) {
                      RAST._IExpr _6186___mcc_h2354 = _source342.dtor_cond;
                      RAST._IExpr _6187___mcc_h2355 = _source342.dtor_thn;
                      RAST._IExpr _6188___mcc_h2356 = _source342.dtor_els;
                    } else if (_source342.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6189___mcc_h2360 = _source342.dtor_optCond;
                      RAST._IExpr _6190___mcc_h2361 = _source342.dtor_underlying;
                    } else if (_source342.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6191___mcc_h2364 = _source342.dtor_name;
                      RAST._IExpr _6192___mcc_h2365 = _source342.dtor_range;
                      RAST._IExpr _6193___mcc_h2366 = _source342.dtor_body;
                    } else if (_source342.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6194___mcc_h2370 = _source342.dtor_lbl;
                      RAST._IExpr _6195___mcc_h2371 = _source342.dtor_underlying;
                    } else if (_source342.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6196___mcc_h2374 = _source342.dtor_optLbl;
                    } else if (_source342.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6197___mcc_h2376 = _source342.dtor_optLbl;
                    } else if (_source342.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6198___mcc_h2378 = _source342.dtor_optExpr;
                    } else if (_source342.is_CallType) {
                      RAST._IExpr _6199___mcc_h2380 = _source342.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6200___mcc_h2381 = _source342.dtor_typeParameters;
                    } else if (_source342.is_Call) {
                      RAST._IExpr _6201___mcc_h2384 = _source342.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6202___mcc_h2385 = _source342.dtor_arguments;
                    } else if (_source342.is_Select) {
                      RAST._IExpr _6203___mcc_h2388 = _source342.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6204___mcc_h2389 = _source342.dtor_name;
                    } else if (_source342.is_MemberSelect) {
                      RAST._IExpr _6205___mcc_h2392 = _source342.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6206___mcc_h2393 = _source342.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6207___mcc_h2396 = _source342.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6208___mcc_h2397 = _source342.dtor_retType;
                      RAST._IExpr _6209___mcc_h2398 = _source342.dtor_body;
                    }
                  } else {
                  }
                } else if (_source341.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6210___mcc_h2402 = _source341.dtor_op2;
                  RAST._IExpr _6211___mcc_h2403 = _source341.dtor_left;
                  RAST._IExpr _6212___mcc_h2404 = _source341.dtor_right;
                  DAST.Format._IBinaryOpFormat _6213___mcc_h2405 = _source341.dtor_format2;
                } else if (_source341.is_TypeAscription) {
                  RAST._IExpr _6214___mcc_h2410 = _source341.dtor_left;
                  RAST._IType _6215___mcc_h2411 = _source341.dtor_tpe;
                } else if (_source341.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6216___mcc_h2414 = _source341.dtor_value;
                } else if (_source341.is_LiteralBool) {
                  bool _6217___mcc_h2416 = _source341.dtor_bvalue;
                } else if (_source341.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6218___mcc_h2418 = _source341.dtor_value;
                  bool _6219___mcc_h2419 = _source341.dtor_binary;
                } else if (_source341.is_DeclareVar) {
                  RAST._IDeclareType _6220___mcc_h2422 = _source341.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6221___mcc_h2423 = _source341.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6222___mcc_h2424 = _source341.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6223___mcc_h2425 = _source341.dtor_optRhs;
                } else if (_source341.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6224___mcc_h2430 = _source341.dtor_names;
                  RAST._IExpr _6225___mcc_h2431 = _source341.dtor_rhs;
                } else if (_source341.is_IfExpr) {
                  RAST._IExpr _6226___mcc_h2434 = _source341.dtor_cond;
                  RAST._IExpr _6227___mcc_h2435 = _source341.dtor_thn;
                  RAST._IExpr _6228___mcc_h2436 = _source341.dtor_els;
                } else if (_source341.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6229___mcc_h2440 = _source341.dtor_optCond;
                  RAST._IExpr _6230___mcc_h2441 = _source341.dtor_underlying;
                } else if (_source341.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6231___mcc_h2444 = _source341.dtor_name;
                  RAST._IExpr _6232___mcc_h2445 = _source341.dtor_range;
                  RAST._IExpr _6233___mcc_h2446 = _source341.dtor_body;
                } else if (_source341.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6234___mcc_h2450 = _source341.dtor_lbl;
                  RAST._IExpr _6235___mcc_h2451 = _source341.dtor_underlying;
                } else if (_source341.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6236___mcc_h2454 = _source341.dtor_optLbl;
                } else if (_source341.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6237___mcc_h2456 = _source341.dtor_optLbl;
                } else if (_source341.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6238___mcc_h2458 = _source341.dtor_optExpr;
                } else if (_source341.is_CallType) {
                  RAST._IExpr _6239___mcc_h2460 = _source341.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6240___mcc_h2461 = _source341.dtor_typeParameters;
                } else if (_source341.is_Call) {
                  RAST._IExpr _6241___mcc_h2464 = _source341.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6242___mcc_h2465 = _source341.dtor_arguments;
                } else if (_source341.is_Select) {
                  RAST._IExpr _6243___mcc_h2468 = _source341.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6244___mcc_h2469 = _source341.dtor_name;
                } else if (_source341.is_MemberSelect) {
                  RAST._IExpr _6245___mcc_h2472 = _source341.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6246___mcc_h2473 = _source341.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6247___mcc_h2476 = _source341.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6248___mcc_h2477 = _source341.dtor_retType;
                  RAST._IExpr _6249___mcc_h2478 = _source341.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6133_field));
              if (_6132_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1764;
              DCOMP._IOwnership _out1765;
              (this).FromOwned(r, expectedOwnership, out _out1764, out _out1765);
              r = _out1764;
              resultingOwnership = _out1765;
              readIdents = _6141_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SeqValue) {
          Dafny.ISequence<DAST._IExpression> _6250___mcc_h105 = _source322.dtor_elements;
          DAST._IType _6251___mcc_h106 = _source322.dtor_typ;
          DAST._IType _6252_fieldType = _5017___mcc_h58;
          bool _6253_isDatatype = _5016___mcc_h57;
          bool _6254_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6255_field = _5014___mcc_h55;
          DAST._IExpression _6256_on = _5013___mcc_h54;
          {
            if (_6253_isDatatype) {
              RAST._IExpr _6257_onExpr;
              DCOMP._IOwnership _6258_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6259_recIdents;
              RAST._IExpr _out1766;
              DCOMP._IOwnership _out1767;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1768;
              (this).GenExpr(_6256_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1766, out _out1767, out _out1768);
              _6257_onExpr = _out1766;
              _6258_onOwned = _out1767;
              _6259_recIdents = _out1768;
              r = ((_6257_onExpr).Sel(DCOMP.__default.escapeName(_6255_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6260_typ;
              RAST._IType _out1769;
              _out1769 = (this).GenType(_6252_fieldType, DCOMP.GenTypeContext.@default());
              _6260_typ = _out1769;
              RAST._IExpr _out1770;
              DCOMP._IOwnership _out1771;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1770, out _out1771);
              r = _out1770;
              resultingOwnership = _out1771;
              readIdents = _6259_recIdents;
            } else {
              RAST._IExpr _6261_onExpr;
              DCOMP._IOwnership _6262_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6263_recIdents;
              RAST._IExpr _out1772;
              DCOMP._IOwnership _out1773;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1774;
              (this).GenExpr(_6256_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1772, out _out1773, out _out1774);
              _6261_onExpr = _out1772;
              _6262_onOwned = _out1773;
              _6263_recIdents = _out1774;
              r = _6261_onExpr;
              if (!object.Equals(_6261_onExpr, RAST.__default.self)) {
                RAST._IExpr _source343 = _6261_onExpr;
                if (_source343.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6264___mcc_h2482 = _source343.dtor_content;
                } else if (_source343.is_ExprFromType) {
                  RAST._IType _6265___mcc_h2484 = _source343.dtor_tpe;
                } else if (_source343.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6266___mcc_h2486 = _source343.dtor_name;
                } else if (_source343.is_Match) {
                  RAST._IExpr _6267___mcc_h2488 = _source343.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6268___mcc_h2489 = _source343.dtor_cases;
                } else if (_source343.is_StmtExpr) {
                  RAST._IExpr _6269___mcc_h2492 = _source343.dtor_stmt;
                  RAST._IExpr _6270___mcc_h2493 = _source343.dtor_rhs;
                } else if (_source343.is_Block) {
                  RAST._IExpr _6271___mcc_h2496 = _source343.dtor_underlying;
                } else if (_source343.is_StructBuild) {
                  RAST._IExpr _6272___mcc_h2498 = _source343.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6273___mcc_h2499 = _source343.dtor_assignments;
                } else if (_source343.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6274___mcc_h2502 = _source343.dtor_arguments;
                } else if (_source343.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6275___mcc_h2504 = _source343.dtor_op1;
                  RAST._IExpr _6276___mcc_h2505 = _source343.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6277___mcc_h2506 = _source343.dtor_format;
                  if (object.Equals(_6275___mcc_h2504, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source344 = _6276___mcc_h2505;
                    if (_source344.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6278___mcc_h2510 = _source344.dtor_content;
                    } else if (_source344.is_ExprFromType) {
                      RAST._IType _6279___mcc_h2512 = _source344.dtor_tpe;
                    } else if (_source344.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6280___mcc_h2514 = _source344.dtor_name;
                      if (object.Equals(_6280___mcc_h2514, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source344.is_Match) {
                      RAST._IExpr _6281___mcc_h2516 = _source344.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6282___mcc_h2517 = _source344.dtor_cases;
                    } else if (_source344.is_StmtExpr) {
                      RAST._IExpr _6283___mcc_h2520 = _source344.dtor_stmt;
                      RAST._IExpr _6284___mcc_h2521 = _source344.dtor_rhs;
                    } else if (_source344.is_Block) {
                      RAST._IExpr _6285___mcc_h2524 = _source344.dtor_underlying;
                    } else if (_source344.is_StructBuild) {
                      RAST._IExpr _6286___mcc_h2526 = _source344.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6287___mcc_h2527 = _source344.dtor_assignments;
                    } else if (_source344.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6288___mcc_h2530 = _source344.dtor_arguments;
                    } else if (_source344.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6289___mcc_h2532 = _source344.dtor_op1;
                      RAST._IExpr _6290___mcc_h2533 = _source344.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6291___mcc_h2534 = _source344.dtor_format;
                    } else if (_source344.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6292___mcc_h2538 = _source344.dtor_op2;
                      RAST._IExpr _6293___mcc_h2539 = _source344.dtor_left;
                      RAST._IExpr _6294___mcc_h2540 = _source344.dtor_right;
                      DAST.Format._IBinaryOpFormat _6295___mcc_h2541 = _source344.dtor_format2;
                    } else if (_source344.is_TypeAscription) {
                      RAST._IExpr _6296___mcc_h2546 = _source344.dtor_left;
                      RAST._IType _6297___mcc_h2547 = _source344.dtor_tpe;
                    } else if (_source344.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6298___mcc_h2550 = _source344.dtor_value;
                    } else if (_source344.is_LiteralBool) {
                      bool _6299___mcc_h2552 = _source344.dtor_bvalue;
                    } else if (_source344.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6300___mcc_h2554 = _source344.dtor_value;
                      bool _6301___mcc_h2555 = _source344.dtor_binary;
                    } else if (_source344.is_DeclareVar) {
                      RAST._IDeclareType _6302___mcc_h2558 = _source344.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6303___mcc_h2559 = _source344.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6304___mcc_h2560 = _source344.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6305___mcc_h2561 = _source344.dtor_optRhs;
                    } else if (_source344.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6306___mcc_h2566 = _source344.dtor_names;
                      RAST._IExpr _6307___mcc_h2567 = _source344.dtor_rhs;
                    } else if (_source344.is_IfExpr) {
                      RAST._IExpr _6308___mcc_h2570 = _source344.dtor_cond;
                      RAST._IExpr _6309___mcc_h2571 = _source344.dtor_thn;
                      RAST._IExpr _6310___mcc_h2572 = _source344.dtor_els;
                    } else if (_source344.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6311___mcc_h2576 = _source344.dtor_optCond;
                      RAST._IExpr _6312___mcc_h2577 = _source344.dtor_underlying;
                    } else if (_source344.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6313___mcc_h2580 = _source344.dtor_name;
                      RAST._IExpr _6314___mcc_h2581 = _source344.dtor_range;
                      RAST._IExpr _6315___mcc_h2582 = _source344.dtor_body;
                    } else if (_source344.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6316___mcc_h2586 = _source344.dtor_lbl;
                      RAST._IExpr _6317___mcc_h2587 = _source344.dtor_underlying;
                    } else if (_source344.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6318___mcc_h2590 = _source344.dtor_optLbl;
                    } else if (_source344.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6319___mcc_h2592 = _source344.dtor_optLbl;
                    } else if (_source344.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6320___mcc_h2594 = _source344.dtor_optExpr;
                    } else if (_source344.is_CallType) {
                      RAST._IExpr _6321___mcc_h2596 = _source344.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6322___mcc_h2597 = _source344.dtor_typeParameters;
                    } else if (_source344.is_Call) {
                      RAST._IExpr _6323___mcc_h2600 = _source344.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6324___mcc_h2601 = _source344.dtor_arguments;
                    } else if (_source344.is_Select) {
                      RAST._IExpr _6325___mcc_h2604 = _source344.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6326___mcc_h2605 = _source344.dtor_name;
                    } else if (_source344.is_MemberSelect) {
                      RAST._IExpr _6327___mcc_h2608 = _source344.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6328___mcc_h2609 = _source344.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6329___mcc_h2612 = _source344.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6330___mcc_h2613 = _source344.dtor_retType;
                      RAST._IExpr _6331___mcc_h2614 = _source344.dtor_body;
                    }
                  } else {
                  }
                } else if (_source343.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6332___mcc_h2618 = _source343.dtor_op2;
                  RAST._IExpr _6333___mcc_h2619 = _source343.dtor_left;
                  RAST._IExpr _6334___mcc_h2620 = _source343.dtor_right;
                  DAST.Format._IBinaryOpFormat _6335___mcc_h2621 = _source343.dtor_format2;
                } else if (_source343.is_TypeAscription) {
                  RAST._IExpr _6336___mcc_h2626 = _source343.dtor_left;
                  RAST._IType _6337___mcc_h2627 = _source343.dtor_tpe;
                } else if (_source343.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6338___mcc_h2630 = _source343.dtor_value;
                } else if (_source343.is_LiteralBool) {
                  bool _6339___mcc_h2632 = _source343.dtor_bvalue;
                } else if (_source343.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6340___mcc_h2634 = _source343.dtor_value;
                  bool _6341___mcc_h2635 = _source343.dtor_binary;
                } else if (_source343.is_DeclareVar) {
                  RAST._IDeclareType _6342___mcc_h2638 = _source343.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6343___mcc_h2639 = _source343.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6344___mcc_h2640 = _source343.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6345___mcc_h2641 = _source343.dtor_optRhs;
                } else if (_source343.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6346___mcc_h2646 = _source343.dtor_names;
                  RAST._IExpr _6347___mcc_h2647 = _source343.dtor_rhs;
                } else if (_source343.is_IfExpr) {
                  RAST._IExpr _6348___mcc_h2650 = _source343.dtor_cond;
                  RAST._IExpr _6349___mcc_h2651 = _source343.dtor_thn;
                  RAST._IExpr _6350___mcc_h2652 = _source343.dtor_els;
                } else if (_source343.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6351___mcc_h2656 = _source343.dtor_optCond;
                  RAST._IExpr _6352___mcc_h2657 = _source343.dtor_underlying;
                } else if (_source343.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6353___mcc_h2660 = _source343.dtor_name;
                  RAST._IExpr _6354___mcc_h2661 = _source343.dtor_range;
                  RAST._IExpr _6355___mcc_h2662 = _source343.dtor_body;
                } else if (_source343.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6356___mcc_h2666 = _source343.dtor_lbl;
                  RAST._IExpr _6357___mcc_h2667 = _source343.dtor_underlying;
                } else if (_source343.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6358___mcc_h2670 = _source343.dtor_optLbl;
                } else if (_source343.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6359___mcc_h2672 = _source343.dtor_optLbl;
                } else if (_source343.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6360___mcc_h2674 = _source343.dtor_optExpr;
                } else if (_source343.is_CallType) {
                  RAST._IExpr _6361___mcc_h2676 = _source343.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6362___mcc_h2677 = _source343.dtor_typeParameters;
                } else if (_source343.is_Call) {
                  RAST._IExpr _6363___mcc_h2680 = _source343.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6364___mcc_h2681 = _source343.dtor_arguments;
                } else if (_source343.is_Select) {
                  RAST._IExpr _6365___mcc_h2684 = _source343.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6366___mcc_h2685 = _source343.dtor_name;
                } else if (_source343.is_MemberSelect) {
                  RAST._IExpr _6367___mcc_h2688 = _source343.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6368___mcc_h2689 = _source343.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6369___mcc_h2692 = _source343.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6370___mcc_h2693 = _source343.dtor_retType;
                  RAST._IExpr _6371___mcc_h2694 = _source343.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6255_field));
              if (_6254_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1775;
              DCOMP._IOwnership _out1776;
              (this).FromOwned(r, expectedOwnership, out _out1775, out _out1776);
              r = _out1775;
              resultingOwnership = _out1776;
              readIdents = _6263_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SetValue) {
          Dafny.ISequence<DAST._IExpression> _6372___mcc_h109 = _source322.dtor_elements;
          DAST._IType _6373_fieldType = _5017___mcc_h58;
          bool _6374_isDatatype = _5016___mcc_h57;
          bool _6375_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6376_field = _5014___mcc_h55;
          DAST._IExpression _6377_on = _5013___mcc_h54;
          {
            if (_6374_isDatatype) {
              RAST._IExpr _6378_onExpr;
              DCOMP._IOwnership _6379_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6380_recIdents;
              RAST._IExpr _out1777;
              DCOMP._IOwnership _out1778;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1779;
              (this).GenExpr(_6377_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1777, out _out1778, out _out1779);
              _6378_onExpr = _out1777;
              _6379_onOwned = _out1778;
              _6380_recIdents = _out1779;
              r = ((_6378_onExpr).Sel(DCOMP.__default.escapeName(_6376_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6381_typ;
              RAST._IType _out1780;
              _out1780 = (this).GenType(_6373_fieldType, DCOMP.GenTypeContext.@default());
              _6381_typ = _out1780;
              RAST._IExpr _out1781;
              DCOMP._IOwnership _out1782;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1781, out _out1782);
              r = _out1781;
              resultingOwnership = _out1782;
              readIdents = _6380_recIdents;
            } else {
              RAST._IExpr _6382_onExpr;
              DCOMP._IOwnership _6383_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6384_recIdents;
              RAST._IExpr _out1783;
              DCOMP._IOwnership _out1784;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1785;
              (this).GenExpr(_6377_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1783, out _out1784, out _out1785);
              _6382_onExpr = _out1783;
              _6383_onOwned = _out1784;
              _6384_recIdents = _out1785;
              r = _6382_onExpr;
              if (!object.Equals(_6382_onExpr, RAST.__default.self)) {
                RAST._IExpr _source345 = _6382_onExpr;
                if (_source345.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6385___mcc_h2698 = _source345.dtor_content;
                } else if (_source345.is_ExprFromType) {
                  RAST._IType _6386___mcc_h2700 = _source345.dtor_tpe;
                } else if (_source345.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6387___mcc_h2702 = _source345.dtor_name;
                } else if (_source345.is_Match) {
                  RAST._IExpr _6388___mcc_h2704 = _source345.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6389___mcc_h2705 = _source345.dtor_cases;
                } else if (_source345.is_StmtExpr) {
                  RAST._IExpr _6390___mcc_h2708 = _source345.dtor_stmt;
                  RAST._IExpr _6391___mcc_h2709 = _source345.dtor_rhs;
                } else if (_source345.is_Block) {
                  RAST._IExpr _6392___mcc_h2712 = _source345.dtor_underlying;
                } else if (_source345.is_StructBuild) {
                  RAST._IExpr _6393___mcc_h2714 = _source345.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6394___mcc_h2715 = _source345.dtor_assignments;
                } else if (_source345.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6395___mcc_h2718 = _source345.dtor_arguments;
                } else if (_source345.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6396___mcc_h2720 = _source345.dtor_op1;
                  RAST._IExpr _6397___mcc_h2721 = _source345.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6398___mcc_h2722 = _source345.dtor_format;
                  if (object.Equals(_6396___mcc_h2720, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source346 = _6397___mcc_h2721;
                    if (_source346.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6399___mcc_h2726 = _source346.dtor_content;
                    } else if (_source346.is_ExprFromType) {
                      RAST._IType _6400___mcc_h2728 = _source346.dtor_tpe;
                    } else if (_source346.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6401___mcc_h2730 = _source346.dtor_name;
                      if (object.Equals(_6401___mcc_h2730, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source346.is_Match) {
                      RAST._IExpr _6402___mcc_h2732 = _source346.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6403___mcc_h2733 = _source346.dtor_cases;
                    } else if (_source346.is_StmtExpr) {
                      RAST._IExpr _6404___mcc_h2736 = _source346.dtor_stmt;
                      RAST._IExpr _6405___mcc_h2737 = _source346.dtor_rhs;
                    } else if (_source346.is_Block) {
                      RAST._IExpr _6406___mcc_h2740 = _source346.dtor_underlying;
                    } else if (_source346.is_StructBuild) {
                      RAST._IExpr _6407___mcc_h2742 = _source346.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6408___mcc_h2743 = _source346.dtor_assignments;
                    } else if (_source346.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6409___mcc_h2746 = _source346.dtor_arguments;
                    } else if (_source346.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6410___mcc_h2748 = _source346.dtor_op1;
                      RAST._IExpr _6411___mcc_h2749 = _source346.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6412___mcc_h2750 = _source346.dtor_format;
                    } else if (_source346.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6413___mcc_h2754 = _source346.dtor_op2;
                      RAST._IExpr _6414___mcc_h2755 = _source346.dtor_left;
                      RAST._IExpr _6415___mcc_h2756 = _source346.dtor_right;
                      DAST.Format._IBinaryOpFormat _6416___mcc_h2757 = _source346.dtor_format2;
                    } else if (_source346.is_TypeAscription) {
                      RAST._IExpr _6417___mcc_h2762 = _source346.dtor_left;
                      RAST._IType _6418___mcc_h2763 = _source346.dtor_tpe;
                    } else if (_source346.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6419___mcc_h2766 = _source346.dtor_value;
                    } else if (_source346.is_LiteralBool) {
                      bool _6420___mcc_h2768 = _source346.dtor_bvalue;
                    } else if (_source346.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6421___mcc_h2770 = _source346.dtor_value;
                      bool _6422___mcc_h2771 = _source346.dtor_binary;
                    } else if (_source346.is_DeclareVar) {
                      RAST._IDeclareType _6423___mcc_h2774 = _source346.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6424___mcc_h2775 = _source346.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6425___mcc_h2776 = _source346.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6426___mcc_h2777 = _source346.dtor_optRhs;
                    } else if (_source346.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6427___mcc_h2782 = _source346.dtor_names;
                      RAST._IExpr _6428___mcc_h2783 = _source346.dtor_rhs;
                    } else if (_source346.is_IfExpr) {
                      RAST._IExpr _6429___mcc_h2786 = _source346.dtor_cond;
                      RAST._IExpr _6430___mcc_h2787 = _source346.dtor_thn;
                      RAST._IExpr _6431___mcc_h2788 = _source346.dtor_els;
                    } else if (_source346.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6432___mcc_h2792 = _source346.dtor_optCond;
                      RAST._IExpr _6433___mcc_h2793 = _source346.dtor_underlying;
                    } else if (_source346.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6434___mcc_h2796 = _source346.dtor_name;
                      RAST._IExpr _6435___mcc_h2797 = _source346.dtor_range;
                      RAST._IExpr _6436___mcc_h2798 = _source346.dtor_body;
                    } else if (_source346.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6437___mcc_h2802 = _source346.dtor_lbl;
                      RAST._IExpr _6438___mcc_h2803 = _source346.dtor_underlying;
                    } else if (_source346.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6439___mcc_h2806 = _source346.dtor_optLbl;
                    } else if (_source346.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6440___mcc_h2808 = _source346.dtor_optLbl;
                    } else if (_source346.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6441___mcc_h2810 = _source346.dtor_optExpr;
                    } else if (_source346.is_CallType) {
                      RAST._IExpr _6442___mcc_h2812 = _source346.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6443___mcc_h2813 = _source346.dtor_typeParameters;
                    } else if (_source346.is_Call) {
                      RAST._IExpr _6444___mcc_h2816 = _source346.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6445___mcc_h2817 = _source346.dtor_arguments;
                    } else if (_source346.is_Select) {
                      RAST._IExpr _6446___mcc_h2820 = _source346.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6447___mcc_h2821 = _source346.dtor_name;
                    } else if (_source346.is_MemberSelect) {
                      RAST._IExpr _6448___mcc_h2824 = _source346.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6449___mcc_h2825 = _source346.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6450___mcc_h2828 = _source346.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6451___mcc_h2829 = _source346.dtor_retType;
                      RAST._IExpr _6452___mcc_h2830 = _source346.dtor_body;
                    }
                  } else {
                  }
                } else if (_source345.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6453___mcc_h2834 = _source345.dtor_op2;
                  RAST._IExpr _6454___mcc_h2835 = _source345.dtor_left;
                  RAST._IExpr _6455___mcc_h2836 = _source345.dtor_right;
                  DAST.Format._IBinaryOpFormat _6456___mcc_h2837 = _source345.dtor_format2;
                } else if (_source345.is_TypeAscription) {
                  RAST._IExpr _6457___mcc_h2842 = _source345.dtor_left;
                  RAST._IType _6458___mcc_h2843 = _source345.dtor_tpe;
                } else if (_source345.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6459___mcc_h2846 = _source345.dtor_value;
                } else if (_source345.is_LiteralBool) {
                  bool _6460___mcc_h2848 = _source345.dtor_bvalue;
                } else if (_source345.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6461___mcc_h2850 = _source345.dtor_value;
                  bool _6462___mcc_h2851 = _source345.dtor_binary;
                } else if (_source345.is_DeclareVar) {
                  RAST._IDeclareType _6463___mcc_h2854 = _source345.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6464___mcc_h2855 = _source345.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6465___mcc_h2856 = _source345.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6466___mcc_h2857 = _source345.dtor_optRhs;
                } else if (_source345.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6467___mcc_h2862 = _source345.dtor_names;
                  RAST._IExpr _6468___mcc_h2863 = _source345.dtor_rhs;
                } else if (_source345.is_IfExpr) {
                  RAST._IExpr _6469___mcc_h2866 = _source345.dtor_cond;
                  RAST._IExpr _6470___mcc_h2867 = _source345.dtor_thn;
                  RAST._IExpr _6471___mcc_h2868 = _source345.dtor_els;
                } else if (_source345.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6472___mcc_h2872 = _source345.dtor_optCond;
                  RAST._IExpr _6473___mcc_h2873 = _source345.dtor_underlying;
                } else if (_source345.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6474___mcc_h2876 = _source345.dtor_name;
                  RAST._IExpr _6475___mcc_h2877 = _source345.dtor_range;
                  RAST._IExpr _6476___mcc_h2878 = _source345.dtor_body;
                } else if (_source345.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6477___mcc_h2882 = _source345.dtor_lbl;
                  RAST._IExpr _6478___mcc_h2883 = _source345.dtor_underlying;
                } else if (_source345.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6479___mcc_h2886 = _source345.dtor_optLbl;
                } else if (_source345.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6480___mcc_h2888 = _source345.dtor_optLbl;
                } else if (_source345.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6481___mcc_h2890 = _source345.dtor_optExpr;
                } else if (_source345.is_CallType) {
                  RAST._IExpr _6482___mcc_h2892 = _source345.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6483___mcc_h2893 = _source345.dtor_typeParameters;
                } else if (_source345.is_Call) {
                  RAST._IExpr _6484___mcc_h2896 = _source345.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6485___mcc_h2897 = _source345.dtor_arguments;
                } else if (_source345.is_Select) {
                  RAST._IExpr _6486___mcc_h2900 = _source345.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6487___mcc_h2901 = _source345.dtor_name;
                } else if (_source345.is_MemberSelect) {
                  RAST._IExpr _6488___mcc_h2904 = _source345.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6489___mcc_h2905 = _source345.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6490___mcc_h2908 = _source345.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6491___mcc_h2909 = _source345.dtor_retType;
                  RAST._IExpr _6492___mcc_h2910 = _source345.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6376_field));
              if (_6375_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1786;
              DCOMP._IOwnership _out1787;
              (this).FromOwned(r, expectedOwnership, out _out1786, out _out1787);
              r = _out1786;
              resultingOwnership = _out1787;
              readIdents = _6384_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MultisetValue) {
          Dafny.ISequence<DAST._IExpression> _6493___mcc_h111 = _source322.dtor_elements;
          DAST._IType _6494_fieldType = _5017___mcc_h58;
          bool _6495_isDatatype = _5016___mcc_h57;
          bool _6496_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6497_field = _5014___mcc_h55;
          DAST._IExpression _6498_on = _5013___mcc_h54;
          {
            if (_6495_isDatatype) {
              RAST._IExpr _6499_onExpr;
              DCOMP._IOwnership _6500_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6501_recIdents;
              RAST._IExpr _out1788;
              DCOMP._IOwnership _out1789;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1790;
              (this).GenExpr(_6498_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1788, out _out1789, out _out1790);
              _6499_onExpr = _out1788;
              _6500_onOwned = _out1789;
              _6501_recIdents = _out1790;
              r = ((_6499_onExpr).Sel(DCOMP.__default.escapeName(_6497_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6502_typ;
              RAST._IType _out1791;
              _out1791 = (this).GenType(_6494_fieldType, DCOMP.GenTypeContext.@default());
              _6502_typ = _out1791;
              RAST._IExpr _out1792;
              DCOMP._IOwnership _out1793;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1792, out _out1793);
              r = _out1792;
              resultingOwnership = _out1793;
              readIdents = _6501_recIdents;
            } else {
              RAST._IExpr _6503_onExpr;
              DCOMP._IOwnership _6504_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6505_recIdents;
              RAST._IExpr _out1794;
              DCOMP._IOwnership _out1795;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1796;
              (this).GenExpr(_6498_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1794, out _out1795, out _out1796);
              _6503_onExpr = _out1794;
              _6504_onOwned = _out1795;
              _6505_recIdents = _out1796;
              r = _6503_onExpr;
              if (!object.Equals(_6503_onExpr, RAST.__default.self)) {
                RAST._IExpr _source347 = _6503_onExpr;
                if (_source347.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6506___mcc_h2914 = _source347.dtor_content;
                } else if (_source347.is_ExprFromType) {
                  RAST._IType _6507___mcc_h2916 = _source347.dtor_tpe;
                } else if (_source347.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6508___mcc_h2918 = _source347.dtor_name;
                } else if (_source347.is_Match) {
                  RAST._IExpr _6509___mcc_h2920 = _source347.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6510___mcc_h2921 = _source347.dtor_cases;
                } else if (_source347.is_StmtExpr) {
                  RAST._IExpr _6511___mcc_h2924 = _source347.dtor_stmt;
                  RAST._IExpr _6512___mcc_h2925 = _source347.dtor_rhs;
                } else if (_source347.is_Block) {
                  RAST._IExpr _6513___mcc_h2928 = _source347.dtor_underlying;
                } else if (_source347.is_StructBuild) {
                  RAST._IExpr _6514___mcc_h2930 = _source347.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6515___mcc_h2931 = _source347.dtor_assignments;
                } else if (_source347.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6516___mcc_h2934 = _source347.dtor_arguments;
                } else if (_source347.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6517___mcc_h2936 = _source347.dtor_op1;
                  RAST._IExpr _6518___mcc_h2937 = _source347.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6519___mcc_h2938 = _source347.dtor_format;
                  if (object.Equals(_6517___mcc_h2936, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source348 = _6518___mcc_h2937;
                    if (_source348.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6520___mcc_h2942 = _source348.dtor_content;
                    } else if (_source348.is_ExprFromType) {
                      RAST._IType _6521___mcc_h2944 = _source348.dtor_tpe;
                    } else if (_source348.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6522___mcc_h2946 = _source348.dtor_name;
                      if (object.Equals(_6522___mcc_h2946, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source348.is_Match) {
                      RAST._IExpr _6523___mcc_h2948 = _source348.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6524___mcc_h2949 = _source348.dtor_cases;
                    } else if (_source348.is_StmtExpr) {
                      RAST._IExpr _6525___mcc_h2952 = _source348.dtor_stmt;
                      RAST._IExpr _6526___mcc_h2953 = _source348.dtor_rhs;
                    } else if (_source348.is_Block) {
                      RAST._IExpr _6527___mcc_h2956 = _source348.dtor_underlying;
                    } else if (_source348.is_StructBuild) {
                      RAST._IExpr _6528___mcc_h2958 = _source348.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6529___mcc_h2959 = _source348.dtor_assignments;
                    } else if (_source348.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6530___mcc_h2962 = _source348.dtor_arguments;
                    } else if (_source348.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6531___mcc_h2964 = _source348.dtor_op1;
                      RAST._IExpr _6532___mcc_h2965 = _source348.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6533___mcc_h2966 = _source348.dtor_format;
                    } else if (_source348.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6534___mcc_h2970 = _source348.dtor_op2;
                      RAST._IExpr _6535___mcc_h2971 = _source348.dtor_left;
                      RAST._IExpr _6536___mcc_h2972 = _source348.dtor_right;
                      DAST.Format._IBinaryOpFormat _6537___mcc_h2973 = _source348.dtor_format2;
                    } else if (_source348.is_TypeAscription) {
                      RAST._IExpr _6538___mcc_h2978 = _source348.dtor_left;
                      RAST._IType _6539___mcc_h2979 = _source348.dtor_tpe;
                    } else if (_source348.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6540___mcc_h2982 = _source348.dtor_value;
                    } else if (_source348.is_LiteralBool) {
                      bool _6541___mcc_h2984 = _source348.dtor_bvalue;
                    } else if (_source348.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6542___mcc_h2986 = _source348.dtor_value;
                      bool _6543___mcc_h2987 = _source348.dtor_binary;
                    } else if (_source348.is_DeclareVar) {
                      RAST._IDeclareType _6544___mcc_h2990 = _source348.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6545___mcc_h2991 = _source348.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6546___mcc_h2992 = _source348.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6547___mcc_h2993 = _source348.dtor_optRhs;
                    } else if (_source348.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6548___mcc_h2998 = _source348.dtor_names;
                      RAST._IExpr _6549___mcc_h2999 = _source348.dtor_rhs;
                    } else if (_source348.is_IfExpr) {
                      RAST._IExpr _6550___mcc_h3002 = _source348.dtor_cond;
                      RAST._IExpr _6551___mcc_h3003 = _source348.dtor_thn;
                      RAST._IExpr _6552___mcc_h3004 = _source348.dtor_els;
                    } else if (_source348.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6553___mcc_h3008 = _source348.dtor_optCond;
                      RAST._IExpr _6554___mcc_h3009 = _source348.dtor_underlying;
                    } else if (_source348.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6555___mcc_h3012 = _source348.dtor_name;
                      RAST._IExpr _6556___mcc_h3013 = _source348.dtor_range;
                      RAST._IExpr _6557___mcc_h3014 = _source348.dtor_body;
                    } else if (_source348.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6558___mcc_h3018 = _source348.dtor_lbl;
                      RAST._IExpr _6559___mcc_h3019 = _source348.dtor_underlying;
                    } else if (_source348.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6560___mcc_h3022 = _source348.dtor_optLbl;
                    } else if (_source348.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6561___mcc_h3024 = _source348.dtor_optLbl;
                    } else if (_source348.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6562___mcc_h3026 = _source348.dtor_optExpr;
                    } else if (_source348.is_CallType) {
                      RAST._IExpr _6563___mcc_h3028 = _source348.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6564___mcc_h3029 = _source348.dtor_typeParameters;
                    } else if (_source348.is_Call) {
                      RAST._IExpr _6565___mcc_h3032 = _source348.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6566___mcc_h3033 = _source348.dtor_arguments;
                    } else if (_source348.is_Select) {
                      RAST._IExpr _6567___mcc_h3036 = _source348.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6568___mcc_h3037 = _source348.dtor_name;
                    } else if (_source348.is_MemberSelect) {
                      RAST._IExpr _6569___mcc_h3040 = _source348.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6570___mcc_h3041 = _source348.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6571___mcc_h3044 = _source348.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6572___mcc_h3045 = _source348.dtor_retType;
                      RAST._IExpr _6573___mcc_h3046 = _source348.dtor_body;
                    }
                  } else {
                  }
                } else if (_source347.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6574___mcc_h3050 = _source347.dtor_op2;
                  RAST._IExpr _6575___mcc_h3051 = _source347.dtor_left;
                  RAST._IExpr _6576___mcc_h3052 = _source347.dtor_right;
                  DAST.Format._IBinaryOpFormat _6577___mcc_h3053 = _source347.dtor_format2;
                } else if (_source347.is_TypeAscription) {
                  RAST._IExpr _6578___mcc_h3058 = _source347.dtor_left;
                  RAST._IType _6579___mcc_h3059 = _source347.dtor_tpe;
                } else if (_source347.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6580___mcc_h3062 = _source347.dtor_value;
                } else if (_source347.is_LiteralBool) {
                  bool _6581___mcc_h3064 = _source347.dtor_bvalue;
                } else if (_source347.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6582___mcc_h3066 = _source347.dtor_value;
                  bool _6583___mcc_h3067 = _source347.dtor_binary;
                } else if (_source347.is_DeclareVar) {
                  RAST._IDeclareType _6584___mcc_h3070 = _source347.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6585___mcc_h3071 = _source347.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6586___mcc_h3072 = _source347.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6587___mcc_h3073 = _source347.dtor_optRhs;
                } else if (_source347.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6588___mcc_h3078 = _source347.dtor_names;
                  RAST._IExpr _6589___mcc_h3079 = _source347.dtor_rhs;
                } else if (_source347.is_IfExpr) {
                  RAST._IExpr _6590___mcc_h3082 = _source347.dtor_cond;
                  RAST._IExpr _6591___mcc_h3083 = _source347.dtor_thn;
                  RAST._IExpr _6592___mcc_h3084 = _source347.dtor_els;
                } else if (_source347.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6593___mcc_h3088 = _source347.dtor_optCond;
                  RAST._IExpr _6594___mcc_h3089 = _source347.dtor_underlying;
                } else if (_source347.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6595___mcc_h3092 = _source347.dtor_name;
                  RAST._IExpr _6596___mcc_h3093 = _source347.dtor_range;
                  RAST._IExpr _6597___mcc_h3094 = _source347.dtor_body;
                } else if (_source347.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6598___mcc_h3098 = _source347.dtor_lbl;
                  RAST._IExpr _6599___mcc_h3099 = _source347.dtor_underlying;
                } else if (_source347.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6600___mcc_h3102 = _source347.dtor_optLbl;
                } else if (_source347.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6601___mcc_h3104 = _source347.dtor_optLbl;
                } else if (_source347.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6602___mcc_h3106 = _source347.dtor_optExpr;
                } else if (_source347.is_CallType) {
                  RAST._IExpr _6603___mcc_h3108 = _source347.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6604___mcc_h3109 = _source347.dtor_typeParameters;
                } else if (_source347.is_Call) {
                  RAST._IExpr _6605___mcc_h3112 = _source347.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6606___mcc_h3113 = _source347.dtor_arguments;
                } else if (_source347.is_Select) {
                  RAST._IExpr _6607___mcc_h3116 = _source347.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6608___mcc_h3117 = _source347.dtor_name;
                } else if (_source347.is_MemberSelect) {
                  RAST._IExpr _6609___mcc_h3120 = _source347.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6610___mcc_h3121 = _source347.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6611___mcc_h3124 = _source347.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6612___mcc_h3125 = _source347.dtor_retType;
                  RAST._IExpr _6613___mcc_h3126 = _source347.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6497_field));
              if (_6496_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1797;
              DCOMP._IOwnership _out1798;
              (this).FromOwned(r, expectedOwnership, out _out1797, out _out1798);
              r = _out1797;
              resultingOwnership = _out1798;
              readIdents = _6505_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapValue) {
          Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _6614___mcc_h113 = _source322.dtor_mapElems;
          DAST._IType _6615_fieldType = _5017___mcc_h58;
          bool _6616_isDatatype = _5016___mcc_h57;
          bool _6617_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6618_field = _5014___mcc_h55;
          DAST._IExpression _6619_on = _5013___mcc_h54;
          {
            if (_6616_isDatatype) {
              RAST._IExpr _6620_onExpr;
              DCOMP._IOwnership _6621_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6622_recIdents;
              RAST._IExpr _out1799;
              DCOMP._IOwnership _out1800;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1801;
              (this).GenExpr(_6619_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1799, out _out1800, out _out1801);
              _6620_onExpr = _out1799;
              _6621_onOwned = _out1800;
              _6622_recIdents = _out1801;
              r = ((_6620_onExpr).Sel(DCOMP.__default.escapeName(_6618_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6623_typ;
              RAST._IType _out1802;
              _out1802 = (this).GenType(_6615_fieldType, DCOMP.GenTypeContext.@default());
              _6623_typ = _out1802;
              RAST._IExpr _out1803;
              DCOMP._IOwnership _out1804;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1803, out _out1804);
              r = _out1803;
              resultingOwnership = _out1804;
              readIdents = _6622_recIdents;
            } else {
              RAST._IExpr _6624_onExpr;
              DCOMP._IOwnership _6625_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6626_recIdents;
              RAST._IExpr _out1805;
              DCOMP._IOwnership _out1806;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1807;
              (this).GenExpr(_6619_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1805, out _out1806, out _out1807);
              _6624_onExpr = _out1805;
              _6625_onOwned = _out1806;
              _6626_recIdents = _out1807;
              r = _6624_onExpr;
              if (!object.Equals(_6624_onExpr, RAST.__default.self)) {
                RAST._IExpr _source349 = _6624_onExpr;
                if (_source349.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6627___mcc_h3130 = _source349.dtor_content;
                } else if (_source349.is_ExprFromType) {
                  RAST._IType _6628___mcc_h3132 = _source349.dtor_tpe;
                } else if (_source349.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6629___mcc_h3134 = _source349.dtor_name;
                } else if (_source349.is_Match) {
                  RAST._IExpr _6630___mcc_h3136 = _source349.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6631___mcc_h3137 = _source349.dtor_cases;
                } else if (_source349.is_StmtExpr) {
                  RAST._IExpr _6632___mcc_h3140 = _source349.dtor_stmt;
                  RAST._IExpr _6633___mcc_h3141 = _source349.dtor_rhs;
                } else if (_source349.is_Block) {
                  RAST._IExpr _6634___mcc_h3144 = _source349.dtor_underlying;
                } else if (_source349.is_StructBuild) {
                  RAST._IExpr _6635___mcc_h3146 = _source349.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6636___mcc_h3147 = _source349.dtor_assignments;
                } else if (_source349.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6637___mcc_h3150 = _source349.dtor_arguments;
                } else if (_source349.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6638___mcc_h3152 = _source349.dtor_op1;
                  RAST._IExpr _6639___mcc_h3153 = _source349.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6640___mcc_h3154 = _source349.dtor_format;
                  if (object.Equals(_6638___mcc_h3152, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source350 = _6639___mcc_h3153;
                    if (_source350.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6641___mcc_h3158 = _source350.dtor_content;
                    } else if (_source350.is_ExprFromType) {
                      RAST._IType _6642___mcc_h3160 = _source350.dtor_tpe;
                    } else if (_source350.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6643___mcc_h3162 = _source350.dtor_name;
                      if (object.Equals(_6643___mcc_h3162, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source350.is_Match) {
                      RAST._IExpr _6644___mcc_h3164 = _source350.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6645___mcc_h3165 = _source350.dtor_cases;
                    } else if (_source350.is_StmtExpr) {
                      RAST._IExpr _6646___mcc_h3168 = _source350.dtor_stmt;
                      RAST._IExpr _6647___mcc_h3169 = _source350.dtor_rhs;
                    } else if (_source350.is_Block) {
                      RAST._IExpr _6648___mcc_h3172 = _source350.dtor_underlying;
                    } else if (_source350.is_StructBuild) {
                      RAST._IExpr _6649___mcc_h3174 = _source350.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6650___mcc_h3175 = _source350.dtor_assignments;
                    } else if (_source350.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6651___mcc_h3178 = _source350.dtor_arguments;
                    } else if (_source350.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6652___mcc_h3180 = _source350.dtor_op1;
                      RAST._IExpr _6653___mcc_h3181 = _source350.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6654___mcc_h3182 = _source350.dtor_format;
                    } else if (_source350.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6655___mcc_h3186 = _source350.dtor_op2;
                      RAST._IExpr _6656___mcc_h3187 = _source350.dtor_left;
                      RAST._IExpr _6657___mcc_h3188 = _source350.dtor_right;
                      DAST.Format._IBinaryOpFormat _6658___mcc_h3189 = _source350.dtor_format2;
                    } else if (_source350.is_TypeAscription) {
                      RAST._IExpr _6659___mcc_h3194 = _source350.dtor_left;
                      RAST._IType _6660___mcc_h3195 = _source350.dtor_tpe;
                    } else if (_source350.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6661___mcc_h3198 = _source350.dtor_value;
                    } else if (_source350.is_LiteralBool) {
                      bool _6662___mcc_h3200 = _source350.dtor_bvalue;
                    } else if (_source350.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6663___mcc_h3202 = _source350.dtor_value;
                      bool _6664___mcc_h3203 = _source350.dtor_binary;
                    } else if (_source350.is_DeclareVar) {
                      RAST._IDeclareType _6665___mcc_h3206 = _source350.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6666___mcc_h3207 = _source350.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6667___mcc_h3208 = _source350.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6668___mcc_h3209 = _source350.dtor_optRhs;
                    } else if (_source350.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6669___mcc_h3214 = _source350.dtor_names;
                      RAST._IExpr _6670___mcc_h3215 = _source350.dtor_rhs;
                    } else if (_source350.is_IfExpr) {
                      RAST._IExpr _6671___mcc_h3218 = _source350.dtor_cond;
                      RAST._IExpr _6672___mcc_h3219 = _source350.dtor_thn;
                      RAST._IExpr _6673___mcc_h3220 = _source350.dtor_els;
                    } else if (_source350.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6674___mcc_h3224 = _source350.dtor_optCond;
                      RAST._IExpr _6675___mcc_h3225 = _source350.dtor_underlying;
                    } else if (_source350.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6676___mcc_h3228 = _source350.dtor_name;
                      RAST._IExpr _6677___mcc_h3229 = _source350.dtor_range;
                      RAST._IExpr _6678___mcc_h3230 = _source350.dtor_body;
                    } else if (_source350.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6679___mcc_h3234 = _source350.dtor_lbl;
                      RAST._IExpr _6680___mcc_h3235 = _source350.dtor_underlying;
                    } else if (_source350.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6681___mcc_h3238 = _source350.dtor_optLbl;
                    } else if (_source350.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6682___mcc_h3240 = _source350.dtor_optLbl;
                    } else if (_source350.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6683___mcc_h3242 = _source350.dtor_optExpr;
                    } else if (_source350.is_CallType) {
                      RAST._IExpr _6684___mcc_h3244 = _source350.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6685___mcc_h3245 = _source350.dtor_typeParameters;
                    } else if (_source350.is_Call) {
                      RAST._IExpr _6686___mcc_h3248 = _source350.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6687___mcc_h3249 = _source350.dtor_arguments;
                    } else if (_source350.is_Select) {
                      RAST._IExpr _6688___mcc_h3252 = _source350.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6689___mcc_h3253 = _source350.dtor_name;
                    } else if (_source350.is_MemberSelect) {
                      RAST._IExpr _6690___mcc_h3256 = _source350.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6691___mcc_h3257 = _source350.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6692___mcc_h3260 = _source350.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6693___mcc_h3261 = _source350.dtor_retType;
                      RAST._IExpr _6694___mcc_h3262 = _source350.dtor_body;
                    }
                  } else {
                  }
                } else if (_source349.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6695___mcc_h3266 = _source349.dtor_op2;
                  RAST._IExpr _6696___mcc_h3267 = _source349.dtor_left;
                  RAST._IExpr _6697___mcc_h3268 = _source349.dtor_right;
                  DAST.Format._IBinaryOpFormat _6698___mcc_h3269 = _source349.dtor_format2;
                } else if (_source349.is_TypeAscription) {
                  RAST._IExpr _6699___mcc_h3274 = _source349.dtor_left;
                  RAST._IType _6700___mcc_h3275 = _source349.dtor_tpe;
                } else if (_source349.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6701___mcc_h3278 = _source349.dtor_value;
                } else if (_source349.is_LiteralBool) {
                  bool _6702___mcc_h3280 = _source349.dtor_bvalue;
                } else if (_source349.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6703___mcc_h3282 = _source349.dtor_value;
                  bool _6704___mcc_h3283 = _source349.dtor_binary;
                } else if (_source349.is_DeclareVar) {
                  RAST._IDeclareType _6705___mcc_h3286 = _source349.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6706___mcc_h3287 = _source349.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6707___mcc_h3288 = _source349.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6708___mcc_h3289 = _source349.dtor_optRhs;
                } else if (_source349.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6709___mcc_h3294 = _source349.dtor_names;
                  RAST._IExpr _6710___mcc_h3295 = _source349.dtor_rhs;
                } else if (_source349.is_IfExpr) {
                  RAST._IExpr _6711___mcc_h3298 = _source349.dtor_cond;
                  RAST._IExpr _6712___mcc_h3299 = _source349.dtor_thn;
                  RAST._IExpr _6713___mcc_h3300 = _source349.dtor_els;
                } else if (_source349.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6714___mcc_h3304 = _source349.dtor_optCond;
                  RAST._IExpr _6715___mcc_h3305 = _source349.dtor_underlying;
                } else if (_source349.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6716___mcc_h3308 = _source349.dtor_name;
                  RAST._IExpr _6717___mcc_h3309 = _source349.dtor_range;
                  RAST._IExpr _6718___mcc_h3310 = _source349.dtor_body;
                } else if (_source349.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6719___mcc_h3314 = _source349.dtor_lbl;
                  RAST._IExpr _6720___mcc_h3315 = _source349.dtor_underlying;
                } else if (_source349.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6721___mcc_h3318 = _source349.dtor_optLbl;
                } else if (_source349.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6722___mcc_h3320 = _source349.dtor_optLbl;
                } else if (_source349.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6723___mcc_h3322 = _source349.dtor_optExpr;
                } else if (_source349.is_CallType) {
                  RAST._IExpr _6724___mcc_h3324 = _source349.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6725___mcc_h3325 = _source349.dtor_typeParameters;
                } else if (_source349.is_Call) {
                  RAST._IExpr _6726___mcc_h3328 = _source349.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6727___mcc_h3329 = _source349.dtor_arguments;
                } else if (_source349.is_Select) {
                  RAST._IExpr _6728___mcc_h3332 = _source349.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6729___mcc_h3333 = _source349.dtor_name;
                } else if (_source349.is_MemberSelect) {
                  RAST._IExpr _6730___mcc_h3336 = _source349.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6731___mcc_h3337 = _source349.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6732___mcc_h3340 = _source349.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6733___mcc_h3341 = _source349.dtor_retType;
                  RAST._IExpr _6734___mcc_h3342 = _source349.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6618_field));
              if (_6617_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1808;
              DCOMP._IOwnership _out1809;
              (this).FromOwned(r, expectedOwnership, out _out1808, out _out1809);
              r = _out1808;
              resultingOwnership = _out1809;
              readIdents = _6626_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapBuilder) {
          DAST._IType _6735___mcc_h115 = _source322.dtor_keyType;
          DAST._IType _6736___mcc_h116 = _source322.dtor_valueType;
          DAST._IType _6737_fieldType = _5017___mcc_h58;
          bool _6738_isDatatype = _5016___mcc_h57;
          bool _6739_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6740_field = _5014___mcc_h55;
          DAST._IExpression _6741_on = _5013___mcc_h54;
          {
            if (_6738_isDatatype) {
              RAST._IExpr _6742_onExpr;
              DCOMP._IOwnership _6743_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6744_recIdents;
              RAST._IExpr _out1810;
              DCOMP._IOwnership _out1811;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1812;
              (this).GenExpr(_6741_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1810, out _out1811, out _out1812);
              _6742_onExpr = _out1810;
              _6743_onOwned = _out1811;
              _6744_recIdents = _out1812;
              r = ((_6742_onExpr).Sel(DCOMP.__default.escapeName(_6740_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6745_typ;
              RAST._IType _out1813;
              _out1813 = (this).GenType(_6737_fieldType, DCOMP.GenTypeContext.@default());
              _6745_typ = _out1813;
              RAST._IExpr _out1814;
              DCOMP._IOwnership _out1815;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1814, out _out1815);
              r = _out1814;
              resultingOwnership = _out1815;
              readIdents = _6744_recIdents;
            } else {
              RAST._IExpr _6746_onExpr;
              DCOMP._IOwnership _6747_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6748_recIdents;
              RAST._IExpr _out1816;
              DCOMP._IOwnership _out1817;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1818;
              (this).GenExpr(_6741_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1816, out _out1817, out _out1818);
              _6746_onExpr = _out1816;
              _6747_onOwned = _out1817;
              _6748_recIdents = _out1818;
              r = _6746_onExpr;
              if (!object.Equals(_6746_onExpr, RAST.__default.self)) {
                RAST._IExpr _source351 = _6746_onExpr;
                if (_source351.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6749___mcc_h3346 = _source351.dtor_content;
                } else if (_source351.is_ExprFromType) {
                  RAST._IType _6750___mcc_h3348 = _source351.dtor_tpe;
                } else if (_source351.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6751___mcc_h3350 = _source351.dtor_name;
                } else if (_source351.is_Match) {
                  RAST._IExpr _6752___mcc_h3352 = _source351.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6753___mcc_h3353 = _source351.dtor_cases;
                } else if (_source351.is_StmtExpr) {
                  RAST._IExpr _6754___mcc_h3356 = _source351.dtor_stmt;
                  RAST._IExpr _6755___mcc_h3357 = _source351.dtor_rhs;
                } else if (_source351.is_Block) {
                  RAST._IExpr _6756___mcc_h3360 = _source351.dtor_underlying;
                } else if (_source351.is_StructBuild) {
                  RAST._IExpr _6757___mcc_h3362 = _source351.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6758___mcc_h3363 = _source351.dtor_assignments;
                } else if (_source351.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6759___mcc_h3366 = _source351.dtor_arguments;
                } else if (_source351.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6760___mcc_h3368 = _source351.dtor_op1;
                  RAST._IExpr _6761___mcc_h3369 = _source351.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6762___mcc_h3370 = _source351.dtor_format;
                  if (object.Equals(_6760___mcc_h3368, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source352 = _6761___mcc_h3369;
                    if (_source352.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6763___mcc_h3374 = _source352.dtor_content;
                    } else if (_source352.is_ExprFromType) {
                      RAST._IType _6764___mcc_h3376 = _source352.dtor_tpe;
                    } else if (_source352.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6765___mcc_h3378 = _source352.dtor_name;
                      if (object.Equals(_6765___mcc_h3378, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source352.is_Match) {
                      RAST._IExpr _6766___mcc_h3380 = _source352.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6767___mcc_h3381 = _source352.dtor_cases;
                    } else if (_source352.is_StmtExpr) {
                      RAST._IExpr _6768___mcc_h3384 = _source352.dtor_stmt;
                      RAST._IExpr _6769___mcc_h3385 = _source352.dtor_rhs;
                    } else if (_source352.is_Block) {
                      RAST._IExpr _6770___mcc_h3388 = _source352.dtor_underlying;
                    } else if (_source352.is_StructBuild) {
                      RAST._IExpr _6771___mcc_h3390 = _source352.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6772___mcc_h3391 = _source352.dtor_assignments;
                    } else if (_source352.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6773___mcc_h3394 = _source352.dtor_arguments;
                    } else if (_source352.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6774___mcc_h3396 = _source352.dtor_op1;
                      RAST._IExpr _6775___mcc_h3397 = _source352.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6776___mcc_h3398 = _source352.dtor_format;
                    } else if (_source352.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6777___mcc_h3402 = _source352.dtor_op2;
                      RAST._IExpr _6778___mcc_h3403 = _source352.dtor_left;
                      RAST._IExpr _6779___mcc_h3404 = _source352.dtor_right;
                      DAST.Format._IBinaryOpFormat _6780___mcc_h3405 = _source352.dtor_format2;
                    } else if (_source352.is_TypeAscription) {
                      RAST._IExpr _6781___mcc_h3410 = _source352.dtor_left;
                      RAST._IType _6782___mcc_h3411 = _source352.dtor_tpe;
                    } else if (_source352.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6783___mcc_h3414 = _source352.dtor_value;
                    } else if (_source352.is_LiteralBool) {
                      bool _6784___mcc_h3416 = _source352.dtor_bvalue;
                    } else if (_source352.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6785___mcc_h3418 = _source352.dtor_value;
                      bool _6786___mcc_h3419 = _source352.dtor_binary;
                    } else if (_source352.is_DeclareVar) {
                      RAST._IDeclareType _6787___mcc_h3422 = _source352.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6788___mcc_h3423 = _source352.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6789___mcc_h3424 = _source352.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6790___mcc_h3425 = _source352.dtor_optRhs;
                    } else if (_source352.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6791___mcc_h3430 = _source352.dtor_names;
                      RAST._IExpr _6792___mcc_h3431 = _source352.dtor_rhs;
                    } else if (_source352.is_IfExpr) {
                      RAST._IExpr _6793___mcc_h3434 = _source352.dtor_cond;
                      RAST._IExpr _6794___mcc_h3435 = _source352.dtor_thn;
                      RAST._IExpr _6795___mcc_h3436 = _source352.dtor_els;
                    } else if (_source352.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6796___mcc_h3440 = _source352.dtor_optCond;
                      RAST._IExpr _6797___mcc_h3441 = _source352.dtor_underlying;
                    } else if (_source352.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6798___mcc_h3444 = _source352.dtor_name;
                      RAST._IExpr _6799___mcc_h3445 = _source352.dtor_range;
                      RAST._IExpr _6800___mcc_h3446 = _source352.dtor_body;
                    } else if (_source352.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6801___mcc_h3450 = _source352.dtor_lbl;
                      RAST._IExpr _6802___mcc_h3451 = _source352.dtor_underlying;
                    } else if (_source352.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6803___mcc_h3454 = _source352.dtor_optLbl;
                    } else if (_source352.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6804___mcc_h3456 = _source352.dtor_optLbl;
                    } else if (_source352.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6805___mcc_h3458 = _source352.dtor_optExpr;
                    } else if (_source352.is_CallType) {
                      RAST._IExpr _6806___mcc_h3460 = _source352.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6807___mcc_h3461 = _source352.dtor_typeParameters;
                    } else if (_source352.is_Call) {
                      RAST._IExpr _6808___mcc_h3464 = _source352.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6809___mcc_h3465 = _source352.dtor_arguments;
                    } else if (_source352.is_Select) {
                      RAST._IExpr _6810___mcc_h3468 = _source352.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6811___mcc_h3469 = _source352.dtor_name;
                    } else if (_source352.is_MemberSelect) {
                      RAST._IExpr _6812___mcc_h3472 = _source352.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6813___mcc_h3473 = _source352.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6814___mcc_h3476 = _source352.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6815___mcc_h3477 = _source352.dtor_retType;
                      RAST._IExpr _6816___mcc_h3478 = _source352.dtor_body;
                    }
                  } else {
                  }
                } else if (_source351.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6817___mcc_h3482 = _source351.dtor_op2;
                  RAST._IExpr _6818___mcc_h3483 = _source351.dtor_left;
                  RAST._IExpr _6819___mcc_h3484 = _source351.dtor_right;
                  DAST.Format._IBinaryOpFormat _6820___mcc_h3485 = _source351.dtor_format2;
                } else if (_source351.is_TypeAscription) {
                  RAST._IExpr _6821___mcc_h3490 = _source351.dtor_left;
                  RAST._IType _6822___mcc_h3491 = _source351.dtor_tpe;
                } else if (_source351.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6823___mcc_h3494 = _source351.dtor_value;
                } else if (_source351.is_LiteralBool) {
                  bool _6824___mcc_h3496 = _source351.dtor_bvalue;
                } else if (_source351.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6825___mcc_h3498 = _source351.dtor_value;
                  bool _6826___mcc_h3499 = _source351.dtor_binary;
                } else if (_source351.is_DeclareVar) {
                  RAST._IDeclareType _6827___mcc_h3502 = _source351.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6828___mcc_h3503 = _source351.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6829___mcc_h3504 = _source351.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6830___mcc_h3505 = _source351.dtor_optRhs;
                } else if (_source351.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6831___mcc_h3510 = _source351.dtor_names;
                  RAST._IExpr _6832___mcc_h3511 = _source351.dtor_rhs;
                } else if (_source351.is_IfExpr) {
                  RAST._IExpr _6833___mcc_h3514 = _source351.dtor_cond;
                  RAST._IExpr _6834___mcc_h3515 = _source351.dtor_thn;
                  RAST._IExpr _6835___mcc_h3516 = _source351.dtor_els;
                } else if (_source351.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6836___mcc_h3520 = _source351.dtor_optCond;
                  RAST._IExpr _6837___mcc_h3521 = _source351.dtor_underlying;
                } else if (_source351.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6838___mcc_h3524 = _source351.dtor_name;
                  RAST._IExpr _6839___mcc_h3525 = _source351.dtor_range;
                  RAST._IExpr _6840___mcc_h3526 = _source351.dtor_body;
                } else if (_source351.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6841___mcc_h3530 = _source351.dtor_lbl;
                  RAST._IExpr _6842___mcc_h3531 = _source351.dtor_underlying;
                } else if (_source351.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6843___mcc_h3534 = _source351.dtor_optLbl;
                } else if (_source351.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6844___mcc_h3536 = _source351.dtor_optLbl;
                } else if (_source351.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6845___mcc_h3538 = _source351.dtor_optExpr;
                } else if (_source351.is_CallType) {
                  RAST._IExpr _6846___mcc_h3540 = _source351.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6847___mcc_h3541 = _source351.dtor_typeParameters;
                } else if (_source351.is_Call) {
                  RAST._IExpr _6848___mcc_h3544 = _source351.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6849___mcc_h3545 = _source351.dtor_arguments;
                } else if (_source351.is_Select) {
                  RAST._IExpr _6850___mcc_h3548 = _source351.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6851___mcc_h3549 = _source351.dtor_name;
                } else if (_source351.is_MemberSelect) {
                  RAST._IExpr _6852___mcc_h3552 = _source351.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6853___mcc_h3553 = _source351.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6854___mcc_h3556 = _source351.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6855___mcc_h3557 = _source351.dtor_retType;
                  RAST._IExpr _6856___mcc_h3558 = _source351.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6740_field));
              if (_6739_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1819;
              DCOMP._IOwnership _out1820;
              (this).FromOwned(r, expectedOwnership, out _out1819, out _out1820);
              r = _out1819;
              resultingOwnership = _out1820;
              readIdents = _6748_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SeqUpdate) {
          DAST._IExpression _6857___mcc_h119 = _source322.dtor_expr;
          DAST._IExpression _6858___mcc_h120 = _source322.dtor_indexExpr;
          DAST._IExpression _6859___mcc_h121 = _source322.dtor_value;
          DAST._IType _6860_fieldType = _5017___mcc_h58;
          bool _6861_isDatatype = _5016___mcc_h57;
          bool _6862_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6863_field = _5014___mcc_h55;
          DAST._IExpression _6864_on = _5013___mcc_h54;
          {
            if (_6861_isDatatype) {
              RAST._IExpr _6865_onExpr;
              DCOMP._IOwnership _6866_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6867_recIdents;
              RAST._IExpr _out1821;
              DCOMP._IOwnership _out1822;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1823;
              (this).GenExpr(_6864_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1821, out _out1822, out _out1823);
              _6865_onExpr = _out1821;
              _6866_onOwned = _out1822;
              _6867_recIdents = _out1823;
              r = ((_6865_onExpr).Sel(DCOMP.__default.escapeName(_6863_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6868_typ;
              RAST._IType _out1824;
              _out1824 = (this).GenType(_6860_fieldType, DCOMP.GenTypeContext.@default());
              _6868_typ = _out1824;
              RAST._IExpr _out1825;
              DCOMP._IOwnership _out1826;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1825, out _out1826);
              r = _out1825;
              resultingOwnership = _out1826;
              readIdents = _6867_recIdents;
            } else {
              RAST._IExpr _6869_onExpr;
              DCOMP._IOwnership _6870_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6871_recIdents;
              RAST._IExpr _out1827;
              DCOMP._IOwnership _out1828;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1829;
              (this).GenExpr(_6864_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1827, out _out1828, out _out1829);
              _6869_onExpr = _out1827;
              _6870_onOwned = _out1828;
              _6871_recIdents = _out1829;
              r = _6869_onExpr;
              if (!object.Equals(_6869_onExpr, RAST.__default.self)) {
                RAST._IExpr _source353 = _6869_onExpr;
                if (_source353.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6872___mcc_h3562 = _source353.dtor_content;
                } else if (_source353.is_ExprFromType) {
                  RAST._IType _6873___mcc_h3564 = _source353.dtor_tpe;
                } else if (_source353.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6874___mcc_h3566 = _source353.dtor_name;
                } else if (_source353.is_Match) {
                  RAST._IExpr _6875___mcc_h3568 = _source353.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6876___mcc_h3569 = _source353.dtor_cases;
                } else if (_source353.is_StmtExpr) {
                  RAST._IExpr _6877___mcc_h3572 = _source353.dtor_stmt;
                  RAST._IExpr _6878___mcc_h3573 = _source353.dtor_rhs;
                } else if (_source353.is_Block) {
                  RAST._IExpr _6879___mcc_h3576 = _source353.dtor_underlying;
                } else if (_source353.is_StructBuild) {
                  RAST._IExpr _6880___mcc_h3578 = _source353.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _6881___mcc_h3579 = _source353.dtor_assignments;
                } else if (_source353.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _6882___mcc_h3582 = _source353.dtor_arguments;
                } else if (_source353.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6883___mcc_h3584 = _source353.dtor_op1;
                  RAST._IExpr _6884___mcc_h3585 = _source353.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _6885___mcc_h3586 = _source353.dtor_format;
                  if (object.Equals(_6883___mcc_h3584, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source354 = _6884___mcc_h3585;
                    if (_source354.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _6886___mcc_h3590 = _source354.dtor_content;
                    } else if (_source354.is_ExprFromType) {
                      RAST._IType _6887___mcc_h3592 = _source354.dtor_tpe;
                    } else if (_source354.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _6888___mcc_h3594 = _source354.dtor_name;
                      if (object.Equals(_6888___mcc_h3594, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source354.is_Match) {
                      RAST._IExpr _6889___mcc_h3596 = _source354.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _6890___mcc_h3597 = _source354.dtor_cases;
                    } else if (_source354.is_StmtExpr) {
                      RAST._IExpr _6891___mcc_h3600 = _source354.dtor_stmt;
                      RAST._IExpr _6892___mcc_h3601 = _source354.dtor_rhs;
                    } else if (_source354.is_Block) {
                      RAST._IExpr _6893___mcc_h3604 = _source354.dtor_underlying;
                    } else if (_source354.is_StructBuild) {
                      RAST._IExpr _6894___mcc_h3606 = _source354.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _6895___mcc_h3607 = _source354.dtor_assignments;
                    } else if (_source354.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _6896___mcc_h3610 = _source354.dtor_arguments;
                    } else if (_source354.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6897___mcc_h3612 = _source354.dtor_op1;
                      RAST._IExpr _6898___mcc_h3613 = _source354.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _6899___mcc_h3614 = _source354.dtor_format;
                    } else if (_source354.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _6900___mcc_h3618 = _source354.dtor_op2;
                      RAST._IExpr _6901___mcc_h3619 = _source354.dtor_left;
                      RAST._IExpr _6902___mcc_h3620 = _source354.dtor_right;
                      DAST.Format._IBinaryOpFormat _6903___mcc_h3621 = _source354.dtor_format2;
                    } else if (_source354.is_TypeAscription) {
                      RAST._IExpr _6904___mcc_h3626 = _source354.dtor_left;
                      RAST._IType _6905___mcc_h3627 = _source354.dtor_tpe;
                    } else if (_source354.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _6906___mcc_h3630 = _source354.dtor_value;
                    } else if (_source354.is_LiteralBool) {
                      bool _6907___mcc_h3632 = _source354.dtor_bvalue;
                    } else if (_source354.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _6908___mcc_h3634 = _source354.dtor_value;
                      bool _6909___mcc_h3635 = _source354.dtor_binary;
                    } else if (_source354.is_DeclareVar) {
                      RAST._IDeclareType _6910___mcc_h3638 = _source354.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _6911___mcc_h3639 = _source354.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _6912___mcc_h3640 = _source354.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _6913___mcc_h3641 = _source354.dtor_optRhs;
                    } else if (_source354.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _6914___mcc_h3646 = _source354.dtor_names;
                      RAST._IExpr _6915___mcc_h3647 = _source354.dtor_rhs;
                    } else if (_source354.is_IfExpr) {
                      RAST._IExpr _6916___mcc_h3650 = _source354.dtor_cond;
                      RAST._IExpr _6917___mcc_h3651 = _source354.dtor_thn;
                      RAST._IExpr _6918___mcc_h3652 = _source354.dtor_els;
                    } else if (_source354.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _6919___mcc_h3656 = _source354.dtor_optCond;
                      RAST._IExpr _6920___mcc_h3657 = _source354.dtor_underlying;
                    } else if (_source354.is_For) {
                      Dafny.ISequence<Dafny.Rune> _6921___mcc_h3660 = _source354.dtor_name;
                      RAST._IExpr _6922___mcc_h3661 = _source354.dtor_range;
                      RAST._IExpr _6923___mcc_h3662 = _source354.dtor_body;
                    } else if (_source354.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _6924___mcc_h3666 = _source354.dtor_lbl;
                      RAST._IExpr _6925___mcc_h3667 = _source354.dtor_underlying;
                    } else if (_source354.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6926___mcc_h3670 = _source354.dtor_optLbl;
                    } else if (_source354.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6927___mcc_h3672 = _source354.dtor_optLbl;
                    } else if (_source354.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _6928___mcc_h3674 = _source354.dtor_optExpr;
                    } else if (_source354.is_CallType) {
                      RAST._IExpr _6929___mcc_h3676 = _source354.dtor_obj;
                      Dafny.ISequence<RAST._IType> _6930___mcc_h3677 = _source354.dtor_typeParameters;
                    } else if (_source354.is_Call) {
                      RAST._IExpr _6931___mcc_h3680 = _source354.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _6932___mcc_h3681 = _source354.dtor_arguments;
                    } else if (_source354.is_Select) {
                      RAST._IExpr _6933___mcc_h3684 = _source354.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6934___mcc_h3685 = _source354.dtor_name;
                    } else if (_source354.is_MemberSelect) {
                      RAST._IExpr _6935___mcc_h3688 = _source354.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _6936___mcc_h3689 = _source354.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _6937___mcc_h3692 = _source354.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _6938___mcc_h3693 = _source354.dtor_retType;
                      RAST._IExpr _6939___mcc_h3694 = _source354.dtor_body;
                    }
                  } else {
                  }
                } else if (_source353.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _6940___mcc_h3698 = _source353.dtor_op2;
                  RAST._IExpr _6941___mcc_h3699 = _source353.dtor_left;
                  RAST._IExpr _6942___mcc_h3700 = _source353.dtor_right;
                  DAST.Format._IBinaryOpFormat _6943___mcc_h3701 = _source353.dtor_format2;
                } else if (_source353.is_TypeAscription) {
                  RAST._IExpr _6944___mcc_h3706 = _source353.dtor_left;
                  RAST._IType _6945___mcc_h3707 = _source353.dtor_tpe;
                } else if (_source353.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _6946___mcc_h3710 = _source353.dtor_value;
                } else if (_source353.is_LiteralBool) {
                  bool _6947___mcc_h3712 = _source353.dtor_bvalue;
                } else if (_source353.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _6948___mcc_h3714 = _source353.dtor_value;
                  bool _6949___mcc_h3715 = _source353.dtor_binary;
                } else if (_source353.is_DeclareVar) {
                  RAST._IDeclareType _6950___mcc_h3718 = _source353.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _6951___mcc_h3719 = _source353.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _6952___mcc_h3720 = _source353.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _6953___mcc_h3721 = _source353.dtor_optRhs;
                } else if (_source353.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _6954___mcc_h3726 = _source353.dtor_names;
                  RAST._IExpr _6955___mcc_h3727 = _source353.dtor_rhs;
                } else if (_source353.is_IfExpr) {
                  RAST._IExpr _6956___mcc_h3730 = _source353.dtor_cond;
                  RAST._IExpr _6957___mcc_h3731 = _source353.dtor_thn;
                  RAST._IExpr _6958___mcc_h3732 = _source353.dtor_els;
                } else if (_source353.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _6959___mcc_h3736 = _source353.dtor_optCond;
                  RAST._IExpr _6960___mcc_h3737 = _source353.dtor_underlying;
                } else if (_source353.is_For) {
                  Dafny.ISequence<Dafny.Rune> _6961___mcc_h3740 = _source353.dtor_name;
                  RAST._IExpr _6962___mcc_h3741 = _source353.dtor_range;
                  RAST._IExpr _6963___mcc_h3742 = _source353.dtor_body;
                } else if (_source353.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _6964___mcc_h3746 = _source353.dtor_lbl;
                  RAST._IExpr _6965___mcc_h3747 = _source353.dtor_underlying;
                } else if (_source353.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6966___mcc_h3750 = _source353.dtor_optLbl;
                } else if (_source353.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _6967___mcc_h3752 = _source353.dtor_optLbl;
                } else if (_source353.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _6968___mcc_h3754 = _source353.dtor_optExpr;
                } else if (_source353.is_CallType) {
                  RAST._IExpr _6969___mcc_h3756 = _source353.dtor_obj;
                  Dafny.ISequence<RAST._IType> _6970___mcc_h3757 = _source353.dtor_typeParameters;
                } else if (_source353.is_Call) {
                  RAST._IExpr _6971___mcc_h3760 = _source353.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _6972___mcc_h3761 = _source353.dtor_arguments;
                } else if (_source353.is_Select) {
                  RAST._IExpr _6973___mcc_h3764 = _source353.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6974___mcc_h3765 = _source353.dtor_name;
                } else if (_source353.is_MemberSelect) {
                  RAST._IExpr _6975___mcc_h3768 = _source353.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _6976___mcc_h3769 = _source353.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _6977___mcc_h3772 = _source353.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _6978___mcc_h3773 = _source353.dtor_retType;
                  RAST._IExpr _6979___mcc_h3774 = _source353.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6863_field));
              if (_6862_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1830;
              DCOMP._IOwnership _out1831;
              (this).FromOwned(r, expectedOwnership, out _out1830, out _out1831);
              r = _out1830;
              resultingOwnership = _out1831;
              readIdents = _6871_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapUpdate) {
          DAST._IExpression _6980___mcc_h125 = _source322.dtor_expr;
          DAST._IExpression _6981___mcc_h126 = _source322.dtor_indexExpr;
          DAST._IExpression _6982___mcc_h127 = _source322.dtor_value;
          DAST._IType _6983_fieldType = _5017___mcc_h58;
          bool _6984_isDatatype = _5016___mcc_h57;
          bool _6985_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _6986_field = _5014___mcc_h55;
          DAST._IExpression _6987_on = _5013___mcc_h54;
          {
            if (_6984_isDatatype) {
              RAST._IExpr _6988_onExpr;
              DCOMP._IOwnership _6989_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6990_recIdents;
              RAST._IExpr _out1832;
              DCOMP._IOwnership _out1833;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1834;
              (this).GenExpr(_6987_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1832, out _out1833, out _out1834);
              _6988_onExpr = _out1832;
              _6989_onOwned = _out1833;
              _6990_recIdents = _out1834;
              r = ((_6988_onExpr).Sel(DCOMP.__default.escapeName(_6986_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _6991_typ;
              RAST._IType _out1835;
              _out1835 = (this).GenType(_6983_fieldType, DCOMP.GenTypeContext.@default());
              _6991_typ = _out1835;
              RAST._IExpr _out1836;
              DCOMP._IOwnership _out1837;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1836, out _out1837);
              r = _out1836;
              resultingOwnership = _out1837;
              readIdents = _6990_recIdents;
            } else {
              RAST._IExpr _6992_onExpr;
              DCOMP._IOwnership _6993_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _6994_recIdents;
              RAST._IExpr _out1838;
              DCOMP._IOwnership _out1839;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1840;
              (this).GenExpr(_6987_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1838, out _out1839, out _out1840);
              _6992_onExpr = _out1838;
              _6993_onOwned = _out1839;
              _6994_recIdents = _out1840;
              r = _6992_onExpr;
              if (!object.Equals(_6992_onExpr, RAST.__default.self)) {
                RAST._IExpr _source355 = _6992_onExpr;
                if (_source355.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _6995___mcc_h3778 = _source355.dtor_content;
                } else if (_source355.is_ExprFromType) {
                  RAST._IType _6996___mcc_h3780 = _source355.dtor_tpe;
                } else if (_source355.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _6997___mcc_h3782 = _source355.dtor_name;
                } else if (_source355.is_Match) {
                  RAST._IExpr _6998___mcc_h3784 = _source355.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _6999___mcc_h3785 = _source355.dtor_cases;
                } else if (_source355.is_StmtExpr) {
                  RAST._IExpr _7000___mcc_h3788 = _source355.dtor_stmt;
                  RAST._IExpr _7001___mcc_h3789 = _source355.dtor_rhs;
                } else if (_source355.is_Block) {
                  RAST._IExpr _7002___mcc_h3792 = _source355.dtor_underlying;
                } else if (_source355.is_StructBuild) {
                  RAST._IExpr _7003___mcc_h3794 = _source355.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7004___mcc_h3795 = _source355.dtor_assignments;
                } else if (_source355.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7005___mcc_h3798 = _source355.dtor_arguments;
                } else if (_source355.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7006___mcc_h3800 = _source355.dtor_op1;
                  RAST._IExpr _7007___mcc_h3801 = _source355.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7008___mcc_h3802 = _source355.dtor_format;
                  if (object.Equals(_7006___mcc_h3800, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source356 = _7007___mcc_h3801;
                    if (_source356.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7009___mcc_h3806 = _source356.dtor_content;
                    } else if (_source356.is_ExprFromType) {
                      RAST._IType _7010___mcc_h3808 = _source356.dtor_tpe;
                    } else if (_source356.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7011___mcc_h3810 = _source356.dtor_name;
                      if (object.Equals(_7011___mcc_h3810, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source356.is_Match) {
                      RAST._IExpr _7012___mcc_h3812 = _source356.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7013___mcc_h3813 = _source356.dtor_cases;
                    } else if (_source356.is_StmtExpr) {
                      RAST._IExpr _7014___mcc_h3816 = _source356.dtor_stmt;
                      RAST._IExpr _7015___mcc_h3817 = _source356.dtor_rhs;
                    } else if (_source356.is_Block) {
                      RAST._IExpr _7016___mcc_h3820 = _source356.dtor_underlying;
                    } else if (_source356.is_StructBuild) {
                      RAST._IExpr _7017___mcc_h3822 = _source356.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7018___mcc_h3823 = _source356.dtor_assignments;
                    } else if (_source356.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7019___mcc_h3826 = _source356.dtor_arguments;
                    } else if (_source356.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7020___mcc_h3828 = _source356.dtor_op1;
                      RAST._IExpr _7021___mcc_h3829 = _source356.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7022___mcc_h3830 = _source356.dtor_format;
                    } else if (_source356.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7023___mcc_h3834 = _source356.dtor_op2;
                      RAST._IExpr _7024___mcc_h3835 = _source356.dtor_left;
                      RAST._IExpr _7025___mcc_h3836 = _source356.dtor_right;
                      DAST.Format._IBinaryOpFormat _7026___mcc_h3837 = _source356.dtor_format2;
                    } else if (_source356.is_TypeAscription) {
                      RAST._IExpr _7027___mcc_h3842 = _source356.dtor_left;
                      RAST._IType _7028___mcc_h3843 = _source356.dtor_tpe;
                    } else if (_source356.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7029___mcc_h3846 = _source356.dtor_value;
                    } else if (_source356.is_LiteralBool) {
                      bool _7030___mcc_h3848 = _source356.dtor_bvalue;
                    } else if (_source356.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7031___mcc_h3850 = _source356.dtor_value;
                      bool _7032___mcc_h3851 = _source356.dtor_binary;
                    } else if (_source356.is_DeclareVar) {
                      RAST._IDeclareType _7033___mcc_h3854 = _source356.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7034___mcc_h3855 = _source356.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7035___mcc_h3856 = _source356.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7036___mcc_h3857 = _source356.dtor_optRhs;
                    } else if (_source356.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7037___mcc_h3862 = _source356.dtor_names;
                      RAST._IExpr _7038___mcc_h3863 = _source356.dtor_rhs;
                    } else if (_source356.is_IfExpr) {
                      RAST._IExpr _7039___mcc_h3866 = _source356.dtor_cond;
                      RAST._IExpr _7040___mcc_h3867 = _source356.dtor_thn;
                      RAST._IExpr _7041___mcc_h3868 = _source356.dtor_els;
                    } else if (_source356.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7042___mcc_h3872 = _source356.dtor_optCond;
                      RAST._IExpr _7043___mcc_h3873 = _source356.dtor_underlying;
                    } else if (_source356.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7044___mcc_h3876 = _source356.dtor_name;
                      RAST._IExpr _7045___mcc_h3877 = _source356.dtor_range;
                      RAST._IExpr _7046___mcc_h3878 = _source356.dtor_body;
                    } else if (_source356.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7047___mcc_h3882 = _source356.dtor_lbl;
                      RAST._IExpr _7048___mcc_h3883 = _source356.dtor_underlying;
                    } else if (_source356.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7049___mcc_h3886 = _source356.dtor_optLbl;
                    } else if (_source356.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7050___mcc_h3888 = _source356.dtor_optLbl;
                    } else if (_source356.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7051___mcc_h3890 = _source356.dtor_optExpr;
                    } else if (_source356.is_CallType) {
                      RAST._IExpr _7052___mcc_h3892 = _source356.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7053___mcc_h3893 = _source356.dtor_typeParameters;
                    } else if (_source356.is_Call) {
                      RAST._IExpr _7054___mcc_h3896 = _source356.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7055___mcc_h3897 = _source356.dtor_arguments;
                    } else if (_source356.is_Select) {
                      RAST._IExpr _7056___mcc_h3900 = _source356.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7057___mcc_h3901 = _source356.dtor_name;
                    } else if (_source356.is_MemberSelect) {
                      RAST._IExpr _7058___mcc_h3904 = _source356.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7059___mcc_h3905 = _source356.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7060___mcc_h3908 = _source356.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7061___mcc_h3909 = _source356.dtor_retType;
                      RAST._IExpr _7062___mcc_h3910 = _source356.dtor_body;
                    }
                  } else {
                  }
                } else if (_source355.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7063___mcc_h3914 = _source355.dtor_op2;
                  RAST._IExpr _7064___mcc_h3915 = _source355.dtor_left;
                  RAST._IExpr _7065___mcc_h3916 = _source355.dtor_right;
                  DAST.Format._IBinaryOpFormat _7066___mcc_h3917 = _source355.dtor_format2;
                } else if (_source355.is_TypeAscription) {
                  RAST._IExpr _7067___mcc_h3922 = _source355.dtor_left;
                  RAST._IType _7068___mcc_h3923 = _source355.dtor_tpe;
                } else if (_source355.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7069___mcc_h3926 = _source355.dtor_value;
                } else if (_source355.is_LiteralBool) {
                  bool _7070___mcc_h3928 = _source355.dtor_bvalue;
                } else if (_source355.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7071___mcc_h3930 = _source355.dtor_value;
                  bool _7072___mcc_h3931 = _source355.dtor_binary;
                } else if (_source355.is_DeclareVar) {
                  RAST._IDeclareType _7073___mcc_h3934 = _source355.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7074___mcc_h3935 = _source355.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7075___mcc_h3936 = _source355.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7076___mcc_h3937 = _source355.dtor_optRhs;
                } else if (_source355.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7077___mcc_h3942 = _source355.dtor_names;
                  RAST._IExpr _7078___mcc_h3943 = _source355.dtor_rhs;
                } else if (_source355.is_IfExpr) {
                  RAST._IExpr _7079___mcc_h3946 = _source355.dtor_cond;
                  RAST._IExpr _7080___mcc_h3947 = _source355.dtor_thn;
                  RAST._IExpr _7081___mcc_h3948 = _source355.dtor_els;
                } else if (_source355.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7082___mcc_h3952 = _source355.dtor_optCond;
                  RAST._IExpr _7083___mcc_h3953 = _source355.dtor_underlying;
                } else if (_source355.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7084___mcc_h3956 = _source355.dtor_name;
                  RAST._IExpr _7085___mcc_h3957 = _source355.dtor_range;
                  RAST._IExpr _7086___mcc_h3958 = _source355.dtor_body;
                } else if (_source355.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7087___mcc_h3962 = _source355.dtor_lbl;
                  RAST._IExpr _7088___mcc_h3963 = _source355.dtor_underlying;
                } else if (_source355.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7089___mcc_h3966 = _source355.dtor_optLbl;
                } else if (_source355.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7090___mcc_h3968 = _source355.dtor_optLbl;
                } else if (_source355.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7091___mcc_h3970 = _source355.dtor_optExpr;
                } else if (_source355.is_CallType) {
                  RAST._IExpr _7092___mcc_h3972 = _source355.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7093___mcc_h3973 = _source355.dtor_typeParameters;
                } else if (_source355.is_Call) {
                  RAST._IExpr _7094___mcc_h3976 = _source355.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7095___mcc_h3977 = _source355.dtor_arguments;
                } else if (_source355.is_Select) {
                  RAST._IExpr _7096___mcc_h3980 = _source355.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7097___mcc_h3981 = _source355.dtor_name;
                } else if (_source355.is_MemberSelect) {
                  RAST._IExpr _7098___mcc_h3984 = _source355.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7099___mcc_h3985 = _source355.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7100___mcc_h3988 = _source355.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7101___mcc_h3989 = _source355.dtor_retType;
                  RAST._IExpr _7102___mcc_h3990 = _source355.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_6986_field));
              if (_6985_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1841;
              DCOMP._IOwnership _out1842;
              (this).FromOwned(r, expectedOwnership, out _out1841, out _out1842);
              r = _out1841;
              resultingOwnership = _out1842;
              readIdents = _6994_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SetBuilder) {
          DAST._IType _7103___mcc_h131 = _source322.dtor_elemType;
          DAST._IType _7104_fieldType = _5017___mcc_h58;
          bool _7105_isDatatype = _5016___mcc_h57;
          bool _7106_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7107_field = _5014___mcc_h55;
          DAST._IExpression _7108_on = _5013___mcc_h54;
          {
            if (_7105_isDatatype) {
              RAST._IExpr _7109_onExpr;
              DCOMP._IOwnership _7110_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7111_recIdents;
              RAST._IExpr _out1843;
              DCOMP._IOwnership _out1844;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1845;
              (this).GenExpr(_7108_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1843, out _out1844, out _out1845);
              _7109_onExpr = _out1843;
              _7110_onOwned = _out1844;
              _7111_recIdents = _out1845;
              r = ((_7109_onExpr).Sel(DCOMP.__default.escapeName(_7107_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7112_typ;
              RAST._IType _out1846;
              _out1846 = (this).GenType(_7104_fieldType, DCOMP.GenTypeContext.@default());
              _7112_typ = _out1846;
              RAST._IExpr _out1847;
              DCOMP._IOwnership _out1848;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1847, out _out1848);
              r = _out1847;
              resultingOwnership = _out1848;
              readIdents = _7111_recIdents;
            } else {
              RAST._IExpr _7113_onExpr;
              DCOMP._IOwnership _7114_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7115_recIdents;
              RAST._IExpr _out1849;
              DCOMP._IOwnership _out1850;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1851;
              (this).GenExpr(_7108_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1849, out _out1850, out _out1851);
              _7113_onExpr = _out1849;
              _7114_onOwned = _out1850;
              _7115_recIdents = _out1851;
              r = _7113_onExpr;
              if (!object.Equals(_7113_onExpr, RAST.__default.self)) {
                RAST._IExpr _source357 = _7113_onExpr;
                if (_source357.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7116___mcc_h3994 = _source357.dtor_content;
                } else if (_source357.is_ExprFromType) {
                  RAST._IType _7117___mcc_h3996 = _source357.dtor_tpe;
                } else if (_source357.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7118___mcc_h3998 = _source357.dtor_name;
                } else if (_source357.is_Match) {
                  RAST._IExpr _7119___mcc_h4000 = _source357.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7120___mcc_h4001 = _source357.dtor_cases;
                } else if (_source357.is_StmtExpr) {
                  RAST._IExpr _7121___mcc_h4004 = _source357.dtor_stmt;
                  RAST._IExpr _7122___mcc_h4005 = _source357.dtor_rhs;
                } else if (_source357.is_Block) {
                  RAST._IExpr _7123___mcc_h4008 = _source357.dtor_underlying;
                } else if (_source357.is_StructBuild) {
                  RAST._IExpr _7124___mcc_h4010 = _source357.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7125___mcc_h4011 = _source357.dtor_assignments;
                } else if (_source357.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7126___mcc_h4014 = _source357.dtor_arguments;
                } else if (_source357.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7127___mcc_h4016 = _source357.dtor_op1;
                  RAST._IExpr _7128___mcc_h4017 = _source357.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7129___mcc_h4018 = _source357.dtor_format;
                  if (object.Equals(_7127___mcc_h4016, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source358 = _7128___mcc_h4017;
                    if (_source358.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7130___mcc_h4022 = _source358.dtor_content;
                    } else if (_source358.is_ExprFromType) {
                      RAST._IType _7131___mcc_h4024 = _source358.dtor_tpe;
                    } else if (_source358.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7132___mcc_h4026 = _source358.dtor_name;
                      if (object.Equals(_7132___mcc_h4026, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source358.is_Match) {
                      RAST._IExpr _7133___mcc_h4028 = _source358.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7134___mcc_h4029 = _source358.dtor_cases;
                    } else if (_source358.is_StmtExpr) {
                      RAST._IExpr _7135___mcc_h4032 = _source358.dtor_stmt;
                      RAST._IExpr _7136___mcc_h4033 = _source358.dtor_rhs;
                    } else if (_source358.is_Block) {
                      RAST._IExpr _7137___mcc_h4036 = _source358.dtor_underlying;
                    } else if (_source358.is_StructBuild) {
                      RAST._IExpr _7138___mcc_h4038 = _source358.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7139___mcc_h4039 = _source358.dtor_assignments;
                    } else if (_source358.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7140___mcc_h4042 = _source358.dtor_arguments;
                    } else if (_source358.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7141___mcc_h4044 = _source358.dtor_op1;
                      RAST._IExpr _7142___mcc_h4045 = _source358.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7143___mcc_h4046 = _source358.dtor_format;
                    } else if (_source358.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7144___mcc_h4050 = _source358.dtor_op2;
                      RAST._IExpr _7145___mcc_h4051 = _source358.dtor_left;
                      RAST._IExpr _7146___mcc_h4052 = _source358.dtor_right;
                      DAST.Format._IBinaryOpFormat _7147___mcc_h4053 = _source358.dtor_format2;
                    } else if (_source358.is_TypeAscription) {
                      RAST._IExpr _7148___mcc_h4058 = _source358.dtor_left;
                      RAST._IType _7149___mcc_h4059 = _source358.dtor_tpe;
                    } else if (_source358.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7150___mcc_h4062 = _source358.dtor_value;
                    } else if (_source358.is_LiteralBool) {
                      bool _7151___mcc_h4064 = _source358.dtor_bvalue;
                    } else if (_source358.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7152___mcc_h4066 = _source358.dtor_value;
                      bool _7153___mcc_h4067 = _source358.dtor_binary;
                    } else if (_source358.is_DeclareVar) {
                      RAST._IDeclareType _7154___mcc_h4070 = _source358.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7155___mcc_h4071 = _source358.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7156___mcc_h4072 = _source358.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7157___mcc_h4073 = _source358.dtor_optRhs;
                    } else if (_source358.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7158___mcc_h4078 = _source358.dtor_names;
                      RAST._IExpr _7159___mcc_h4079 = _source358.dtor_rhs;
                    } else if (_source358.is_IfExpr) {
                      RAST._IExpr _7160___mcc_h4082 = _source358.dtor_cond;
                      RAST._IExpr _7161___mcc_h4083 = _source358.dtor_thn;
                      RAST._IExpr _7162___mcc_h4084 = _source358.dtor_els;
                    } else if (_source358.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7163___mcc_h4088 = _source358.dtor_optCond;
                      RAST._IExpr _7164___mcc_h4089 = _source358.dtor_underlying;
                    } else if (_source358.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7165___mcc_h4092 = _source358.dtor_name;
                      RAST._IExpr _7166___mcc_h4093 = _source358.dtor_range;
                      RAST._IExpr _7167___mcc_h4094 = _source358.dtor_body;
                    } else if (_source358.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7168___mcc_h4098 = _source358.dtor_lbl;
                      RAST._IExpr _7169___mcc_h4099 = _source358.dtor_underlying;
                    } else if (_source358.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7170___mcc_h4102 = _source358.dtor_optLbl;
                    } else if (_source358.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7171___mcc_h4104 = _source358.dtor_optLbl;
                    } else if (_source358.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7172___mcc_h4106 = _source358.dtor_optExpr;
                    } else if (_source358.is_CallType) {
                      RAST._IExpr _7173___mcc_h4108 = _source358.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7174___mcc_h4109 = _source358.dtor_typeParameters;
                    } else if (_source358.is_Call) {
                      RAST._IExpr _7175___mcc_h4112 = _source358.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7176___mcc_h4113 = _source358.dtor_arguments;
                    } else if (_source358.is_Select) {
                      RAST._IExpr _7177___mcc_h4116 = _source358.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7178___mcc_h4117 = _source358.dtor_name;
                    } else if (_source358.is_MemberSelect) {
                      RAST._IExpr _7179___mcc_h4120 = _source358.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7180___mcc_h4121 = _source358.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7181___mcc_h4124 = _source358.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7182___mcc_h4125 = _source358.dtor_retType;
                      RAST._IExpr _7183___mcc_h4126 = _source358.dtor_body;
                    }
                  } else {
                  }
                } else if (_source357.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7184___mcc_h4130 = _source357.dtor_op2;
                  RAST._IExpr _7185___mcc_h4131 = _source357.dtor_left;
                  RAST._IExpr _7186___mcc_h4132 = _source357.dtor_right;
                  DAST.Format._IBinaryOpFormat _7187___mcc_h4133 = _source357.dtor_format2;
                } else if (_source357.is_TypeAscription) {
                  RAST._IExpr _7188___mcc_h4138 = _source357.dtor_left;
                  RAST._IType _7189___mcc_h4139 = _source357.dtor_tpe;
                } else if (_source357.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7190___mcc_h4142 = _source357.dtor_value;
                } else if (_source357.is_LiteralBool) {
                  bool _7191___mcc_h4144 = _source357.dtor_bvalue;
                } else if (_source357.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7192___mcc_h4146 = _source357.dtor_value;
                  bool _7193___mcc_h4147 = _source357.dtor_binary;
                } else if (_source357.is_DeclareVar) {
                  RAST._IDeclareType _7194___mcc_h4150 = _source357.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7195___mcc_h4151 = _source357.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7196___mcc_h4152 = _source357.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7197___mcc_h4153 = _source357.dtor_optRhs;
                } else if (_source357.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7198___mcc_h4158 = _source357.dtor_names;
                  RAST._IExpr _7199___mcc_h4159 = _source357.dtor_rhs;
                } else if (_source357.is_IfExpr) {
                  RAST._IExpr _7200___mcc_h4162 = _source357.dtor_cond;
                  RAST._IExpr _7201___mcc_h4163 = _source357.dtor_thn;
                  RAST._IExpr _7202___mcc_h4164 = _source357.dtor_els;
                } else if (_source357.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7203___mcc_h4168 = _source357.dtor_optCond;
                  RAST._IExpr _7204___mcc_h4169 = _source357.dtor_underlying;
                } else if (_source357.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7205___mcc_h4172 = _source357.dtor_name;
                  RAST._IExpr _7206___mcc_h4173 = _source357.dtor_range;
                  RAST._IExpr _7207___mcc_h4174 = _source357.dtor_body;
                } else if (_source357.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7208___mcc_h4178 = _source357.dtor_lbl;
                  RAST._IExpr _7209___mcc_h4179 = _source357.dtor_underlying;
                } else if (_source357.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7210___mcc_h4182 = _source357.dtor_optLbl;
                } else if (_source357.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7211___mcc_h4184 = _source357.dtor_optLbl;
                } else if (_source357.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7212___mcc_h4186 = _source357.dtor_optExpr;
                } else if (_source357.is_CallType) {
                  RAST._IExpr _7213___mcc_h4188 = _source357.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7214___mcc_h4189 = _source357.dtor_typeParameters;
                } else if (_source357.is_Call) {
                  RAST._IExpr _7215___mcc_h4192 = _source357.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7216___mcc_h4193 = _source357.dtor_arguments;
                } else if (_source357.is_Select) {
                  RAST._IExpr _7217___mcc_h4196 = _source357.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7218___mcc_h4197 = _source357.dtor_name;
                } else if (_source357.is_MemberSelect) {
                  RAST._IExpr _7219___mcc_h4200 = _source357.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7220___mcc_h4201 = _source357.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7221___mcc_h4204 = _source357.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7222___mcc_h4205 = _source357.dtor_retType;
                  RAST._IExpr _7223___mcc_h4206 = _source357.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7107_field));
              if (_7106_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1852;
              DCOMP._IOwnership _out1853;
              (this).FromOwned(r, expectedOwnership, out _out1852, out _out1853);
              r = _out1852;
              resultingOwnership = _out1853;
              readIdents = _7115_recIdents;
            }
            return ;
          }
        } else if (_source322.is_ToMultiset) {
          DAST._IExpression _7224___mcc_h133 = _source322.dtor_ToMultiset_i_a0;
          DAST._IType _7225_fieldType = _5017___mcc_h58;
          bool _7226_isDatatype = _5016___mcc_h57;
          bool _7227_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7228_field = _5014___mcc_h55;
          DAST._IExpression _7229_on = _5013___mcc_h54;
          {
            if (_7226_isDatatype) {
              RAST._IExpr _7230_onExpr;
              DCOMP._IOwnership _7231_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7232_recIdents;
              RAST._IExpr _out1854;
              DCOMP._IOwnership _out1855;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1856;
              (this).GenExpr(_7229_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1854, out _out1855, out _out1856);
              _7230_onExpr = _out1854;
              _7231_onOwned = _out1855;
              _7232_recIdents = _out1856;
              r = ((_7230_onExpr).Sel(DCOMP.__default.escapeName(_7228_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7233_typ;
              RAST._IType _out1857;
              _out1857 = (this).GenType(_7225_fieldType, DCOMP.GenTypeContext.@default());
              _7233_typ = _out1857;
              RAST._IExpr _out1858;
              DCOMP._IOwnership _out1859;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1858, out _out1859);
              r = _out1858;
              resultingOwnership = _out1859;
              readIdents = _7232_recIdents;
            } else {
              RAST._IExpr _7234_onExpr;
              DCOMP._IOwnership _7235_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7236_recIdents;
              RAST._IExpr _out1860;
              DCOMP._IOwnership _out1861;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1862;
              (this).GenExpr(_7229_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1860, out _out1861, out _out1862);
              _7234_onExpr = _out1860;
              _7235_onOwned = _out1861;
              _7236_recIdents = _out1862;
              r = _7234_onExpr;
              if (!object.Equals(_7234_onExpr, RAST.__default.self)) {
                RAST._IExpr _source359 = _7234_onExpr;
                if (_source359.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7237___mcc_h4210 = _source359.dtor_content;
                } else if (_source359.is_ExprFromType) {
                  RAST._IType _7238___mcc_h4212 = _source359.dtor_tpe;
                } else if (_source359.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7239___mcc_h4214 = _source359.dtor_name;
                } else if (_source359.is_Match) {
                  RAST._IExpr _7240___mcc_h4216 = _source359.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7241___mcc_h4217 = _source359.dtor_cases;
                } else if (_source359.is_StmtExpr) {
                  RAST._IExpr _7242___mcc_h4220 = _source359.dtor_stmt;
                  RAST._IExpr _7243___mcc_h4221 = _source359.dtor_rhs;
                } else if (_source359.is_Block) {
                  RAST._IExpr _7244___mcc_h4224 = _source359.dtor_underlying;
                } else if (_source359.is_StructBuild) {
                  RAST._IExpr _7245___mcc_h4226 = _source359.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7246___mcc_h4227 = _source359.dtor_assignments;
                } else if (_source359.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7247___mcc_h4230 = _source359.dtor_arguments;
                } else if (_source359.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7248___mcc_h4232 = _source359.dtor_op1;
                  RAST._IExpr _7249___mcc_h4233 = _source359.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7250___mcc_h4234 = _source359.dtor_format;
                  if (object.Equals(_7248___mcc_h4232, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source360 = _7249___mcc_h4233;
                    if (_source360.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7251___mcc_h4238 = _source360.dtor_content;
                    } else if (_source360.is_ExprFromType) {
                      RAST._IType _7252___mcc_h4240 = _source360.dtor_tpe;
                    } else if (_source360.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7253___mcc_h4242 = _source360.dtor_name;
                      if (object.Equals(_7253___mcc_h4242, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source360.is_Match) {
                      RAST._IExpr _7254___mcc_h4244 = _source360.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7255___mcc_h4245 = _source360.dtor_cases;
                    } else if (_source360.is_StmtExpr) {
                      RAST._IExpr _7256___mcc_h4248 = _source360.dtor_stmt;
                      RAST._IExpr _7257___mcc_h4249 = _source360.dtor_rhs;
                    } else if (_source360.is_Block) {
                      RAST._IExpr _7258___mcc_h4252 = _source360.dtor_underlying;
                    } else if (_source360.is_StructBuild) {
                      RAST._IExpr _7259___mcc_h4254 = _source360.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7260___mcc_h4255 = _source360.dtor_assignments;
                    } else if (_source360.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7261___mcc_h4258 = _source360.dtor_arguments;
                    } else if (_source360.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7262___mcc_h4260 = _source360.dtor_op1;
                      RAST._IExpr _7263___mcc_h4261 = _source360.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7264___mcc_h4262 = _source360.dtor_format;
                    } else if (_source360.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7265___mcc_h4266 = _source360.dtor_op2;
                      RAST._IExpr _7266___mcc_h4267 = _source360.dtor_left;
                      RAST._IExpr _7267___mcc_h4268 = _source360.dtor_right;
                      DAST.Format._IBinaryOpFormat _7268___mcc_h4269 = _source360.dtor_format2;
                    } else if (_source360.is_TypeAscription) {
                      RAST._IExpr _7269___mcc_h4274 = _source360.dtor_left;
                      RAST._IType _7270___mcc_h4275 = _source360.dtor_tpe;
                    } else if (_source360.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7271___mcc_h4278 = _source360.dtor_value;
                    } else if (_source360.is_LiteralBool) {
                      bool _7272___mcc_h4280 = _source360.dtor_bvalue;
                    } else if (_source360.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7273___mcc_h4282 = _source360.dtor_value;
                      bool _7274___mcc_h4283 = _source360.dtor_binary;
                    } else if (_source360.is_DeclareVar) {
                      RAST._IDeclareType _7275___mcc_h4286 = _source360.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7276___mcc_h4287 = _source360.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7277___mcc_h4288 = _source360.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7278___mcc_h4289 = _source360.dtor_optRhs;
                    } else if (_source360.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7279___mcc_h4294 = _source360.dtor_names;
                      RAST._IExpr _7280___mcc_h4295 = _source360.dtor_rhs;
                    } else if (_source360.is_IfExpr) {
                      RAST._IExpr _7281___mcc_h4298 = _source360.dtor_cond;
                      RAST._IExpr _7282___mcc_h4299 = _source360.dtor_thn;
                      RAST._IExpr _7283___mcc_h4300 = _source360.dtor_els;
                    } else if (_source360.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7284___mcc_h4304 = _source360.dtor_optCond;
                      RAST._IExpr _7285___mcc_h4305 = _source360.dtor_underlying;
                    } else if (_source360.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7286___mcc_h4308 = _source360.dtor_name;
                      RAST._IExpr _7287___mcc_h4309 = _source360.dtor_range;
                      RAST._IExpr _7288___mcc_h4310 = _source360.dtor_body;
                    } else if (_source360.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7289___mcc_h4314 = _source360.dtor_lbl;
                      RAST._IExpr _7290___mcc_h4315 = _source360.dtor_underlying;
                    } else if (_source360.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7291___mcc_h4318 = _source360.dtor_optLbl;
                    } else if (_source360.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7292___mcc_h4320 = _source360.dtor_optLbl;
                    } else if (_source360.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7293___mcc_h4322 = _source360.dtor_optExpr;
                    } else if (_source360.is_CallType) {
                      RAST._IExpr _7294___mcc_h4324 = _source360.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7295___mcc_h4325 = _source360.dtor_typeParameters;
                    } else if (_source360.is_Call) {
                      RAST._IExpr _7296___mcc_h4328 = _source360.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7297___mcc_h4329 = _source360.dtor_arguments;
                    } else if (_source360.is_Select) {
                      RAST._IExpr _7298___mcc_h4332 = _source360.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7299___mcc_h4333 = _source360.dtor_name;
                    } else if (_source360.is_MemberSelect) {
                      RAST._IExpr _7300___mcc_h4336 = _source360.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7301___mcc_h4337 = _source360.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7302___mcc_h4340 = _source360.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7303___mcc_h4341 = _source360.dtor_retType;
                      RAST._IExpr _7304___mcc_h4342 = _source360.dtor_body;
                    }
                  } else {
                  }
                } else if (_source359.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7305___mcc_h4346 = _source359.dtor_op2;
                  RAST._IExpr _7306___mcc_h4347 = _source359.dtor_left;
                  RAST._IExpr _7307___mcc_h4348 = _source359.dtor_right;
                  DAST.Format._IBinaryOpFormat _7308___mcc_h4349 = _source359.dtor_format2;
                } else if (_source359.is_TypeAscription) {
                  RAST._IExpr _7309___mcc_h4354 = _source359.dtor_left;
                  RAST._IType _7310___mcc_h4355 = _source359.dtor_tpe;
                } else if (_source359.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7311___mcc_h4358 = _source359.dtor_value;
                } else if (_source359.is_LiteralBool) {
                  bool _7312___mcc_h4360 = _source359.dtor_bvalue;
                } else if (_source359.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7313___mcc_h4362 = _source359.dtor_value;
                  bool _7314___mcc_h4363 = _source359.dtor_binary;
                } else if (_source359.is_DeclareVar) {
                  RAST._IDeclareType _7315___mcc_h4366 = _source359.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7316___mcc_h4367 = _source359.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7317___mcc_h4368 = _source359.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7318___mcc_h4369 = _source359.dtor_optRhs;
                } else if (_source359.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7319___mcc_h4374 = _source359.dtor_names;
                  RAST._IExpr _7320___mcc_h4375 = _source359.dtor_rhs;
                } else if (_source359.is_IfExpr) {
                  RAST._IExpr _7321___mcc_h4378 = _source359.dtor_cond;
                  RAST._IExpr _7322___mcc_h4379 = _source359.dtor_thn;
                  RAST._IExpr _7323___mcc_h4380 = _source359.dtor_els;
                } else if (_source359.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7324___mcc_h4384 = _source359.dtor_optCond;
                  RAST._IExpr _7325___mcc_h4385 = _source359.dtor_underlying;
                } else if (_source359.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7326___mcc_h4388 = _source359.dtor_name;
                  RAST._IExpr _7327___mcc_h4389 = _source359.dtor_range;
                  RAST._IExpr _7328___mcc_h4390 = _source359.dtor_body;
                } else if (_source359.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7329___mcc_h4394 = _source359.dtor_lbl;
                  RAST._IExpr _7330___mcc_h4395 = _source359.dtor_underlying;
                } else if (_source359.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7331___mcc_h4398 = _source359.dtor_optLbl;
                } else if (_source359.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7332___mcc_h4400 = _source359.dtor_optLbl;
                } else if (_source359.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7333___mcc_h4402 = _source359.dtor_optExpr;
                } else if (_source359.is_CallType) {
                  RAST._IExpr _7334___mcc_h4404 = _source359.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7335___mcc_h4405 = _source359.dtor_typeParameters;
                } else if (_source359.is_Call) {
                  RAST._IExpr _7336___mcc_h4408 = _source359.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7337___mcc_h4409 = _source359.dtor_arguments;
                } else if (_source359.is_Select) {
                  RAST._IExpr _7338___mcc_h4412 = _source359.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7339___mcc_h4413 = _source359.dtor_name;
                } else if (_source359.is_MemberSelect) {
                  RAST._IExpr _7340___mcc_h4416 = _source359.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7341___mcc_h4417 = _source359.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7342___mcc_h4420 = _source359.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7343___mcc_h4421 = _source359.dtor_retType;
                  RAST._IExpr _7344___mcc_h4422 = _source359.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7228_field));
              if (_7227_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1863;
              DCOMP._IOwnership _out1864;
              (this).FromOwned(r, expectedOwnership, out _out1863, out _out1864);
              r = _out1863;
              resultingOwnership = _out1864;
              readIdents = _7236_recIdents;
            }
            return ;
          }
        } else if (_source322.is_This) {
          DAST._IType _7345_fieldType = _5017___mcc_h58;
          bool _7346_isDatatype = _5016___mcc_h57;
          bool _7347_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7348_field = _5014___mcc_h55;
          DAST._IExpression _7349_on = _5013___mcc_h54;
          {
            if (_7346_isDatatype) {
              RAST._IExpr _7350_onExpr;
              DCOMP._IOwnership _7351_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7352_recIdents;
              RAST._IExpr _out1865;
              DCOMP._IOwnership _out1866;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1867;
              (this).GenExpr(_7349_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1865, out _out1866, out _out1867);
              _7350_onExpr = _out1865;
              _7351_onOwned = _out1866;
              _7352_recIdents = _out1867;
              r = ((_7350_onExpr).Sel(DCOMP.__default.escapeName(_7348_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7353_typ;
              RAST._IType _out1868;
              _out1868 = (this).GenType(_7345_fieldType, DCOMP.GenTypeContext.@default());
              _7353_typ = _out1868;
              RAST._IExpr _out1869;
              DCOMP._IOwnership _out1870;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1869, out _out1870);
              r = _out1869;
              resultingOwnership = _out1870;
              readIdents = _7352_recIdents;
            } else {
              RAST._IExpr _7354_onExpr;
              DCOMP._IOwnership _7355_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7356_recIdents;
              RAST._IExpr _out1871;
              DCOMP._IOwnership _out1872;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1873;
              (this).GenExpr(_7349_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1871, out _out1872, out _out1873);
              _7354_onExpr = _out1871;
              _7355_onOwned = _out1872;
              _7356_recIdents = _out1873;
              r = _7354_onExpr;
              if (!object.Equals(_7354_onExpr, RAST.__default.self)) {
                RAST._IExpr _source361 = _7354_onExpr;
                if (_source361.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7357___mcc_h4426 = _source361.dtor_content;
                } else if (_source361.is_ExprFromType) {
                  RAST._IType _7358___mcc_h4428 = _source361.dtor_tpe;
                } else if (_source361.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7359___mcc_h4430 = _source361.dtor_name;
                } else if (_source361.is_Match) {
                  RAST._IExpr _7360___mcc_h4432 = _source361.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7361___mcc_h4433 = _source361.dtor_cases;
                } else if (_source361.is_StmtExpr) {
                  RAST._IExpr _7362___mcc_h4436 = _source361.dtor_stmt;
                  RAST._IExpr _7363___mcc_h4437 = _source361.dtor_rhs;
                } else if (_source361.is_Block) {
                  RAST._IExpr _7364___mcc_h4440 = _source361.dtor_underlying;
                } else if (_source361.is_StructBuild) {
                  RAST._IExpr _7365___mcc_h4442 = _source361.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7366___mcc_h4443 = _source361.dtor_assignments;
                } else if (_source361.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7367___mcc_h4446 = _source361.dtor_arguments;
                } else if (_source361.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7368___mcc_h4448 = _source361.dtor_op1;
                  RAST._IExpr _7369___mcc_h4449 = _source361.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7370___mcc_h4450 = _source361.dtor_format;
                  if (object.Equals(_7368___mcc_h4448, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source362 = _7369___mcc_h4449;
                    if (_source362.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7371___mcc_h4454 = _source362.dtor_content;
                    } else if (_source362.is_ExprFromType) {
                      RAST._IType _7372___mcc_h4456 = _source362.dtor_tpe;
                    } else if (_source362.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7373___mcc_h4458 = _source362.dtor_name;
                      if (object.Equals(_7373___mcc_h4458, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source362.is_Match) {
                      RAST._IExpr _7374___mcc_h4460 = _source362.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7375___mcc_h4461 = _source362.dtor_cases;
                    } else if (_source362.is_StmtExpr) {
                      RAST._IExpr _7376___mcc_h4464 = _source362.dtor_stmt;
                      RAST._IExpr _7377___mcc_h4465 = _source362.dtor_rhs;
                    } else if (_source362.is_Block) {
                      RAST._IExpr _7378___mcc_h4468 = _source362.dtor_underlying;
                    } else if (_source362.is_StructBuild) {
                      RAST._IExpr _7379___mcc_h4470 = _source362.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7380___mcc_h4471 = _source362.dtor_assignments;
                    } else if (_source362.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7381___mcc_h4474 = _source362.dtor_arguments;
                    } else if (_source362.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7382___mcc_h4476 = _source362.dtor_op1;
                      RAST._IExpr _7383___mcc_h4477 = _source362.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7384___mcc_h4478 = _source362.dtor_format;
                    } else if (_source362.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7385___mcc_h4482 = _source362.dtor_op2;
                      RAST._IExpr _7386___mcc_h4483 = _source362.dtor_left;
                      RAST._IExpr _7387___mcc_h4484 = _source362.dtor_right;
                      DAST.Format._IBinaryOpFormat _7388___mcc_h4485 = _source362.dtor_format2;
                    } else if (_source362.is_TypeAscription) {
                      RAST._IExpr _7389___mcc_h4490 = _source362.dtor_left;
                      RAST._IType _7390___mcc_h4491 = _source362.dtor_tpe;
                    } else if (_source362.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7391___mcc_h4494 = _source362.dtor_value;
                    } else if (_source362.is_LiteralBool) {
                      bool _7392___mcc_h4496 = _source362.dtor_bvalue;
                    } else if (_source362.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7393___mcc_h4498 = _source362.dtor_value;
                      bool _7394___mcc_h4499 = _source362.dtor_binary;
                    } else if (_source362.is_DeclareVar) {
                      RAST._IDeclareType _7395___mcc_h4502 = _source362.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7396___mcc_h4503 = _source362.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7397___mcc_h4504 = _source362.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7398___mcc_h4505 = _source362.dtor_optRhs;
                    } else if (_source362.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7399___mcc_h4510 = _source362.dtor_names;
                      RAST._IExpr _7400___mcc_h4511 = _source362.dtor_rhs;
                    } else if (_source362.is_IfExpr) {
                      RAST._IExpr _7401___mcc_h4514 = _source362.dtor_cond;
                      RAST._IExpr _7402___mcc_h4515 = _source362.dtor_thn;
                      RAST._IExpr _7403___mcc_h4516 = _source362.dtor_els;
                    } else if (_source362.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7404___mcc_h4520 = _source362.dtor_optCond;
                      RAST._IExpr _7405___mcc_h4521 = _source362.dtor_underlying;
                    } else if (_source362.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7406___mcc_h4524 = _source362.dtor_name;
                      RAST._IExpr _7407___mcc_h4525 = _source362.dtor_range;
                      RAST._IExpr _7408___mcc_h4526 = _source362.dtor_body;
                    } else if (_source362.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7409___mcc_h4530 = _source362.dtor_lbl;
                      RAST._IExpr _7410___mcc_h4531 = _source362.dtor_underlying;
                    } else if (_source362.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7411___mcc_h4534 = _source362.dtor_optLbl;
                    } else if (_source362.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7412___mcc_h4536 = _source362.dtor_optLbl;
                    } else if (_source362.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7413___mcc_h4538 = _source362.dtor_optExpr;
                    } else if (_source362.is_CallType) {
                      RAST._IExpr _7414___mcc_h4540 = _source362.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7415___mcc_h4541 = _source362.dtor_typeParameters;
                    } else if (_source362.is_Call) {
                      RAST._IExpr _7416___mcc_h4544 = _source362.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7417___mcc_h4545 = _source362.dtor_arguments;
                    } else if (_source362.is_Select) {
                      RAST._IExpr _7418___mcc_h4548 = _source362.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7419___mcc_h4549 = _source362.dtor_name;
                    } else if (_source362.is_MemberSelect) {
                      RAST._IExpr _7420___mcc_h4552 = _source362.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7421___mcc_h4553 = _source362.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7422___mcc_h4556 = _source362.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7423___mcc_h4557 = _source362.dtor_retType;
                      RAST._IExpr _7424___mcc_h4558 = _source362.dtor_body;
                    }
                  } else {
                  }
                } else if (_source361.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7425___mcc_h4562 = _source361.dtor_op2;
                  RAST._IExpr _7426___mcc_h4563 = _source361.dtor_left;
                  RAST._IExpr _7427___mcc_h4564 = _source361.dtor_right;
                  DAST.Format._IBinaryOpFormat _7428___mcc_h4565 = _source361.dtor_format2;
                } else if (_source361.is_TypeAscription) {
                  RAST._IExpr _7429___mcc_h4570 = _source361.dtor_left;
                  RAST._IType _7430___mcc_h4571 = _source361.dtor_tpe;
                } else if (_source361.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7431___mcc_h4574 = _source361.dtor_value;
                } else if (_source361.is_LiteralBool) {
                  bool _7432___mcc_h4576 = _source361.dtor_bvalue;
                } else if (_source361.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7433___mcc_h4578 = _source361.dtor_value;
                  bool _7434___mcc_h4579 = _source361.dtor_binary;
                } else if (_source361.is_DeclareVar) {
                  RAST._IDeclareType _7435___mcc_h4582 = _source361.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7436___mcc_h4583 = _source361.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7437___mcc_h4584 = _source361.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7438___mcc_h4585 = _source361.dtor_optRhs;
                } else if (_source361.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7439___mcc_h4590 = _source361.dtor_names;
                  RAST._IExpr _7440___mcc_h4591 = _source361.dtor_rhs;
                } else if (_source361.is_IfExpr) {
                  RAST._IExpr _7441___mcc_h4594 = _source361.dtor_cond;
                  RAST._IExpr _7442___mcc_h4595 = _source361.dtor_thn;
                  RAST._IExpr _7443___mcc_h4596 = _source361.dtor_els;
                } else if (_source361.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7444___mcc_h4600 = _source361.dtor_optCond;
                  RAST._IExpr _7445___mcc_h4601 = _source361.dtor_underlying;
                } else if (_source361.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7446___mcc_h4604 = _source361.dtor_name;
                  RAST._IExpr _7447___mcc_h4605 = _source361.dtor_range;
                  RAST._IExpr _7448___mcc_h4606 = _source361.dtor_body;
                } else if (_source361.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7449___mcc_h4610 = _source361.dtor_lbl;
                  RAST._IExpr _7450___mcc_h4611 = _source361.dtor_underlying;
                } else if (_source361.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7451___mcc_h4614 = _source361.dtor_optLbl;
                } else if (_source361.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7452___mcc_h4616 = _source361.dtor_optLbl;
                } else if (_source361.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7453___mcc_h4618 = _source361.dtor_optExpr;
                } else if (_source361.is_CallType) {
                  RAST._IExpr _7454___mcc_h4620 = _source361.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7455___mcc_h4621 = _source361.dtor_typeParameters;
                } else if (_source361.is_Call) {
                  RAST._IExpr _7456___mcc_h4624 = _source361.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7457___mcc_h4625 = _source361.dtor_arguments;
                } else if (_source361.is_Select) {
                  RAST._IExpr _7458___mcc_h4628 = _source361.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7459___mcc_h4629 = _source361.dtor_name;
                } else if (_source361.is_MemberSelect) {
                  RAST._IExpr _7460___mcc_h4632 = _source361.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7461___mcc_h4633 = _source361.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7462___mcc_h4636 = _source361.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7463___mcc_h4637 = _source361.dtor_retType;
                  RAST._IExpr _7464___mcc_h4638 = _source361.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7348_field));
              if (_7347_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1874;
              DCOMP._IOwnership _out1875;
              (this).FromOwned(r, expectedOwnership, out _out1874, out _out1875);
              r = _out1874;
              resultingOwnership = _out1875;
              readIdents = _7356_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Ite) {
          DAST._IExpression _7465___mcc_h135 = _source322.dtor_cond;
          DAST._IExpression _7466___mcc_h136 = _source322.dtor_thn;
          DAST._IExpression _7467___mcc_h137 = _source322.dtor_els;
          DAST._IType _7468_fieldType = _5017___mcc_h58;
          bool _7469_isDatatype = _5016___mcc_h57;
          bool _7470_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7471_field = _5014___mcc_h55;
          DAST._IExpression _7472_on = _5013___mcc_h54;
          {
            if (_7469_isDatatype) {
              RAST._IExpr _7473_onExpr;
              DCOMP._IOwnership _7474_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7475_recIdents;
              RAST._IExpr _out1876;
              DCOMP._IOwnership _out1877;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1878;
              (this).GenExpr(_7472_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1876, out _out1877, out _out1878);
              _7473_onExpr = _out1876;
              _7474_onOwned = _out1877;
              _7475_recIdents = _out1878;
              r = ((_7473_onExpr).Sel(DCOMP.__default.escapeName(_7471_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7476_typ;
              RAST._IType _out1879;
              _out1879 = (this).GenType(_7468_fieldType, DCOMP.GenTypeContext.@default());
              _7476_typ = _out1879;
              RAST._IExpr _out1880;
              DCOMP._IOwnership _out1881;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1880, out _out1881);
              r = _out1880;
              resultingOwnership = _out1881;
              readIdents = _7475_recIdents;
            } else {
              RAST._IExpr _7477_onExpr;
              DCOMP._IOwnership _7478_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7479_recIdents;
              RAST._IExpr _out1882;
              DCOMP._IOwnership _out1883;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1884;
              (this).GenExpr(_7472_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1882, out _out1883, out _out1884);
              _7477_onExpr = _out1882;
              _7478_onOwned = _out1883;
              _7479_recIdents = _out1884;
              r = _7477_onExpr;
              if (!object.Equals(_7477_onExpr, RAST.__default.self)) {
                RAST._IExpr _source363 = _7477_onExpr;
                if (_source363.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7480___mcc_h4642 = _source363.dtor_content;
                } else if (_source363.is_ExprFromType) {
                  RAST._IType _7481___mcc_h4644 = _source363.dtor_tpe;
                } else if (_source363.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7482___mcc_h4646 = _source363.dtor_name;
                } else if (_source363.is_Match) {
                  RAST._IExpr _7483___mcc_h4648 = _source363.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7484___mcc_h4649 = _source363.dtor_cases;
                } else if (_source363.is_StmtExpr) {
                  RAST._IExpr _7485___mcc_h4652 = _source363.dtor_stmt;
                  RAST._IExpr _7486___mcc_h4653 = _source363.dtor_rhs;
                } else if (_source363.is_Block) {
                  RAST._IExpr _7487___mcc_h4656 = _source363.dtor_underlying;
                } else if (_source363.is_StructBuild) {
                  RAST._IExpr _7488___mcc_h4658 = _source363.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7489___mcc_h4659 = _source363.dtor_assignments;
                } else if (_source363.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7490___mcc_h4662 = _source363.dtor_arguments;
                } else if (_source363.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7491___mcc_h4664 = _source363.dtor_op1;
                  RAST._IExpr _7492___mcc_h4665 = _source363.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7493___mcc_h4666 = _source363.dtor_format;
                  if (object.Equals(_7491___mcc_h4664, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source364 = _7492___mcc_h4665;
                    if (_source364.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7494___mcc_h4670 = _source364.dtor_content;
                    } else if (_source364.is_ExprFromType) {
                      RAST._IType _7495___mcc_h4672 = _source364.dtor_tpe;
                    } else if (_source364.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7496___mcc_h4674 = _source364.dtor_name;
                      if (object.Equals(_7496___mcc_h4674, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source364.is_Match) {
                      RAST._IExpr _7497___mcc_h4676 = _source364.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7498___mcc_h4677 = _source364.dtor_cases;
                    } else if (_source364.is_StmtExpr) {
                      RAST._IExpr _7499___mcc_h4680 = _source364.dtor_stmt;
                      RAST._IExpr _7500___mcc_h4681 = _source364.dtor_rhs;
                    } else if (_source364.is_Block) {
                      RAST._IExpr _7501___mcc_h4684 = _source364.dtor_underlying;
                    } else if (_source364.is_StructBuild) {
                      RAST._IExpr _7502___mcc_h4686 = _source364.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7503___mcc_h4687 = _source364.dtor_assignments;
                    } else if (_source364.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7504___mcc_h4690 = _source364.dtor_arguments;
                    } else if (_source364.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7505___mcc_h4692 = _source364.dtor_op1;
                      RAST._IExpr _7506___mcc_h4693 = _source364.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7507___mcc_h4694 = _source364.dtor_format;
                    } else if (_source364.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7508___mcc_h4698 = _source364.dtor_op2;
                      RAST._IExpr _7509___mcc_h4699 = _source364.dtor_left;
                      RAST._IExpr _7510___mcc_h4700 = _source364.dtor_right;
                      DAST.Format._IBinaryOpFormat _7511___mcc_h4701 = _source364.dtor_format2;
                    } else if (_source364.is_TypeAscription) {
                      RAST._IExpr _7512___mcc_h4706 = _source364.dtor_left;
                      RAST._IType _7513___mcc_h4707 = _source364.dtor_tpe;
                    } else if (_source364.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7514___mcc_h4710 = _source364.dtor_value;
                    } else if (_source364.is_LiteralBool) {
                      bool _7515___mcc_h4712 = _source364.dtor_bvalue;
                    } else if (_source364.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7516___mcc_h4714 = _source364.dtor_value;
                      bool _7517___mcc_h4715 = _source364.dtor_binary;
                    } else if (_source364.is_DeclareVar) {
                      RAST._IDeclareType _7518___mcc_h4718 = _source364.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7519___mcc_h4719 = _source364.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7520___mcc_h4720 = _source364.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7521___mcc_h4721 = _source364.dtor_optRhs;
                    } else if (_source364.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7522___mcc_h4726 = _source364.dtor_names;
                      RAST._IExpr _7523___mcc_h4727 = _source364.dtor_rhs;
                    } else if (_source364.is_IfExpr) {
                      RAST._IExpr _7524___mcc_h4730 = _source364.dtor_cond;
                      RAST._IExpr _7525___mcc_h4731 = _source364.dtor_thn;
                      RAST._IExpr _7526___mcc_h4732 = _source364.dtor_els;
                    } else if (_source364.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7527___mcc_h4736 = _source364.dtor_optCond;
                      RAST._IExpr _7528___mcc_h4737 = _source364.dtor_underlying;
                    } else if (_source364.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7529___mcc_h4740 = _source364.dtor_name;
                      RAST._IExpr _7530___mcc_h4741 = _source364.dtor_range;
                      RAST._IExpr _7531___mcc_h4742 = _source364.dtor_body;
                    } else if (_source364.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7532___mcc_h4746 = _source364.dtor_lbl;
                      RAST._IExpr _7533___mcc_h4747 = _source364.dtor_underlying;
                    } else if (_source364.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7534___mcc_h4750 = _source364.dtor_optLbl;
                    } else if (_source364.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7535___mcc_h4752 = _source364.dtor_optLbl;
                    } else if (_source364.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7536___mcc_h4754 = _source364.dtor_optExpr;
                    } else if (_source364.is_CallType) {
                      RAST._IExpr _7537___mcc_h4756 = _source364.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7538___mcc_h4757 = _source364.dtor_typeParameters;
                    } else if (_source364.is_Call) {
                      RAST._IExpr _7539___mcc_h4760 = _source364.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7540___mcc_h4761 = _source364.dtor_arguments;
                    } else if (_source364.is_Select) {
                      RAST._IExpr _7541___mcc_h4764 = _source364.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7542___mcc_h4765 = _source364.dtor_name;
                    } else if (_source364.is_MemberSelect) {
                      RAST._IExpr _7543___mcc_h4768 = _source364.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7544___mcc_h4769 = _source364.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7545___mcc_h4772 = _source364.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7546___mcc_h4773 = _source364.dtor_retType;
                      RAST._IExpr _7547___mcc_h4774 = _source364.dtor_body;
                    }
                  } else {
                  }
                } else if (_source363.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7548___mcc_h4778 = _source363.dtor_op2;
                  RAST._IExpr _7549___mcc_h4779 = _source363.dtor_left;
                  RAST._IExpr _7550___mcc_h4780 = _source363.dtor_right;
                  DAST.Format._IBinaryOpFormat _7551___mcc_h4781 = _source363.dtor_format2;
                } else if (_source363.is_TypeAscription) {
                  RAST._IExpr _7552___mcc_h4786 = _source363.dtor_left;
                  RAST._IType _7553___mcc_h4787 = _source363.dtor_tpe;
                } else if (_source363.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7554___mcc_h4790 = _source363.dtor_value;
                } else if (_source363.is_LiteralBool) {
                  bool _7555___mcc_h4792 = _source363.dtor_bvalue;
                } else if (_source363.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7556___mcc_h4794 = _source363.dtor_value;
                  bool _7557___mcc_h4795 = _source363.dtor_binary;
                } else if (_source363.is_DeclareVar) {
                  RAST._IDeclareType _7558___mcc_h4798 = _source363.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7559___mcc_h4799 = _source363.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7560___mcc_h4800 = _source363.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7561___mcc_h4801 = _source363.dtor_optRhs;
                } else if (_source363.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7562___mcc_h4806 = _source363.dtor_names;
                  RAST._IExpr _7563___mcc_h4807 = _source363.dtor_rhs;
                } else if (_source363.is_IfExpr) {
                  RAST._IExpr _7564___mcc_h4810 = _source363.dtor_cond;
                  RAST._IExpr _7565___mcc_h4811 = _source363.dtor_thn;
                  RAST._IExpr _7566___mcc_h4812 = _source363.dtor_els;
                } else if (_source363.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7567___mcc_h4816 = _source363.dtor_optCond;
                  RAST._IExpr _7568___mcc_h4817 = _source363.dtor_underlying;
                } else if (_source363.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7569___mcc_h4820 = _source363.dtor_name;
                  RAST._IExpr _7570___mcc_h4821 = _source363.dtor_range;
                  RAST._IExpr _7571___mcc_h4822 = _source363.dtor_body;
                } else if (_source363.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7572___mcc_h4826 = _source363.dtor_lbl;
                  RAST._IExpr _7573___mcc_h4827 = _source363.dtor_underlying;
                } else if (_source363.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7574___mcc_h4830 = _source363.dtor_optLbl;
                } else if (_source363.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7575___mcc_h4832 = _source363.dtor_optLbl;
                } else if (_source363.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7576___mcc_h4834 = _source363.dtor_optExpr;
                } else if (_source363.is_CallType) {
                  RAST._IExpr _7577___mcc_h4836 = _source363.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7578___mcc_h4837 = _source363.dtor_typeParameters;
                } else if (_source363.is_Call) {
                  RAST._IExpr _7579___mcc_h4840 = _source363.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7580___mcc_h4841 = _source363.dtor_arguments;
                } else if (_source363.is_Select) {
                  RAST._IExpr _7581___mcc_h4844 = _source363.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7582___mcc_h4845 = _source363.dtor_name;
                } else if (_source363.is_MemberSelect) {
                  RAST._IExpr _7583___mcc_h4848 = _source363.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7584___mcc_h4849 = _source363.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7585___mcc_h4852 = _source363.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7586___mcc_h4853 = _source363.dtor_retType;
                  RAST._IExpr _7587___mcc_h4854 = _source363.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7471_field));
              if (_7470_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1885;
              DCOMP._IOwnership _out1886;
              (this).FromOwned(r, expectedOwnership, out _out1885, out _out1886);
              r = _out1885;
              resultingOwnership = _out1886;
              readIdents = _7479_recIdents;
            }
            return ;
          }
        } else if (_source322.is_UnOp) {
          DAST._IUnaryOp _7588___mcc_h141 = _source322.dtor_unOp;
          DAST._IExpression _7589___mcc_h142 = _source322.dtor_expr;
          DAST.Format._IUnaryOpFormat _7590___mcc_h143 = _source322.dtor_format1;
          DAST._IType _7591_fieldType = _5017___mcc_h58;
          bool _7592_isDatatype = _5016___mcc_h57;
          bool _7593_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7594_field = _5014___mcc_h55;
          DAST._IExpression _7595_on = _5013___mcc_h54;
          {
            if (_7592_isDatatype) {
              RAST._IExpr _7596_onExpr;
              DCOMP._IOwnership _7597_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7598_recIdents;
              RAST._IExpr _out1887;
              DCOMP._IOwnership _out1888;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1889;
              (this).GenExpr(_7595_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1887, out _out1888, out _out1889);
              _7596_onExpr = _out1887;
              _7597_onOwned = _out1888;
              _7598_recIdents = _out1889;
              r = ((_7596_onExpr).Sel(DCOMP.__default.escapeName(_7594_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7599_typ;
              RAST._IType _out1890;
              _out1890 = (this).GenType(_7591_fieldType, DCOMP.GenTypeContext.@default());
              _7599_typ = _out1890;
              RAST._IExpr _out1891;
              DCOMP._IOwnership _out1892;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1891, out _out1892);
              r = _out1891;
              resultingOwnership = _out1892;
              readIdents = _7598_recIdents;
            } else {
              RAST._IExpr _7600_onExpr;
              DCOMP._IOwnership _7601_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7602_recIdents;
              RAST._IExpr _out1893;
              DCOMP._IOwnership _out1894;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1895;
              (this).GenExpr(_7595_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1893, out _out1894, out _out1895);
              _7600_onExpr = _out1893;
              _7601_onOwned = _out1894;
              _7602_recIdents = _out1895;
              r = _7600_onExpr;
              if (!object.Equals(_7600_onExpr, RAST.__default.self)) {
                RAST._IExpr _source365 = _7600_onExpr;
                if (_source365.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7603___mcc_h4858 = _source365.dtor_content;
                } else if (_source365.is_ExprFromType) {
                  RAST._IType _7604___mcc_h4860 = _source365.dtor_tpe;
                } else if (_source365.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7605___mcc_h4862 = _source365.dtor_name;
                } else if (_source365.is_Match) {
                  RAST._IExpr _7606___mcc_h4864 = _source365.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7607___mcc_h4865 = _source365.dtor_cases;
                } else if (_source365.is_StmtExpr) {
                  RAST._IExpr _7608___mcc_h4868 = _source365.dtor_stmt;
                  RAST._IExpr _7609___mcc_h4869 = _source365.dtor_rhs;
                } else if (_source365.is_Block) {
                  RAST._IExpr _7610___mcc_h4872 = _source365.dtor_underlying;
                } else if (_source365.is_StructBuild) {
                  RAST._IExpr _7611___mcc_h4874 = _source365.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7612___mcc_h4875 = _source365.dtor_assignments;
                } else if (_source365.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7613___mcc_h4878 = _source365.dtor_arguments;
                } else if (_source365.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7614___mcc_h4880 = _source365.dtor_op1;
                  RAST._IExpr _7615___mcc_h4881 = _source365.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7616___mcc_h4882 = _source365.dtor_format;
                  if (object.Equals(_7614___mcc_h4880, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source366 = _7615___mcc_h4881;
                    if (_source366.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7617___mcc_h4886 = _source366.dtor_content;
                    } else if (_source366.is_ExprFromType) {
                      RAST._IType _7618___mcc_h4888 = _source366.dtor_tpe;
                    } else if (_source366.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7619___mcc_h4890 = _source366.dtor_name;
                      if (object.Equals(_7619___mcc_h4890, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source366.is_Match) {
                      RAST._IExpr _7620___mcc_h4892 = _source366.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7621___mcc_h4893 = _source366.dtor_cases;
                    } else if (_source366.is_StmtExpr) {
                      RAST._IExpr _7622___mcc_h4896 = _source366.dtor_stmt;
                      RAST._IExpr _7623___mcc_h4897 = _source366.dtor_rhs;
                    } else if (_source366.is_Block) {
                      RAST._IExpr _7624___mcc_h4900 = _source366.dtor_underlying;
                    } else if (_source366.is_StructBuild) {
                      RAST._IExpr _7625___mcc_h4902 = _source366.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7626___mcc_h4903 = _source366.dtor_assignments;
                    } else if (_source366.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7627___mcc_h4906 = _source366.dtor_arguments;
                    } else if (_source366.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7628___mcc_h4908 = _source366.dtor_op1;
                      RAST._IExpr _7629___mcc_h4909 = _source366.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7630___mcc_h4910 = _source366.dtor_format;
                    } else if (_source366.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7631___mcc_h4914 = _source366.dtor_op2;
                      RAST._IExpr _7632___mcc_h4915 = _source366.dtor_left;
                      RAST._IExpr _7633___mcc_h4916 = _source366.dtor_right;
                      DAST.Format._IBinaryOpFormat _7634___mcc_h4917 = _source366.dtor_format2;
                    } else if (_source366.is_TypeAscription) {
                      RAST._IExpr _7635___mcc_h4922 = _source366.dtor_left;
                      RAST._IType _7636___mcc_h4923 = _source366.dtor_tpe;
                    } else if (_source366.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7637___mcc_h4926 = _source366.dtor_value;
                    } else if (_source366.is_LiteralBool) {
                      bool _7638___mcc_h4928 = _source366.dtor_bvalue;
                    } else if (_source366.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7639___mcc_h4930 = _source366.dtor_value;
                      bool _7640___mcc_h4931 = _source366.dtor_binary;
                    } else if (_source366.is_DeclareVar) {
                      RAST._IDeclareType _7641___mcc_h4934 = _source366.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7642___mcc_h4935 = _source366.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7643___mcc_h4936 = _source366.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7644___mcc_h4937 = _source366.dtor_optRhs;
                    } else if (_source366.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7645___mcc_h4942 = _source366.dtor_names;
                      RAST._IExpr _7646___mcc_h4943 = _source366.dtor_rhs;
                    } else if (_source366.is_IfExpr) {
                      RAST._IExpr _7647___mcc_h4946 = _source366.dtor_cond;
                      RAST._IExpr _7648___mcc_h4947 = _source366.dtor_thn;
                      RAST._IExpr _7649___mcc_h4948 = _source366.dtor_els;
                    } else if (_source366.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7650___mcc_h4952 = _source366.dtor_optCond;
                      RAST._IExpr _7651___mcc_h4953 = _source366.dtor_underlying;
                    } else if (_source366.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7652___mcc_h4956 = _source366.dtor_name;
                      RAST._IExpr _7653___mcc_h4957 = _source366.dtor_range;
                      RAST._IExpr _7654___mcc_h4958 = _source366.dtor_body;
                    } else if (_source366.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7655___mcc_h4962 = _source366.dtor_lbl;
                      RAST._IExpr _7656___mcc_h4963 = _source366.dtor_underlying;
                    } else if (_source366.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7657___mcc_h4966 = _source366.dtor_optLbl;
                    } else if (_source366.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7658___mcc_h4968 = _source366.dtor_optLbl;
                    } else if (_source366.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7659___mcc_h4970 = _source366.dtor_optExpr;
                    } else if (_source366.is_CallType) {
                      RAST._IExpr _7660___mcc_h4972 = _source366.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7661___mcc_h4973 = _source366.dtor_typeParameters;
                    } else if (_source366.is_Call) {
                      RAST._IExpr _7662___mcc_h4976 = _source366.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7663___mcc_h4977 = _source366.dtor_arguments;
                    } else if (_source366.is_Select) {
                      RAST._IExpr _7664___mcc_h4980 = _source366.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7665___mcc_h4981 = _source366.dtor_name;
                    } else if (_source366.is_MemberSelect) {
                      RAST._IExpr _7666___mcc_h4984 = _source366.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7667___mcc_h4985 = _source366.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7668___mcc_h4988 = _source366.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7669___mcc_h4989 = _source366.dtor_retType;
                      RAST._IExpr _7670___mcc_h4990 = _source366.dtor_body;
                    }
                  } else {
                  }
                } else if (_source365.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7671___mcc_h4994 = _source365.dtor_op2;
                  RAST._IExpr _7672___mcc_h4995 = _source365.dtor_left;
                  RAST._IExpr _7673___mcc_h4996 = _source365.dtor_right;
                  DAST.Format._IBinaryOpFormat _7674___mcc_h4997 = _source365.dtor_format2;
                } else if (_source365.is_TypeAscription) {
                  RAST._IExpr _7675___mcc_h5002 = _source365.dtor_left;
                  RAST._IType _7676___mcc_h5003 = _source365.dtor_tpe;
                } else if (_source365.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7677___mcc_h5006 = _source365.dtor_value;
                } else if (_source365.is_LiteralBool) {
                  bool _7678___mcc_h5008 = _source365.dtor_bvalue;
                } else if (_source365.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7679___mcc_h5010 = _source365.dtor_value;
                  bool _7680___mcc_h5011 = _source365.dtor_binary;
                } else if (_source365.is_DeclareVar) {
                  RAST._IDeclareType _7681___mcc_h5014 = _source365.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7682___mcc_h5015 = _source365.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7683___mcc_h5016 = _source365.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7684___mcc_h5017 = _source365.dtor_optRhs;
                } else if (_source365.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7685___mcc_h5022 = _source365.dtor_names;
                  RAST._IExpr _7686___mcc_h5023 = _source365.dtor_rhs;
                } else if (_source365.is_IfExpr) {
                  RAST._IExpr _7687___mcc_h5026 = _source365.dtor_cond;
                  RAST._IExpr _7688___mcc_h5027 = _source365.dtor_thn;
                  RAST._IExpr _7689___mcc_h5028 = _source365.dtor_els;
                } else if (_source365.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7690___mcc_h5032 = _source365.dtor_optCond;
                  RAST._IExpr _7691___mcc_h5033 = _source365.dtor_underlying;
                } else if (_source365.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7692___mcc_h5036 = _source365.dtor_name;
                  RAST._IExpr _7693___mcc_h5037 = _source365.dtor_range;
                  RAST._IExpr _7694___mcc_h5038 = _source365.dtor_body;
                } else if (_source365.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7695___mcc_h5042 = _source365.dtor_lbl;
                  RAST._IExpr _7696___mcc_h5043 = _source365.dtor_underlying;
                } else if (_source365.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7697___mcc_h5046 = _source365.dtor_optLbl;
                } else if (_source365.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7698___mcc_h5048 = _source365.dtor_optLbl;
                } else if (_source365.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7699___mcc_h5050 = _source365.dtor_optExpr;
                } else if (_source365.is_CallType) {
                  RAST._IExpr _7700___mcc_h5052 = _source365.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7701___mcc_h5053 = _source365.dtor_typeParameters;
                } else if (_source365.is_Call) {
                  RAST._IExpr _7702___mcc_h5056 = _source365.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7703___mcc_h5057 = _source365.dtor_arguments;
                } else if (_source365.is_Select) {
                  RAST._IExpr _7704___mcc_h5060 = _source365.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7705___mcc_h5061 = _source365.dtor_name;
                } else if (_source365.is_MemberSelect) {
                  RAST._IExpr _7706___mcc_h5064 = _source365.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7707___mcc_h5065 = _source365.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7708___mcc_h5068 = _source365.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7709___mcc_h5069 = _source365.dtor_retType;
                  RAST._IExpr _7710___mcc_h5070 = _source365.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7594_field));
              if (_7593_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1896;
              DCOMP._IOwnership _out1897;
              (this).FromOwned(r, expectedOwnership, out _out1896, out _out1897);
              r = _out1896;
              resultingOwnership = _out1897;
              readIdents = _7602_recIdents;
            }
            return ;
          }
        } else if (_source322.is_BinOp) {
          DAST._IBinOp _7711___mcc_h147 = _source322.dtor_op;
          DAST._IExpression _7712___mcc_h148 = _source322.dtor_left;
          DAST._IExpression _7713___mcc_h149 = _source322.dtor_right;
          DAST.Format._IBinaryOpFormat _7714___mcc_h150 = _source322.dtor_format2;
          DAST._IType _7715_fieldType = _5017___mcc_h58;
          bool _7716_isDatatype = _5016___mcc_h57;
          bool _7717_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7718_field = _5014___mcc_h55;
          DAST._IExpression _7719_on = _5013___mcc_h54;
          {
            if (_7716_isDatatype) {
              RAST._IExpr _7720_onExpr;
              DCOMP._IOwnership _7721_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7722_recIdents;
              RAST._IExpr _out1898;
              DCOMP._IOwnership _out1899;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1900;
              (this).GenExpr(_7719_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1898, out _out1899, out _out1900);
              _7720_onExpr = _out1898;
              _7721_onOwned = _out1899;
              _7722_recIdents = _out1900;
              r = ((_7720_onExpr).Sel(DCOMP.__default.escapeName(_7718_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7723_typ;
              RAST._IType _out1901;
              _out1901 = (this).GenType(_7715_fieldType, DCOMP.GenTypeContext.@default());
              _7723_typ = _out1901;
              RAST._IExpr _out1902;
              DCOMP._IOwnership _out1903;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1902, out _out1903);
              r = _out1902;
              resultingOwnership = _out1903;
              readIdents = _7722_recIdents;
            } else {
              RAST._IExpr _7724_onExpr;
              DCOMP._IOwnership _7725_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7726_recIdents;
              RAST._IExpr _out1904;
              DCOMP._IOwnership _out1905;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1906;
              (this).GenExpr(_7719_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1904, out _out1905, out _out1906);
              _7724_onExpr = _out1904;
              _7725_onOwned = _out1905;
              _7726_recIdents = _out1906;
              r = _7724_onExpr;
              if (!object.Equals(_7724_onExpr, RAST.__default.self)) {
                RAST._IExpr _source367 = _7724_onExpr;
                if (_source367.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7727___mcc_h5074 = _source367.dtor_content;
                } else if (_source367.is_ExprFromType) {
                  RAST._IType _7728___mcc_h5076 = _source367.dtor_tpe;
                } else if (_source367.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7729___mcc_h5078 = _source367.dtor_name;
                } else if (_source367.is_Match) {
                  RAST._IExpr _7730___mcc_h5080 = _source367.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7731___mcc_h5081 = _source367.dtor_cases;
                } else if (_source367.is_StmtExpr) {
                  RAST._IExpr _7732___mcc_h5084 = _source367.dtor_stmt;
                  RAST._IExpr _7733___mcc_h5085 = _source367.dtor_rhs;
                } else if (_source367.is_Block) {
                  RAST._IExpr _7734___mcc_h5088 = _source367.dtor_underlying;
                } else if (_source367.is_StructBuild) {
                  RAST._IExpr _7735___mcc_h5090 = _source367.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7736___mcc_h5091 = _source367.dtor_assignments;
                } else if (_source367.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7737___mcc_h5094 = _source367.dtor_arguments;
                } else if (_source367.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7738___mcc_h5096 = _source367.dtor_op1;
                  RAST._IExpr _7739___mcc_h5097 = _source367.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7740___mcc_h5098 = _source367.dtor_format;
                  if (object.Equals(_7738___mcc_h5096, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source368 = _7739___mcc_h5097;
                    if (_source368.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7741___mcc_h5102 = _source368.dtor_content;
                    } else if (_source368.is_ExprFromType) {
                      RAST._IType _7742___mcc_h5104 = _source368.dtor_tpe;
                    } else if (_source368.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7743___mcc_h5106 = _source368.dtor_name;
                      if (object.Equals(_7743___mcc_h5106, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source368.is_Match) {
                      RAST._IExpr _7744___mcc_h5108 = _source368.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7745___mcc_h5109 = _source368.dtor_cases;
                    } else if (_source368.is_StmtExpr) {
                      RAST._IExpr _7746___mcc_h5112 = _source368.dtor_stmt;
                      RAST._IExpr _7747___mcc_h5113 = _source368.dtor_rhs;
                    } else if (_source368.is_Block) {
                      RAST._IExpr _7748___mcc_h5116 = _source368.dtor_underlying;
                    } else if (_source368.is_StructBuild) {
                      RAST._IExpr _7749___mcc_h5118 = _source368.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7750___mcc_h5119 = _source368.dtor_assignments;
                    } else if (_source368.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7751___mcc_h5122 = _source368.dtor_arguments;
                    } else if (_source368.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7752___mcc_h5124 = _source368.dtor_op1;
                      RAST._IExpr _7753___mcc_h5125 = _source368.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7754___mcc_h5126 = _source368.dtor_format;
                    } else if (_source368.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7755___mcc_h5130 = _source368.dtor_op2;
                      RAST._IExpr _7756___mcc_h5131 = _source368.dtor_left;
                      RAST._IExpr _7757___mcc_h5132 = _source368.dtor_right;
                      DAST.Format._IBinaryOpFormat _7758___mcc_h5133 = _source368.dtor_format2;
                    } else if (_source368.is_TypeAscription) {
                      RAST._IExpr _7759___mcc_h5138 = _source368.dtor_left;
                      RAST._IType _7760___mcc_h5139 = _source368.dtor_tpe;
                    } else if (_source368.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7761___mcc_h5142 = _source368.dtor_value;
                    } else if (_source368.is_LiteralBool) {
                      bool _7762___mcc_h5144 = _source368.dtor_bvalue;
                    } else if (_source368.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7763___mcc_h5146 = _source368.dtor_value;
                      bool _7764___mcc_h5147 = _source368.dtor_binary;
                    } else if (_source368.is_DeclareVar) {
                      RAST._IDeclareType _7765___mcc_h5150 = _source368.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7766___mcc_h5151 = _source368.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7767___mcc_h5152 = _source368.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7768___mcc_h5153 = _source368.dtor_optRhs;
                    } else if (_source368.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7769___mcc_h5158 = _source368.dtor_names;
                      RAST._IExpr _7770___mcc_h5159 = _source368.dtor_rhs;
                    } else if (_source368.is_IfExpr) {
                      RAST._IExpr _7771___mcc_h5162 = _source368.dtor_cond;
                      RAST._IExpr _7772___mcc_h5163 = _source368.dtor_thn;
                      RAST._IExpr _7773___mcc_h5164 = _source368.dtor_els;
                    } else if (_source368.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7774___mcc_h5168 = _source368.dtor_optCond;
                      RAST._IExpr _7775___mcc_h5169 = _source368.dtor_underlying;
                    } else if (_source368.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7776___mcc_h5172 = _source368.dtor_name;
                      RAST._IExpr _7777___mcc_h5173 = _source368.dtor_range;
                      RAST._IExpr _7778___mcc_h5174 = _source368.dtor_body;
                    } else if (_source368.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7779___mcc_h5178 = _source368.dtor_lbl;
                      RAST._IExpr _7780___mcc_h5179 = _source368.dtor_underlying;
                    } else if (_source368.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7781___mcc_h5182 = _source368.dtor_optLbl;
                    } else if (_source368.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7782___mcc_h5184 = _source368.dtor_optLbl;
                    } else if (_source368.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7783___mcc_h5186 = _source368.dtor_optExpr;
                    } else if (_source368.is_CallType) {
                      RAST._IExpr _7784___mcc_h5188 = _source368.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7785___mcc_h5189 = _source368.dtor_typeParameters;
                    } else if (_source368.is_Call) {
                      RAST._IExpr _7786___mcc_h5192 = _source368.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7787___mcc_h5193 = _source368.dtor_arguments;
                    } else if (_source368.is_Select) {
                      RAST._IExpr _7788___mcc_h5196 = _source368.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7789___mcc_h5197 = _source368.dtor_name;
                    } else if (_source368.is_MemberSelect) {
                      RAST._IExpr _7790___mcc_h5200 = _source368.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7791___mcc_h5201 = _source368.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7792___mcc_h5204 = _source368.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7793___mcc_h5205 = _source368.dtor_retType;
                      RAST._IExpr _7794___mcc_h5206 = _source368.dtor_body;
                    }
                  } else {
                  }
                } else if (_source367.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7795___mcc_h5210 = _source367.dtor_op2;
                  RAST._IExpr _7796___mcc_h5211 = _source367.dtor_left;
                  RAST._IExpr _7797___mcc_h5212 = _source367.dtor_right;
                  DAST.Format._IBinaryOpFormat _7798___mcc_h5213 = _source367.dtor_format2;
                } else if (_source367.is_TypeAscription) {
                  RAST._IExpr _7799___mcc_h5218 = _source367.dtor_left;
                  RAST._IType _7800___mcc_h5219 = _source367.dtor_tpe;
                } else if (_source367.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7801___mcc_h5222 = _source367.dtor_value;
                } else if (_source367.is_LiteralBool) {
                  bool _7802___mcc_h5224 = _source367.dtor_bvalue;
                } else if (_source367.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7803___mcc_h5226 = _source367.dtor_value;
                  bool _7804___mcc_h5227 = _source367.dtor_binary;
                } else if (_source367.is_DeclareVar) {
                  RAST._IDeclareType _7805___mcc_h5230 = _source367.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7806___mcc_h5231 = _source367.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7807___mcc_h5232 = _source367.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7808___mcc_h5233 = _source367.dtor_optRhs;
                } else if (_source367.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7809___mcc_h5238 = _source367.dtor_names;
                  RAST._IExpr _7810___mcc_h5239 = _source367.dtor_rhs;
                } else if (_source367.is_IfExpr) {
                  RAST._IExpr _7811___mcc_h5242 = _source367.dtor_cond;
                  RAST._IExpr _7812___mcc_h5243 = _source367.dtor_thn;
                  RAST._IExpr _7813___mcc_h5244 = _source367.dtor_els;
                } else if (_source367.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7814___mcc_h5248 = _source367.dtor_optCond;
                  RAST._IExpr _7815___mcc_h5249 = _source367.dtor_underlying;
                } else if (_source367.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7816___mcc_h5252 = _source367.dtor_name;
                  RAST._IExpr _7817___mcc_h5253 = _source367.dtor_range;
                  RAST._IExpr _7818___mcc_h5254 = _source367.dtor_body;
                } else if (_source367.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7819___mcc_h5258 = _source367.dtor_lbl;
                  RAST._IExpr _7820___mcc_h5259 = _source367.dtor_underlying;
                } else if (_source367.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7821___mcc_h5262 = _source367.dtor_optLbl;
                } else if (_source367.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7822___mcc_h5264 = _source367.dtor_optLbl;
                } else if (_source367.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7823___mcc_h5266 = _source367.dtor_optExpr;
                } else if (_source367.is_CallType) {
                  RAST._IExpr _7824___mcc_h5268 = _source367.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7825___mcc_h5269 = _source367.dtor_typeParameters;
                } else if (_source367.is_Call) {
                  RAST._IExpr _7826___mcc_h5272 = _source367.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7827___mcc_h5273 = _source367.dtor_arguments;
                } else if (_source367.is_Select) {
                  RAST._IExpr _7828___mcc_h5276 = _source367.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7829___mcc_h5277 = _source367.dtor_name;
                } else if (_source367.is_MemberSelect) {
                  RAST._IExpr _7830___mcc_h5280 = _source367.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7831___mcc_h5281 = _source367.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7832___mcc_h5284 = _source367.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7833___mcc_h5285 = _source367.dtor_retType;
                  RAST._IExpr _7834___mcc_h5286 = _source367.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7718_field));
              if (_7717_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1907;
              DCOMP._IOwnership _out1908;
              (this).FromOwned(r, expectedOwnership, out _out1907, out _out1908);
              r = _out1907;
              resultingOwnership = _out1908;
              readIdents = _7726_recIdents;
            }
            return ;
          }
        } else if (_source322.is_ArrayLen) {
          DAST._IExpression _7835___mcc_h155 = _source322.dtor_expr;
          DAST._IType _7836___mcc_h156 = _source322.dtor_exprType;
          BigInteger _7837___mcc_h157 = _source322.dtor_dim;
          bool _7838___mcc_h158 = _source322.dtor_native;
          DAST._IType _7839_fieldType = _5017___mcc_h58;
          bool _7840_isDatatype = _5016___mcc_h57;
          bool _7841_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7842_field = _5014___mcc_h55;
          DAST._IExpression _7843_on = _5013___mcc_h54;
          {
            if (_7840_isDatatype) {
              RAST._IExpr _7844_onExpr;
              DCOMP._IOwnership _7845_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7846_recIdents;
              RAST._IExpr _out1909;
              DCOMP._IOwnership _out1910;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1911;
              (this).GenExpr(_7843_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1909, out _out1910, out _out1911);
              _7844_onExpr = _out1909;
              _7845_onOwned = _out1910;
              _7846_recIdents = _out1911;
              r = ((_7844_onExpr).Sel(DCOMP.__default.escapeName(_7842_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7847_typ;
              RAST._IType _out1912;
              _out1912 = (this).GenType(_7839_fieldType, DCOMP.GenTypeContext.@default());
              _7847_typ = _out1912;
              RAST._IExpr _out1913;
              DCOMP._IOwnership _out1914;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1913, out _out1914);
              r = _out1913;
              resultingOwnership = _out1914;
              readIdents = _7846_recIdents;
            } else {
              RAST._IExpr _7848_onExpr;
              DCOMP._IOwnership _7849_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7850_recIdents;
              RAST._IExpr _out1915;
              DCOMP._IOwnership _out1916;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1917;
              (this).GenExpr(_7843_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1915, out _out1916, out _out1917);
              _7848_onExpr = _out1915;
              _7849_onOwned = _out1916;
              _7850_recIdents = _out1917;
              r = _7848_onExpr;
              if (!object.Equals(_7848_onExpr, RAST.__default.self)) {
                RAST._IExpr _source369 = _7848_onExpr;
                if (_source369.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7851___mcc_h5290 = _source369.dtor_content;
                } else if (_source369.is_ExprFromType) {
                  RAST._IType _7852___mcc_h5292 = _source369.dtor_tpe;
                } else if (_source369.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7853___mcc_h5294 = _source369.dtor_name;
                } else if (_source369.is_Match) {
                  RAST._IExpr _7854___mcc_h5296 = _source369.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7855___mcc_h5297 = _source369.dtor_cases;
                } else if (_source369.is_StmtExpr) {
                  RAST._IExpr _7856___mcc_h5300 = _source369.dtor_stmt;
                  RAST._IExpr _7857___mcc_h5301 = _source369.dtor_rhs;
                } else if (_source369.is_Block) {
                  RAST._IExpr _7858___mcc_h5304 = _source369.dtor_underlying;
                } else if (_source369.is_StructBuild) {
                  RAST._IExpr _7859___mcc_h5306 = _source369.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7860___mcc_h5307 = _source369.dtor_assignments;
                } else if (_source369.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7861___mcc_h5310 = _source369.dtor_arguments;
                } else if (_source369.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7862___mcc_h5312 = _source369.dtor_op1;
                  RAST._IExpr _7863___mcc_h5313 = _source369.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7864___mcc_h5314 = _source369.dtor_format;
                  if (object.Equals(_7862___mcc_h5312, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source370 = _7863___mcc_h5313;
                    if (_source370.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7865___mcc_h5318 = _source370.dtor_content;
                    } else if (_source370.is_ExprFromType) {
                      RAST._IType _7866___mcc_h5320 = _source370.dtor_tpe;
                    } else if (_source370.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7867___mcc_h5322 = _source370.dtor_name;
                      if (object.Equals(_7867___mcc_h5322, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source370.is_Match) {
                      RAST._IExpr _7868___mcc_h5324 = _source370.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7869___mcc_h5325 = _source370.dtor_cases;
                    } else if (_source370.is_StmtExpr) {
                      RAST._IExpr _7870___mcc_h5328 = _source370.dtor_stmt;
                      RAST._IExpr _7871___mcc_h5329 = _source370.dtor_rhs;
                    } else if (_source370.is_Block) {
                      RAST._IExpr _7872___mcc_h5332 = _source370.dtor_underlying;
                    } else if (_source370.is_StructBuild) {
                      RAST._IExpr _7873___mcc_h5334 = _source370.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7874___mcc_h5335 = _source370.dtor_assignments;
                    } else if (_source370.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7875___mcc_h5338 = _source370.dtor_arguments;
                    } else if (_source370.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7876___mcc_h5340 = _source370.dtor_op1;
                      RAST._IExpr _7877___mcc_h5341 = _source370.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7878___mcc_h5342 = _source370.dtor_format;
                    } else if (_source370.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7879___mcc_h5346 = _source370.dtor_op2;
                      RAST._IExpr _7880___mcc_h5347 = _source370.dtor_left;
                      RAST._IExpr _7881___mcc_h5348 = _source370.dtor_right;
                      DAST.Format._IBinaryOpFormat _7882___mcc_h5349 = _source370.dtor_format2;
                    } else if (_source370.is_TypeAscription) {
                      RAST._IExpr _7883___mcc_h5354 = _source370.dtor_left;
                      RAST._IType _7884___mcc_h5355 = _source370.dtor_tpe;
                    } else if (_source370.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _7885___mcc_h5358 = _source370.dtor_value;
                    } else if (_source370.is_LiteralBool) {
                      bool _7886___mcc_h5360 = _source370.dtor_bvalue;
                    } else if (_source370.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _7887___mcc_h5362 = _source370.dtor_value;
                      bool _7888___mcc_h5363 = _source370.dtor_binary;
                    } else if (_source370.is_DeclareVar) {
                      RAST._IDeclareType _7889___mcc_h5366 = _source370.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _7890___mcc_h5367 = _source370.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _7891___mcc_h5368 = _source370.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _7892___mcc_h5369 = _source370.dtor_optRhs;
                    } else if (_source370.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _7893___mcc_h5374 = _source370.dtor_names;
                      RAST._IExpr _7894___mcc_h5375 = _source370.dtor_rhs;
                    } else if (_source370.is_IfExpr) {
                      RAST._IExpr _7895___mcc_h5378 = _source370.dtor_cond;
                      RAST._IExpr _7896___mcc_h5379 = _source370.dtor_thn;
                      RAST._IExpr _7897___mcc_h5380 = _source370.dtor_els;
                    } else if (_source370.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _7898___mcc_h5384 = _source370.dtor_optCond;
                      RAST._IExpr _7899___mcc_h5385 = _source370.dtor_underlying;
                    } else if (_source370.is_For) {
                      Dafny.ISequence<Dafny.Rune> _7900___mcc_h5388 = _source370.dtor_name;
                      RAST._IExpr _7901___mcc_h5389 = _source370.dtor_range;
                      RAST._IExpr _7902___mcc_h5390 = _source370.dtor_body;
                    } else if (_source370.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _7903___mcc_h5394 = _source370.dtor_lbl;
                      RAST._IExpr _7904___mcc_h5395 = _source370.dtor_underlying;
                    } else if (_source370.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7905___mcc_h5398 = _source370.dtor_optLbl;
                    } else if (_source370.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7906___mcc_h5400 = _source370.dtor_optLbl;
                    } else if (_source370.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _7907___mcc_h5402 = _source370.dtor_optExpr;
                    } else if (_source370.is_CallType) {
                      RAST._IExpr _7908___mcc_h5404 = _source370.dtor_obj;
                      Dafny.ISequence<RAST._IType> _7909___mcc_h5405 = _source370.dtor_typeParameters;
                    } else if (_source370.is_Call) {
                      RAST._IExpr _7910___mcc_h5408 = _source370.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _7911___mcc_h5409 = _source370.dtor_arguments;
                    } else if (_source370.is_Select) {
                      RAST._IExpr _7912___mcc_h5412 = _source370.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7913___mcc_h5413 = _source370.dtor_name;
                    } else if (_source370.is_MemberSelect) {
                      RAST._IExpr _7914___mcc_h5416 = _source370.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _7915___mcc_h5417 = _source370.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _7916___mcc_h5420 = _source370.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _7917___mcc_h5421 = _source370.dtor_retType;
                      RAST._IExpr _7918___mcc_h5422 = _source370.dtor_body;
                    }
                  } else {
                  }
                } else if (_source369.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7919___mcc_h5426 = _source369.dtor_op2;
                  RAST._IExpr _7920___mcc_h5427 = _source369.dtor_left;
                  RAST._IExpr _7921___mcc_h5428 = _source369.dtor_right;
                  DAST.Format._IBinaryOpFormat _7922___mcc_h5429 = _source369.dtor_format2;
                } else if (_source369.is_TypeAscription) {
                  RAST._IExpr _7923___mcc_h5434 = _source369.dtor_left;
                  RAST._IType _7924___mcc_h5435 = _source369.dtor_tpe;
                } else if (_source369.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _7925___mcc_h5438 = _source369.dtor_value;
                } else if (_source369.is_LiteralBool) {
                  bool _7926___mcc_h5440 = _source369.dtor_bvalue;
                } else if (_source369.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _7927___mcc_h5442 = _source369.dtor_value;
                  bool _7928___mcc_h5443 = _source369.dtor_binary;
                } else if (_source369.is_DeclareVar) {
                  RAST._IDeclareType _7929___mcc_h5446 = _source369.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _7930___mcc_h5447 = _source369.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _7931___mcc_h5448 = _source369.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _7932___mcc_h5449 = _source369.dtor_optRhs;
                } else if (_source369.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _7933___mcc_h5454 = _source369.dtor_names;
                  RAST._IExpr _7934___mcc_h5455 = _source369.dtor_rhs;
                } else if (_source369.is_IfExpr) {
                  RAST._IExpr _7935___mcc_h5458 = _source369.dtor_cond;
                  RAST._IExpr _7936___mcc_h5459 = _source369.dtor_thn;
                  RAST._IExpr _7937___mcc_h5460 = _source369.dtor_els;
                } else if (_source369.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _7938___mcc_h5464 = _source369.dtor_optCond;
                  RAST._IExpr _7939___mcc_h5465 = _source369.dtor_underlying;
                } else if (_source369.is_For) {
                  Dafny.ISequence<Dafny.Rune> _7940___mcc_h5468 = _source369.dtor_name;
                  RAST._IExpr _7941___mcc_h5469 = _source369.dtor_range;
                  RAST._IExpr _7942___mcc_h5470 = _source369.dtor_body;
                } else if (_source369.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _7943___mcc_h5474 = _source369.dtor_lbl;
                  RAST._IExpr _7944___mcc_h5475 = _source369.dtor_underlying;
                } else if (_source369.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7945___mcc_h5478 = _source369.dtor_optLbl;
                } else if (_source369.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _7946___mcc_h5480 = _source369.dtor_optLbl;
                } else if (_source369.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _7947___mcc_h5482 = _source369.dtor_optExpr;
                } else if (_source369.is_CallType) {
                  RAST._IExpr _7948___mcc_h5484 = _source369.dtor_obj;
                  Dafny.ISequence<RAST._IType> _7949___mcc_h5485 = _source369.dtor_typeParameters;
                } else if (_source369.is_Call) {
                  RAST._IExpr _7950___mcc_h5488 = _source369.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _7951___mcc_h5489 = _source369.dtor_arguments;
                } else if (_source369.is_Select) {
                  RAST._IExpr _7952___mcc_h5492 = _source369.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7953___mcc_h5493 = _source369.dtor_name;
                } else if (_source369.is_MemberSelect) {
                  RAST._IExpr _7954___mcc_h5496 = _source369.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _7955___mcc_h5497 = _source369.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _7956___mcc_h5500 = _source369.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _7957___mcc_h5501 = _source369.dtor_retType;
                  RAST._IExpr _7958___mcc_h5502 = _source369.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7842_field));
              if (_7841_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1918;
              DCOMP._IOwnership _out1919;
              (this).FromOwned(r, expectedOwnership, out _out1918, out _out1919);
              r = _out1918;
              resultingOwnership = _out1919;
              readIdents = _7850_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapKeys) {
          DAST._IExpression _7959___mcc_h163 = _source322.dtor_expr;
          DAST._IType _7960_fieldType = _5017___mcc_h58;
          bool _7961_isDatatype = _5016___mcc_h57;
          bool _7962_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _7963_field = _5014___mcc_h55;
          DAST._IExpression _7964_on = _5013___mcc_h54;
          {
            if (_7961_isDatatype) {
              RAST._IExpr _7965_onExpr;
              DCOMP._IOwnership _7966_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7967_recIdents;
              RAST._IExpr _out1920;
              DCOMP._IOwnership _out1921;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1922;
              (this).GenExpr(_7964_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1920, out _out1921, out _out1922);
              _7965_onExpr = _out1920;
              _7966_onOwned = _out1921;
              _7967_recIdents = _out1922;
              r = ((_7965_onExpr).Sel(DCOMP.__default.escapeName(_7963_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _7968_typ;
              RAST._IType _out1923;
              _out1923 = (this).GenType(_7960_fieldType, DCOMP.GenTypeContext.@default());
              _7968_typ = _out1923;
              RAST._IExpr _out1924;
              DCOMP._IOwnership _out1925;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1924, out _out1925);
              r = _out1924;
              resultingOwnership = _out1925;
              readIdents = _7967_recIdents;
            } else {
              RAST._IExpr _7969_onExpr;
              DCOMP._IOwnership _7970_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _7971_recIdents;
              RAST._IExpr _out1926;
              DCOMP._IOwnership _out1927;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1928;
              (this).GenExpr(_7964_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1926, out _out1927, out _out1928);
              _7969_onExpr = _out1926;
              _7970_onOwned = _out1927;
              _7971_recIdents = _out1928;
              r = _7969_onExpr;
              if (!object.Equals(_7969_onExpr, RAST.__default.self)) {
                RAST._IExpr _source371 = _7969_onExpr;
                if (_source371.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _7972___mcc_h5506 = _source371.dtor_content;
                } else if (_source371.is_ExprFromType) {
                  RAST._IType _7973___mcc_h5508 = _source371.dtor_tpe;
                } else if (_source371.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _7974___mcc_h5510 = _source371.dtor_name;
                } else if (_source371.is_Match) {
                  RAST._IExpr _7975___mcc_h5512 = _source371.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _7976___mcc_h5513 = _source371.dtor_cases;
                } else if (_source371.is_StmtExpr) {
                  RAST._IExpr _7977___mcc_h5516 = _source371.dtor_stmt;
                  RAST._IExpr _7978___mcc_h5517 = _source371.dtor_rhs;
                } else if (_source371.is_Block) {
                  RAST._IExpr _7979___mcc_h5520 = _source371.dtor_underlying;
                } else if (_source371.is_StructBuild) {
                  RAST._IExpr _7980___mcc_h5522 = _source371.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _7981___mcc_h5523 = _source371.dtor_assignments;
                } else if (_source371.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _7982___mcc_h5526 = _source371.dtor_arguments;
                } else if (_source371.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _7983___mcc_h5528 = _source371.dtor_op1;
                  RAST._IExpr _7984___mcc_h5529 = _source371.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _7985___mcc_h5530 = _source371.dtor_format;
                  if (object.Equals(_7983___mcc_h5528, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source372 = _7984___mcc_h5529;
                    if (_source372.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _7986___mcc_h5534 = _source372.dtor_content;
                    } else if (_source372.is_ExprFromType) {
                      RAST._IType _7987___mcc_h5536 = _source372.dtor_tpe;
                    } else if (_source372.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _7988___mcc_h5538 = _source372.dtor_name;
                      if (object.Equals(_7988___mcc_h5538, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source372.is_Match) {
                      RAST._IExpr _7989___mcc_h5540 = _source372.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _7990___mcc_h5541 = _source372.dtor_cases;
                    } else if (_source372.is_StmtExpr) {
                      RAST._IExpr _7991___mcc_h5544 = _source372.dtor_stmt;
                      RAST._IExpr _7992___mcc_h5545 = _source372.dtor_rhs;
                    } else if (_source372.is_Block) {
                      RAST._IExpr _7993___mcc_h5548 = _source372.dtor_underlying;
                    } else if (_source372.is_StructBuild) {
                      RAST._IExpr _7994___mcc_h5550 = _source372.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _7995___mcc_h5551 = _source372.dtor_assignments;
                    } else if (_source372.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _7996___mcc_h5554 = _source372.dtor_arguments;
                    } else if (_source372.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _7997___mcc_h5556 = _source372.dtor_op1;
                      RAST._IExpr _7998___mcc_h5557 = _source372.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _7999___mcc_h5558 = _source372.dtor_format;
                    } else if (_source372.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8000___mcc_h5562 = _source372.dtor_op2;
                      RAST._IExpr _8001___mcc_h5563 = _source372.dtor_left;
                      RAST._IExpr _8002___mcc_h5564 = _source372.dtor_right;
                      DAST.Format._IBinaryOpFormat _8003___mcc_h5565 = _source372.dtor_format2;
                    } else if (_source372.is_TypeAscription) {
                      RAST._IExpr _8004___mcc_h5570 = _source372.dtor_left;
                      RAST._IType _8005___mcc_h5571 = _source372.dtor_tpe;
                    } else if (_source372.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8006___mcc_h5574 = _source372.dtor_value;
                    } else if (_source372.is_LiteralBool) {
                      bool _8007___mcc_h5576 = _source372.dtor_bvalue;
                    } else if (_source372.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8008___mcc_h5578 = _source372.dtor_value;
                      bool _8009___mcc_h5579 = _source372.dtor_binary;
                    } else if (_source372.is_DeclareVar) {
                      RAST._IDeclareType _8010___mcc_h5582 = _source372.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8011___mcc_h5583 = _source372.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8012___mcc_h5584 = _source372.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8013___mcc_h5585 = _source372.dtor_optRhs;
                    } else if (_source372.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8014___mcc_h5590 = _source372.dtor_names;
                      RAST._IExpr _8015___mcc_h5591 = _source372.dtor_rhs;
                    } else if (_source372.is_IfExpr) {
                      RAST._IExpr _8016___mcc_h5594 = _source372.dtor_cond;
                      RAST._IExpr _8017___mcc_h5595 = _source372.dtor_thn;
                      RAST._IExpr _8018___mcc_h5596 = _source372.dtor_els;
                    } else if (_source372.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8019___mcc_h5600 = _source372.dtor_optCond;
                      RAST._IExpr _8020___mcc_h5601 = _source372.dtor_underlying;
                    } else if (_source372.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8021___mcc_h5604 = _source372.dtor_name;
                      RAST._IExpr _8022___mcc_h5605 = _source372.dtor_range;
                      RAST._IExpr _8023___mcc_h5606 = _source372.dtor_body;
                    } else if (_source372.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8024___mcc_h5610 = _source372.dtor_lbl;
                      RAST._IExpr _8025___mcc_h5611 = _source372.dtor_underlying;
                    } else if (_source372.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8026___mcc_h5614 = _source372.dtor_optLbl;
                    } else if (_source372.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8027___mcc_h5616 = _source372.dtor_optLbl;
                    } else if (_source372.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8028___mcc_h5618 = _source372.dtor_optExpr;
                    } else if (_source372.is_CallType) {
                      RAST._IExpr _8029___mcc_h5620 = _source372.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8030___mcc_h5621 = _source372.dtor_typeParameters;
                    } else if (_source372.is_Call) {
                      RAST._IExpr _8031___mcc_h5624 = _source372.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8032___mcc_h5625 = _source372.dtor_arguments;
                    } else if (_source372.is_Select) {
                      RAST._IExpr _8033___mcc_h5628 = _source372.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8034___mcc_h5629 = _source372.dtor_name;
                    } else if (_source372.is_MemberSelect) {
                      RAST._IExpr _8035___mcc_h5632 = _source372.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8036___mcc_h5633 = _source372.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8037___mcc_h5636 = _source372.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8038___mcc_h5637 = _source372.dtor_retType;
                      RAST._IExpr _8039___mcc_h5638 = _source372.dtor_body;
                    }
                  } else {
                  }
                } else if (_source371.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8040___mcc_h5642 = _source371.dtor_op2;
                  RAST._IExpr _8041___mcc_h5643 = _source371.dtor_left;
                  RAST._IExpr _8042___mcc_h5644 = _source371.dtor_right;
                  DAST.Format._IBinaryOpFormat _8043___mcc_h5645 = _source371.dtor_format2;
                } else if (_source371.is_TypeAscription) {
                  RAST._IExpr _8044___mcc_h5650 = _source371.dtor_left;
                  RAST._IType _8045___mcc_h5651 = _source371.dtor_tpe;
                } else if (_source371.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8046___mcc_h5654 = _source371.dtor_value;
                } else if (_source371.is_LiteralBool) {
                  bool _8047___mcc_h5656 = _source371.dtor_bvalue;
                } else if (_source371.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8048___mcc_h5658 = _source371.dtor_value;
                  bool _8049___mcc_h5659 = _source371.dtor_binary;
                } else if (_source371.is_DeclareVar) {
                  RAST._IDeclareType _8050___mcc_h5662 = _source371.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8051___mcc_h5663 = _source371.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8052___mcc_h5664 = _source371.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8053___mcc_h5665 = _source371.dtor_optRhs;
                } else if (_source371.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8054___mcc_h5670 = _source371.dtor_names;
                  RAST._IExpr _8055___mcc_h5671 = _source371.dtor_rhs;
                } else if (_source371.is_IfExpr) {
                  RAST._IExpr _8056___mcc_h5674 = _source371.dtor_cond;
                  RAST._IExpr _8057___mcc_h5675 = _source371.dtor_thn;
                  RAST._IExpr _8058___mcc_h5676 = _source371.dtor_els;
                } else if (_source371.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8059___mcc_h5680 = _source371.dtor_optCond;
                  RAST._IExpr _8060___mcc_h5681 = _source371.dtor_underlying;
                } else if (_source371.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8061___mcc_h5684 = _source371.dtor_name;
                  RAST._IExpr _8062___mcc_h5685 = _source371.dtor_range;
                  RAST._IExpr _8063___mcc_h5686 = _source371.dtor_body;
                } else if (_source371.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8064___mcc_h5690 = _source371.dtor_lbl;
                  RAST._IExpr _8065___mcc_h5691 = _source371.dtor_underlying;
                } else if (_source371.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8066___mcc_h5694 = _source371.dtor_optLbl;
                } else if (_source371.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8067___mcc_h5696 = _source371.dtor_optLbl;
                } else if (_source371.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8068___mcc_h5698 = _source371.dtor_optExpr;
                } else if (_source371.is_CallType) {
                  RAST._IExpr _8069___mcc_h5700 = _source371.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8070___mcc_h5701 = _source371.dtor_typeParameters;
                } else if (_source371.is_Call) {
                  RAST._IExpr _8071___mcc_h5704 = _source371.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8072___mcc_h5705 = _source371.dtor_arguments;
                } else if (_source371.is_Select) {
                  RAST._IExpr _8073___mcc_h5708 = _source371.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8074___mcc_h5709 = _source371.dtor_name;
                } else if (_source371.is_MemberSelect) {
                  RAST._IExpr _8075___mcc_h5712 = _source371.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8076___mcc_h5713 = _source371.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8077___mcc_h5716 = _source371.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8078___mcc_h5717 = _source371.dtor_retType;
                  RAST._IExpr _8079___mcc_h5718 = _source371.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_7963_field));
              if (_7962_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1929;
              DCOMP._IOwnership _out1930;
              (this).FromOwned(r, expectedOwnership, out _out1929, out _out1930);
              r = _out1929;
              resultingOwnership = _out1930;
              readIdents = _7971_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapValues) {
          DAST._IExpression _8080___mcc_h165 = _source322.dtor_expr;
          DAST._IType _8081_fieldType = _5017___mcc_h58;
          bool _8082_isDatatype = _5016___mcc_h57;
          bool _8083_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8084_field = _5014___mcc_h55;
          DAST._IExpression _8085_on = _5013___mcc_h54;
          {
            if (_8082_isDatatype) {
              RAST._IExpr _8086_onExpr;
              DCOMP._IOwnership _8087_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8088_recIdents;
              RAST._IExpr _out1931;
              DCOMP._IOwnership _out1932;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1933;
              (this).GenExpr(_8085_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1931, out _out1932, out _out1933);
              _8086_onExpr = _out1931;
              _8087_onOwned = _out1932;
              _8088_recIdents = _out1933;
              r = ((_8086_onExpr).Sel(DCOMP.__default.escapeName(_8084_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8089_typ;
              RAST._IType _out1934;
              _out1934 = (this).GenType(_8081_fieldType, DCOMP.GenTypeContext.@default());
              _8089_typ = _out1934;
              RAST._IExpr _out1935;
              DCOMP._IOwnership _out1936;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1935, out _out1936);
              r = _out1935;
              resultingOwnership = _out1936;
              readIdents = _8088_recIdents;
            } else {
              RAST._IExpr _8090_onExpr;
              DCOMP._IOwnership _8091_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8092_recIdents;
              RAST._IExpr _out1937;
              DCOMP._IOwnership _out1938;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1939;
              (this).GenExpr(_8085_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1937, out _out1938, out _out1939);
              _8090_onExpr = _out1937;
              _8091_onOwned = _out1938;
              _8092_recIdents = _out1939;
              r = _8090_onExpr;
              if (!object.Equals(_8090_onExpr, RAST.__default.self)) {
                RAST._IExpr _source373 = _8090_onExpr;
                if (_source373.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8093___mcc_h5722 = _source373.dtor_content;
                } else if (_source373.is_ExprFromType) {
                  RAST._IType _8094___mcc_h5724 = _source373.dtor_tpe;
                } else if (_source373.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8095___mcc_h5726 = _source373.dtor_name;
                } else if (_source373.is_Match) {
                  RAST._IExpr _8096___mcc_h5728 = _source373.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8097___mcc_h5729 = _source373.dtor_cases;
                } else if (_source373.is_StmtExpr) {
                  RAST._IExpr _8098___mcc_h5732 = _source373.dtor_stmt;
                  RAST._IExpr _8099___mcc_h5733 = _source373.dtor_rhs;
                } else if (_source373.is_Block) {
                  RAST._IExpr _8100___mcc_h5736 = _source373.dtor_underlying;
                } else if (_source373.is_StructBuild) {
                  RAST._IExpr _8101___mcc_h5738 = _source373.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8102___mcc_h5739 = _source373.dtor_assignments;
                } else if (_source373.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8103___mcc_h5742 = _source373.dtor_arguments;
                } else if (_source373.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8104___mcc_h5744 = _source373.dtor_op1;
                  RAST._IExpr _8105___mcc_h5745 = _source373.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8106___mcc_h5746 = _source373.dtor_format;
                  if (object.Equals(_8104___mcc_h5744, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source374 = _8105___mcc_h5745;
                    if (_source374.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8107___mcc_h5750 = _source374.dtor_content;
                    } else if (_source374.is_ExprFromType) {
                      RAST._IType _8108___mcc_h5752 = _source374.dtor_tpe;
                    } else if (_source374.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8109___mcc_h5754 = _source374.dtor_name;
                      if (object.Equals(_8109___mcc_h5754, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source374.is_Match) {
                      RAST._IExpr _8110___mcc_h5756 = _source374.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8111___mcc_h5757 = _source374.dtor_cases;
                    } else if (_source374.is_StmtExpr) {
                      RAST._IExpr _8112___mcc_h5760 = _source374.dtor_stmt;
                      RAST._IExpr _8113___mcc_h5761 = _source374.dtor_rhs;
                    } else if (_source374.is_Block) {
                      RAST._IExpr _8114___mcc_h5764 = _source374.dtor_underlying;
                    } else if (_source374.is_StructBuild) {
                      RAST._IExpr _8115___mcc_h5766 = _source374.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8116___mcc_h5767 = _source374.dtor_assignments;
                    } else if (_source374.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8117___mcc_h5770 = _source374.dtor_arguments;
                    } else if (_source374.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8118___mcc_h5772 = _source374.dtor_op1;
                      RAST._IExpr _8119___mcc_h5773 = _source374.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8120___mcc_h5774 = _source374.dtor_format;
                    } else if (_source374.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8121___mcc_h5778 = _source374.dtor_op2;
                      RAST._IExpr _8122___mcc_h5779 = _source374.dtor_left;
                      RAST._IExpr _8123___mcc_h5780 = _source374.dtor_right;
                      DAST.Format._IBinaryOpFormat _8124___mcc_h5781 = _source374.dtor_format2;
                    } else if (_source374.is_TypeAscription) {
                      RAST._IExpr _8125___mcc_h5786 = _source374.dtor_left;
                      RAST._IType _8126___mcc_h5787 = _source374.dtor_tpe;
                    } else if (_source374.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8127___mcc_h5790 = _source374.dtor_value;
                    } else if (_source374.is_LiteralBool) {
                      bool _8128___mcc_h5792 = _source374.dtor_bvalue;
                    } else if (_source374.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8129___mcc_h5794 = _source374.dtor_value;
                      bool _8130___mcc_h5795 = _source374.dtor_binary;
                    } else if (_source374.is_DeclareVar) {
                      RAST._IDeclareType _8131___mcc_h5798 = _source374.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8132___mcc_h5799 = _source374.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8133___mcc_h5800 = _source374.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8134___mcc_h5801 = _source374.dtor_optRhs;
                    } else if (_source374.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8135___mcc_h5806 = _source374.dtor_names;
                      RAST._IExpr _8136___mcc_h5807 = _source374.dtor_rhs;
                    } else if (_source374.is_IfExpr) {
                      RAST._IExpr _8137___mcc_h5810 = _source374.dtor_cond;
                      RAST._IExpr _8138___mcc_h5811 = _source374.dtor_thn;
                      RAST._IExpr _8139___mcc_h5812 = _source374.dtor_els;
                    } else if (_source374.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8140___mcc_h5816 = _source374.dtor_optCond;
                      RAST._IExpr _8141___mcc_h5817 = _source374.dtor_underlying;
                    } else if (_source374.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8142___mcc_h5820 = _source374.dtor_name;
                      RAST._IExpr _8143___mcc_h5821 = _source374.dtor_range;
                      RAST._IExpr _8144___mcc_h5822 = _source374.dtor_body;
                    } else if (_source374.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8145___mcc_h5826 = _source374.dtor_lbl;
                      RAST._IExpr _8146___mcc_h5827 = _source374.dtor_underlying;
                    } else if (_source374.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8147___mcc_h5830 = _source374.dtor_optLbl;
                    } else if (_source374.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8148___mcc_h5832 = _source374.dtor_optLbl;
                    } else if (_source374.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8149___mcc_h5834 = _source374.dtor_optExpr;
                    } else if (_source374.is_CallType) {
                      RAST._IExpr _8150___mcc_h5836 = _source374.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8151___mcc_h5837 = _source374.dtor_typeParameters;
                    } else if (_source374.is_Call) {
                      RAST._IExpr _8152___mcc_h5840 = _source374.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8153___mcc_h5841 = _source374.dtor_arguments;
                    } else if (_source374.is_Select) {
                      RAST._IExpr _8154___mcc_h5844 = _source374.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8155___mcc_h5845 = _source374.dtor_name;
                    } else if (_source374.is_MemberSelect) {
                      RAST._IExpr _8156___mcc_h5848 = _source374.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8157___mcc_h5849 = _source374.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8158___mcc_h5852 = _source374.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8159___mcc_h5853 = _source374.dtor_retType;
                      RAST._IExpr _8160___mcc_h5854 = _source374.dtor_body;
                    }
                  } else {
                  }
                } else if (_source373.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8161___mcc_h5858 = _source373.dtor_op2;
                  RAST._IExpr _8162___mcc_h5859 = _source373.dtor_left;
                  RAST._IExpr _8163___mcc_h5860 = _source373.dtor_right;
                  DAST.Format._IBinaryOpFormat _8164___mcc_h5861 = _source373.dtor_format2;
                } else if (_source373.is_TypeAscription) {
                  RAST._IExpr _8165___mcc_h5866 = _source373.dtor_left;
                  RAST._IType _8166___mcc_h5867 = _source373.dtor_tpe;
                } else if (_source373.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8167___mcc_h5870 = _source373.dtor_value;
                } else if (_source373.is_LiteralBool) {
                  bool _8168___mcc_h5872 = _source373.dtor_bvalue;
                } else if (_source373.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8169___mcc_h5874 = _source373.dtor_value;
                  bool _8170___mcc_h5875 = _source373.dtor_binary;
                } else if (_source373.is_DeclareVar) {
                  RAST._IDeclareType _8171___mcc_h5878 = _source373.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8172___mcc_h5879 = _source373.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8173___mcc_h5880 = _source373.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8174___mcc_h5881 = _source373.dtor_optRhs;
                } else if (_source373.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8175___mcc_h5886 = _source373.dtor_names;
                  RAST._IExpr _8176___mcc_h5887 = _source373.dtor_rhs;
                } else if (_source373.is_IfExpr) {
                  RAST._IExpr _8177___mcc_h5890 = _source373.dtor_cond;
                  RAST._IExpr _8178___mcc_h5891 = _source373.dtor_thn;
                  RAST._IExpr _8179___mcc_h5892 = _source373.dtor_els;
                } else if (_source373.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8180___mcc_h5896 = _source373.dtor_optCond;
                  RAST._IExpr _8181___mcc_h5897 = _source373.dtor_underlying;
                } else if (_source373.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8182___mcc_h5900 = _source373.dtor_name;
                  RAST._IExpr _8183___mcc_h5901 = _source373.dtor_range;
                  RAST._IExpr _8184___mcc_h5902 = _source373.dtor_body;
                } else if (_source373.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8185___mcc_h5906 = _source373.dtor_lbl;
                  RAST._IExpr _8186___mcc_h5907 = _source373.dtor_underlying;
                } else if (_source373.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8187___mcc_h5910 = _source373.dtor_optLbl;
                } else if (_source373.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8188___mcc_h5912 = _source373.dtor_optLbl;
                } else if (_source373.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8189___mcc_h5914 = _source373.dtor_optExpr;
                } else if (_source373.is_CallType) {
                  RAST._IExpr _8190___mcc_h5916 = _source373.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8191___mcc_h5917 = _source373.dtor_typeParameters;
                } else if (_source373.is_Call) {
                  RAST._IExpr _8192___mcc_h5920 = _source373.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8193___mcc_h5921 = _source373.dtor_arguments;
                } else if (_source373.is_Select) {
                  RAST._IExpr _8194___mcc_h5924 = _source373.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8195___mcc_h5925 = _source373.dtor_name;
                } else if (_source373.is_MemberSelect) {
                  RAST._IExpr _8196___mcc_h5928 = _source373.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8197___mcc_h5929 = _source373.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8198___mcc_h5932 = _source373.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8199___mcc_h5933 = _source373.dtor_retType;
                  RAST._IExpr _8200___mcc_h5934 = _source373.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8084_field));
              if (_8083_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1940;
              DCOMP._IOwnership _out1941;
              (this).FromOwned(r, expectedOwnership, out _out1940, out _out1941);
              r = _out1940;
              resultingOwnership = _out1941;
              readIdents = _8092_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Select) {
          DAST._IExpression _8201___mcc_h167 = _source322.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _8202___mcc_h168 = _source322.dtor_field;
          bool _8203___mcc_h169 = _source322.dtor_isConstant;
          bool _8204___mcc_h170 = _source322.dtor_onDatatype;
          DAST._IType _8205___mcc_h171 = _source322.dtor_fieldType;
          DAST._IType _8206_fieldType = _5017___mcc_h58;
          bool _8207_isDatatype = _5016___mcc_h57;
          bool _8208_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8209_field = _5014___mcc_h55;
          DAST._IExpression _8210_on = _5013___mcc_h54;
          {
            if (_8207_isDatatype) {
              RAST._IExpr _8211_onExpr;
              DCOMP._IOwnership _8212_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8213_recIdents;
              RAST._IExpr _out1942;
              DCOMP._IOwnership _out1943;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1944;
              (this).GenExpr(_8210_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1942, out _out1943, out _out1944);
              _8211_onExpr = _out1942;
              _8212_onOwned = _out1943;
              _8213_recIdents = _out1944;
              r = ((_8211_onExpr).Sel(DCOMP.__default.escapeName(_8209_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8214_typ;
              RAST._IType _out1945;
              _out1945 = (this).GenType(_8206_fieldType, DCOMP.GenTypeContext.@default());
              _8214_typ = _out1945;
              RAST._IExpr _out1946;
              DCOMP._IOwnership _out1947;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1946, out _out1947);
              r = _out1946;
              resultingOwnership = _out1947;
              readIdents = _8213_recIdents;
            } else {
              RAST._IExpr _8215_onExpr;
              DCOMP._IOwnership _8216_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8217_recIdents;
              RAST._IExpr _out1948;
              DCOMP._IOwnership _out1949;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1950;
              (this).GenExpr(_8210_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1948, out _out1949, out _out1950);
              _8215_onExpr = _out1948;
              _8216_onOwned = _out1949;
              _8217_recIdents = _out1950;
              r = _8215_onExpr;
              if (!object.Equals(_8215_onExpr, RAST.__default.self)) {
                RAST._IExpr _source375 = _8215_onExpr;
                if (_source375.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8218___mcc_h5938 = _source375.dtor_content;
                } else if (_source375.is_ExprFromType) {
                  RAST._IType _8219___mcc_h5940 = _source375.dtor_tpe;
                } else if (_source375.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8220___mcc_h5942 = _source375.dtor_name;
                } else if (_source375.is_Match) {
                  RAST._IExpr _8221___mcc_h5944 = _source375.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8222___mcc_h5945 = _source375.dtor_cases;
                } else if (_source375.is_StmtExpr) {
                  RAST._IExpr _8223___mcc_h5948 = _source375.dtor_stmt;
                  RAST._IExpr _8224___mcc_h5949 = _source375.dtor_rhs;
                } else if (_source375.is_Block) {
                  RAST._IExpr _8225___mcc_h5952 = _source375.dtor_underlying;
                } else if (_source375.is_StructBuild) {
                  RAST._IExpr _8226___mcc_h5954 = _source375.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8227___mcc_h5955 = _source375.dtor_assignments;
                } else if (_source375.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8228___mcc_h5958 = _source375.dtor_arguments;
                } else if (_source375.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8229___mcc_h5960 = _source375.dtor_op1;
                  RAST._IExpr _8230___mcc_h5961 = _source375.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8231___mcc_h5962 = _source375.dtor_format;
                  if (object.Equals(_8229___mcc_h5960, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source376 = _8230___mcc_h5961;
                    if (_source376.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8232___mcc_h5966 = _source376.dtor_content;
                    } else if (_source376.is_ExprFromType) {
                      RAST._IType _8233___mcc_h5968 = _source376.dtor_tpe;
                    } else if (_source376.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8234___mcc_h5970 = _source376.dtor_name;
                      if (object.Equals(_8234___mcc_h5970, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source376.is_Match) {
                      RAST._IExpr _8235___mcc_h5972 = _source376.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8236___mcc_h5973 = _source376.dtor_cases;
                    } else if (_source376.is_StmtExpr) {
                      RAST._IExpr _8237___mcc_h5976 = _source376.dtor_stmt;
                      RAST._IExpr _8238___mcc_h5977 = _source376.dtor_rhs;
                    } else if (_source376.is_Block) {
                      RAST._IExpr _8239___mcc_h5980 = _source376.dtor_underlying;
                    } else if (_source376.is_StructBuild) {
                      RAST._IExpr _8240___mcc_h5982 = _source376.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8241___mcc_h5983 = _source376.dtor_assignments;
                    } else if (_source376.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8242___mcc_h5986 = _source376.dtor_arguments;
                    } else if (_source376.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8243___mcc_h5988 = _source376.dtor_op1;
                      RAST._IExpr _8244___mcc_h5989 = _source376.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8245___mcc_h5990 = _source376.dtor_format;
                    } else if (_source376.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8246___mcc_h5994 = _source376.dtor_op2;
                      RAST._IExpr _8247___mcc_h5995 = _source376.dtor_left;
                      RAST._IExpr _8248___mcc_h5996 = _source376.dtor_right;
                      DAST.Format._IBinaryOpFormat _8249___mcc_h5997 = _source376.dtor_format2;
                    } else if (_source376.is_TypeAscription) {
                      RAST._IExpr _8250___mcc_h6002 = _source376.dtor_left;
                      RAST._IType _8251___mcc_h6003 = _source376.dtor_tpe;
                    } else if (_source376.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8252___mcc_h6006 = _source376.dtor_value;
                    } else if (_source376.is_LiteralBool) {
                      bool _8253___mcc_h6008 = _source376.dtor_bvalue;
                    } else if (_source376.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8254___mcc_h6010 = _source376.dtor_value;
                      bool _8255___mcc_h6011 = _source376.dtor_binary;
                    } else if (_source376.is_DeclareVar) {
                      RAST._IDeclareType _8256___mcc_h6014 = _source376.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8257___mcc_h6015 = _source376.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8258___mcc_h6016 = _source376.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8259___mcc_h6017 = _source376.dtor_optRhs;
                    } else if (_source376.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8260___mcc_h6022 = _source376.dtor_names;
                      RAST._IExpr _8261___mcc_h6023 = _source376.dtor_rhs;
                    } else if (_source376.is_IfExpr) {
                      RAST._IExpr _8262___mcc_h6026 = _source376.dtor_cond;
                      RAST._IExpr _8263___mcc_h6027 = _source376.dtor_thn;
                      RAST._IExpr _8264___mcc_h6028 = _source376.dtor_els;
                    } else if (_source376.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8265___mcc_h6032 = _source376.dtor_optCond;
                      RAST._IExpr _8266___mcc_h6033 = _source376.dtor_underlying;
                    } else if (_source376.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8267___mcc_h6036 = _source376.dtor_name;
                      RAST._IExpr _8268___mcc_h6037 = _source376.dtor_range;
                      RAST._IExpr _8269___mcc_h6038 = _source376.dtor_body;
                    } else if (_source376.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8270___mcc_h6042 = _source376.dtor_lbl;
                      RAST._IExpr _8271___mcc_h6043 = _source376.dtor_underlying;
                    } else if (_source376.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8272___mcc_h6046 = _source376.dtor_optLbl;
                    } else if (_source376.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8273___mcc_h6048 = _source376.dtor_optLbl;
                    } else if (_source376.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8274___mcc_h6050 = _source376.dtor_optExpr;
                    } else if (_source376.is_CallType) {
                      RAST._IExpr _8275___mcc_h6052 = _source376.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8276___mcc_h6053 = _source376.dtor_typeParameters;
                    } else if (_source376.is_Call) {
                      RAST._IExpr _8277___mcc_h6056 = _source376.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8278___mcc_h6057 = _source376.dtor_arguments;
                    } else if (_source376.is_Select) {
                      RAST._IExpr _8279___mcc_h6060 = _source376.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8280___mcc_h6061 = _source376.dtor_name;
                    } else if (_source376.is_MemberSelect) {
                      RAST._IExpr _8281___mcc_h6064 = _source376.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8282___mcc_h6065 = _source376.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8283___mcc_h6068 = _source376.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8284___mcc_h6069 = _source376.dtor_retType;
                      RAST._IExpr _8285___mcc_h6070 = _source376.dtor_body;
                    }
                  } else {
                  }
                } else if (_source375.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8286___mcc_h6074 = _source375.dtor_op2;
                  RAST._IExpr _8287___mcc_h6075 = _source375.dtor_left;
                  RAST._IExpr _8288___mcc_h6076 = _source375.dtor_right;
                  DAST.Format._IBinaryOpFormat _8289___mcc_h6077 = _source375.dtor_format2;
                } else if (_source375.is_TypeAscription) {
                  RAST._IExpr _8290___mcc_h6082 = _source375.dtor_left;
                  RAST._IType _8291___mcc_h6083 = _source375.dtor_tpe;
                } else if (_source375.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8292___mcc_h6086 = _source375.dtor_value;
                } else if (_source375.is_LiteralBool) {
                  bool _8293___mcc_h6088 = _source375.dtor_bvalue;
                } else if (_source375.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8294___mcc_h6090 = _source375.dtor_value;
                  bool _8295___mcc_h6091 = _source375.dtor_binary;
                } else if (_source375.is_DeclareVar) {
                  RAST._IDeclareType _8296___mcc_h6094 = _source375.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8297___mcc_h6095 = _source375.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8298___mcc_h6096 = _source375.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8299___mcc_h6097 = _source375.dtor_optRhs;
                } else if (_source375.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8300___mcc_h6102 = _source375.dtor_names;
                  RAST._IExpr _8301___mcc_h6103 = _source375.dtor_rhs;
                } else if (_source375.is_IfExpr) {
                  RAST._IExpr _8302___mcc_h6106 = _source375.dtor_cond;
                  RAST._IExpr _8303___mcc_h6107 = _source375.dtor_thn;
                  RAST._IExpr _8304___mcc_h6108 = _source375.dtor_els;
                } else if (_source375.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8305___mcc_h6112 = _source375.dtor_optCond;
                  RAST._IExpr _8306___mcc_h6113 = _source375.dtor_underlying;
                } else if (_source375.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8307___mcc_h6116 = _source375.dtor_name;
                  RAST._IExpr _8308___mcc_h6117 = _source375.dtor_range;
                  RAST._IExpr _8309___mcc_h6118 = _source375.dtor_body;
                } else if (_source375.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8310___mcc_h6122 = _source375.dtor_lbl;
                  RAST._IExpr _8311___mcc_h6123 = _source375.dtor_underlying;
                } else if (_source375.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8312___mcc_h6126 = _source375.dtor_optLbl;
                } else if (_source375.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8313___mcc_h6128 = _source375.dtor_optLbl;
                } else if (_source375.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8314___mcc_h6130 = _source375.dtor_optExpr;
                } else if (_source375.is_CallType) {
                  RAST._IExpr _8315___mcc_h6132 = _source375.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8316___mcc_h6133 = _source375.dtor_typeParameters;
                } else if (_source375.is_Call) {
                  RAST._IExpr _8317___mcc_h6136 = _source375.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8318___mcc_h6137 = _source375.dtor_arguments;
                } else if (_source375.is_Select) {
                  RAST._IExpr _8319___mcc_h6140 = _source375.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8320___mcc_h6141 = _source375.dtor_name;
                } else if (_source375.is_MemberSelect) {
                  RAST._IExpr _8321___mcc_h6144 = _source375.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8322___mcc_h6145 = _source375.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8323___mcc_h6148 = _source375.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8324___mcc_h6149 = _source375.dtor_retType;
                  RAST._IExpr _8325___mcc_h6150 = _source375.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8209_field));
              if (_8208_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1951;
              DCOMP._IOwnership _out1952;
              (this).FromOwned(r, expectedOwnership, out _out1951, out _out1952);
              r = _out1951;
              resultingOwnership = _out1952;
              readIdents = _8217_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SelectFn) {
          DAST._IExpression _8326___mcc_h177 = _source322.dtor_expr;
          Dafny.ISequence<Dafny.Rune> _8327___mcc_h178 = _source322.dtor_field;
          bool _8328___mcc_h179 = _source322.dtor_onDatatype;
          bool _8329___mcc_h180 = _source322.dtor_isStatic;
          BigInteger _8330___mcc_h181 = _source322.dtor_arity;
          DAST._IType _8331_fieldType = _5017___mcc_h58;
          bool _8332_isDatatype = _5016___mcc_h57;
          bool _8333_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8334_field = _5014___mcc_h55;
          DAST._IExpression _8335_on = _5013___mcc_h54;
          {
            if (_8332_isDatatype) {
              RAST._IExpr _8336_onExpr;
              DCOMP._IOwnership _8337_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8338_recIdents;
              RAST._IExpr _out1953;
              DCOMP._IOwnership _out1954;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1955;
              (this).GenExpr(_8335_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1953, out _out1954, out _out1955);
              _8336_onExpr = _out1953;
              _8337_onOwned = _out1954;
              _8338_recIdents = _out1955;
              r = ((_8336_onExpr).Sel(DCOMP.__default.escapeName(_8334_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8339_typ;
              RAST._IType _out1956;
              _out1956 = (this).GenType(_8331_fieldType, DCOMP.GenTypeContext.@default());
              _8339_typ = _out1956;
              RAST._IExpr _out1957;
              DCOMP._IOwnership _out1958;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1957, out _out1958);
              r = _out1957;
              resultingOwnership = _out1958;
              readIdents = _8338_recIdents;
            } else {
              RAST._IExpr _8340_onExpr;
              DCOMP._IOwnership _8341_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8342_recIdents;
              RAST._IExpr _out1959;
              DCOMP._IOwnership _out1960;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1961;
              (this).GenExpr(_8335_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1959, out _out1960, out _out1961);
              _8340_onExpr = _out1959;
              _8341_onOwned = _out1960;
              _8342_recIdents = _out1961;
              r = _8340_onExpr;
              if (!object.Equals(_8340_onExpr, RAST.__default.self)) {
                RAST._IExpr _source377 = _8340_onExpr;
                if (_source377.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8343___mcc_h6154 = _source377.dtor_content;
                } else if (_source377.is_ExprFromType) {
                  RAST._IType _8344___mcc_h6156 = _source377.dtor_tpe;
                } else if (_source377.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8345___mcc_h6158 = _source377.dtor_name;
                } else if (_source377.is_Match) {
                  RAST._IExpr _8346___mcc_h6160 = _source377.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8347___mcc_h6161 = _source377.dtor_cases;
                } else if (_source377.is_StmtExpr) {
                  RAST._IExpr _8348___mcc_h6164 = _source377.dtor_stmt;
                  RAST._IExpr _8349___mcc_h6165 = _source377.dtor_rhs;
                } else if (_source377.is_Block) {
                  RAST._IExpr _8350___mcc_h6168 = _source377.dtor_underlying;
                } else if (_source377.is_StructBuild) {
                  RAST._IExpr _8351___mcc_h6170 = _source377.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8352___mcc_h6171 = _source377.dtor_assignments;
                } else if (_source377.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8353___mcc_h6174 = _source377.dtor_arguments;
                } else if (_source377.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8354___mcc_h6176 = _source377.dtor_op1;
                  RAST._IExpr _8355___mcc_h6177 = _source377.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8356___mcc_h6178 = _source377.dtor_format;
                  if (object.Equals(_8354___mcc_h6176, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source378 = _8355___mcc_h6177;
                    if (_source378.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8357___mcc_h6182 = _source378.dtor_content;
                    } else if (_source378.is_ExprFromType) {
                      RAST._IType _8358___mcc_h6184 = _source378.dtor_tpe;
                    } else if (_source378.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8359___mcc_h6186 = _source378.dtor_name;
                      if (object.Equals(_8359___mcc_h6186, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source378.is_Match) {
                      RAST._IExpr _8360___mcc_h6188 = _source378.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8361___mcc_h6189 = _source378.dtor_cases;
                    } else if (_source378.is_StmtExpr) {
                      RAST._IExpr _8362___mcc_h6192 = _source378.dtor_stmt;
                      RAST._IExpr _8363___mcc_h6193 = _source378.dtor_rhs;
                    } else if (_source378.is_Block) {
                      RAST._IExpr _8364___mcc_h6196 = _source378.dtor_underlying;
                    } else if (_source378.is_StructBuild) {
                      RAST._IExpr _8365___mcc_h6198 = _source378.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8366___mcc_h6199 = _source378.dtor_assignments;
                    } else if (_source378.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8367___mcc_h6202 = _source378.dtor_arguments;
                    } else if (_source378.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8368___mcc_h6204 = _source378.dtor_op1;
                      RAST._IExpr _8369___mcc_h6205 = _source378.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8370___mcc_h6206 = _source378.dtor_format;
                    } else if (_source378.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8371___mcc_h6210 = _source378.dtor_op2;
                      RAST._IExpr _8372___mcc_h6211 = _source378.dtor_left;
                      RAST._IExpr _8373___mcc_h6212 = _source378.dtor_right;
                      DAST.Format._IBinaryOpFormat _8374___mcc_h6213 = _source378.dtor_format2;
                    } else if (_source378.is_TypeAscription) {
                      RAST._IExpr _8375___mcc_h6218 = _source378.dtor_left;
                      RAST._IType _8376___mcc_h6219 = _source378.dtor_tpe;
                    } else if (_source378.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8377___mcc_h6222 = _source378.dtor_value;
                    } else if (_source378.is_LiteralBool) {
                      bool _8378___mcc_h6224 = _source378.dtor_bvalue;
                    } else if (_source378.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8379___mcc_h6226 = _source378.dtor_value;
                      bool _8380___mcc_h6227 = _source378.dtor_binary;
                    } else if (_source378.is_DeclareVar) {
                      RAST._IDeclareType _8381___mcc_h6230 = _source378.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8382___mcc_h6231 = _source378.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8383___mcc_h6232 = _source378.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8384___mcc_h6233 = _source378.dtor_optRhs;
                    } else if (_source378.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8385___mcc_h6238 = _source378.dtor_names;
                      RAST._IExpr _8386___mcc_h6239 = _source378.dtor_rhs;
                    } else if (_source378.is_IfExpr) {
                      RAST._IExpr _8387___mcc_h6242 = _source378.dtor_cond;
                      RAST._IExpr _8388___mcc_h6243 = _source378.dtor_thn;
                      RAST._IExpr _8389___mcc_h6244 = _source378.dtor_els;
                    } else if (_source378.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8390___mcc_h6248 = _source378.dtor_optCond;
                      RAST._IExpr _8391___mcc_h6249 = _source378.dtor_underlying;
                    } else if (_source378.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8392___mcc_h6252 = _source378.dtor_name;
                      RAST._IExpr _8393___mcc_h6253 = _source378.dtor_range;
                      RAST._IExpr _8394___mcc_h6254 = _source378.dtor_body;
                    } else if (_source378.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8395___mcc_h6258 = _source378.dtor_lbl;
                      RAST._IExpr _8396___mcc_h6259 = _source378.dtor_underlying;
                    } else if (_source378.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8397___mcc_h6262 = _source378.dtor_optLbl;
                    } else if (_source378.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8398___mcc_h6264 = _source378.dtor_optLbl;
                    } else if (_source378.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8399___mcc_h6266 = _source378.dtor_optExpr;
                    } else if (_source378.is_CallType) {
                      RAST._IExpr _8400___mcc_h6268 = _source378.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8401___mcc_h6269 = _source378.dtor_typeParameters;
                    } else if (_source378.is_Call) {
                      RAST._IExpr _8402___mcc_h6272 = _source378.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8403___mcc_h6273 = _source378.dtor_arguments;
                    } else if (_source378.is_Select) {
                      RAST._IExpr _8404___mcc_h6276 = _source378.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8405___mcc_h6277 = _source378.dtor_name;
                    } else if (_source378.is_MemberSelect) {
                      RAST._IExpr _8406___mcc_h6280 = _source378.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8407___mcc_h6281 = _source378.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8408___mcc_h6284 = _source378.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8409___mcc_h6285 = _source378.dtor_retType;
                      RAST._IExpr _8410___mcc_h6286 = _source378.dtor_body;
                    }
                  } else {
                  }
                } else if (_source377.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8411___mcc_h6290 = _source377.dtor_op2;
                  RAST._IExpr _8412___mcc_h6291 = _source377.dtor_left;
                  RAST._IExpr _8413___mcc_h6292 = _source377.dtor_right;
                  DAST.Format._IBinaryOpFormat _8414___mcc_h6293 = _source377.dtor_format2;
                } else if (_source377.is_TypeAscription) {
                  RAST._IExpr _8415___mcc_h6298 = _source377.dtor_left;
                  RAST._IType _8416___mcc_h6299 = _source377.dtor_tpe;
                } else if (_source377.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8417___mcc_h6302 = _source377.dtor_value;
                } else if (_source377.is_LiteralBool) {
                  bool _8418___mcc_h6304 = _source377.dtor_bvalue;
                } else if (_source377.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8419___mcc_h6306 = _source377.dtor_value;
                  bool _8420___mcc_h6307 = _source377.dtor_binary;
                } else if (_source377.is_DeclareVar) {
                  RAST._IDeclareType _8421___mcc_h6310 = _source377.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8422___mcc_h6311 = _source377.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8423___mcc_h6312 = _source377.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8424___mcc_h6313 = _source377.dtor_optRhs;
                } else if (_source377.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8425___mcc_h6318 = _source377.dtor_names;
                  RAST._IExpr _8426___mcc_h6319 = _source377.dtor_rhs;
                } else if (_source377.is_IfExpr) {
                  RAST._IExpr _8427___mcc_h6322 = _source377.dtor_cond;
                  RAST._IExpr _8428___mcc_h6323 = _source377.dtor_thn;
                  RAST._IExpr _8429___mcc_h6324 = _source377.dtor_els;
                } else if (_source377.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8430___mcc_h6328 = _source377.dtor_optCond;
                  RAST._IExpr _8431___mcc_h6329 = _source377.dtor_underlying;
                } else if (_source377.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8432___mcc_h6332 = _source377.dtor_name;
                  RAST._IExpr _8433___mcc_h6333 = _source377.dtor_range;
                  RAST._IExpr _8434___mcc_h6334 = _source377.dtor_body;
                } else if (_source377.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8435___mcc_h6338 = _source377.dtor_lbl;
                  RAST._IExpr _8436___mcc_h6339 = _source377.dtor_underlying;
                } else if (_source377.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8437___mcc_h6342 = _source377.dtor_optLbl;
                } else if (_source377.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8438___mcc_h6344 = _source377.dtor_optLbl;
                } else if (_source377.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8439___mcc_h6346 = _source377.dtor_optExpr;
                } else if (_source377.is_CallType) {
                  RAST._IExpr _8440___mcc_h6348 = _source377.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8441___mcc_h6349 = _source377.dtor_typeParameters;
                } else if (_source377.is_Call) {
                  RAST._IExpr _8442___mcc_h6352 = _source377.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8443___mcc_h6353 = _source377.dtor_arguments;
                } else if (_source377.is_Select) {
                  RAST._IExpr _8444___mcc_h6356 = _source377.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8445___mcc_h6357 = _source377.dtor_name;
                } else if (_source377.is_MemberSelect) {
                  RAST._IExpr _8446___mcc_h6360 = _source377.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8447___mcc_h6361 = _source377.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8448___mcc_h6364 = _source377.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8449___mcc_h6365 = _source377.dtor_retType;
                  RAST._IExpr _8450___mcc_h6366 = _source377.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8334_field));
              if (_8333_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1962;
              DCOMP._IOwnership _out1963;
              (this).FromOwned(r, expectedOwnership, out _out1962, out _out1963);
              r = _out1962;
              resultingOwnership = _out1963;
              readIdents = _8342_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Index) {
          DAST._IExpression _8451___mcc_h187 = _source322.dtor_expr;
          DAST._ICollKind _8452___mcc_h188 = _source322.dtor_collKind;
          Dafny.ISequence<DAST._IExpression> _8453___mcc_h189 = _source322.dtor_indices;
          DAST._IType _8454_fieldType = _5017___mcc_h58;
          bool _8455_isDatatype = _5016___mcc_h57;
          bool _8456_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8457_field = _5014___mcc_h55;
          DAST._IExpression _8458_on = _5013___mcc_h54;
          {
            if (_8455_isDatatype) {
              RAST._IExpr _8459_onExpr;
              DCOMP._IOwnership _8460_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8461_recIdents;
              RAST._IExpr _out1964;
              DCOMP._IOwnership _out1965;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1966;
              (this).GenExpr(_8458_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1964, out _out1965, out _out1966);
              _8459_onExpr = _out1964;
              _8460_onOwned = _out1965;
              _8461_recIdents = _out1966;
              r = ((_8459_onExpr).Sel(DCOMP.__default.escapeName(_8457_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8462_typ;
              RAST._IType _out1967;
              _out1967 = (this).GenType(_8454_fieldType, DCOMP.GenTypeContext.@default());
              _8462_typ = _out1967;
              RAST._IExpr _out1968;
              DCOMP._IOwnership _out1969;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1968, out _out1969);
              r = _out1968;
              resultingOwnership = _out1969;
              readIdents = _8461_recIdents;
            } else {
              RAST._IExpr _8463_onExpr;
              DCOMP._IOwnership _8464_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8465_recIdents;
              RAST._IExpr _out1970;
              DCOMP._IOwnership _out1971;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1972;
              (this).GenExpr(_8458_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1970, out _out1971, out _out1972);
              _8463_onExpr = _out1970;
              _8464_onOwned = _out1971;
              _8465_recIdents = _out1972;
              r = _8463_onExpr;
              if (!object.Equals(_8463_onExpr, RAST.__default.self)) {
                RAST._IExpr _source379 = _8463_onExpr;
                if (_source379.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8466___mcc_h6370 = _source379.dtor_content;
                } else if (_source379.is_ExprFromType) {
                  RAST._IType _8467___mcc_h6372 = _source379.dtor_tpe;
                } else if (_source379.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8468___mcc_h6374 = _source379.dtor_name;
                } else if (_source379.is_Match) {
                  RAST._IExpr _8469___mcc_h6376 = _source379.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8470___mcc_h6377 = _source379.dtor_cases;
                } else if (_source379.is_StmtExpr) {
                  RAST._IExpr _8471___mcc_h6380 = _source379.dtor_stmt;
                  RAST._IExpr _8472___mcc_h6381 = _source379.dtor_rhs;
                } else if (_source379.is_Block) {
                  RAST._IExpr _8473___mcc_h6384 = _source379.dtor_underlying;
                } else if (_source379.is_StructBuild) {
                  RAST._IExpr _8474___mcc_h6386 = _source379.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8475___mcc_h6387 = _source379.dtor_assignments;
                } else if (_source379.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8476___mcc_h6390 = _source379.dtor_arguments;
                } else if (_source379.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8477___mcc_h6392 = _source379.dtor_op1;
                  RAST._IExpr _8478___mcc_h6393 = _source379.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8479___mcc_h6394 = _source379.dtor_format;
                  if (object.Equals(_8477___mcc_h6392, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source380 = _8478___mcc_h6393;
                    if (_source380.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8480___mcc_h6398 = _source380.dtor_content;
                    } else if (_source380.is_ExprFromType) {
                      RAST._IType _8481___mcc_h6400 = _source380.dtor_tpe;
                    } else if (_source380.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8482___mcc_h6402 = _source380.dtor_name;
                      if (object.Equals(_8482___mcc_h6402, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source380.is_Match) {
                      RAST._IExpr _8483___mcc_h6404 = _source380.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8484___mcc_h6405 = _source380.dtor_cases;
                    } else if (_source380.is_StmtExpr) {
                      RAST._IExpr _8485___mcc_h6408 = _source380.dtor_stmt;
                      RAST._IExpr _8486___mcc_h6409 = _source380.dtor_rhs;
                    } else if (_source380.is_Block) {
                      RAST._IExpr _8487___mcc_h6412 = _source380.dtor_underlying;
                    } else if (_source380.is_StructBuild) {
                      RAST._IExpr _8488___mcc_h6414 = _source380.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8489___mcc_h6415 = _source380.dtor_assignments;
                    } else if (_source380.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8490___mcc_h6418 = _source380.dtor_arguments;
                    } else if (_source380.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8491___mcc_h6420 = _source380.dtor_op1;
                      RAST._IExpr _8492___mcc_h6421 = _source380.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8493___mcc_h6422 = _source380.dtor_format;
                    } else if (_source380.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8494___mcc_h6426 = _source380.dtor_op2;
                      RAST._IExpr _8495___mcc_h6427 = _source380.dtor_left;
                      RAST._IExpr _8496___mcc_h6428 = _source380.dtor_right;
                      DAST.Format._IBinaryOpFormat _8497___mcc_h6429 = _source380.dtor_format2;
                    } else if (_source380.is_TypeAscription) {
                      RAST._IExpr _8498___mcc_h6434 = _source380.dtor_left;
                      RAST._IType _8499___mcc_h6435 = _source380.dtor_tpe;
                    } else if (_source380.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8500___mcc_h6438 = _source380.dtor_value;
                    } else if (_source380.is_LiteralBool) {
                      bool _8501___mcc_h6440 = _source380.dtor_bvalue;
                    } else if (_source380.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8502___mcc_h6442 = _source380.dtor_value;
                      bool _8503___mcc_h6443 = _source380.dtor_binary;
                    } else if (_source380.is_DeclareVar) {
                      RAST._IDeclareType _8504___mcc_h6446 = _source380.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8505___mcc_h6447 = _source380.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8506___mcc_h6448 = _source380.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8507___mcc_h6449 = _source380.dtor_optRhs;
                    } else if (_source380.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8508___mcc_h6454 = _source380.dtor_names;
                      RAST._IExpr _8509___mcc_h6455 = _source380.dtor_rhs;
                    } else if (_source380.is_IfExpr) {
                      RAST._IExpr _8510___mcc_h6458 = _source380.dtor_cond;
                      RAST._IExpr _8511___mcc_h6459 = _source380.dtor_thn;
                      RAST._IExpr _8512___mcc_h6460 = _source380.dtor_els;
                    } else if (_source380.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8513___mcc_h6464 = _source380.dtor_optCond;
                      RAST._IExpr _8514___mcc_h6465 = _source380.dtor_underlying;
                    } else if (_source380.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8515___mcc_h6468 = _source380.dtor_name;
                      RAST._IExpr _8516___mcc_h6469 = _source380.dtor_range;
                      RAST._IExpr _8517___mcc_h6470 = _source380.dtor_body;
                    } else if (_source380.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8518___mcc_h6474 = _source380.dtor_lbl;
                      RAST._IExpr _8519___mcc_h6475 = _source380.dtor_underlying;
                    } else if (_source380.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8520___mcc_h6478 = _source380.dtor_optLbl;
                    } else if (_source380.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8521___mcc_h6480 = _source380.dtor_optLbl;
                    } else if (_source380.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8522___mcc_h6482 = _source380.dtor_optExpr;
                    } else if (_source380.is_CallType) {
                      RAST._IExpr _8523___mcc_h6484 = _source380.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8524___mcc_h6485 = _source380.dtor_typeParameters;
                    } else if (_source380.is_Call) {
                      RAST._IExpr _8525___mcc_h6488 = _source380.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8526___mcc_h6489 = _source380.dtor_arguments;
                    } else if (_source380.is_Select) {
                      RAST._IExpr _8527___mcc_h6492 = _source380.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8528___mcc_h6493 = _source380.dtor_name;
                    } else if (_source380.is_MemberSelect) {
                      RAST._IExpr _8529___mcc_h6496 = _source380.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8530___mcc_h6497 = _source380.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8531___mcc_h6500 = _source380.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8532___mcc_h6501 = _source380.dtor_retType;
                      RAST._IExpr _8533___mcc_h6502 = _source380.dtor_body;
                    }
                  } else {
                  }
                } else if (_source379.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8534___mcc_h6506 = _source379.dtor_op2;
                  RAST._IExpr _8535___mcc_h6507 = _source379.dtor_left;
                  RAST._IExpr _8536___mcc_h6508 = _source379.dtor_right;
                  DAST.Format._IBinaryOpFormat _8537___mcc_h6509 = _source379.dtor_format2;
                } else if (_source379.is_TypeAscription) {
                  RAST._IExpr _8538___mcc_h6514 = _source379.dtor_left;
                  RAST._IType _8539___mcc_h6515 = _source379.dtor_tpe;
                } else if (_source379.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8540___mcc_h6518 = _source379.dtor_value;
                } else if (_source379.is_LiteralBool) {
                  bool _8541___mcc_h6520 = _source379.dtor_bvalue;
                } else if (_source379.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8542___mcc_h6522 = _source379.dtor_value;
                  bool _8543___mcc_h6523 = _source379.dtor_binary;
                } else if (_source379.is_DeclareVar) {
                  RAST._IDeclareType _8544___mcc_h6526 = _source379.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8545___mcc_h6527 = _source379.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8546___mcc_h6528 = _source379.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8547___mcc_h6529 = _source379.dtor_optRhs;
                } else if (_source379.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8548___mcc_h6534 = _source379.dtor_names;
                  RAST._IExpr _8549___mcc_h6535 = _source379.dtor_rhs;
                } else if (_source379.is_IfExpr) {
                  RAST._IExpr _8550___mcc_h6538 = _source379.dtor_cond;
                  RAST._IExpr _8551___mcc_h6539 = _source379.dtor_thn;
                  RAST._IExpr _8552___mcc_h6540 = _source379.dtor_els;
                } else if (_source379.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8553___mcc_h6544 = _source379.dtor_optCond;
                  RAST._IExpr _8554___mcc_h6545 = _source379.dtor_underlying;
                } else if (_source379.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8555___mcc_h6548 = _source379.dtor_name;
                  RAST._IExpr _8556___mcc_h6549 = _source379.dtor_range;
                  RAST._IExpr _8557___mcc_h6550 = _source379.dtor_body;
                } else if (_source379.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8558___mcc_h6554 = _source379.dtor_lbl;
                  RAST._IExpr _8559___mcc_h6555 = _source379.dtor_underlying;
                } else if (_source379.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8560___mcc_h6558 = _source379.dtor_optLbl;
                } else if (_source379.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8561___mcc_h6560 = _source379.dtor_optLbl;
                } else if (_source379.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8562___mcc_h6562 = _source379.dtor_optExpr;
                } else if (_source379.is_CallType) {
                  RAST._IExpr _8563___mcc_h6564 = _source379.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8564___mcc_h6565 = _source379.dtor_typeParameters;
                } else if (_source379.is_Call) {
                  RAST._IExpr _8565___mcc_h6568 = _source379.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8566___mcc_h6569 = _source379.dtor_arguments;
                } else if (_source379.is_Select) {
                  RAST._IExpr _8567___mcc_h6572 = _source379.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8568___mcc_h6573 = _source379.dtor_name;
                } else if (_source379.is_MemberSelect) {
                  RAST._IExpr _8569___mcc_h6576 = _source379.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8570___mcc_h6577 = _source379.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8571___mcc_h6580 = _source379.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8572___mcc_h6581 = _source379.dtor_retType;
                  RAST._IExpr _8573___mcc_h6582 = _source379.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8457_field));
              if (_8456_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1973;
              DCOMP._IOwnership _out1974;
              (this).FromOwned(r, expectedOwnership, out _out1973, out _out1974);
              r = _out1973;
              resultingOwnership = _out1974;
              readIdents = _8465_recIdents;
            }
            return ;
          }
        } else if (_source322.is_IndexRange) {
          DAST._IExpression _8574___mcc_h193 = _source322.dtor_expr;
          bool _8575___mcc_h194 = _source322.dtor_isArray;
          Std.Wrappers._IOption<DAST._IExpression> _8576___mcc_h195 = _source322.dtor_low;
          Std.Wrappers._IOption<DAST._IExpression> _8577___mcc_h196 = _source322.dtor_high;
          DAST._IType _8578_fieldType = _5017___mcc_h58;
          bool _8579_isDatatype = _5016___mcc_h57;
          bool _8580_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8581_field = _5014___mcc_h55;
          DAST._IExpression _8582_on = _5013___mcc_h54;
          {
            if (_8579_isDatatype) {
              RAST._IExpr _8583_onExpr;
              DCOMP._IOwnership _8584_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8585_recIdents;
              RAST._IExpr _out1975;
              DCOMP._IOwnership _out1976;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1977;
              (this).GenExpr(_8582_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1975, out _out1976, out _out1977);
              _8583_onExpr = _out1975;
              _8584_onOwned = _out1976;
              _8585_recIdents = _out1977;
              r = ((_8583_onExpr).Sel(DCOMP.__default.escapeName(_8581_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8586_typ;
              RAST._IType _out1978;
              _out1978 = (this).GenType(_8578_fieldType, DCOMP.GenTypeContext.@default());
              _8586_typ = _out1978;
              RAST._IExpr _out1979;
              DCOMP._IOwnership _out1980;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1979, out _out1980);
              r = _out1979;
              resultingOwnership = _out1980;
              readIdents = _8585_recIdents;
            } else {
              RAST._IExpr _8587_onExpr;
              DCOMP._IOwnership _8588_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8589_recIdents;
              RAST._IExpr _out1981;
              DCOMP._IOwnership _out1982;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1983;
              (this).GenExpr(_8582_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1981, out _out1982, out _out1983);
              _8587_onExpr = _out1981;
              _8588_onOwned = _out1982;
              _8589_recIdents = _out1983;
              r = _8587_onExpr;
              if (!object.Equals(_8587_onExpr, RAST.__default.self)) {
                RAST._IExpr _source381 = _8587_onExpr;
                if (_source381.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8590___mcc_h6586 = _source381.dtor_content;
                } else if (_source381.is_ExprFromType) {
                  RAST._IType _8591___mcc_h6588 = _source381.dtor_tpe;
                } else if (_source381.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8592___mcc_h6590 = _source381.dtor_name;
                } else if (_source381.is_Match) {
                  RAST._IExpr _8593___mcc_h6592 = _source381.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8594___mcc_h6593 = _source381.dtor_cases;
                } else if (_source381.is_StmtExpr) {
                  RAST._IExpr _8595___mcc_h6596 = _source381.dtor_stmt;
                  RAST._IExpr _8596___mcc_h6597 = _source381.dtor_rhs;
                } else if (_source381.is_Block) {
                  RAST._IExpr _8597___mcc_h6600 = _source381.dtor_underlying;
                } else if (_source381.is_StructBuild) {
                  RAST._IExpr _8598___mcc_h6602 = _source381.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8599___mcc_h6603 = _source381.dtor_assignments;
                } else if (_source381.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8600___mcc_h6606 = _source381.dtor_arguments;
                } else if (_source381.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8601___mcc_h6608 = _source381.dtor_op1;
                  RAST._IExpr _8602___mcc_h6609 = _source381.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8603___mcc_h6610 = _source381.dtor_format;
                  if (object.Equals(_8601___mcc_h6608, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source382 = _8602___mcc_h6609;
                    if (_source382.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8604___mcc_h6614 = _source382.dtor_content;
                    } else if (_source382.is_ExprFromType) {
                      RAST._IType _8605___mcc_h6616 = _source382.dtor_tpe;
                    } else if (_source382.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8606___mcc_h6618 = _source382.dtor_name;
                      if (object.Equals(_8606___mcc_h6618, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source382.is_Match) {
                      RAST._IExpr _8607___mcc_h6620 = _source382.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8608___mcc_h6621 = _source382.dtor_cases;
                    } else if (_source382.is_StmtExpr) {
                      RAST._IExpr _8609___mcc_h6624 = _source382.dtor_stmt;
                      RAST._IExpr _8610___mcc_h6625 = _source382.dtor_rhs;
                    } else if (_source382.is_Block) {
                      RAST._IExpr _8611___mcc_h6628 = _source382.dtor_underlying;
                    } else if (_source382.is_StructBuild) {
                      RAST._IExpr _8612___mcc_h6630 = _source382.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8613___mcc_h6631 = _source382.dtor_assignments;
                    } else if (_source382.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8614___mcc_h6634 = _source382.dtor_arguments;
                    } else if (_source382.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8615___mcc_h6636 = _source382.dtor_op1;
                      RAST._IExpr _8616___mcc_h6637 = _source382.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8617___mcc_h6638 = _source382.dtor_format;
                    } else if (_source382.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8618___mcc_h6642 = _source382.dtor_op2;
                      RAST._IExpr _8619___mcc_h6643 = _source382.dtor_left;
                      RAST._IExpr _8620___mcc_h6644 = _source382.dtor_right;
                      DAST.Format._IBinaryOpFormat _8621___mcc_h6645 = _source382.dtor_format2;
                    } else if (_source382.is_TypeAscription) {
                      RAST._IExpr _8622___mcc_h6650 = _source382.dtor_left;
                      RAST._IType _8623___mcc_h6651 = _source382.dtor_tpe;
                    } else if (_source382.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8624___mcc_h6654 = _source382.dtor_value;
                    } else if (_source382.is_LiteralBool) {
                      bool _8625___mcc_h6656 = _source382.dtor_bvalue;
                    } else if (_source382.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8626___mcc_h6658 = _source382.dtor_value;
                      bool _8627___mcc_h6659 = _source382.dtor_binary;
                    } else if (_source382.is_DeclareVar) {
                      RAST._IDeclareType _8628___mcc_h6662 = _source382.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8629___mcc_h6663 = _source382.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8630___mcc_h6664 = _source382.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8631___mcc_h6665 = _source382.dtor_optRhs;
                    } else if (_source382.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8632___mcc_h6670 = _source382.dtor_names;
                      RAST._IExpr _8633___mcc_h6671 = _source382.dtor_rhs;
                    } else if (_source382.is_IfExpr) {
                      RAST._IExpr _8634___mcc_h6674 = _source382.dtor_cond;
                      RAST._IExpr _8635___mcc_h6675 = _source382.dtor_thn;
                      RAST._IExpr _8636___mcc_h6676 = _source382.dtor_els;
                    } else if (_source382.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8637___mcc_h6680 = _source382.dtor_optCond;
                      RAST._IExpr _8638___mcc_h6681 = _source382.dtor_underlying;
                    } else if (_source382.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8639___mcc_h6684 = _source382.dtor_name;
                      RAST._IExpr _8640___mcc_h6685 = _source382.dtor_range;
                      RAST._IExpr _8641___mcc_h6686 = _source382.dtor_body;
                    } else if (_source382.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8642___mcc_h6690 = _source382.dtor_lbl;
                      RAST._IExpr _8643___mcc_h6691 = _source382.dtor_underlying;
                    } else if (_source382.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8644___mcc_h6694 = _source382.dtor_optLbl;
                    } else if (_source382.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8645___mcc_h6696 = _source382.dtor_optLbl;
                    } else if (_source382.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8646___mcc_h6698 = _source382.dtor_optExpr;
                    } else if (_source382.is_CallType) {
                      RAST._IExpr _8647___mcc_h6700 = _source382.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8648___mcc_h6701 = _source382.dtor_typeParameters;
                    } else if (_source382.is_Call) {
                      RAST._IExpr _8649___mcc_h6704 = _source382.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8650___mcc_h6705 = _source382.dtor_arguments;
                    } else if (_source382.is_Select) {
                      RAST._IExpr _8651___mcc_h6708 = _source382.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8652___mcc_h6709 = _source382.dtor_name;
                    } else if (_source382.is_MemberSelect) {
                      RAST._IExpr _8653___mcc_h6712 = _source382.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8654___mcc_h6713 = _source382.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8655___mcc_h6716 = _source382.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8656___mcc_h6717 = _source382.dtor_retType;
                      RAST._IExpr _8657___mcc_h6718 = _source382.dtor_body;
                    }
                  } else {
                  }
                } else if (_source381.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8658___mcc_h6722 = _source381.dtor_op2;
                  RAST._IExpr _8659___mcc_h6723 = _source381.dtor_left;
                  RAST._IExpr _8660___mcc_h6724 = _source381.dtor_right;
                  DAST.Format._IBinaryOpFormat _8661___mcc_h6725 = _source381.dtor_format2;
                } else if (_source381.is_TypeAscription) {
                  RAST._IExpr _8662___mcc_h6730 = _source381.dtor_left;
                  RAST._IType _8663___mcc_h6731 = _source381.dtor_tpe;
                } else if (_source381.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8664___mcc_h6734 = _source381.dtor_value;
                } else if (_source381.is_LiteralBool) {
                  bool _8665___mcc_h6736 = _source381.dtor_bvalue;
                } else if (_source381.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8666___mcc_h6738 = _source381.dtor_value;
                  bool _8667___mcc_h6739 = _source381.dtor_binary;
                } else if (_source381.is_DeclareVar) {
                  RAST._IDeclareType _8668___mcc_h6742 = _source381.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8669___mcc_h6743 = _source381.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8670___mcc_h6744 = _source381.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8671___mcc_h6745 = _source381.dtor_optRhs;
                } else if (_source381.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8672___mcc_h6750 = _source381.dtor_names;
                  RAST._IExpr _8673___mcc_h6751 = _source381.dtor_rhs;
                } else if (_source381.is_IfExpr) {
                  RAST._IExpr _8674___mcc_h6754 = _source381.dtor_cond;
                  RAST._IExpr _8675___mcc_h6755 = _source381.dtor_thn;
                  RAST._IExpr _8676___mcc_h6756 = _source381.dtor_els;
                } else if (_source381.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8677___mcc_h6760 = _source381.dtor_optCond;
                  RAST._IExpr _8678___mcc_h6761 = _source381.dtor_underlying;
                } else if (_source381.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8679___mcc_h6764 = _source381.dtor_name;
                  RAST._IExpr _8680___mcc_h6765 = _source381.dtor_range;
                  RAST._IExpr _8681___mcc_h6766 = _source381.dtor_body;
                } else if (_source381.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8682___mcc_h6770 = _source381.dtor_lbl;
                  RAST._IExpr _8683___mcc_h6771 = _source381.dtor_underlying;
                } else if (_source381.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8684___mcc_h6774 = _source381.dtor_optLbl;
                } else if (_source381.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8685___mcc_h6776 = _source381.dtor_optLbl;
                } else if (_source381.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8686___mcc_h6778 = _source381.dtor_optExpr;
                } else if (_source381.is_CallType) {
                  RAST._IExpr _8687___mcc_h6780 = _source381.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8688___mcc_h6781 = _source381.dtor_typeParameters;
                } else if (_source381.is_Call) {
                  RAST._IExpr _8689___mcc_h6784 = _source381.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8690___mcc_h6785 = _source381.dtor_arguments;
                } else if (_source381.is_Select) {
                  RAST._IExpr _8691___mcc_h6788 = _source381.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8692___mcc_h6789 = _source381.dtor_name;
                } else if (_source381.is_MemberSelect) {
                  RAST._IExpr _8693___mcc_h6792 = _source381.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8694___mcc_h6793 = _source381.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8695___mcc_h6796 = _source381.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8696___mcc_h6797 = _source381.dtor_retType;
                  RAST._IExpr _8697___mcc_h6798 = _source381.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8581_field));
              if (_8580_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1984;
              DCOMP._IOwnership _out1985;
              (this).FromOwned(r, expectedOwnership, out _out1984, out _out1985);
              r = _out1984;
              resultingOwnership = _out1985;
              readIdents = _8589_recIdents;
            }
            return ;
          }
        } else if (_source322.is_TupleSelect) {
          DAST._IExpression _8698___mcc_h201 = _source322.dtor_expr;
          BigInteger _8699___mcc_h202 = _source322.dtor_index;
          DAST._IType _8700___mcc_h203 = _source322.dtor_fieldType;
          DAST._IType _8701_fieldType = _5017___mcc_h58;
          bool _8702_isDatatype = _5016___mcc_h57;
          bool _8703_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8704_field = _5014___mcc_h55;
          DAST._IExpression _8705_on = _5013___mcc_h54;
          {
            if (_8702_isDatatype) {
              RAST._IExpr _8706_onExpr;
              DCOMP._IOwnership _8707_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8708_recIdents;
              RAST._IExpr _out1986;
              DCOMP._IOwnership _out1987;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1988;
              (this).GenExpr(_8705_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1986, out _out1987, out _out1988);
              _8706_onExpr = _out1986;
              _8707_onOwned = _out1987;
              _8708_recIdents = _out1988;
              r = ((_8706_onExpr).Sel(DCOMP.__default.escapeName(_8704_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8709_typ;
              RAST._IType _out1989;
              _out1989 = (this).GenType(_8701_fieldType, DCOMP.GenTypeContext.@default());
              _8709_typ = _out1989;
              RAST._IExpr _out1990;
              DCOMP._IOwnership _out1991;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out1990, out _out1991);
              r = _out1990;
              resultingOwnership = _out1991;
              readIdents = _8708_recIdents;
            } else {
              RAST._IExpr _8710_onExpr;
              DCOMP._IOwnership _8711_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8712_recIdents;
              RAST._IExpr _out1992;
              DCOMP._IOwnership _out1993;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1994;
              (this).GenExpr(_8705_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1992, out _out1993, out _out1994);
              _8710_onExpr = _out1992;
              _8711_onOwned = _out1993;
              _8712_recIdents = _out1994;
              r = _8710_onExpr;
              if (!object.Equals(_8710_onExpr, RAST.__default.self)) {
                RAST._IExpr _source383 = _8710_onExpr;
                if (_source383.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8713___mcc_h6802 = _source383.dtor_content;
                } else if (_source383.is_ExprFromType) {
                  RAST._IType _8714___mcc_h6804 = _source383.dtor_tpe;
                } else if (_source383.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8715___mcc_h6806 = _source383.dtor_name;
                } else if (_source383.is_Match) {
                  RAST._IExpr _8716___mcc_h6808 = _source383.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8717___mcc_h6809 = _source383.dtor_cases;
                } else if (_source383.is_StmtExpr) {
                  RAST._IExpr _8718___mcc_h6812 = _source383.dtor_stmt;
                  RAST._IExpr _8719___mcc_h6813 = _source383.dtor_rhs;
                } else if (_source383.is_Block) {
                  RAST._IExpr _8720___mcc_h6816 = _source383.dtor_underlying;
                } else if (_source383.is_StructBuild) {
                  RAST._IExpr _8721___mcc_h6818 = _source383.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8722___mcc_h6819 = _source383.dtor_assignments;
                } else if (_source383.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8723___mcc_h6822 = _source383.dtor_arguments;
                } else if (_source383.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8724___mcc_h6824 = _source383.dtor_op1;
                  RAST._IExpr _8725___mcc_h6825 = _source383.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8726___mcc_h6826 = _source383.dtor_format;
                  if (object.Equals(_8724___mcc_h6824, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source384 = _8725___mcc_h6825;
                    if (_source384.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8727___mcc_h6830 = _source384.dtor_content;
                    } else if (_source384.is_ExprFromType) {
                      RAST._IType _8728___mcc_h6832 = _source384.dtor_tpe;
                    } else if (_source384.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8729___mcc_h6834 = _source384.dtor_name;
                      if (object.Equals(_8729___mcc_h6834, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source384.is_Match) {
                      RAST._IExpr _8730___mcc_h6836 = _source384.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8731___mcc_h6837 = _source384.dtor_cases;
                    } else if (_source384.is_StmtExpr) {
                      RAST._IExpr _8732___mcc_h6840 = _source384.dtor_stmt;
                      RAST._IExpr _8733___mcc_h6841 = _source384.dtor_rhs;
                    } else if (_source384.is_Block) {
                      RAST._IExpr _8734___mcc_h6844 = _source384.dtor_underlying;
                    } else if (_source384.is_StructBuild) {
                      RAST._IExpr _8735___mcc_h6846 = _source384.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8736___mcc_h6847 = _source384.dtor_assignments;
                    } else if (_source384.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8737___mcc_h6850 = _source384.dtor_arguments;
                    } else if (_source384.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8738___mcc_h6852 = _source384.dtor_op1;
                      RAST._IExpr _8739___mcc_h6853 = _source384.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8740___mcc_h6854 = _source384.dtor_format;
                    } else if (_source384.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8741___mcc_h6858 = _source384.dtor_op2;
                      RAST._IExpr _8742___mcc_h6859 = _source384.dtor_left;
                      RAST._IExpr _8743___mcc_h6860 = _source384.dtor_right;
                      DAST.Format._IBinaryOpFormat _8744___mcc_h6861 = _source384.dtor_format2;
                    } else if (_source384.is_TypeAscription) {
                      RAST._IExpr _8745___mcc_h6866 = _source384.dtor_left;
                      RAST._IType _8746___mcc_h6867 = _source384.dtor_tpe;
                    } else if (_source384.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8747___mcc_h6870 = _source384.dtor_value;
                    } else if (_source384.is_LiteralBool) {
                      bool _8748___mcc_h6872 = _source384.dtor_bvalue;
                    } else if (_source384.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8749___mcc_h6874 = _source384.dtor_value;
                      bool _8750___mcc_h6875 = _source384.dtor_binary;
                    } else if (_source384.is_DeclareVar) {
                      RAST._IDeclareType _8751___mcc_h6878 = _source384.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8752___mcc_h6879 = _source384.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8753___mcc_h6880 = _source384.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8754___mcc_h6881 = _source384.dtor_optRhs;
                    } else if (_source384.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8755___mcc_h6886 = _source384.dtor_names;
                      RAST._IExpr _8756___mcc_h6887 = _source384.dtor_rhs;
                    } else if (_source384.is_IfExpr) {
                      RAST._IExpr _8757___mcc_h6890 = _source384.dtor_cond;
                      RAST._IExpr _8758___mcc_h6891 = _source384.dtor_thn;
                      RAST._IExpr _8759___mcc_h6892 = _source384.dtor_els;
                    } else if (_source384.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8760___mcc_h6896 = _source384.dtor_optCond;
                      RAST._IExpr _8761___mcc_h6897 = _source384.dtor_underlying;
                    } else if (_source384.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8762___mcc_h6900 = _source384.dtor_name;
                      RAST._IExpr _8763___mcc_h6901 = _source384.dtor_range;
                      RAST._IExpr _8764___mcc_h6902 = _source384.dtor_body;
                    } else if (_source384.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8765___mcc_h6906 = _source384.dtor_lbl;
                      RAST._IExpr _8766___mcc_h6907 = _source384.dtor_underlying;
                    } else if (_source384.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8767___mcc_h6910 = _source384.dtor_optLbl;
                    } else if (_source384.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8768___mcc_h6912 = _source384.dtor_optLbl;
                    } else if (_source384.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8769___mcc_h6914 = _source384.dtor_optExpr;
                    } else if (_source384.is_CallType) {
                      RAST._IExpr _8770___mcc_h6916 = _source384.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8771___mcc_h6917 = _source384.dtor_typeParameters;
                    } else if (_source384.is_Call) {
                      RAST._IExpr _8772___mcc_h6920 = _source384.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8773___mcc_h6921 = _source384.dtor_arguments;
                    } else if (_source384.is_Select) {
                      RAST._IExpr _8774___mcc_h6924 = _source384.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8775___mcc_h6925 = _source384.dtor_name;
                    } else if (_source384.is_MemberSelect) {
                      RAST._IExpr _8776___mcc_h6928 = _source384.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8777___mcc_h6929 = _source384.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8778___mcc_h6932 = _source384.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8779___mcc_h6933 = _source384.dtor_retType;
                      RAST._IExpr _8780___mcc_h6934 = _source384.dtor_body;
                    }
                  } else {
                  }
                } else if (_source383.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8781___mcc_h6938 = _source383.dtor_op2;
                  RAST._IExpr _8782___mcc_h6939 = _source383.dtor_left;
                  RAST._IExpr _8783___mcc_h6940 = _source383.dtor_right;
                  DAST.Format._IBinaryOpFormat _8784___mcc_h6941 = _source383.dtor_format2;
                } else if (_source383.is_TypeAscription) {
                  RAST._IExpr _8785___mcc_h6946 = _source383.dtor_left;
                  RAST._IType _8786___mcc_h6947 = _source383.dtor_tpe;
                } else if (_source383.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8787___mcc_h6950 = _source383.dtor_value;
                } else if (_source383.is_LiteralBool) {
                  bool _8788___mcc_h6952 = _source383.dtor_bvalue;
                } else if (_source383.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8789___mcc_h6954 = _source383.dtor_value;
                  bool _8790___mcc_h6955 = _source383.dtor_binary;
                } else if (_source383.is_DeclareVar) {
                  RAST._IDeclareType _8791___mcc_h6958 = _source383.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8792___mcc_h6959 = _source383.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8793___mcc_h6960 = _source383.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8794___mcc_h6961 = _source383.dtor_optRhs;
                } else if (_source383.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8795___mcc_h6966 = _source383.dtor_names;
                  RAST._IExpr _8796___mcc_h6967 = _source383.dtor_rhs;
                } else if (_source383.is_IfExpr) {
                  RAST._IExpr _8797___mcc_h6970 = _source383.dtor_cond;
                  RAST._IExpr _8798___mcc_h6971 = _source383.dtor_thn;
                  RAST._IExpr _8799___mcc_h6972 = _source383.dtor_els;
                } else if (_source383.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8800___mcc_h6976 = _source383.dtor_optCond;
                  RAST._IExpr _8801___mcc_h6977 = _source383.dtor_underlying;
                } else if (_source383.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8802___mcc_h6980 = _source383.dtor_name;
                  RAST._IExpr _8803___mcc_h6981 = _source383.dtor_range;
                  RAST._IExpr _8804___mcc_h6982 = _source383.dtor_body;
                } else if (_source383.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8805___mcc_h6986 = _source383.dtor_lbl;
                  RAST._IExpr _8806___mcc_h6987 = _source383.dtor_underlying;
                } else if (_source383.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8807___mcc_h6990 = _source383.dtor_optLbl;
                } else if (_source383.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8808___mcc_h6992 = _source383.dtor_optLbl;
                } else if (_source383.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8809___mcc_h6994 = _source383.dtor_optExpr;
                } else if (_source383.is_CallType) {
                  RAST._IExpr _8810___mcc_h6996 = _source383.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8811___mcc_h6997 = _source383.dtor_typeParameters;
                } else if (_source383.is_Call) {
                  RAST._IExpr _8812___mcc_h7000 = _source383.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8813___mcc_h7001 = _source383.dtor_arguments;
                } else if (_source383.is_Select) {
                  RAST._IExpr _8814___mcc_h7004 = _source383.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8815___mcc_h7005 = _source383.dtor_name;
                } else if (_source383.is_MemberSelect) {
                  RAST._IExpr _8816___mcc_h7008 = _source383.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8817___mcc_h7009 = _source383.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8818___mcc_h7012 = _source383.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8819___mcc_h7013 = _source383.dtor_retType;
                  RAST._IExpr _8820___mcc_h7014 = _source383.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8704_field));
              if (_8703_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out1995;
              DCOMP._IOwnership _out1996;
              (this).FromOwned(r, expectedOwnership, out _out1995, out _out1996);
              r = _out1995;
              resultingOwnership = _out1996;
              readIdents = _8712_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Call) {
          DAST._IExpression _8821___mcc_h207 = _source322.dtor_on;
          DAST._ICallName _8822___mcc_h208 = _source322.dtor_callName;
          Dafny.ISequence<DAST._IType> _8823___mcc_h209 = _source322.dtor_typeArgs;
          Dafny.ISequence<DAST._IExpression> _8824___mcc_h210 = _source322.dtor_args;
          DAST._IType _8825_fieldType = _5017___mcc_h58;
          bool _8826_isDatatype = _5016___mcc_h57;
          bool _8827_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8828_field = _5014___mcc_h55;
          DAST._IExpression _8829_on = _5013___mcc_h54;
          {
            if (_8826_isDatatype) {
              RAST._IExpr _8830_onExpr;
              DCOMP._IOwnership _8831_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8832_recIdents;
              RAST._IExpr _out1997;
              DCOMP._IOwnership _out1998;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out1999;
              (this).GenExpr(_8829_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out1997, out _out1998, out _out1999);
              _8830_onExpr = _out1997;
              _8831_onOwned = _out1998;
              _8832_recIdents = _out1999;
              r = ((_8830_onExpr).Sel(DCOMP.__default.escapeName(_8828_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8833_typ;
              RAST._IType _out2000;
              _out2000 = (this).GenType(_8825_fieldType, DCOMP.GenTypeContext.@default());
              _8833_typ = _out2000;
              RAST._IExpr _out2001;
              DCOMP._IOwnership _out2002;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2001, out _out2002);
              r = _out2001;
              resultingOwnership = _out2002;
              readIdents = _8832_recIdents;
            } else {
              RAST._IExpr _8834_onExpr;
              DCOMP._IOwnership _8835_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8836_recIdents;
              RAST._IExpr _out2003;
              DCOMP._IOwnership _out2004;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2005;
              (this).GenExpr(_8829_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2003, out _out2004, out _out2005);
              _8834_onExpr = _out2003;
              _8835_onOwned = _out2004;
              _8836_recIdents = _out2005;
              r = _8834_onExpr;
              if (!object.Equals(_8834_onExpr, RAST.__default.self)) {
                RAST._IExpr _source385 = _8834_onExpr;
                if (_source385.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8837___mcc_h7018 = _source385.dtor_content;
                } else if (_source385.is_ExprFromType) {
                  RAST._IType _8838___mcc_h7020 = _source385.dtor_tpe;
                } else if (_source385.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8839___mcc_h7022 = _source385.dtor_name;
                } else if (_source385.is_Match) {
                  RAST._IExpr _8840___mcc_h7024 = _source385.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8841___mcc_h7025 = _source385.dtor_cases;
                } else if (_source385.is_StmtExpr) {
                  RAST._IExpr _8842___mcc_h7028 = _source385.dtor_stmt;
                  RAST._IExpr _8843___mcc_h7029 = _source385.dtor_rhs;
                } else if (_source385.is_Block) {
                  RAST._IExpr _8844___mcc_h7032 = _source385.dtor_underlying;
                } else if (_source385.is_StructBuild) {
                  RAST._IExpr _8845___mcc_h7034 = _source385.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8846___mcc_h7035 = _source385.dtor_assignments;
                } else if (_source385.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8847___mcc_h7038 = _source385.dtor_arguments;
                } else if (_source385.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8848___mcc_h7040 = _source385.dtor_op1;
                  RAST._IExpr _8849___mcc_h7041 = _source385.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8850___mcc_h7042 = _source385.dtor_format;
                  if (object.Equals(_8848___mcc_h7040, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source386 = _8849___mcc_h7041;
                    if (_source386.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8851___mcc_h7046 = _source386.dtor_content;
                    } else if (_source386.is_ExprFromType) {
                      RAST._IType _8852___mcc_h7048 = _source386.dtor_tpe;
                    } else if (_source386.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8853___mcc_h7050 = _source386.dtor_name;
                      if (object.Equals(_8853___mcc_h7050, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source386.is_Match) {
                      RAST._IExpr _8854___mcc_h7052 = _source386.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8855___mcc_h7053 = _source386.dtor_cases;
                    } else if (_source386.is_StmtExpr) {
                      RAST._IExpr _8856___mcc_h7056 = _source386.dtor_stmt;
                      RAST._IExpr _8857___mcc_h7057 = _source386.dtor_rhs;
                    } else if (_source386.is_Block) {
                      RAST._IExpr _8858___mcc_h7060 = _source386.dtor_underlying;
                    } else if (_source386.is_StructBuild) {
                      RAST._IExpr _8859___mcc_h7062 = _source386.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8860___mcc_h7063 = _source386.dtor_assignments;
                    } else if (_source386.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8861___mcc_h7066 = _source386.dtor_arguments;
                    } else if (_source386.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8862___mcc_h7068 = _source386.dtor_op1;
                      RAST._IExpr _8863___mcc_h7069 = _source386.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8864___mcc_h7070 = _source386.dtor_format;
                    } else if (_source386.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8865___mcc_h7074 = _source386.dtor_op2;
                      RAST._IExpr _8866___mcc_h7075 = _source386.dtor_left;
                      RAST._IExpr _8867___mcc_h7076 = _source386.dtor_right;
                      DAST.Format._IBinaryOpFormat _8868___mcc_h7077 = _source386.dtor_format2;
                    } else if (_source386.is_TypeAscription) {
                      RAST._IExpr _8869___mcc_h7082 = _source386.dtor_left;
                      RAST._IType _8870___mcc_h7083 = _source386.dtor_tpe;
                    } else if (_source386.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8871___mcc_h7086 = _source386.dtor_value;
                    } else if (_source386.is_LiteralBool) {
                      bool _8872___mcc_h7088 = _source386.dtor_bvalue;
                    } else if (_source386.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8873___mcc_h7090 = _source386.dtor_value;
                      bool _8874___mcc_h7091 = _source386.dtor_binary;
                    } else if (_source386.is_DeclareVar) {
                      RAST._IDeclareType _8875___mcc_h7094 = _source386.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8876___mcc_h7095 = _source386.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _8877___mcc_h7096 = _source386.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _8878___mcc_h7097 = _source386.dtor_optRhs;
                    } else if (_source386.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _8879___mcc_h7102 = _source386.dtor_names;
                      RAST._IExpr _8880___mcc_h7103 = _source386.dtor_rhs;
                    } else if (_source386.is_IfExpr) {
                      RAST._IExpr _8881___mcc_h7106 = _source386.dtor_cond;
                      RAST._IExpr _8882___mcc_h7107 = _source386.dtor_thn;
                      RAST._IExpr _8883___mcc_h7108 = _source386.dtor_els;
                    } else if (_source386.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _8884___mcc_h7112 = _source386.dtor_optCond;
                      RAST._IExpr _8885___mcc_h7113 = _source386.dtor_underlying;
                    } else if (_source386.is_For) {
                      Dafny.ISequence<Dafny.Rune> _8886___mcc_h7116 = _source386.dtor_name;
                      RAST._IExpr _8887___mcc_h7117 = _source386.dtor_range;
                      RAST._IExpr _8888___mcc_h7118 = _source386.dtor_body;
                    } else if (_source386.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _8889___mcc_h7122 = _source386.dtor_lbl;
                      RAST._IExpr _8890___mcc_h7123 = _source386.dtor_underlying;
                    } else if (_source386.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8891___mcc_h7126 = _source386.dtor_optLbl;
                    } else if (_source386.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8892___mcc_h7128 = _source386.dtor_optLbl;
                    } else if (_source386.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _8893___mcc_h7130 = _source386.dtor_optExpr;
                    } else if (_source386.is_CallType) {
                      RAST._IExpr _8894___mcc_h7132 = _source386.dtor_obj;
                      Dafny.ISequence<RAST._IType> _8895___mcc_h7133 = _source386.dtor_typeParameters;
                    } else if (_source386.is_Call) {
                      RAST._IExpr _8896___mcc_h7136 = _source386.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _8897___mcc_h7137 = _source386.dtor_arguments;
                    } else if (_source386.is_Select) {
                      RAST._IExpr _8898___mcc_h7140 = _source386.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8899___mcc_h7141 = _source386.dtor_name;
                    } else if (_source386.is_MemberSelect) {
                      RAST._IExpr _8900___mcc_h7144 = _source386.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _8901___mcc_h7145 = _source386.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _8902___mcc_h7148 = _source386.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _8903___mcc_h7149 = _source386.dtor_retType;
                      RAST._IExpr _8904___mcc_h7150 = _source386.dtor_body;
                    }
                  } else {
                  }
                } else if (_source385.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8905___mcc_h7154 = _source385.dtor_op2;
                  RAST._IExpr _8906___mcc_h7155 = _source385.dtor_left;
                  RAST._IExpr _8907___mcc_h7156 = _source385.dtor_right;
                  DAST.Format._IBinaryOpFormat _8908___mcc_h7157 = _source385.dtor_format2;
                } else if (_source385.is_TypeAscription) {
                  RAST._IExpr _8909___mcc_h7162 = _source385.dtor_left;
                  RAST._IType _8910___mcc_h7163 = _source385.dtor_tpe;
                } else if (_source385.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _8911___mcc_h7166 = _source385.dtor_value;
                } else if (_source385.is_LiteralBool) {
                  bool _8912___mcc_h7168 = _source385.dtor_bvalue;
                } else if (_source385.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _8913___mcc_h7170 = _source385.dtor_value;
                  bool _8914___mcc_h7171 = _source385.dtor_binary;
                } else if (_source385.is_DeclareVar) {
                  RAST._IDeclareType _8915___mcc_h7174 = _source385.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _8916___mcc_h7175 = _source385.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _8917___mcc_h7176 = _source385.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _8918___mcc_h7177 = _source385.dtor_optRhs;
                } else if (_source385.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _8919___mcc_h7182 = _source385.dtor_names;
                  RAST._IExpr _8920___mcc_h7183 = _source385.dtor_rhs;
                } else if (_source385.is_IfExpr) {
                  RAST._IExpr _8921___mcc_h7186 = _source385.dtor_cond;
                  RAST._IExpr _8922___mcc_h7187 = _source385.dtor_thn;
                  RAST._IExpr _8923___mcc_h7188 = _source385.dtor_els;
                } else if (_source385.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _8924___mcc_h7192 = _source385.dtor_optCond;
                  RAST._IExpr _8925___mcc_h7193 = _source385.dtor_underlying;
                } else if (_source385.is_For) {
                  Dafny.ISequence<Dafny.Rune> _8926___mcc_h7196 = _source385.dtor_name;
                  RAST._IExpr _8927___mcc_h7197 = _source385.dtor_range;
                  RAST._IExpr _8928___mcc_h7198 = _source385.dtor_body;
                } else if (_source385.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _8929___mcc_h7202 = _source385.dtor_lbl;
                  RAST._IExpr _8930___mcc_h7203 = _source385.dtor_underlying;
                } else if (_source385.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8931___mcc_h7206 = _source385.dtor_optLbl;
                } else if (_source385.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _8932___mcc_h7208 = _source385.dtor_optLbl;
                } else if (_source385.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _8933___mcc_h7210 = _source385.dtor_optExpr;
                } else if (_source385.is_CallType) {
                  RAST._IExpr _8934___mcc_h7212 = _source385.dtor_obj;
                  Dafny.ISequence<RAST._IType> _8935___mcc_h7213 = _source385.dtor_typeParameters;
                } else if (_source385.is_Call) {
                  RAST._IExpr _8936___mcc_h7216 = _source385.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _8937___mcc_h7217 = _source385.dtor_arguments;
                } else if (_source385.is_Select) {
                  RAST._IExpr _8938___mcc_h7220 = _source385.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8939___mcc_h7221 = _source385.dtor_name;
                } else if (_source385.is_MemberSelect) {
                  RAST._IExpr _8940___mcc_h7224 = _source385.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _8941___mcc_h7225 = _source385.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _8942___mcc_h7228 = _source385.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _8943___mcc_h7229 = _source385.dtor_retType;
                  RAST._IExpr _8944___mcc_h7230 = _source385.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8828_field));
              if (_8827_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2006;
              DCOMP._IOwnership _out2007;
              (this).FromOwned(r, expectedOwnership, out _out2006, out _out2007);
              r = _out2006;
              resultingOwnership = _out2007;
              readIdents = _8836_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Lambda) {
          Dafny.ISequence<DAST._IFormal> _8945___mcc_h215 = _source322.dtor_params;
          DAST._IType _8946___mcc_h216 = _source322.dtor_retType;
          Dafny.ISequence<DAST._IStatement> _8947___mcc_h217 = _source322.dtor_body;
          DAST._IType _8948_fieldType = _5017___mcc_h58;
          bool _8949_isDatatype = _5016___mcc_h57;
          bool _8950_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _8951_field = _5014___mcc_h55;
          DAST._IExpression _8952_on = _5013___mcc_h54;
          {
            if (_8949_isDatatype) {
              RAST._IExpr _8953_onExpr;
              DCOMP._IOwnership _8954_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8955_recIdents;
              RAST._IExpr _out2008;
              DCOMP._IOwnership _out2009;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2010;
              (this).GenExpr(_8952_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2008, out _out2009, out _out2010);
              _8953_onExpr = _out2008;
              _8954_onOwned = _out2009;
              _8955_recIdents = _out2010;
              r = ((_8953_onExpr).Sel(DCOMP.__default.escapeName(_8951_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _8956_typ;
              RAST._IType _out2011;
              _out2011 = (this).GenType(_8948_fieldType, DCOMP.GenTypeContext.@default());
              _8956_typ = _out2011;
              RAST._IExpr _out2012;
              DCOMP._IOwnership _out2013;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2012, out _out2013);
              r = _out2012;
              resultingOwnership = _out2013;
              readIdents = _8955_recIdents;
            } else {
              RAST._IExpr _8957_onExpr;
              DCOMP._IOwnership _8958_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _8959_recIdents;
              RAST._IExpr _out2014;
              DCOMP._IOwnership _out2015;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2016;
              (this).GenExpr(_8952_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2014, out _out2015, out _out2016);
              _8957_onExpr = _out2014;
              _8958_onOwned = _out2015;
              _8959_recIdents = _out2016;
              r = _8957_onExpr;
              if (!object.Equals(_8957_onExpr, RAST.__default.self)) {
                RAST._IExpr _source387 = _8957_onExpr;
                if (_source387.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _8960___mcc_h7234 = _source387.dtor_content;
                } else if (_source387.is_ExprFromType) {
                  RAST._IType _8961___mcc_h7236 = _source387.dtor_tpe;
                } else if (_source387.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _8962___mcc_h7238 = _source387.dtor_name;
                } else if (_source387.is_Match) {
                  RAST._IExpr _8963___mcc_h7240 = _source387.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _8964___mcc_h7241 = _source387.dtor_cases;
                } else if (_source387.is_StmtExpr) {
                  RAST._IExpr _8965___mcc_h7244 = _source387.dtor_stmt;
                  RAST._IExpr _8966___mcc_h7245 = _source387.dtor_rhs;
                } else if (_source387.is_Block) {
                  RAST._IExpr _8967___mcc_h7248 = _source387.dtor_underlying;
                } else if (_source387.is_StructBuild) {
                  RAST._IExpr _8968___mcc_h7250 = _source387.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _8969___mcc_h7251 = _source387.dtor_assignments;
                } else if (_source387.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _8970___mcc_h7254 = _source387.dtor_arguments;
                } else if (_source387.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _8971___mcc_h7256 = _source387.dtor_op1;
                  RAST._IExpr _8972___mcc_h7257 = _source387.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _8973___mcc_h7258 = _source387.dtor_format;
                  if (object.Equals(_8971___mcc_h7256, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source388 = _8972___mcc_h7257;
                    if (_source388.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _8974___mcc_h7262 = _source388.dtor_content;
                    } else if (_source388.is_ExprFromType) {
                      RAST._IType _8975___mcc_h7264 = _source388.dtor_tpe;
                    } else if (_source388.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _8976___mcc_h7266 = _source388.dtor_name;
                      if (object.Equals(_8976___mcc_h7266, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source388.is_Match) {
                      RAST._IExpr _8977___mcc_h7268 = _source388.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _8978___mcc_h7269 = _source388.dtor_cases;
                    } else if (_source388.is_StmtExpr) {
                      RAST._IExpr _8979___mcc_h7272 = _source388.dtor_stmt;
                      RAST._IExpr _8980___mcc_h7273 = _source388.dtor_rhs;
                    } else if (_source388.is_Block) {
                      RAST._IExpr _8981___mcc_h7276 = _source388.dtor_underlying;
                    } else if (_source388.is_StructBuild) {
                      RAST._IExpr _8982___mcc_h7278 = _source388.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _8983___mcc_h7279 = _source388.dtor_assignments;
                    } else if (_source388.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _8984___mcc_h7282 = _source388.dtor_arguments;
                    } else if (_source388.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8985___mcc_h7284 = _source388.dtor_op1;
                      RAST._IExpr _8986___mcc_h7285 = _source388.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _8987___mcc_h7286 = _source388.dtor_format;
                    } else if (_source388.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _8988___mcc_h7290 = _source388.dtor_op2;
                      RAST._IExpr _8989___mcc_h7291 = _source388.dtor_left;
                      RAST._IExpr _8990___mcc_h7292 = _source388.dtor_right;
                      DAST.Format._IBinaryOpFormat _8991___mcc_h7293 = _source388.dtor_format2;
                    } else if (_source388.is_TypeAscription) {
                      RAST._IExpr _8992___mcc_h7298 = _source388.dtor_left;
                      RAST._IType _8993___mcc_h7299 = _source388.dtor_tpe;
                    } else if (_source388.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _8994___mcc_h7302 = _source388.dtor_value;
                    } else if (_source388.is_LiteralBool) {
                      bool _8995___mcc_h7304 = _source388.dtor_bvalue;
                    } else if (_source388.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _8996___mcc_h7306 = _source388.dtor_value;
                      bool _8997___mcc_h7307 = _source388.dtor_binary;
                    } else if (_source388.is_DeclareVar) {
                      RAST._IDeclareType _8998___mcc_h7310 = _source388.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _8999___mcc_h7311 = _source388.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9000___mcc_h7312 = _source388.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9001___mcc_h7313 = _source388.dtor_optRhs;
                    } else if (_source388.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9002___mcc_h7318 = _source388.dtor_names;
                      RAST._IExpr _9003___mcc_h7319 = _source388.dtor_rhs;
                    } else if (_source388.is_IfExpr) {
                      RAST._IExpr _9004___mcc_h7322 = _source388.dtor_cond;
                      RAST._IExpr _9005___mcc_h7323 = _source388.dtor_thn;
                      RAST._IExpr _9006___mcc_h7324 = _source388.dtor_els;
                    } else if (_source388.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9007___mcc_h7328 = _source388.dtor_optCond;
                      RAST._IExpr _9008___mcc_h7329 = _source388.dtor_underlying;
                    } else if (_source388.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9009___mcc_h7332 = _source388.dtor_name;
                      RAST._IExpr _9010___mcc_h7333 = _source388.dtor_range;
                      RAST._IExpr _9011___mcc_h7334 = _source388.dtor_body;
                    } else if (_source388.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9012___mcc_h7338 = _source388.dtor_lbl;
                      RAST._IExpr _9013___mcc_h7339 = _source388.dtor_underlying;
                    } else if (_source388.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9014___mcc_h7342 = _source388.dtor_optLbl;
                    } else if (_source388.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9015___mcc_h7344 = _source388.dtor_optLbl;
                    } else if (_source388.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9016___mcc_h7346 = _source388.dtor_optExpr;
                    } else if (_source388.is_CallType) {
                      RAST._IExpr _9017___mcc_h7348 = _source388.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9018___mcc_h7349 = _source388.dtor_typeParameters;
                    } else if (_source388.is_Call) {
                      RAST._IExpr _9019___mcc_h7352 = _source388.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9020___mcc_h7353 = _source388.dtor_arguments;
                    } else if (_source388.is_Select) {
                      RAST._IExpr _9021___mcc_h7356 = _source388.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9022___mcc_h7357 = _source388.dtor_name;
                    } else if (_source388.is_MemberSelect) {
                      RAST._IExpr _9023___mcc_h7360 = _source388.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9024___mcc_h7361 = _source388.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9025___mcc_h7364 = _source388.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9026___mcc_h7365 = _source388.dtor_retType;
                      RAST._IExpr _9027___mcc_h7366 = _source388.dtor_body;
                    }
                  } else {
                  }
                } else if (_source387.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9028___mcc_h7370 = _source387.dtor_op2;
                  RAST._IExpr _9029___mcc_h7371 = _source387.dtor_left;
                  RAST._IExpr _9030___mcc_h7372 = _source387.dtor_right;
                  DAST.Format._IBinaryOpFormat _9031___mcc_h7373 = _source387.dtor_format2;
                } else if (_source387.is_TypeAscription) {
                  RAST._IExpr _9032___mcc_h7378 = _source387.dtor_left;
                  RAST._IType _9033___mcc_h7379 = _source387.dtor_tpe;
                } else if (_source387.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9034___mcc_h7382 = _source387.dtor_value;
                } else if (_source387.is_LiteralBool) {
                  bool _9035___mcc_h7384 = _source387.dtor_bvalue;
                } else if (_source387.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9036___mcc_h7386 = _source387.dtor_value;
                  bool _9037___mcc_h7387 = _source387.dtor_binary;
                } else if (_source387.is_DeclareVar) {
                  RAST._IDeclareType _9038___mcc_h7390 = _source387.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9039___mcc_h7391 = _source387.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9040___mcc_h7392 = _source387.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9041___mcc_h7393 = _source387.dtor_optRhs;
                } else if (_source387.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9042___mcc_h7398 = _source387.dtor_names;
                  RAST._IExpr _9043___mcc_h7399 = _source387.dtor_rhs;
                } else if (_source387.is_IfExpr) {
                  RAST._IExpr _9044___mcc_h7402 = _source387.dtor_cond;
                  RAST._IExpr _9045___mcc_h7403 = _source387.dtor_thn;
                  RAST._IExpr _9046___mcc_h7404 = _source387.dtor_els;
                } else if (_source387.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9047___mcc_h7408 = _source387.dtor_optCond;
                  RAST._IExpr _9048___mcc_h7409 = _source387.dtor_underlying;
                } else if (_source387.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9049___mcc_h7412 = _source387.dtor_name;
                  RAST._IExpr _9050___mcc_h7413 = _source387.dtor_range;
                  RAST._IExpr _9051___mcc_h7414 = _source387.dtor_body;
                } else if (_source387.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9052___mcc_h7418 = _source387.dtor_lbl;
                  RAST._IExpr _9053___mcc_h7419 = _source387.dtor_underlying;
                } else if (_source387.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9054___mcc_h7422 = _source387.dtor_optLbl;
                } else if (_source387.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9055___mcc_h7424 = _source387.dtor_optLbl;
                } else if (_source387.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9056___mcc_h7426 = _source387.dtor_optExpr;
                } else if (_source387.is_CallType) {
                  RAST._IExpr _9057___mcc_h7428 = _source387.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9058___mcc_h7429 = _source387.dtor_typeParameters;
                } else if (_source387.is_Call) {
                  RAST._IExpr _9059___mcc_h7432 = _source387.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9060___mcc_h7433 = _source387.dtor_arguments;
                } else if (_source387.is_Select) {
                  RAST._IExpr _9061___mcc_h7436 = _source387.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9062___mcc_h7437 = _source387.dtor_name;
                } else if (_source387.is_MemberSelect) {
                  RAST._IExpr _9063___mcc_h7440 = _source387.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9064___mcc_h7441 = _source387.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9065___mcc_h7444 = _source387.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9066___mcc_h7445 = _source387.dtor_retType;
                  RAST._IExpr _9067___mcc_h7446 = _source387.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_8951_field));
              if (_8950_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2017;
              DCOMP._IOwnership _out2018;
              (this).FromOwned(r, expectedOwnership, out _out2017, out _out2018);
              r = _out2017;
              resultingOwnership = _out2018;
              readIdents = _8959_recIdents;
            }
            return ;
          }
        } else if (_source322.is_BetaRedex) {
          Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _9068___mcc_h221 = _source322.dtor_values;
          DAST._IType _9069___mcc_h222 = _source322.dtor_retType;
          DAST._IExpression _9070___mcc_h223 = _source322.dtor_expr;
          DAST._IType _9071_fieldType = _5017___mcc_h58;
          bool _9072_isDatatype = _5016___mcc_h57;
          bool _9073_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9074_field = _5014___mcc_h55;
          DAST._IExpression _9075_on = _5013___mcc_h54;
          {
            if (_9072_isDatatype) {
              RAST._IExpr _9076_onExpr;
              DCOMP._IOwnership _9077_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9078_recIdents;
              RAST._IExpr _out2019;
              DCOMP._IOwnership _out2020;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2021;
              (this).GenExpr(_9075_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2019, out _out2020, out _out2021);
              _9076_onExpr = _out2019;
              _9077_onOwned = _out2020;
              _9078_recIdents = _out2021;
              r = ((_9076_onExpr).Sel(DCOMP.__default.escapeName(_9074_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9079_typ;
              RAST._IType _out2022;
              _out2022 = (this).GenType(_9071_fieldType, DCOMP.GenTypeContext.@default());
              _9079_typ = _out2022;
              RAST._IExpr _out2023;
              DCOMP._IOwnership _out2024;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2023, out _out2024);
              r = _out2023;
              resultingOwnership = _out2024;
              readIdents = _9078_recIdents;
            } else {
              RAST._IExpr _9080_onExpr;
              DCOMP._IOwnership _9081_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9082_recIdents;
              RAST._IExpr _out2025;
              DCOMP._IOwnership _out2026;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2027;
              (this).GenExpr(_9075_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2025, out _out2026, out _out2027);
              _9080_onExpr = _out2025;
              _9081_onOwned = _out2026;
              _9082_recIdents = _out2027;
              r = _9080_onExpr;
              if (!object.Equals(_9080_onExpr, RAST.__default.self)) {
                RAST._IExpr _source389 = _9080_onExpr;
                if (_source389.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9083___mcc_h7450 = _source389.dtor_content;
                } else if (_source389.is_ExprFromType) {
                  RAST._IType _9084___mcc_h7452 = _source389.dtor_tpe;
                } else if (_source389.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9085___mcc_h7454 = _source389.dtor_name;
                } else if (_source389.is_Match) {
                  RAST._IExpr _9086___mcc_h7456 = _source389.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9087___mcc_h7457 = _source389.dtor_cases;
                } else if (_source389.is_StmtExpr) {
                  RAST._IExpr _9088___mcc_h7460 = _source389.dtor_stmt;
                  RAST._IExpr _9089___mcc_h7461 = _source389.dtor_rhs;
                } else if (_source389.is_Block) {
                  RAST._IExpr _9090___mcc_h7464 = _source389.dtor_underlying;
                } else if (_source389.is_StructBuild) {
                  RAST._IExpr _9091___mcc_h7466 = _source389.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9092___mcc_h7467 = _source389.dtor_assignments;
                } else if (_source389.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9093___mcc_h7470 = _source389.dtor_arguments;
                } else if (_source389.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9094___mcc_h7472 = _source389.dtor_op1;
                  RAST._IExpr _9095___mcc_h7473 = _source389.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9096___mcc_h7474 = _source389.dtor_format;
                  if (object.Equals(_9094___mcc_h7472, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source390 = _9095___mcc_h7473;
                    if (_source390.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9097___mcc_h7478 = _source390.dtor_content;
                    } else if (_source390.is_ExprFromType) {
                      RAST._IType _9098___mcc_h7480 = _source390.dtor_tpe;
                    } else if (_source390.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9099___mcc_h7482 = _source390.dtor_name;
                      if (object.Equals(_9099___mcc_h7482, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source390.is_Match) {
                      RAST._IExpr _9100___mcc_h7484 = _source390.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9101___mcc_h7485 = _source390.dtor_cases;
                    } else if (_source390.is_StmtExpr) {
                      RAST._IExpr _9102___mcc_h7488 = _source390.dtor_stmt;
                      RAST._IExpr _9103___mcc_h7489 = _source390.dtor_rhs;
                    } else if (_source390.is_Block) {
                      RAST._IExpr _9104___mcc_h7492 = _source390.dtor_underlying;
                    } else if (_source390.is_StructBuild) {
                      RAST._IExpr _9105___mcc_h7494 = _source390.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9106___mcc_h7495 = _source390.dtor_assignments;
                    } else if (_source390.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9107___mcc_h7498 = _source390.dtor_arguments;
                    } else if (_source390.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9108___mcc_h7500 = _source390.dtor_op1;
                      RAST._IExpr _9109___mcc_h7501 = _source390.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9110___mcc_h7502 = _source390.dtor_format;
                    } else if (_source390.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9111___mcc_h7506 = _source390.dtor_op2;
                      RAST._IExpr _9112___mcc_h7507 = _source390.dtor_left;
                      RAST._IExpr _9113___mcc_h7508 = _source390.dtor_right;
                      DAST.Format._IBinaryOpFormat _9114___mcc_h7509 = _source390.dtor_format2;
                    } else if (_source390.is_TypeAscription) {
                      RAST._IExpr _9115___mcc_h7514 = _source390.dtor_left;
                      RAST._IType _9116___mcc_h7515 = _source390.dtor_tpe;
                    } else if (_source390.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9117___mcc_h7518 = _source390.dtor_value;
                    } else if (_source390.is_LiteralBool) {
                      bool _9118___mcc_h7520 = _source390.dtor_bvalue;
                    } else if (_source390.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9119___mcc_h7522 = _source390.dtor_value;
                      bool _9120___mcc_h7523 = _source390.dtor_binary;
                    } else if (_source390.is_DeclareVar) {
                      RAST._IDeclareType _9121___mcc_h7526 = _source390.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9122___mcc_h7527 = _source390.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9123___mcc_h7528 = _source390.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9124___mcc_h7529 = _source390.dtor_optRhs;
                    } else if (_source390.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9125___mcc_h7534 = _source390.dtor_names;
                      RAST._IExpr _9126___mcc_h7535 = _source390.dtor_rhs;
                    } else if (_source390.is_IfExpr) {
                      RAST._IExpr _9127___mcc_h7538 = _source390.dtor_cond;
                      RAST._IExpr _9128___mcc_h7539 = _source390.dtor_thn;
                      RAST._IExpr _9129___mcc_h7540 = _source390.dtor_els;
                    } else if (_source390.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9130___mcc_h7544 = _source390.dtor_optCond;
                      RAST._IExpr _9131___mcc_h7545 = _source390.dtor_underlying;
                    } else if (_source390.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9132___mcc_h7548 = _source390.dtor_name;
                      RAST._IExpr _9133___mcc_h7549 = _source390.dtor_range;
                      RAST._IExpr _9134___mcc_h7550 = _source390.dtor_body;
                    } else if (_source390.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9135___mcc_h7554 = _source390.dtor_lbl;
                      RAST._IExpr _9136___mcc_h7555 = _source390.dtor_underlying;
                    } else if (_source390.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9137___mcc_h7558 = _source390.dtor_optLbl;
                    } else if (_source390.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9138___mcc_h7560 = _source390.dtor_optLbl;
                    } else if (_source390.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9139___mcc_h7562 = _source390.dtor_optExpr;
                    } else if (_source390.is_CallType) {
                      RAST._IExpr _9140___mcc_h7564 = _source390.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9141___mcc_h7565 = _source390.dtor_typeParameters;
                    } else if (_source390.is_Call) {
                      RAST._IExpr _9142___mcc_h7568 = _source390.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9143___mcc_h7569 = _source390.dtor_arguments;
                    } else if (_source390.is_Select) {
                      RAST._IExpr _9144___mcc_h7572 = _source390.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9145___mcc_h7573 = _source390.dtor_name;
                    } else if (_source390.is_MemberSelect) {
                      RAST._IExpr _9146___mcc_h7576 = _source390.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9147___mcc_h7577 = _source390.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9148___mcc_h7580 = _source390.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9149___mcc_h7581 = _source390.dtor_retType;
                      RAST._IExpr _9150___mcc_h7582 = _source390.dtor_body;
                    }
                  } else {
                  }
                } else if (_source389.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9151___mcc_h7586 = _source389.dtor_op2;
                  RAST._IExpr _9152___mcc_h7587 = _source389.dtor_left;
                  RAST._IExpr _9153___mcc_h7588 = _source389.dtor_right;
                  DAST.Format._IBinaryOpFormat _9154___mcc_h7589 = _source389.dtor_format2;
                } else if (_source389.is_TypeAscription) {
                  RAST._IExpr _9155___mcc_h7594 = _source389.dtor_left;
                  RAST._IType _9156___mcc_h7595 = _source389.dtor_tpe;
                } else if (_source389.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9157___mcc_h7598 = _source389.dtor_value;
                } else if (_source389.is_LiteralBool) {
                  bool _9158___mcc_h7600 = _source389.dtor_bvalue;
                } else if (_source389.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9159___mcc_h7602 = _source389.dtor_value;
                  bool _9160___mcc_h7603 = _source389.dtor_binary;
                } else if (_source389.is_DeclareVar) {
                  RAST._IDeclareType _9161___mcc_h7606 = _source389.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9162___mcc_h7607 = _source389.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9163___mcc_h7608 = _source389.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9164___mcc_h7609 = _source389.dtor_optRhs;
                } else if (_source389.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9165___mcc_h7614 = _source389.dtor_names;
                  RAST._IExpr _9166___mcc_h7615 = _source389.dtor_rhs;
                } else if (_source389.is_IfExpr) {
                  RAST._IExpr _9167___mcc_h7618 = _source389.dtor_cond;
                  RAST._IExpr _9168___mcc_h7619 = _source389.dtor_thn;
                  RAST._IExpr _9169___mcc_h7620 = _source389.dtor_els;
                } else if (_source389.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9170___mcc_h7624 = _source389.dtor_optCond;
                  RAST._IExpr _9171___mcc_h7625 = _source389.dtor_underlying;
                } else if (_source389.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9172___mcc_h7628 = _source389.dtor_name;
                  RAST._IExpr _9173___mcc_h7629 = _source389.dtor_range;
                  RAST._IExpr _9174___mcc_h7630 = _source389.dtor_body;
                } else if (_source389.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9175___mcc_h7634 = _source389.dtor_lbl;
                  RAST._IExpr _9176___mcc_h7635 = _source389.dtor_underlying;
                } else if (_source389.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9177___mcc_h7638 = _source389.dtor_optLbl;
                } else if (_source389.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9178___mcc_h7640 = _source389.dtor_optLbl;
                } else if (_source389.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9179___mcc_h7642 = _source389.dtor_optExpr;
                } else if (_source389.is_CallType) {
                  RAST._IExpr _9180___mcc_h7644 = _source389.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9181___mcc_h7645 = _source389.dtor_typeParameters;
                } else if (_source389.is_Call) {
                  RAST._IExpr _9182___mcc_h7648 = _source389.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9183___mcc_h7649 = _source389.dtor_arguments;
                } else if (_source389.is_Select) {
                  RAST._IExpr _9184___mcc_h7652 = _source389.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9185___mcc_h7653 = _source389.dtor_name;
                } else if (_source389.is_MemberSelect) {
                  RAST._IExpr _9186___mcc_h7656 = _source389.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9187___mcc_h7657 = _source389.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9188___mcc_h7660 = _source389.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9189___mcc_h7661 = _source389.dtor_retType;
                  RAST._IExpr _9190___mcc_h7662 = _source389.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9074_field));
              if (_9073_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2028;
              DCOMP._IOwnership _out2029;
              (this).FromOwned(r, expectedOwnership, out _out2028, out _out2029);
              r = _out2028;
              resultingOwnership = _out2029;
              readIdents = _9082_recIdents;
            }
            return ;
          }
        } else if (_source322.is_IIFE) {
          Dafny.ISequence<Dafny.Rune> _9191___mcc_h227 = _source322.dtor_name;
          DAST._IType _9192___mcc_h228 = _source322.dtor_typ;
          DAST._IExpression _9193___mcc_h229 = _source322.dtor_value;
          DAST._IExpression _9194___mcc_h230 = _source322.dtor_iifeBody;
          DAST._IType _9195_fieldType = _5017___mcc_h58;
          bool _9196_isDatatype = _5016___mcc_h57;
          bool _9197_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9198_field = _5014___mcc_h55;
          DAST._IExpression _9199_on = _5013___mcc_h54;
          {
            if (_9196_isDatatype) {
              RAST._IExpr _9200_onExpr;
              DCOMP._IOwnership _9201_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9202_recIdents;
              RAST._IExpr _out2030;
              DCOMP._IOwnership _out2031;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2032;
              (this).GenExpr(_9199_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2030, out _out2031, out _out2032);
              _9200_onExpr = _out2030;
              _9201_onOwned = _out2031;
              _9202_recIdents = _out2032;
              r = ((_9200_onExpr).Sel(DCOMP.__default.escapeName(_9198_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9203_typ;
              RAST._IType _out2033;
              _out2033 = (this).GenType(_9195_fieldType, DCOMP.GenTypeContext.@default());
              _9203_typ = _out2033;
              RAST._IExpr _out2034;
              DCOMP._IOwnership _out2035;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2034, out _out2035);
              r = _out2034;
              resultingOwnership = _out2035;
              readIdents = _9202_recIdents;
            } else {
              RAST._IExpr _9204_onExpr;
              DCOMP._IOwnership _9205_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9206_recIdents;
              RAST._IExpr _out2036;
              DCOMP._IOwnership _out2037;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2038;
              (this).GenExpr(_9199_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2036, out _out2037, out _out2038);
              _9204_onExpr = _out2036;
              _9205_onOwned = _out2037;
              _9206_recIdents = _out2038;
              r = _9204_onExpr;
              if (!object.Equals(_9204_onExpr, RAST.__default.self)) {
                RAST._IExpr _source391 = _9204_onExpr;
                if (_source391.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9207___mcc_h7666 = _source391.dtor_content;
                } else if (_source391.is_ExprFromType) {
                  RAST._IType _9208___mcc_h7668 = _source391.dtor_tpe;
                } else if (_source391.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9209___mcc_h7670 = _source391.dtor_name;
                } else if (_source391.is_Match) {
                  RAST._IExpr _9210___mcc_h7672 = _source391.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9211___mcc_h7673 = _source391.dtor_cases;
                } else if (_source391.is_StmtExpr) {
                  RAST._IExpr _9212___mcc_h7676 = _source391.dtor_stmt;
                  RAST._IExpr _9213___mcc_h7677 = _source391.dtor_rhs;
                } else if (_source391.is_Block) {
                  RAST._IExpr _9214___mcc_h7680 = _source391.dtor_underlying;
                } else if (_source391.is_StructBuild) {
                  RAST._IExpr _9215___mcc_h7682 = _source391.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9216___mcc_h7683 = _source391.dtor_assignments;
                } else if (_source391.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9217___mcc_h7686 = _source391.dtor_arguments;
                } else if (_source391.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9218___mcc_h7688 = _source391.dtor_op1;
                  RAST._IExpr _9219___mcc_h7689 = _source391.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9220___mcc_h7690 = _source391.dtor_format;
                  if (object.Equals(_9218___mcc_h7688, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source392 = _9219___mcc_h7689;
                    if (_source392.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9221___mcc_h7694 = _source392.dtor_content;
                    } else if (_source392.is_ExprFromType) {
                      RAST._IType _9222___mcc_h7696 = _source392.dtor_tpe;
                    } else if (_source392.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9223___mcc_h7698 = _source392.dtor_name;
                      if (object.Equals(_9223___mcc_h7698, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source392.is_Match) {
                      RAST._IExpr _9224___mcc_h7700 = _source392.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9225___mcc_h7701 = _source392.dtor_cases;
                    } else if (_source392.is_StmtExpr) {
                      RAST._IExpr _9226___mcc_h7704 = _source392.dtor_stmt;
                      RAST._IExpr _9227___mcc_h7705 = _source392.dtor_rhs;
                    } else if (_source392.is_Block) {
                      RAST._IExpr _9228___mcc_h7708 = _source392.dtor_underlying;
                    } else if (_source392.is_StructBuild) {
                      RAST._IExpr _9229___mcc_h7710 = _source392.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9230___mcc_h7711 = _source392.dtor_assignments;
                    } else if (_source392.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9231___mcc_h7714 = _source392.dtor_arguments;
                    } else if (_source392.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9232___mcc_h7716 = _source392.dtor_op1;
                      RAST._IExpr _9233___mcc_h7717 = _source392.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9234___mcc_h7718 = _source392.dtor_format;
                    } else if (_source392.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9235___mcc_h7722 = _source392.dtor_op2;
                      RAST._IExpr _9236___mcc_h7723 = _source392.dtor_left;
                      RAST._IExpr _9237___mcc_h7724 = _source392.dtor_right;
                      DAST.Format._IBinaryOpFormat _9238___mcc_h7725 = _source392.dtor_format2;
                    } else if (_source392.is_TypeAscription) {
                      RAST._IExpr _9239___mcc_h7730 = _source392.dtor_left;
                      RAST._IType _9240___mcc_h7731 = _source392.dtor_tpe;
                    } else if (_source392.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9241___mcc_h7734 = _source392.dtor_value;
                    } else if (_source392.is_LiteralBool) {
                      bool _9242___mcc_h7736 = _source392.dtor_bvalue;
                    } else if (_source392.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9243___mcc_h7738 = _source392.dtor_value;
                      bool _9244___mcc_h7739 = _source392.dtor_binary;
                    } else if (_source392.is_DeclareVar) {
                      RAST._IDeclareType _9245___mcc_h7742 = _source392.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9246___mcc_h7743 = _source392.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9247___mcc_h7744 = _source392.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9248___mcc_h7745 = _source392.dtor_optRhs;
                    } else if (_source392.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9249___mcc_h7750 = _source392.dtor_names;
                      RAST._IExpr _9250___mcc_h7751 = _source392.dtor_rhs;
                    } else if (_source392.is_IfExpr) {
                      RAST._IExpr _9251___mcc_h7754 = _source392.dtor_cond;
                      RAST._IExpr _9252___mcc_h7755 = _source392.dtor_thn;
                      RAST._IExpr _9253___mcc_h7756 = _source392.dtor_els;
                    } else if (_source392.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9254___mcc_h7760 = _source392.dtor_optCond;
                      RAST._IExpr _9255___mcc_h7761 = _source392.dtor_underlying;
                    } else if (_source392.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9256___mcc_h7764 = _source392.dtor_name;
                      RAST._IExpr _9257___mcc_h7765 = _source392.dtor_range;
                      RAST._IExpr _9258___mcc_h7766 = _source392.dtor_body;
                    } else if (_source392.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9259___mcc_h7770 = _source392.dtor_lbl;
                      RAST._IExpr _9260___mcc_h7771 = _source392.dtor_underlying;
                    } else if (_source392.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9261___mcc_h7774 = _source392.dtor_optLbl;
                    } else if (_source392.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9262___mcc_h7776 = _source392.dtor_optLbl;
                    } else if (_source392.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9263___mcc_h7778 = _source392.dtor_optExpr;
                    } else if (_source392.is_CallType) {
                      RAST._IExpr _9264___mcc_h7780 = _source392.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9265___mcc_h7781 = _source392.dtor_typeParameters;
                    } else if (_source392.is_Call) {
                      RAST._IExpr _9266___mcc_h7784 = _source392.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9267___mcc_h7785 = _source392.dtor_arguments;
                    } else if (_source392.is_Select) {
                      RAST._IExpr _9268___mcc_h7788 = _source392.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9269___mcc_h7789 = _source392.dtor_name;
                    } else if (_source392.is_MemberSelect) {
                      RAST._IExpr _9270___mcc_h7792 = _source392.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9271___mcc_h7793 = _source392.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9272___mcc_h7796 = _source392.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9273___mcc_h7797 = _source392.dtor_retType;
                      RAST._IExpr _9274___mcc_h7798 = _source392.dtor_body;
                    }
                  } else {
                  }
                } else if (_source391.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9275___mcc_h7802 = _source391.dtor_op2;
                  RAST._IExpr _9276___mcc_h7803 = _source391.dtor_left;
                  RAST._IExpr _9277___mcc_h7804 = _source391.dtor_right;
                  DAST.Format._IBinaryOpFormat _9278___mcc_h7805 = _source391.dtor_format2;
                } else if (_source391.is_TypeAscription) {
                  RAST._IExpr _9279___mcc_h7810 = _source391.dtor_left;
                  RAST._IType _9280___mcc_h7811 = _source391.dtor_tpe;
                } else if (_source391.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9281___mcc_h7814 = _source391.dtor_value;
                } else if (_source391.is_LiteralBool) {
                  bool _9282___mcc_h7816 = _source391.dtor_bvalue;
                } else if (_source391.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9283___mcc_h7818 = _source391.dtor_value;
                  bool _9284___mcc_h7819 = _source391.dtor_binary;
                } else if (_source391.is_DeclareVar) {
                  RAST._IDeclareType _9285___mcc_h7822 = _source391.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9286___mcc_h7823 = _source391.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9287___mcc_h7824 = _source391.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9288___mcc_h7825 = _source391.dtor_optRhs;
                } else if (_source391.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9289___mcc_h7830 = _source391.dtor_names;
                  RAST._IExpr _9290___mcc_h7831 = _source391.dtor_rhs;
                } else if (_source391.is_IfExpr) {
                  RAST._IExpr _9291___mcc_h7834 = _source391.dtor_cond;
                  RAST._IExpr _9292___mcc_h7835 = _source391.dtor_thn;
                  RAST._IExpr _9293___mcc_h7836 = _source391.dtor_els;
                } else if (_source391.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9294___mcc_h7840 = _source391.dtor_optCond;
                  RAST._IExpr _9295___mcc_h7841 = _source391.dtor_underlying;
                } else if (_source391.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9296___mcc_h7844 = _source391.dtor_name;
                  RAST._IExpr _9297___mcc_h7845 = _source391.dtor_range;
                  RAST._IExpr _9298___mcc_h7846 = _source391.dtor_body;
                } else if (_source391.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9299___mcc_h7850 = _source391.dtor_lbl;
                  RAST._IExpr _9300___mcc_h7851 = _source391.dtor_underlying;
                } else if (_source391.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9301___mcc_h7854 = _source391.dtor_optLbl;
                } else if (_source391.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9302___mcc_h7856 = _source391.dtor_optLbl;
                } else if (_source391.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9303___mcc_h7858 = _source391.dtor_optExpr;
                } else if (_source391.is_CallType) {
                  RAST._IExpr _9304___mcc_h7860 = _source391.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9305___mcc_h7861 = _source391.dtor_typeParameters;
                } else if (_source391.is_Call) {
                  RAST._IExpr _9306___mcc_h7864 = _source391.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9307___mcc_h7865 = _source391.dtor_arguments;
                } else if (_source391.is_Select) {
                  RAST._IExpr _9308___mcc_h7868 = _source391.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9309___mcc_h7869 = _source391.dtor_name;
                } else if (_source391.is_MemberSelect) {
                  RAST._IExpr _9310___mcc_h7872 = _source391.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9311___mcc_h7873 = _source391.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9312___mcc_h7876 = _source391.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9313___mcc_h7877 = _source391.dtor_retType;
                  RAST._IExpr _9314___mcc_h7878 = _source391.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9198_field));
              if (_9197_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2039;
              DCOMP._IOwnership _out2040;
              (this).FromOwned(r, expectedOwnership, out _out2039, out _out2040);
              r = _out2039;
              resultingOwnership = _out2040;
              readIdents = _9206_recIdents;
            }
            return ;
          }
        } else if (_source322.is_Apply) {
          DAST._IExpression _9315___mcc_h235 = _source322.dtor_expr;
          Dafny.ISequence<DAST._IExpression> _9316___mcc_h236 = _source322.dtor_args;
          DAST._IType _9317_fieldType = _5017___mcc_h58;
          bool _9318_isDatatype = _5016___mcc_h57;
          bool _9319_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9320_field = _5014___mcc_h55;
          DAST._IExpression _9321_on = _5013___mcc_h54;
          {
            if (_9318_isDatatype) {
              RAST._IExpr _9322_onExpr;
              DCOMP._IOwnership _9323_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9324_recIdents;
              RAST._IExpr _out2041;
              DCOMP._IOwnership _out2042;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2043;
              (this).GenExpr(_9321_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2041, out _out2042, out _out2043);
              _9322_onExpr = _out2041;
              _9323_onOwned = _out2042;
              _9324_recIdents = _out2043;
              r = ((_9322_onExpr).Sel(DCOMP.__default.escapeName(_9320_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9325_typ;
              RAST._IType _out2044;
              _out2044 = (this).GenType(_9317_fieldType, DCOMP.GenTypeContext.@default());
              _9325_typ = _out2044;
              RAST._IExpr _out2045;
              DCOMP._IOwnership _out2046;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2045, out _out2046);
              r = _out2045;
              resultingOwnership = _out2046;
              readIdents = _9324_recIdents;
            } else {
              RAST._IExpr _9326_onExpr;
              DCOMP._IOwnership _9327_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9328_recIdents;
              RAST._IExpr _out2047;
              DCOMP._IOwnership _out2048;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2049;
              (this).GenExpr(_9321_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2047, out _out2048, out _out2049);
              _9326_onExpr = _out2047;
              _9327_onOwned = _out2048;
              _9328_recIdents = _out2049;
              r = _9326_onExpr;
              if (!object.Equals(_9326_onExpr, RAST.__default.self)) {
                RAST._IExpr _source393 = _9326_onExpr;
                if (_source393.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9329___mcc_h7882 = _source393.dtor_content;
                } else if (_source393.is_ExprFromType) {
                  RAST._IType _9330___mcc_h7884 = _source393.dtor_tpe;
                } else if (_source393.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9331___mcc_h7886 = _source393.dtor_name;
                } else if (_source393.is_Match) {
                  RAST._IExpr _9332___mcc_h7888 = _source393.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9333___mcc_h7889 = _source393.dtor_cases;
                } else if (_source393.is_StmtExpr) {
                  RAST._IExpr _9334___mcc_h7892 = _source393.dtor_stmt;
                  RAST._IExpr _9335___mcc_h7893 = _source393.dtor_rhs;
                } else if (_source393.is_Block) {
                  RAST._IExpr _9336___mcc_h7896 = _source393.dtor_underlying;
                } else if (_source393.is_StructBuild) {
                  RAST._IExpr _9337___mcc_h7898 = _source393.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9338___mcc_h7899 = _source393.dtor_assignments;
                } else if (_source393.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9339___mcc_h7902 = _source393.dtor_arguments;
                } else if (_source393.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9340___mcc_h7904 = _source393.dtor_op1;
                  RAST._IExpr _9341___mcc_h7905 = _source393.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9342___mcc_h7906 = _source393.dtor_format;
                  if (object.Equals(_9340___mcc_h7904, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source394 = _9341___mcc_h7905;
                    if (_source394.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9343___mcc_h7910 = _source394.dtor_content;
                    } else if (_source394.is_ExprFromType) {
                      RAST._IType _9344___mcc_h7912 = _source394.dtor_tpe;
                    } else if (_source394.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9345___mcc_h7914 = _source394.dtor_name;
                      if (object.Equals(_9345___mcc_h7914, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source394.is_Match) {
                      RAST._IExpr _9346___mcc_h7916 = _source394.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9347___mcc_h7917 = _source394.dtor_cases;
                    } else if (_source394.is_StmtExpr) {
                      RAST._IExpr _9348___mcc_h7920 = _source394.dtor_stmt;
                      RAST._IExpr _9349___mcc_h7921 = _source394.dtor_rhs;
                    } else if (_source394.is_Block) {
                      RAST._IExpr _9350___mcc_h7924 = _source394.dtor_underlying;
                    } else if (_source394.is_StructBuild) {
                      RAST._IExpr _9351___mcc_h7926 = _source394.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9352___mcc_h7927 = _source394.dtor_assignments;
                    } else if (_source394.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9353___mcc_h7930 = _source394.dtor_arguments;
                    } else if (_source394.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9354___mcc_h7932 = _source394.dtor_op1;
                      RAST._IExpr _9355___mcc_h7933 = _source394.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9356___mcc_h7934 = _source394.dtor_format;
                    } else if (_source394.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9357___mcc_h7938 = _source394.dtor_op2;
                      RAST._IExpr _9358___mcc_h7939 = _source394.dtor_left;
                      RAST._IExpr _9359___mcc_h7940 = _source394.dtor_right;
                      DAST.Format._IBinaryOpFormat _9360___mcc_h7941 = _source394.dtor_format2;
                    } else if (_source394.is_TypeAscription) {
                      RAST._IExpr _9361___mcc_h7946 = _source394.dtor_left;
                      RAST._IType _9362___mcc_h7947 = _source394.dtor_tpe;
                    } else if (_source394.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9363___mcc_h7950 = _source394.dtor_value;
                    } else if (_source394.is_LiteralBool) {
                      bool _9364___mcc_h7952 = _source394.dtor_bvalue;
                    } else if (_source394.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9365___mcc_h7954 = _source394.dtor_value;
                      bool _9366___mcc_h7955 = _source394.dtor_binary;
                    } else if (_source394.is_DeclareVar) {
                      RAST._IDeclareType _9367___mcc_h7958 = _source394.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9368___mcc_h7959 = _source394.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9369___mcc_h7960 = _source394.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9370___mcc_h7961 = _source394.dtor_optRhs;
                    } else if (_source394.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9371___mcc_h7966 = _source394.dtor_names;
                      RAST._IExpr _9372___mcc_h7967 = _source394.dtor_rhs;
                    } else if (_source394.is_IfExpr) {
                      RAST._IExpr _9373___mcc_h7970 = _source394.dtor_cond;
                      RAST._IExpr _9374___mcc_h7971 = _source394.dtor_thn;
                      RAST._IExpr _9375___mcc_h7972 = _source394.dtor_els;
                    } else if (_source394.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9376___mcc_h7976 = _source394.dtor_optCond;
                      RAST._IExpr _9377___mcc_h7977 = _source394.dtor_underlying;
                    } else if (_source394.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9378___mcc_h7980 = _source394.dtor_name;
                      RAST._IExpr _9379___mcc_h7981 = _source394.dtor_range;
                      RAST._IExpr _9380___mcc_h7982 = _source394.dtor_body;
                    } else if (_source394.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9381___mcc_h7986 = _source394.dtor_lbl;
                      RAST._IExpr _9382___mcc_h7987 = _source394.dtor_underlying;
                    } else if (_source394.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9383___mcc_h7990 = _source394.dtor_optLbl;
                    } else if (_source394.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9384___mcc_h7992 = _source394.dtor_optLbl;
                    } else if (_source394.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9385___mcc_h7994 = _source394.dtor_optExpr;
                    } else if (_source394.is_CallType) {
                      RAST._IExpr _9386___mcc_h7996 = _source394.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9387___mcc_h7997 = _source394.dtor_typeParameters;
                    } else if (_source394.is_Call) {
                      RAST._IExpr _9388___mcc_h8000 = _source394.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9389___mcc_h8001 = _source394.dtor_arguments;
                    } else if (_source394.is_Select) {
                      RAST._IExpr _9390___mcc_h8004 = _source394.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9391___mcc_h8005 = _source394.dtor_name;
                    } else if (_source394.is_MemberSelect) {
                      RAST._IExpr _9392___mcc_h8008 = _source394.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9393___mcc_h8009 = _source394.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9394___mcc_h8012 = _source394.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9395___mcc_h8013 = _source394.dtor_retType;
                      RAST._IExpr _9396___mcc_h8014 = _source394.dtor_body;
                    }
                  } else {
                  }
                } else if (_source393.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9397___mcc_h8018 = _source393.dtor_op2;
                  RAST._IExpr _9398___mcc_h8019 = _source393.dtor_left;
                  RAST._IExpr _9399___mcc_h8020 = _source393.dtor_right;
                  DAST.Format._IBinaryOpFormat _9400___mcc_h8021 = _source393.dtor_format2;
                } else if (_source393.is_TypeAscription) {
                  RAST._IExpr _9401___mcc_h8026 = _source393.dtor_left;
                  RAST._IType _9402___mcc_h8027 = _source393.dtor_tpe;
                } else if (_source393.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9403___mcc_h8030 = _source393.dtor_value;
                } else if (_source393.is_LiteralBool) {
                  bool _9404___mcc_h8032 = _source393.dtor_bvalue;
                } else if (_source393.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9405___mcc_h8034 = _source393.dtor_value;
                  bool _9406___mcc_h8035 = _source393.dtor_binary;
                } else if (_source393.is_DeclareVar) {
                  RAST._IDeclareType _9407___mcc_h8038 = _source393.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9408___mcc_h8039 = _source393.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9409___mcc_h8040 = _source393.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9410___mcc_h8041 = _source393.dtor_optRhs;
                } else if (_source393.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9411___mcc_h8046 = _source393.dtor_names;
                  RAST._IExpr _9412___mcc_h8047 = _source393.dtor_rhs;
                } else if (_source393.is_IfExpr) {
                  RAST._IExpr _9413___mcc_h8050 = _source393.dtor_cond;
                  RAST._IExpr _9414___mcc_h8051 = _source393.dtor_thn;
                  RAST._IExpr _9415___mcc_h8052 = _source393.dtor_els;
                } else if (_source393.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9416___mcc_h8056 = _source393.dtor_optCond;
                  RAST._IExpr _9417___mcc_h8057 = _source393.dtor_underlying;
                } else if (_source393.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9418___mcc_h8060 = _source393.dtor_name;
                  RAST._IExpr _9419___mcc_h8061 = _source393.dtor_range;
                  RAST._IExpr _9420___mcc_h8062 = _source393.dtor_body;
                } else if (_source393.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9421___mcc_h8066 = _source393.dtor_lbl;
                  RAST._IExpr _9422___mcc_h8067 = _source393.dtor_underlying;
                } else if (_source393.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9423___mcc_h8070 = _source393.dtor_optLbl;
                } else if (_source393.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9424___mcc_h8072 = _source393.dtor_optLbl;
                } else if (_source393.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9425___mcc_h8074 = _source393.dtor_optExpr;
                } else if (_source393.is_CallType) {
                  RAST._IExpr _9426___mcc_h8076 = _source393.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9427___mcc_h8077 = _source393.dtor_typeParameters;
                } else if (_source393.is_Call) {
                  RAST._IExpr _9428___mcc_h8080 = _source393.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9429___mcc_h8081 = _source393.dtor_arguments;
                } else if (_source393.is_Select) {
                  RAST._IExpr _9430___mcc_h8084 = _source393.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9431___mcc_h8085 = _source393.dtor_name;
                } else if (_source393.is_MemberSelect) {
                  RAST._IExpr _9432___mcc_h8088 = _source393.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9433___mcc_h8089 = _source393.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9434___mcc_h8092 = _source393.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9435___mcc_h8093 = _source393.dtor_retType;
                  RAST._IExpr _9436___mcc_h8094 = _source393.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9320_field));
              if (_9319_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2050;
              DCOMP._IOwnership _out2051;
              (this).FromOwned(r, expectedOwnership, out _out2050, out _out2051);
              r = _out2050;
              resultingOwnership = _out2051;
              readIdents = _9328_recIdents;
            }
            return ;
          }
        } else if (_source322.is_TypeTest) {
          DAST._IExpression _9437___mcc_h239 = _source322.dtor_on;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _9438___mcc_h240 = _source322.dtor_dType;
          Dafny.ISequence<Dafny.Rune> _9439___mcc_h241 = _source322.dtor_variant;
          DAST._IType _9440_fieldType = _5017___mcc_h58;
          bool _9441_isDatatype = _5016___mcc_h57;
          bool _9442_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9443_field = _5014___mcc_h55;
          DAST._IExpression _9444_on = _5013___mcc_h54;
          {
            if (_9441_isDatatype) {
              RAST._IExpr _9445_onExpr;
              DCOMP._IOwnership _9446_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9447_recIdents;
              RAST._IExpr _out2052;
              DCOMP._IOwnership _out2053;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2054;
              (this).GenExpr(_9444_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2052, out _out2053, out _out2054);
              _9445_onExpr = _out2052;
              _9446_onOwned = _out2053;
              _9447_recIdents = _out2054;
              r = ((_9445_onExpr).Sel(DCOMP.__default.escapeName(_9443_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9448_typ;
              RAST._IType _out2055;
              _out2055 = (this).GenType(_9440_fieldType, DCOMP.GenTypeContext.@default());
              _9448_typ = _out2055;
              RAST._IExpr _out2056;
              DCOMP._IOwnership _out2057;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2056, out _out2057);
              r = _out2056;
              resultingOwnership = _out2057;
              readIdents = _9447_recIdents;
            } else {
              RAST._IExpr _9449_onExpr;
              DCOMP._IOwnership _9450_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9451_recIdents;
              RAST._IExpr _out2058;
              DCOMP._IOwnership _out2059;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2060;
              (this).GenExpr(_9444_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2058, out _out2059, out _out2060);
              _9449_onExpr = _out2058;
              _9450_onOwned = _out2059;
              _9451_recIdents = _out2060;
              r = _9449_onExpr;
              if (!object.Equals(_9449_onExpr, RAST.__default.self)) {
                RAST._IExpr _source395 = _9449_onExpr;
                if (_source395.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9452___mcc_h8098 = _source395.dtor_content;
                } else if (_source395.is_ExprFromType) {
                  RAST._IType _9453___mcc_h8100 = _source395.dtor_tpe;
                } else if (_source395.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9454___mcc_h8102 = _source395.dtor_name;
                } else if (_source395.is_Match) {
                  RAST._IExpr _9455___mcc_h8104 = _source395.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9456___mcc_h8105 = _source395.dtor_cases;
                } else if (_source395.is_StmtExpr) {
                  RAST._IExpr _9457___mcc_h8108 = _source395.dtor_stmt;
                  RAST._IExpr _9458___mcc_h8109 = _source395.dtor_rhs;
                } else if (_source395.is_Block) {
                  RAST._IExpr _9459___mcc_h8112 = _source395.dtor_underlying;
                } else if (_source395.is_StructBuild) {
                  RAST._IExpr _9460___mcc_h8114 = _source395.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9461___mcc_h8115 = _source395.dtor_assignments;
                } else if (_source395.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9462___mcc_h8118 = _source395.dtor_arguments;
                } else if (_source395.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9463___mcc_h8120 = _source395.dtor_op1;
                  RAST._IExpr _9464___mcc_h8121 = _source395.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9465___mcc_h8122 = _source395.dtor_format;
                  if (object.Equals(_9463___mcc_h8120, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source396 = _9464___mcc_h8121;
                    if (_source396.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9466___mcc_h8126 = _source396.dtor_content;
                    } else if (_source396.is_ExprFromType) {
                      RAST._IType _9467___mcc_h8128 = _source396.dtor_tpe;
                    } else if (_source396.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9468___mcc_h8130 = _source396.dtor_name;
                      if (object.Equals(_9468___mcc_h8130, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source396.is_Match) {
                      RAST._IExpr _9469___mcc_h8132 = _source396.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9470___mcc_h8133 = _source396.dtor_cases;
                    } else if (_source396.is_StmtExpr) {
                      RAST._IExpr _9471___mcc_h8136 = _source396.dtor_stmt;
                      RAST._IExpr _9472___mcc_h8137 = _source396.dtor_rhs;
                    } else if (_source396.is_Block) {
                      RAST._IExpr _9473___mcc_h8140 = _source396.dtor_underlying;
                    } else if (_source396.is_StructBuild) {
                      RAST._IExpr _9474___mcc_h8142 = _source396.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9475___mcc_h8143 = _source396.dtor_assignments;
                    } else if (_source396.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9476___mcc_h8146 = _source396.dtor_arguments;
                    } else if (_source396.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9477___mcc_h8148 = _source396.dtor_op1;
                      RAST._IExpr _9478___mcc_h8149 = _source396.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9479___mcc_h8150 = _source396.dtor_format;
                    } else if (_source396.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9480___mcc_h8154 = _source396.dtor_op2;
                      RAST._IExpr _9481___mcc_h8155 = _source396.dtor_left;
                      RAST._IExpr _9482___mcc_h8156 = _source396.dtor_right;
                      DAST.Format._IBinaryOpFormat _9483___mcc_h8157 = _source396.dtor_format2;
                    } else if (_source396.is_TypeAscription) {
                      RAST._IExpr _9484___mcc_h8162 = _source396.dtor_left;
                      RAST._IType _9485___mcc_h8163 = _source396.dtor_tpe;
                    } else if (_source396.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9486___mcc_h8166 = _source396.dtor_value;
                    } else if (_source396.is_LiteralBool) {
                      bool _9487___mcc_h8168 = _source396.dtor_bvalue;
                    } else if (_source396.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9488___mcc_h8170 = _source396.dtor_value;
                      bool _9489___mcc_h8171 = _source396.dtor_binary;
                    } else if (_source396.is_DeclareVar) {
                      RAST._IDeclareType _9490___mcc_h8174 = _source396.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9491___mcc_h8175 = _source396.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9492___mcc_h8176 = _source396.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9493___mcc_h8177 = _source396.dtor_optRhs;
                    } else if (_source396.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9494___mcc_h8182 = _source396.dtor_names;
                      RAST._IExpr _9495___mcc_h8183 = _source396.dtor_rhs;
                    } else if (_source396.is_IfExpr) {
                      RAST._IExpr _9496___mcc_h8186 = _source396.dtor_cond;
                      RAST._IExpr _9497___mcc_h8187 = _source396.dtor_thn;
                      RAST._IExpr _9498___mcc_h8188 = _source396.dtor_els;
                    } else if (_source396.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9499___mcc_h8192 = _source396.dtor_optCond;
                      RAST._IExpr _9500___mcc_h8193 = _source396.dtor_underlying;
                    } else if (_source396.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9501___mcc_h8196 = _source396.dtor_name;
                      RAST._IExpr _9502___mcc_h8197 = _source396.dtor_range;
                      RAST._IExpr _9503___mcc_h8198 = _source396.dtor_body;
                    } else if (_source396.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9504___mcc_h8202 = _source396.dtor_lbl;
                      RAST._IExpr _9505___mcc_h8203 = _source396.dtor_underlying;
                    } else if (_source396.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9506___mcc_h8206 = _source396.dtor_optLbl;
                    } else if (_source396.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9507___mcc_h8208 = _source396.dtor_optLbl;
                    } else if (_source396.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9508___mcc_h8210 = _source396.dtor_optExpr;
                    } else if (_source396.is_CallType) {
                      RAST._IExpr _9509___mcc_h8212 = _source396.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9510___mcc_h8213 = _source396.dtor_typeParameters;
                    } else if (_source396.is_Call) {
                      RAST._IExpr _9511___mcc_h8216 = _source396.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9512___mcc_h8217 = _source396.dtor_arguments;
                    } else if (_source396.is_Select) {
                      RAST._IExpr _9513___mcc_h8220 = _source396.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9514___mcc_h8221 = _source396.dtor_name;
                    } else if (_source396.is_MemberSelect) {
                      RAST._IExpr _9515___mcc_h8224 = _source396.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9516___mcc_h8225 = _source396.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9517___mcc_h8228 = _source396.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9518___mcc_h8229 = _source396.dtor_retType;
                      RAST._IExpr _9519___mcc_h8230 = _source396.dtor_body;
                    }
                  } else {
                  }
                } else if (_source395.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9520___mcc_h8234 = _source395.dtor_op2;
                  RAST._IExpr _9521___mcc_h8235 = _source395.dtor_left;
                  RAST._IExpr _9522___mcc_h8236 = _source395.dtor_right;
                  DAST.Format._IBinaryOpFormat _9523___mcc_h8237 = _source395.dtor_format2;
                } else if (_source395.is_TypeAscription) {
                  RAST._IExpr _9524___mcc_h8242 = _source395.dtor_left;
                  RAST._IType _9525___mcc_h8243 = _source395.dtor_tpe;
                } else if (_source395.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9526___mcc_h8246 = _source395.dtor_value;
                } else if (_source395.is_LiteralBool) {
                  bool _9527___mcc_h8248 = _source395.dtor_bvalue;
                } else if (_source395.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9528___mcc_h8250 = _source395.dtor_value;
                  bool _9529___mcc_h8251 = _source395.dtor_binary;
                } else if (_source395.is_DeclareVar) {
                  RAST._IDeclareType _9530___mcc_h8254 = _source395.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9531___mcc_h8255 = _source395.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9532___mcc_h8256 = _source395.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9533___mcc_h8257 = _source395.dtor_optRhs;
                } else if (_source395.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9534___mcc_h8262 = _source395.dtor_names;
                  RAST._IExpr _9535___mcc_h8263 = _source395.dtor_rhs;
                } else if (_source395.is_IfExpr) {
                  RAST._IExpr _9536___mcc_h8266 = _source395.dtor_cond;
                  RAST._IExpr _9537___mcc_h8267 = _source395.dtor_thn;
                  RAST._IExpr _9538___mcc_h8268 = _source395.dtor_els;
                } else if (_source395.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9539___mcc_h8272 = _source395.dtor_optCond;
                  RAST._IExpr _9540___mcc_h8273 = _source395.dtor_underlying;
                } else if (_source395.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9541___mcc_h8276 = _source395.dtor_name;
                  RAST._IExpr _9542___mcc_h8277 = _source395.dtor_range;
                  RAST._IExpr _9543___mcc_h8278 = _source395.dtor_body;
                } else if (_source395.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9544___mcc_h8282 = _source395.dtor_lbl;
                  RAST._IExpr _9545___mcc_h8283 = _source395.dtor_underlying;
                } else if (_source395.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9546___mcc_h8286 = _source395.dtor_optLbl;
                } else if (_source395.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9547___mcc_h8288 = _source395.dtor_optLbl;
                } else if (_source395.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9548___mcc_h8290 = _source395.dtor_optExpr;
                } else if (_source395.is_CallType) {
                  RAST._IExpr _9549___mcc_h8292 = _source395.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9550___mcc_h8293 = _source395.dtor_typeParameters;
                } else if (_source395.is_Call) {
                  RAST._IExpr _9551___mcc_h8296 = _source395.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9552___mcc_h8297 = _source395.dtor_arguments;
                } else if (_source395.is_Select) {
                  RAST._IExpr _9553___mcc_h8300 = _source395.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9554___mcc_h8301 = _source395.dtor_name;
                } else if (_source395.is_MemberSelect) {
                  RAST._IExpr _9555___mcc_h8304 = _source395.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9556___mcc_h8305 = _source395.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9557___mcc_h8308 = _source395.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9558___mcc_h8309 = _source395.dtor_retType;
                  RAST._IExpr _9559___mcc_h8310 = _source395.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9443_field));
              if (_9442_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2061;
              DCOMP._IOwnership _out2062;
              (this).FromOwned(r, expectedOwnership, out _out2061, out _out2062);
              r = _out2061;
              resultingOwnership = _out2062;
              readIdents = _9451_recIdents;
            }
            return ;
          }
        } else if (_source322.is_InitializationValue) {
          DAST._IType _9560___mcc_h245 = _source322.dtor_typ;
          DAST._IType _9561_fieldType = _5017___mcc_h58;
          bool _9562_isDatatype = _5016___mcc_h57;
          bool _9563_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9564_field = _5014___mcc_h55;
          DAST._IExpression _9565_on = _5013___mcc_h54;
          {
            if (_9562_isDatatype) {
              RAST._IExpr _9566_onExpr;
              DCOMP._IOwnership _9567_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9568_recIdents;
              RAST._IExpr _out2063;
              DCOMP._IOwnership _out2064;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2065;
              (this).GenExpr(_9565_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2063, out _out2064, out _out2065);
              _9566_onExpr = _out2063;
              _9567_onOwned = _out2064;
              _9568_recIdents = _out2065;
              r = ((_9566_onExpr).Sel(DCOMP.__default.escapeName(_9564_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9569_typ;
              RAST._IType _out2066;
              _out2066 = (this).GenType(_9561_fieldType, DCOMP.GenTypeContext.@default());
              _9569_typ = _out2066;
              RAST._IExpr _out2067;
              DCOMP._IOwnership _out2068;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2067, out _out2068);
              r = _out2067;
              resultingOwnership = _out2068;
              readIdents = _9568_recIdents;
            } else {
              RAST._IExpr _9570_onExpr;
              DCOMP._IOwnership _9571_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9572_recIdents;
              RAST._IExpr _out2069;
              DCOMP._IOwnership _out2070;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2071;
              (this).GenExpr(_9565_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2069, out _out2070, out _out2071);
              _9570_onExpr = _out2069;
              _9571_onOwned = _out2070;
              _9572_recIdents = _out2071;
              r = _9570_onExpr;
              if (!object.Equals(_9570_onExpr, RAST.__default.self)) {
                RAST._IExpr _source397 = _9570_onExpr;
                if (_source397.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9573___mcc_h8314 = _source397.dtor_content;
                } else if (_source397.is_ExprFromType) {
                  RAST._IType _9574___mcc_h8316 = _source397.dtor_tpe;
                } else if (_source397.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9575___mcc_h8318 = _source397.dtor_name;
                } else if (_source397.is_Match) {
                  RAST._IExpr _9576___mcc_h8320 = _source397.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9577___mcc_h8321 = _source397.dtor_cases;
                } else if (_source397.is_StmtExpr) {
                  RAST._IExpr _9578___mcc_h8324 = _source397.dtor_stmt;
                  RAST._IExpr _9579___mcc_h8325 = _source397.dtor_rhs;
                } else if (_source397.is_Block) {
                  RAST._IExpr _9580___mcc_h8328 = _source397.dtor_underlying;
                } else if (_source397.is_StructBuild) {
                  RAST._IExpr _9581___mcc_h8330 = _source397.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9582___mcc_h8331 = _source397.dtor_assignments;
                } else if (_source397.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9583___mcc_h8334 = _source397.dtor_arguments;
                } else if (_source397.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9584___mcc_h8336 = _source397.dtor_op1;
                  RAST._IExpr _9585___mcc_h8337 = _source397.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9586___mcc_h8338 = _source397.dtor_format;
                  if (object.Equals(_9584___mcc_h8336, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source398 = _9585___mcc_h8337;
                    if (_source398.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9587___mcc_h8342 = _source398.dtor_content;
                    } else if (_source398.is_ExprFromType) {
                      RAST._IType _9588___mcc_h8344 = _source398.dtor_tpe;
                    } else if (_source398.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9589___mcc_h8346 = _source398.dtor_name;
                      if (object.Equals(_9589___mcc_h8346, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source398.is_Match) {
                      RAST._IExpr _9590___mcc_h8348 = _source398.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9591___mcc_h8349 = _source398.dtor_cases;
                    } else if (_source398.is_StmtExpr) {
                      RAST._IExpr _9592___mcc_h8352 = _source398.dtor_stmt;
                      RAST._IExpr _9593___mcc_h8353 = _source398.dtor_rhs;
                    } else if (_source398.is_Block) {
                      RAST._IExpr _9594___mcc_h8356 = _source398.dtor_underlying;
                    } else if (_source398.is_StructBuild) {
                      RAST._IExpr _9595___mcc_h8358 = _source398.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9596___mcc_h8359 = _source398.dtor_assignments;
                    } else if (_source398.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9597___mcc_h8362 = _source398.dtor_arguments;
                    } else if (_source398.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9598___mcc_h8364 = _source398.dtor_op1;
                      RAST._IExpr _9599___mcc_h8365 = _source398.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9600___mcc_h8366 = _source398.dtor_format;
                    } else if (_source398.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9601___mcc_h8370 = _source398.dtor_op2;
                      RAST._IExpr _9602___mcc_h8371 = _source398.dtor_left;
                      RAST._IExpr _9603___mcc_h8372 = _source398.dtor_right;
                      DAST.Format._IBinaryOpFormat _9604___mcc_h8373 = _source398.dtor_format2;
                    } else if (_source398.is_TypeAscription) {
                      RAST._IExpr _9605___mcc_h8378 = _source398.dtor_left;
                      RAST._IType _9606___mcc_h8379 = _source398.dtor_tpe;
                    } else if (_source398.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9607___mcc_h8382 = _source398.dtor_value;
                    } else if (_source398.is_LiteralBool) {
                      bool _9608___mcc_h8384 = _source398.dtor_bvalue;
                    } else if (_source398.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9609___mcc_h8386 = _source398.dtor_value;
                      bool _9610___mcc_h8387 = _source398.dtor_binary;
                    } else if (_source398.is_DeclareVar) {
                      RAST._IDeclareType _9611___mcc_h8390 = _source398.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9612___mcc_h8391 = _source398.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9613___mcc_h8392 = _source398.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9614___mcc_h8393 = _source398.dtor_optRhs;
                    } else if (_source398.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9615___mcc_h8398 = _source398.dtor_names;
                      RAST._IExpr _9616___mcc_h8399 = _source398.dtor_rhs;
                    } else if (_source398.is_IfExpr) {
                      RAST._IExpr _9617___mcc_h8402 = _source398.dtor_cond;
                      RAST._IExpr _9618___mcc_h8403 = _source398.dtor_thn;
                      RAST._IExpr _9619___mcc_h8404 = _source398.dtor_els;
                    } else if (_source398.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9620___mcc_h8408 = _source398.dtor_optCond;
                      RAST._IExpr _9621___mcc_h8409 = _source398.dtor_underlying;
                    } else if (_source398.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9622___mcc_h8412 = _source398.dtor_name;
                      RAST._IExpr _9623___mcc_h8413 = _source398.dtor_range;
                      RAST._IExpr _9624___mcc_h8414 = _source398.dtor_body;
                    } else if (_source398.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9625___mcc_h8418 = _source398.dtor_lbl;
                      RAST._IExpr _9626___mcc_h8419 = _source398.dtor_underlying;
                    } else if (_source398.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9627___mcc_h8422 = _source398.dtor_optLbl;
                    } else if (_source398.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9628___mcc_h8424 = _source398.dtor_optLbl;
                    } else if (_source398.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9629___mcc_h8426 = _source398.dtor_optExpr;
                    } else if (_source398.is_CallType) {
                      RAST._IExpr _9630___mcc_h8428 = _source398.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9631___mcc_h8429 = _source398.dtor_typeParameters;
                    } else if (_source398.is_Call) {
                      RAST._IExpr _9632___mcc_h8432 = _source398.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9633___mcc_h8433 = _source398.dtor_arguments;
                    } else if (_source398.is_Select) {
                      RAST._IExpr _9634___mcc_h8436 = _source398.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9635___mcc_h8437 = _source398.dtor_name;
                    } else if (_source398.is_MemberSelect) {
                      RAST._IExpr _9636___mcc_h8440 = _source398.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9637___mcc_h8441 = _source398.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9638___mcc_h8444 = _source398.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9639___mcc_h8445 = _source398.dtor_retType;
                      RAST._IExpr _9640___mcc_h8446 = _source398.dtor_body;
                    }
                  } else {
                  }
                } else if (_source397.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9641___mcc_h8450 = _source397.dtor_op2;
                  RAST._IExpr _9642___mcc_h8451 = _source397.dtor_left;
                  RAST._IExpr _9643___mcc_h8452 = _source397.dtor_right;
                  DAST.Format._IBinaryOpFormat _9644___mcc_h8453 = _source397.dtor_format2;
                } else if (_source397.is_TypeAscription) {
                  RAST._IExpr _9645___mcc_h8458 = _source397.dtor_left;
                  RAST._IType _9646___mcc_h8459 = _source397.dtor_tpe;
                } else if (_source397.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9647___mcc_h8462 = _source397.dtor_value;
                } else if (_source397.is_LiteralBool) {
                  bool _9648___mcc_h8464 = _source397.dtor_bvalue;
                } else if (_source397.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9649___mcc_h8466 = _source397.dtor_value;
                  bool _9650___mcc_h8467 = _source397.dtor_binary;
                } else if (_source397.is_DeclareVar) {
                  RAST._IDeclareType _9651___mcc_h8470 = _source397.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9652___mcc_h8471 = _source397.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9653___mcc_h8472 = _source397.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9654___mcc_h8473 = _source397.dtor_optRhs;
                } else if (_source397.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9655___mcc_h8478 = _source397.dtor_names;
                  RAST._IExpr _9656___mcc_h8479 = _source397.dtor_rhs;
                } else if (_source397.is_IfExpr) {
                  RAST._IExpr _9657___mcc_h8482 = _source397.dtor_cond;
                  RAST._IExpr _9658___mcc_h8483 = _source397.dtor_thn;
                  RAST._IExpr _9659___mcc_h8484 = _source397.dtor_els;
                } else if (_source397.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9660___mcc_h8488 = _source397.dtor_optCond;
                  RAST._IExpr _9661___mcc_h8489 = _source397.dtor_underlying;
                } else if (_source397.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9662___mcc_h8492 = _source397.dtor_name;
                  RAST._IExpr _9663___mcc_h8493 = _source397.dtor_range;
                  RAST._IExpr _9664___mcc_h8494 = _source397.dtor_body;
                } else if (_source397.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9665___mcc_h8498 = _source397.dtor_lbl;
                  RAST._IExpr _9666___mcc_h8499 = _source397.dtor_underlying;
                } else if (_source397.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9667___mcc_h8502 = _source397.dtor_optLbl;
                } else if (_source397.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9668___mcc_h8504 = _source397.dtor_optLbl;
                } else if (_source397.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9669___mcc_h8506 = _source397.dtor_optExpr;
                } else if (_source397.is_CallType) {
                  RAST._IExpr _9670___mcc_h8508 = _source397.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9671___mcc_h8509 = _source397.dtor_typeParameters;
                } else if (_source397.is_Call) {
                  RAST._IExpr _9672___mcc_h8512 = _source397.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9673___mcc_h8513 = _source397.dtor_arguments;
                } else if (_source397.is_Select) {
                  RAST._IExpr _9674___mcc_h8516 = _source397.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9675___mcc_h8517 = _source397.dtor_name;
                } else if (_source397.is_MemberSelect) {
                  RAST._IExpr _9676___mcc_h8520 = _source397.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9677___mcc_h8521 = _source397.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9678___mcc_h8524 = _source397.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9679___mcc_h8525 = _source397.dtor_retType;
                  RAST._IExpr _9680___mcc_h8526 = _source397.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9564_field));
              if (_9563_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2072;
              DCOMP._IOwnership _out2073;
              (this).FromOwned(r, expectedOwnership, out _out2072, out _out2073);
              r = _out2072;
              resultingOwnership = _out2073;
              readIdents = _9572_recIdents;
            }
            return ;
          }
        } else if (_source322.is_BoolBoundedPool) {
          DAST._IType _9681_fieldType = _5017___mcc_h58;
          bool _9682_isDatatype = _5016___mcc_h57;
          bool _9683_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9684_field = _5014___mcc_h55;
          DAST._IExpression _9685_on = _5013___mcc_h54;
          {
            if (_9682_isDatatype) {
              RAST._IExpr _9686_onExpr;
              DCOMP._IOwnership _9687_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9688_recIdents;
              RAST._IExpr _out2074;
              DCOMP._IOwnership _out2075;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2076;
              (this).GenExpr(_9685_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2074, out _out2075, out _out2076);
              _9686_onExpr = _out2074;
              _9687_onOwned = _out2075;
              _9688_recIdents = _out2076;
              r = ((_9686_onExpr).Sel(DCOMP.__default.escapeName(_9684_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9689_typ;
              RAST._IType _out2077;
              _out2077 = (this).GenType(_9681_fieldType, DCOMP.GenTypeContext.@default());
              _9689_typ = _out2077;
              RAST._IExpr _out2078;
              DCOMP._IOwnership _out2079;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2078, out _out2079);
              r = _out2078;
              resultingOwnership = _out2079;
              readIdents = _9688_recIdents;
            } else {
              RAST._IExpr _9690_onExpr;
              DCOMP._IOwnership _9691_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9692_recIdents;
              RAST._IExpr _out2080;
              DCOMP._IOwnership _out2081;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2082;
              (this).GenExpr(_9685_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2080, out _out2081, out _out2082);
              _9690_onExpr = _out2080;
              _9691_onOwned = _out2081;
              _9692_recIdents = _out2082;
              r = _9690_onExpr;
              if (!object.Equals(_9690_onExpr, RAST.__default.self)) {
                RAST._IExpr _source399 = _9690_onExpr;
                if (_source399.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9693___mcc_h8530 = _source399.dtor_content;
                } else if (_source399.is_ExprFromType) {
                  RAST._IType _9694___mcc_h8532 = _source399.dtor_tpe;
                } else if (_source399.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9695___mcc_h8534 = _source399.dtor_name;
                } else if (_source399.is_Match) {
                  RAST._IExpr _9696___mcc_h8536 = _source399.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9697___mcc_h8537 = _source399.dtor_cases;
                } else if (_source399.is_StmtExpr) {
                  RAST._IExpr _9698___mcc_h8540 = _source399.dtor_stmt;
                  RAST._IExpr _9699___mcc_h8541 = _source399.dtor_rhs;
                } else if (_source399.is_Block) {
                  RAST._IExpr _9700___mcc_h8544 = _source399.dtor_underlying;
                } else if (_source399.is_StructBuild) {
                  RAST._IExpr _9701___mcc_h8546 = _source399.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9702___mcc_h8547 = _source399.dtor_assignments;
                } else if (_source399.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9703___mcc_h8550 = _source399.dtor_arguments;
                } else if (_source399.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9704___mcc_h8552 = _source399.dtor_op1;
                  RAST._IExpr _9705___mcc_h8553 = _source399.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9706___mcc_h8554 = _source399.dtor_format;
                  if (object.Equals(_9704___mcc_h8552, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source400 = _9705___mcc_h8553;
                    if (_source400.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9707___mcc_h8558 = _source400.dtor_content;
                    } else if (_source400.is_ExprFromType) {
                      RAST._IType _9708___mcc_h8560 = _source400.dtor_tpe;
                    } else if (_source400.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9709___mcc_h8562 = _source400.dtor_name;
                      if (object.Equals(_9709___mcc_h8562, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source400.is_Match) {
                      RAST._IExpr _9710___mcc_h8564 = _source400.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9711___mcc_h8565 = _source400.dtor_cases;
                    } else if (_source400.is_StmtExpr) {
                      RAST._IExpr _9712___mcc_h8568 = _source400.dtor_stmt;
                      RAST._IExpr _9713___mcc_h8569 = _source400.dtor_rhs;
                    } else if (_source400.is_Block) {
                      RAST._IExpr _9714___mcc_h8572 = _source400.dtor_underlying;
                    } else if (_source400.is_StructBuild) {
                      RAST._IExpr _9715___mcc_h8574 = _source400.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9716___mcc_h8575 = _source400.dtor_assignments;
                    } else if (_source400.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9717___mcc_h8578 = _source400.dtor_arguments;
                    } else if (_source400.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9718___mcc_h8580 = _source400.dtor_op1;
                      RAST._IExpr _9719___mcc_h8581 = _source400.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9720___mcc_h8582 = _source400.dtor_format;
                    } else if (_source400.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9721___mcc_h8586 = _source400.dtor_op2;
                      RAST._IExpr _9722___mcc_h8587 = _source400.dtor_left;
                      RAST._IExpr _9723___mcc_h8588 = _source400.dtor_right;
                      DAST.Format._IBinaryOpFormat _9724___mcc_h8589 = _source400.dtor_format2;
                    } else if (_source400.is_TypeAscription) {
                      RAST._IExpr _9725___mcc_h8594 = _source400.dtor_left;
                      RAST._IType _9726___mcc_h8595 = _source400.dtor_tpe;
                    } else if (_source400.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9727___mcc_h8598 = _source400.dtor_value;
                    } else if (_source400.is_LiteralBool) {
                      bool _9728___mcc_h8600 = _source400.dtor_bvalue;
                    } else if (_source400.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9729___mcc_h8602 = _source400.dtor_value;
                      bool _9730___mcc_h8603 = _source400.dtor_binary;
                    } else if (_source400.is_DeclareVar) {
                      RAST._IDeclareType _9731___mcc_h8606 = _source400.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9732___mcc_h8607 = _source400.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9733___mcc_h8608 = _source400.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9734___mcc_h8609 = _source400.dtor_optRhs;
                    } else if (_source400.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9735___mcc_h8614 = _source400.dtor_names;
                      RAST._IExpr _9736___mcc_h8615 = _source400.dtor_rhs;
                    } else if (_source400.is_IfExpr) {
                      RAST._IExpr _9737___mcc_h8618 = _source400.dtor_cond;
                      RAST._IExpr _9738___mcc_h8619 = _source400.dtor_thn;
                      RAST._IExpr _9739___mcc_h8620 = _source400.dtor_els;
                    } else if (_source400.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9740___mcc_h8624 = _source400.dtor_optCond;
                      RAST._IExpr _9741___mcc_h8625 = _source400.dtor_underlying;
                    } else if (_source400.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9742___mcc_h8628 = _source400.dtor_name;
                      RAST._IExpr _9743___mcc_h8629 = _source400.dtor_range;
                      RAST._IExpr _9744___mcc_h8630 = _source400.dtor_body;
                    } else if (_source400.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9745___mcc_h8634 = _source400.dtor_lbl;
                      RAST._IExpr _9746___mcc_h8635 = _source400.dtor_underlying;
                    } else if (_source400.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9747___mcc_h8638 = _source400.dtor_optLbl;
                    } else if (_source400.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9748___mcc_h8640 = _source400.dtor_optLbl;
                    } else if (_source400.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9749___mcc_h8642 = _source400.dtor_optExpr;
                    } else if (_source400.is_CallType) {
                      RAST._IExpr _9750___mcc_h8644 = _source400.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9751___mcc_h8645 = _source400.dtor_typeParameters;
                    } else if (_source400.is_Call) {
                      RAST._IExpr _9752___mcc_h8648 = _source400.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9753___mcc_h8649 = _source400.dtor_arguments;
                    } else if (_source400.is_Select) {
                      RAST._IExpr _9754___mcc_h8652 = _source400.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9755___mcc_h8653 = _source400.dtor_name;
                    } else if (_source400.is_MemberSelect) {
                      RAST._IExpr _9756___mcc_h8656 = _source400.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9757___mcc_h8657 = _source400.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9758___mcc_h8660 = _source400.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9759___mcc_h8661 = _source400.dtor_retType;
                      RAST._IExpr _9760___mcc_h8662 = _source400.dtor_body;
                    }
                  } else {
                  }
                } else if (_source399.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9761___mcc_h8666 = _source399.dtor_op2;
                  RAST._IExpr _9762___mcc_h8667 = _source399.dtor_left;
                  RAST._IExpr _9763___mcc_h8668 = _source399.dtor_right;
                  DAST.Format._IBinaryOpFormat _9764___mcc_h8669 = _source399.dtor_format2;
                } else if (_source399.is_TypeAscription) {
                  RAST._IExpr _9765___mcc_h8674 = _source399.dtor_left;
                  RAST._IType _9766___mcc_h8675 = _source399.dtor_tpe;
                } else if (_source399.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9767___mcc_h8678 = _source399.dtor_value;
                } else if (_source399.is_LiteralBool) {
                  bool _9768___mcc_h8680 = _source399.dtor_bvalue;
                } else if (_source399.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9769___mcc_h8682 = _source399.dtor_value;
                  bool _9770___mcc_h8683 = _source399.dtor_binary;
                } else if (_source399.is_DeclareVar) {
                  RAST._IDeclareType _9771___mcc_h8686 = _source399.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9772___mcc_h8687 = _source399.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9773___mcc_h8688 = _source399.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9774___mcc_h8689 = _source399.dtor_optRhs;
                } else if (_source399.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9775___mcc_h8694 = _source399.dtor_names;
                  RAST._IExpr _9776___mcc_h8695 = _source399.dtor_rhs;
                } else if (_source399.is_IfExpr) {
                  RAST._IExpr _9777___mcc_h8698 = _source399.dtor_cond;
                  RAST._IExpr _9778___mcc_h8699 = _source399.dtor_thn;
                  RAST._IExpr _9779___mcc_h8700 = _source399.dtor_els;
                } else if (_source399.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9780___mcc_h8704 = _source399.dtor_optCond;
                  RAST._IExpr _9781___mcc_h8705 = _source399.dtor_underlying;
                } else if (_source399.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9782___mcc_h8708 = _source399.dtor_name;
                  RAST._IExpr _9783___mcc_h8709 = _source399.dtor_range;
                  RAST._IExpr _9784___mcc_h8710 = _source399.dtor_body;
                } else if (_source399.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9785___mcc_h8714 = _source399.dtor_lbl;
                  RAST._IExpr _9786___mcc_h8715 = _source399.dtor_underlying;
                } else if (_source399.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9787___mcc_h8718 = _source399.dtor_optLbl;
                } else if (_source399.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9788___mcc_h8720 = _source399.dtor_optLbl;
                } else if (_source399.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9789___mcc_h8722 = _source399.dtor_optExpr;
                } else if (_source399.is_CallType) {
                  RAST._IExpr _9790___mcc_h8724 = _source399.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9791___mcc_h8725 = _source399.dtor_typeParameters;
                } else if (_source399.is_Call) {
                  RAST._IExpr _9792___mcc_h8728 = _source399.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9793___mcc_h8729 = _source399.dtor_arguments;
                } else if (_source399.is_Select) {
                  RAST._IExpr _9794___mcc_h8732 = _source399.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9795___mcc_h8733 = _source399.dtor_name;
                } else if (_source399.is_MemberSelect) {
                  RAST._IExpr _9796___mcc_h8736 = _source399.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9797___mcc_h8737 = _source399.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9798___mcc_h8740 = _source399.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9799___mcc_h8741 = _source399.dtor_retType;
                  RAST._IExpr _9800___mcc_h8742 = _source399.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9684_field));
              if (_9683_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2083;
              DCOMP._IOwnership _out2084;
              (this).FromOwned(r, expectedOwnership, out _out2083, out _out2084);
              r = _out2083;
              resultingOwnership = _out2084;
              readIdents = _9692_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SetBoundedPool) {
          DAST._IExpression _9801___mcc_h247 = _source322.dtor_of;
          DAST._IType _9802_fieldType = _5017___mcc_h58;
          bool _9803_isDatatype = _5016___mcc_h57;
          bool _9804_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9805_field = _5014___mcc_h55;
          DAST._IExpression _9806_on = _5013___mcc_h54;
          {
            if (_9803_isDatatype) {
              RAST._IExpr _9807_onExpr;
              DCOMP._IOwnership _9808_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9809_recIdents;
              RAST._IExpr _out2085;
              DCOMP._IOwnership _out2086;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2087;
              (this).GenExpr(_9806_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2085, out _out2086, out _out2087);
              _9807_onExpr = _out2085;
              _9808_onOwned = _out2086;
              _9809_recIdents = _out2087;
              r = ((_9807_onExpr).Sel(DCOMP.__default.escapeName(_9805_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9810_typ;
              RAST._IType _out2088;
              _out2088 = (this).GenType(_9802_fieldType, DCOMP.GenTypeContext.@default());
              _9810_typ = _out2088;
              RAST._IExpr _out2089;
              DCOMP._IOwnership _out2090;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2089, out _out2090);
              r = _out2089;
              resultingOwnership = _out2090;
              readIdents = _9809_recIdents;
            } else {
              RAST._IExpr _9811_onExpr;
              DCOMP._IOwnership _9812_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9813_recIdents;
              RAST._IExpr _out2091;
              DCOMP._IOwnership _out2092;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2093;
              (this).GenExpr(_9806_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2091, out _out2092, out _out2093);
              _9811_onExpr = _out2091;
              _9812_onOwned = _out2092;
              _9813_recIdents = _out2093;
              r = _9811_onExpr;
              if (!object.Equals(_9811_onExpr, RAST.__default.self)) {
                RAST._IExpr _source401 = _9811_onExpr;
                if (_source401.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9814___mcc_h8746 = _source401.dtor_content;
                } else if (_source401.is_ExprFromType) {
                  RAST._IType _9815___mcc_h8748 = _source401.dtor_tpe;
                } else if (_source401.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9816___mcc_h8750 = _source401.dtor_name;
                } else if (_source401.is_Match) {
                  RAST._IExpr _9817___mcc_h8752 = _source401.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9818___mcc_h8753 = _source401.dtor_cases;
                } else if (_source401.is_StmtExpr) {
                  RAST._IExpr _9819___mcc_h8756 = _source401.dtor_stmt;
                  RAST._IExpr _9820___mcc_h8757 = _source401.dtor_rhs;
                } else if (_source401.is_Block) {
                  RAST._IExpr _9821___mcc_h8760 = _source401.dtor_underlying;
                } else if (_source401.is_StructBuild) {
                  RAST._IExpr _9822___mcc_h8762 = _source401.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9823___mcc_h8763 = _source401.dtor_assignments;
                } else if (_source401.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9824___mcc_h8766 = _source401.dtor_arguments;
                } else if (_source401.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9825___mcc_h8768 = _source401.dtor_op1;
                  RAST._IExpr _9826___mcc_h8769 = _source401.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9827___mcc_h8770 = _source401.dtor_format;
                  if (object.Equals(_9825___mcc_h8768, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source402 = _9826___mcc_h8769;
                    if (_source402.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9828___mcc_h8774 = _source402.dtor_content;
                    } else if (_source402.is_ExprFromType) {
                      RAST._IType _9829___mcc_h8776 = _source402.dtor_tpe;
                    } else if (_source402.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9830___mcc_h8778 = _source402.dtor_name;
                      if (object.Equals(_9830___mcc_h8778, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source402.is_Match) {
                      RAST._IExpr _9831___mcc_h8780 = _source402.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9832___mcc_h8781 = _source402.dtor_cases;
                    } else if (_source402.is_StmtExpr) {
                      RAST._IExpr _9833___mcc_h8784 = _source402.dtor_stmt;
                      RAST._IExpr _9834___mcc_h8785 = _source402.dtor_rhs;
                    } else if (_source402.is_Block) {
                      RAST._IExpr _9835___mcc_h8788 = _source402.dtor_underlying;
                    } else if (_source402.is_StructBuild) {
                      RAST._IExpr _9836___mcc_h8790 = _source402.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9837___mcc_h8791 = _source402.dtor_assignments;
                    } else if (_source402.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9838___mcc_h8794 = _source402.dtor_arguments;
                    } else if (_source402.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9839___mcc_h8796 = _source402.dtor_op1;
                      RAST._IExpr _9840___mcc_h8797 = _source402.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9841___mcc_h8798 = _source402.dtor_format;
                    } else if (_source402.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9842___mcc_h8802 = _source402.dtor_op2;
                      RAST._IExpr _9843___mcc_h8803 = _source402.dtor_left;
                      RAST._IExpr _9844___mcc_h8804 = _source402.dtor_right;
                      DAST.Format._IBinaryOpFormat _9845___mcc_h8805 = _source402.dtor_format2;
                    } else if (_source402.is_TypeAscription) {
                      RAST._IExpr _9846___mcc_h8810 = _source402.dtor_left;
                      RAST._IType _9847___mcc_h8811 = _source402.dtor_tpe;
                    } else if (_source402.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9848___mcc_h8814 = _source402.dtor_value;
                    } else if (_source402.is_LiteralBool) {
                      bool _9849___mcc_h8816 = _source402.dtor_bvalue;
                    } else if (_source402.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9850___mcc_h8818 = _source402.dtor_value;
                      bool _9851___mcc_h8819 = _source402.dtor_binary;
                    } else if (_source402.is_DeclareVar) {
                      RAST._IDeclareType _9852___mcc_h8822 = _source402.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9853___mcc_h8823 = _source402.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9854___mcc_h8824 = _source402.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9855___mcc_h8825 = _source402.dtor_optRhs;
                    } else if (_source402.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9856___mcc_h8830 = _source402.dtor_names;
                      RAST._IExpr _9857___mcc_h8831 = _source402.dtor_rhs;
                    } else if (_source402.is_IfExpr) {
                      RAST._IExpr _9858___mcc_h8834 = _source402.dtor_cond;
                      RAST._IExpr _9859___mcc_h8835 = _source402.dtor_thn;
                      RAST._IExpr _9860___mcc_h8836 = _source402.dtor_els;
                    } else if (_source402.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9861___mcc_h8840 = _source402.dtor_optCond;
                      RAST._IExpr _9862___mcc_h8841 = _source402.dtor_underlying;
                    } else if (_source402.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9863___mcc_h8844 = _source402.dtor_name;
                      RAST._IExpr _9864___mcc_h8845 = _source402.dtor_range;
                      RAST._IExpr _9865___mcc_h8846 = _source402.dtor_body;
                    } else if (_source402.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9866___mcc_h8850 = _source402.dtor_lbl;
                      RAST._IExpr _9867___mcc_h8851 = _source402.dtor_underlying;
                    } else if (_source402.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9868___mcc_h8854 = _source402.dtor_optLbl;
                    } else if (_source402.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9869___mcc_h8856 = _source402.dtor_optLbl;
                    } else if (_source402.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9870___mcc_h8858 = _source402.dtor_optExpr;
                    } else if (_source402.is_CallType) {
                      RAST._IExpr _9871___mcc_h8860 = _source402.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9872___mcc_h8861 = _source402.dtor_typeParameters;
                    } else if (_source402.is_Call) {
                      RAST._IExpr _9873___mcc_h8864 = _source402.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9874___mcc_h8865 = _source402.dtor_arguments;
                    } else if (_source402.is_Select) {
                      RAST._IExpr _9875___mcc_h8868 = _source402.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9876___mcc_h8869 = _source402.dtor_name;
                    } else if (_source402.is_MemberSelect) {
                      RAST._IExpr _9877___mcc_h8872 = _source402.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9878___mcc_h8873 = _source402.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _9879___mcc_h8876 = _source402.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _9880___mcc_h8877 = _source402.dtor_retType;
                      RAST._IExpr _9881___mcc_h8878 = _source402.dtor_body;
                    }
                  } else {
                  }
                } else if (_source401.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9882___mcc_h8882 = _source401.dtor_op2;
                  RAST._IExpr _9883___mcc_h8883 = _source401.dtor_left;
                  RAST._IExpr _9884___mcc_h8884 = _source401.dtor_right;
                  DAST.Format._IBinaryOpFormat _9885___mcc_h8885 = _source401.dtor_format2;
                } else if (_source401.is_TypeAscription) {
                  RAST._IExpr _9886___mcc_h8890 = _source401.dtor_left;
                  RAST._IType _9887___mcc_h8891 = _source401.dtor_tpe;
                } else if (_source401.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _9888___mcc_h8894 = _source401.dtor_value;
                } else if (_source401.is_LiteralBool) {
                  bool _9889___mcc_h8896 = _source401.dtor_bvalue;
                } else if (_source401.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _9890___mcc_h8898 = _source401.dtor_value;
                  bool _9891___mcc_h8899 = _source401.dtor_binary;
                } else if (_source401.is_DeclareVar) {
                  RAST._IDeclareType _9892___mcc_h8902 = _source401.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _9893___mcc_h8903 = _source401.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _9894___mcc_h8904 = _source401.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _9895___mcc_h8905 = _source401.dtor_optRhs;
                } else if (_source401.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _9896___mcc_h8910 = _source401.dtor_names;
                  RAST._IExpr _9897___mcc_h8911 = _source401.dtor_rhs;
                } else if (_source401.is_IfExpr) {
                  RAST._IExpr _9898___mcc_h8914 = _source401.dtor_cond;
                  RAST._IExpr _9899___mcc_h8915 = _source401.dtor_thn;
                  RAST._IExpr _9900___mcc_h8916 = _source401.dtor_els;
                } else if (_source401.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _9901___mcc_h8920 = _source401.dtor_optCond;
                  RAST._IExpr _9902___mcc_h8921 = _source401.dtor_underlying;
                } else if (_source401.is_For) {
                  Dafny.ISequence<Dafny.Rune> _9903___mcc_h8924 = _source401.dtor_name;
                  RAST._IExpr _9904___mcc_h8925 = _source401.dtor_range;
                  RAST._IExpr _9905___mcc_h8926 = _source401.dtor_body;
                } else if (_source401.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _9906___mcc_h8930 = _source401.dtor_lbl;
                  RAST._IExpr _9907___mcc_h8931 = _source401.dtor_underlying;
                } else if (_source401.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9908___mcc_h8934 = _source401.dtor_optLbl;
                } else if (_source401.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9909___mcc_h8936 = _source401.dtor_optLbl;
                } else if (_source401.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _9910___mcc_h8938 = _source401.dtor_optExpr;
                } else if (_source401.is_CallType) {
                  RAST._IExpr _9911___mcc_h8940 = _source401.dtor_obj;
                  Dafny.ISequence<RAST._IType> _9912___mcc_h8941 = _source401.dtor_typeParameters;
                } else if (_source401.is_Call) {
                  RAST._IExpr _9913___mcc_h8944 = _source401.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _9914___mcc_h8945 = _source401.dtor_arguments;
                } else if (_source401.is_Select) {
                  RAST._IExpr _9915___mcc_h8948 = _source401.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9916___mcc_h8949 = _source401.dtor_name;
                } else if (_source401.is_MemberSelect) {
                  RAST._IExpr _9917___mcc_h8952 = _source401.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _9918___mcc_h8953 = _source401.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _9919___mcc_h8956 = _source401.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _9920___mcc_h8957 = _source401.dtor_retType;
                  RAST._IExpr _9921___mcc_h8958 = _source401.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9805_field));
              if (_9804_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2094;
              DCOMP._IOwnership _out2095;
              (this).FromOwned(r, expectedOwnership, out _out2094, out _out2095);
              r = _out2094;
              resultingOwnership = _out2095;
              readIdents = _9813_recIdents;
            }
            return ;
          }
        } else if (_source322.is_MapBoundedPool) {
          DAST._IExpression _9922___mcc_h249 = _source322.dtor_of;
          DAST._IType _9923_fieldType = _5017___mcc_h58;
          bool _9924_isDatatype = _5016___mcc_h57;
          bool _9925_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _9926_field = _5014___mcc_h55;
          DAST._IExpression _9927_on = _5013___mcc_h54;
          {
            if (_9924_isDatatype) {
              RAST._IExpr _9928_onExpr;
              DCOMP._IOwnership _9929_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9930_recIdents;
              RAST._IExpr _out2096;
              DCOMP._IOwnership _out2097;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2098;
              (this).GenExpr(_9927_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2096, out _out2097, out _out2098);
              _9928_onExpr = _out2096;
              _9929_onOwned = _out2097;
              _9930_recIdents = _out2098;
              r = ((_9928_onExpr).Sel(DCOMP.__default.escapeName(_9926_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _9931_typ;
              RAST._IType _out2099;
              _out2099 = (this).GenType(_9923_fieldType, DCOMP.GenTypeContext.@default());
              _9931_typ = _out2099;
              RAST._IExpr _out2100;
              DCOMP._IOwnership _out2101;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2100, out _out2101);
              r = _out2100;
              resultingOwnership = _out2101;
              readIdents = _9930_recIdents;
            } else {
              RAST._IExpr _9932_onExpr;
              DCOMP._IOwnership _9933_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _9934_recIdents;
              RAST._IExpr _out2102;
              DCOMP._IOwnership _out2103;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2104;
              (this).GenExpr(_9927_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2102, out _out2103, out _out2104);
              _9932_onExpr = _out2102;
              _9933_onOwned = _out2103;
              _9934_recIdents = _out2104;
              r = _9932_onExpr;
              if (!object.Equals(_9932_onExpr, RAST.__default.self)) {
                RAST._IExpr _source403 = _9932_onExpr;
                if (_source403.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _9935___mcc_h8962 = _source403.dtor_content;
                } else if (_source403.is_ExprFromType) {
                  RAST._IType _9936___mcc_h8964 = _source403.dtor_tpe;
                } else if (_source403.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _9937___mcc_h8966 = _source403.dtor_name;
                } else if (_source403.is_Match) {
                  RAST._IExpr _9938___mcc_h8968 = _source403.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _9939___mcc_h8969 = _source403.dtor_cases;
                } else if (_source403.is_StmtExpr) {
                  RAST._IExpr _9940___mcc_h8972 = _source403.dtor_stmt;
                  RAST._IExpr _9941___mcc_h8973 = _source403.dtor_rhs;
                } else if (_source403.is_Block) {
                  RAST._IExpr _9942___mcc_h8976 = _source403.dtor_underlying;
                } else if (_source403.is_StructBuild) {
                  RAST._IExpr _9943___mcc_h8978 = _source403.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _9944___mcc_h8979 = _source403.dtor_assignments;
                } else if (_source403.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _9945___mcc_h8982 = _source403.dtor_arguments;
                } else if (_source403.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _9946___mcc_h8984 = _source403.dtor_op1;
                  RAST._IExpr _9947___mcc_h8985 = _source403.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _9948___mcc_h8986 = _source403.dtor_format;
                  if (object.Equals(_9946___mcc_h8984, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source404 = _9947___mcc_h8985;
                    if (_source404.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _9949___mcc_h8990 = _source404.dtor_content;
                    } else if (_source404.is_ExprFromType) {
                      RAST._IType _9950___mcc_h8992 = _source404.dtor_tpe;
                    } else if (_source404.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _9951___mcc_h8994 = _source404.dtor_name;
                      if (object.Equals(_9951___mcc_h8994, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source404.is_Match) {
                      RAST._IExpr _9952___mcc_h8996 = _source404.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _9953___mcc_h8997 = _source404.dtor_cases;
                    } else if (_source404.is_StmtExpr) {
                      RAST._IExpr _9954___mcc_h9000 = _source404.dtor_stmt;
                      RAST._IExpr _9955___mcc_h9001 = _source404.dtor_rhs;
                    } else if (_source404.is_Block) {
                      RAST._IExpr _9956___mcc_h9004 = _source404.dtor_underlying;
                    } else if (_source404.is_StructBuild) {
                      RAST._IExpr _9957___mcc_h9006 = _source404.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _9958___mcc_h9007 = _source404.dtor_assignments;
                    } else if (_source404.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _9959___mcc_h9010 = _source404.dtor_arguments;
                    } else if (_source404.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9960___mcc_h9012 = _source404.dtor_op1;
                      RAST._IExpr _9961___mcc_h9013 = _source404.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _9962___mcc_h9014 = _source404.dtor_format;
                    } else if (_source404.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _9963___mcc_h9018 = _source404.dtor_op2;
                      RAST._IExpr _9964___mcc_h9019 = _source404.dtor_left;
                      RAST._IExpr _9965___mcc_h9020 = _source404.dtor_right;
                      DAST.Format._IBinaryOpFormat _9966___mcc_h9021 = _source404.dtor_format2;
                    } else if (_source404.is_TypeAscription) {
                      RAST._IExpr _9967___mcc_h9026 = _source404.dtor_left;
                      RAST._IType _9968___mcc_h9027 = _source404.dtor_tpe;
                    } else if (_source404.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _9969___mcc_h9030 = _source404.dtor_value;
                    } else if (_source404.is_LiteralBool) {
                      bool _9970___mcc_h9032 = _source404.dtor_bvalue;
                    } else if (_source404.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _9971___mcc_h9034 = _source404.dtor_value;
                      bool _9972___mcc_h9035 = _source404.dtor_binary;
                    } else if (_source404.is_DeclareVar) {
                      RAST._IDeclareType _9973___mcc_h9038 = _source404.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _9974___mcc_h9039 = _source404.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _9975___mcc_h9040 = _source404.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _9976___mcc_h9041 = _source404.dtor_optRhs;
                    } else if (_source404.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _9977___mcc_h9046 = _source404.dtor_names;
                      RAST._IExpr _9978___mcc_h9047 = _source404.dtor_rhs;
                    } else if (_source404.is_IfExpr) {
                      RAST._IExpr _9979___mcc_h9050 = _source404.dtor_cond;
                      RAST._IExpr _9980___mcc_h9051 = _source404.dtor_thn;
                      RAST._IExpr _9981___mcc_h9052 = _source404.dtor_els;
                    } else if (_source404.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _9982___mcc_h9056 = _source404.dtor_optCond;
                      RAST._IExpr _9983___mcc_h9057 = _source404.dtor_underlying;
                    } else if (_source404.is_For) {
                      Dafny.ISequence<Dafny.Rune> _9984___mcc_h9060 = _source404.dtor_name;
                      RAST._IExpr _9985___mcc_h9061 = _source404.dtor_range;
                      RAST._IExpr _9986___mcc_h9062 = _source404.dtor_body;
                    } else if (_source404.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _9987___mcc_h9066 = _source404.dtor_lbl;
                      RAST._IExpr _9988___mcc_h9067 = _source404.dtor_underlying;
                    } else if (_source404.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9989___mcc_h9070 = _source404.dtor_optLbl;
                    } else if (_source404.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _9990___mcc_h9072 = _source404.dtor_optLbl;
                    } else if (_source404.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _9991___mcc_h9074 = _source404.dtor_optExpr;
                    } else if (_source404.is_CallType) {
                      RAST._IExpr _9992___mcc_h9076 = _source404.dtor_obj;
                      Dafny.ISequence<RAST._IType> _9993___mcc_h9077 = _source404.dtor_typeParameters;
                    } else if (_source404.is_Call) {
                      RAST._IExpr _9994___mcc_h9080 = _source404.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _9995___mcc_h9081 = _source404.dtor_arguments;
                    } else if (_source404.is_Select) {
                      RAST._IExpr _9996___mcc_h9084 = _source404.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9997___mcc_h9085 = _source404.dtor_name;
                    } else if (_source404.is_MemberSelect) {
                      RAST._IExpr _9998___mcc_h9088 = _source404.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _9999___mcc_h9089 = _source404.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10000___mcc_h9092 = _source404.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10001___mcc_h9093 = _source404.dtor_retType;
                      RAST._IExpr _10002___mcc_h9094 = _source404.dtor_body;
                    }
                  } else {
                  }
                } else if (_source403.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10003___mcc_h9098 = _source403.dtor_op2;
                  RAST._IExpr _10004___mcc_h9099 = _source403.dtor_left;
                  RAST._IExpr _10005___mcc_h9100 = _source403.dtor_right;
                  DAST.Format._IBinaryOpFormat _10006___mcc_h9101 = _source403.dtor_format2;
                } else if (_source403.is_TypeAscription) {
                  RAST._IExpr _10007___mcc_h9106 = _source403.dtor_left;
                  RAST._IType _10008___mcc_h9107 = _source403.dtor_tpe;
                } else if (_source403.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10009___mcc_h9110 = _source403.dtor_value;
                } else if (_source403.is_LiteralBool) {
                  bool _10010___mcc_h9112 = _source403.dtor_bvalue;
                } else if (_source403.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10011___mcc_h9114 = _source403.dtor_value;
                  bool _10012___mcc_h9115 = _source403.dtor_binary;
                } else if (_source403.is_DeclareVar) {
                  RAST._IDeclareType _10013___mcc_h9118 = _source403.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10014___mcc_h9119 = _source403.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10015___mcc_h9120 = _source403.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10016___mcc_h9121 = _source403.dtor_optRhs;
                } else if (_source403.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10017___mcc_h9126 = _source403.dtor_names;
                  RAST._IExpr _10018___mcc_h9127 = _source403.dtor_rhs;
                } else if (_source403.is_IfExpr) {
                  RAST._IExpr _10019___mcc_h9130 = _source403.dtor_cond;
                  RAST._IExpr _10020___mcc_h9131 = _source403.dtor_thn;
                  RAST._IExpr _10021___mcc_h9132 = _source403.dtor_els;
                } else if (_source403.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10022___mcc_h9136 = _source403.dtor_optCond;
                  RAST._IExpr _10023___mcc_h9137 = _source403.dtor_underlying;
                } else if (_source403.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10024___mcc_h9140 = _source403.dtor_name;
                  RAST._IExpr _10025___mcc_h9141 = _source403.dtor_range;
                  RAST._IExpr _10026___mcc_h9142 = _source403.dtor_body;
                } else if (_source403.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10027___mcc_h9146 = _source403.dtor_lbl;
                  RAST._IExpr _10028___mcc_h9147 = _source403.dtor_underlying;
                } else if (_source403.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10029___mcc_h9150 = _source403.dtor_optLbl;
                } else if (_source403.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10030___mcc_h9152 = _source403.dtor_optLbl;
                } else if (_source403.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10031___mcc_h9154 = _source403.dtor_optExpr;
                } else if (_source403.is_CallType) {
                  RAST._IExpr _10032___mcc_h9156 = _source403.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10033___mcc_h9157 = _source403.dtor_typeParameters;
                } else if (_source403.is_Call) {
                  RAST._IExpr _10034___mcc_h9160 = _source403.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10035___mcc_h9161 = _source403.dtor_arguments;
                } else if (_source403.is_Select) {
                  RAST._IExpr _10036___mcc_h9164 = _source403.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10037___mcc_h9165 = _source403.dtor_name;
                } else if (_source403.is_MemberSelect) {
                  RAST._IExpr _10038___mcc_h9168 = _source403.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10039___mcc_h9169 = _source403.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10040___mcc_h9172 = _source403.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10041___mcc_h9173 = _source403.dtor_retType;
                  RAST._IExpr _10042___mcc_h9174 = _source403.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_9926_field));
              if (_9925_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2105;
              DCOMP._IOwnership _out2106;
              (this).FromOwned(r, expectedOwnership, out _out2105, out _out2106);
              r = _out2105;
              resultingOwnership = _out2106;
              readIdents = _9934_recIdents;
            }
            return ;
          }
        } else if (_source322.is_SeqBoundedPool) {
          DAST._IExpression _10043___mcc_h251 = _source322.dtor_of;
          bool _10044___mcc_h252 = _source322.dtor_includeDuplicates;
          DAST._IType _10045_fieldType = _5017___mcc_h58;
          bool _10046_isDatatype = _5016___mcc_h57;
          bool _10047_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _10048_field = _5014___mcc_h55;
          DAST._IExpression _10049_on = _5013___mcc_h54;
          {
            if (_10046_isDatatype) {
              RAST._IExpr _10050_onExpr;
              DCOMP._IOwnership _10051_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10052_recIdents;
              RAST._IExpr _out2107;
              DCOMP._IOwnership _out2108;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2109;
              (this).GenExpr(_10049_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2107, out _out2108, out _out2109);
              _10050_onExpr = _out2107;
              _10051_onOwned = _out2108;
              _10052_recIdents = _out2109;
              r = ((_10050_onExpr).Sel(DCOMP.__default.escapeName(_10048_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10053_typ;
              RAST._IType _out2110;
              _out2110 = (this).GenType(_10045_fieldType, DCOMP.GenTypeContext.@default());
              _10053_typ = _out2110;
              RAST._IExpr _out2111;
              DCOMP._IOwnership _out2112;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2111, out _out2112);
              r = _out2111;
              resultingOwnership = _out2112;
              readIdents = _10052_recIdents;
            } else {
              RAST._IExpr _10054_onExpr;
              DCOMP._IOwnership _10055_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10056_recIdents;
              RAST._IExpr _out2113;
              DCOMP._IOwnership _out2114;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2115;
              (this).GenExpr(_10049_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2113, out _out2114, out _out2115);
              _10054_onExpr = _out2113;
              _10055_onOwned = _out2114;
              _10056_recIdents = _out2115;
              r = _10054_onExpr;
              if (!object.Equals(_10054_onExpr, RAST.__default.self)) {
                RAST._IExpr _source405 = _10054_onExpr;
                if (_source405.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10057___mcc_h9178 = _source405.dtor_content;
                } else if (_source405.is_ExprFromType) {
                  RAST._IType _10058___mcc_h9180 = _source405.dtor_tpe;
                } else if (_source405.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10059___mcc_h9182 = _source405.dtor_name;
                } else if (_source405.is_Match) {
                  RAST._IExpr _10060___mcc_h9184 = _source405.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10061___mcc_h9185 = _source405.dtor_cases;
                } else if (_source405.is_StmtExpr) {
                  RAST._IExpr _10062___mcc_h9188 = _source405.dtor_stmt;
                  RAST._IExpr _10063___mcc_h9189 = _source405.dtor_rhs;
                } else if (_source405.is_Block) {
                  RAST._IExpr _10064___mcc_h9192 = _source405.dtor_underlying;
                } else if (_source405.is_StructBuild) {
                  RAST._IExpr _10065___mcc_h9194 = _source405.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10066___mcc_h9195 = _source405.dtor_assignments;
                } else if (_source405.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10067___mcc_h9198 = _source405.dtor_arguments;
                } else if (_source405.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10068___mcc_h9200 = _source405.dtor_op1;
                  RAST._IExpr _10069___mcc_h9201 = _source405.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10070___mcc_h9202 = _source405.dtor_format;
                  if (object.Equals(_10068___mcc_h9200, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source406 = _10069___mcc_h9201;
                    if (_source406.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10071___mcc_h9206 = _source406.dtor_content;
                    } else if (_source406.is_ExprFromType) {
                      RAST._IType _10072___mcc_h9208 = _source406.dtor_tpe;
                    } else if (_source406.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10073___mcc_h9210 = _source406.dtor_name;
                      if (object.Equals(_10073___mcc_h9210, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source406.is_Match) {
                      RAST._IExpr _10074___mcc_h9212 = _source406.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10075___mcc_h9213 = _source406.dtor_cases;
                    } else if (_source406.is_StmtExpr) {
                      RAST._IExpr _10076___mcc_h9216 = _source406.dtor_stmt;
                      RAST._IExpr _10077___mcc_h9217 = _source406.dtor_rhs;
                    } else if (_source406.is_Block) {
                      RAST._IExpr _10078___mcc_h9220 = _source406.dtor_underlying;
                    } else if (_source406.is_StructBuild) {
                      RAST._IExpr _10079___mcc_h9222 = _source406.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10080___mcc_h9223 = _source406.dtor_assignments;
                    } else if (_source406.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10081___mcc_h9226 = _source406.dtor_arguments;
                    } else if (_source406.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10082___mcc_h9228 = _source406.dtor_op1;
                      RAST._IExpr _10083___mcc_h9229 = _source406.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10084___mcc_h9230 = _source406.dtor_format;
                    } else if (_source406.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10085___mcc_h9234 = _source406.dtor_op2;
                      RAST._IExpr _10086___mcc_h9235 = _source406.dtor_left;
                      RAST._IExpr _10087___mcc_h9236 = _source406.dtor_right;
                      DAST.Format._IBinaryOpFormat _10088___mcc_h9237 = _source406.dtor_format2;
                    } else if (_source406.is_TypeAscription) {
                      RAST._IExpr _10089___mcc_h9242 = _source406.dtor_left;
                      RAST._IType _10090___mcc_h9243 = _source406.dtor_tpe;
                    } else if (_source406.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10091___mcc_h9246 = _source406.dtor_value;
                    } else if (_source406.is_LiteralBool) {
                      bool _10092___mcc_h9248 = _source406.dtor_bvalue;
                    } else if (_source406.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10093___mcc_h9250 = _source406.dtor_value;
                      bool _10094___mcc_h9251 = _source406.dtor_binary;
                    } else if (_source406.is_DeclareVar) {
                      RAST._IDeclareType _10095___mcc_h9254 = _source406.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10096___mcc_h9255 = _source406.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10097___mcc_h9256 = _source406.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10098___mcc_h9257 = _source406.dtor_optRhs;
                    } else if (_source406.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10099___mcc_h9262 = _source406.dtor_names;
                      RAST._IExpr _10100___mcc_h9263 = _source406.dtor_rhs;
                    } else if (_source406.is_IfExpr) {
                      RAST._IExpr _10101___mcc_h9266 = _source406.dtor_cond;
                      RAST._IExpr _10102___mcc_h9267 = _source406.dtor_thn;
                      RAST._IExpr _10103___mcc_h9268 = _source406.dtor_els;
                    } else if (_source406.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10104___mcc_h9272 = _source406.dtor_optCond;
                      RAST._IExpr _10105___mcc_h9273 = _source406.dtor_underlying;
                    } else if (_source406.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10106___mcc_h9276 = _source406.dtor_name;
                      RAST._IExpr _10107___mcc_h9277 = _source406.dtor_range;
                      RAST._IExpr _10108___mcc_h9278 = _source406.dtor_body;
                    } else if (_source406.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10109___mcc_h9282 = _source406.dtor_lbl;
                      RAST._IExpr _10110___mcc_h9283 = _source406.dtor_underlying;
                    } else if (_source406.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10111___mcc_h9286 = _source406.dtor_optLbl;
                    } else if (_source406.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10112___mcc_h9288 = _source406.dtor_optLbl;
                    } else if (_source406.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10113___mcc_h9290 = _source406.dtor_optExpr;
                    } else if (_source406.is_CallType) {
                      RAST._IExpr _10114___mcc_h9292 = _source406.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10115___mcc_h9293 = _source406.dtor_typeParameters;
                    } else if (_source406.is_Call) {
                      RAST._IExpr _10116___mcc_h9296 = _source406.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10117___mcc_h9297 = _source406.dtor_arguments;
                    } else if (_source406.is_Select) {
                      RAST._IExpr _10118___mcc_h9300 = _source406.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10119___mcc_h9301 = _source406.dtor_name;
                    } else if (_source406.is_MemberSelect) {
                      RAST._IExpr _10120___mcc_h9304 = _source406.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10121___mcc_h9305 = _source406.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10122___mcc_h9308 = _source406.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10123___mcc_h9309 = _source406.dtor_retType;
                      RAST._IExpr _10124___mcc_h9310 = _source406.dtor_body;
                    }
                  } else {
                  }
                } else if (_source405.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10125___mcc_h9314 = _source405.dtor_op2;
                  RAST._IExpr _10126___mcc_h9315 = _source405.dtor_left;
                  RAST._IExpr _10127___mcc_h9316 = _source405.dtor_right;
                  DAST.Format._IBinaryOpFormat _10128___mcc_h9317 = _source405.dtor_format2;
                } else if (_source405.is_TypeAscription) {
                  RAST._IExpr _10129___mcc_h9322 = _source405.dtor_left;
                  RAST._IType _10130___mcc_h9323 = _source405.dtor_tpe;
                } else if (_source405.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10131___mcc_h9326 = _source405.dtor_value;
                } else if (_source405.is_LiteralBool) {
                  bool _10132___mcc_h9328 = _source405.dtor_bvalue;
                } else if (_source405.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10133___mcc_h9330 = _source405.dtor_value;
                  bool _10134___mcc_h9331 = _source405.dtor_binary;
                } else if (_source405.is_DeclareVar) {
                  RAST._IDeclareType _10135___mcc_h9334 = _source405.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10136___mcc_h9335 = _source405.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10137___mcc_h9336 = _source405.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10138___mcc_h9337 = _source405.dtor_optRhs;
                } else if (_source405.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10139___mcc_h9342 = _source405.dtor_names;
                  RAST._IExpr _10140___mcc_h9343 = _source405.dtor_rhs;
                } else if (_source405.is_IfExpr) {
                  RAST._IExpr _10141___mcc_h9346 = _source405.dtor_cond;
                  RAST._IExpr _10142___mcc_h9347 = _source405.dtor_thn;
                  RAST._IExpr _10143___mcc_h9348 = _source405.dtor_els;
                } else if (_source405.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10144___mcc_h9352 = _source405.dtor_optCond;
                  RAST._IExpr _10145___mcc_h9353 = _source405.dtor_underlying;
                } else if (_source405.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10146___mcc_h9356 = _source405.dtor_name;
                  RAST._IExpr _10147___mcc_h9357 = _source405.dtor_range;
                  RAST._IExpr _10148___mcc_h9358 = _source405.dtor_body;
                } else if (_source405.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10149___mcc_h9362 = _source405.dtor_lbl;
                  RAST._IExpr _10150___mcc_h9363 = _source405.dtor_underlying;
                } else if (_source405.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10151___mcc_h9366 = _source405.dtor_optLbl;
                } else if (_source405.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10152___mcc_h9368 = _source405.dtor_optLbl;
                } else if (_source405.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10153___mcc_h9370 = _source405.dtor_optExpr;
                } else if (_source405.is_CallType) {
                  RAST._IExpr _10154___mcc_h9372 = _source405.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10155___mcc_h9373 = _source405.dtor_typeParameters;
                } else if (_source405.is_Call) {
                  RAST._IExpr _10156___mcc_h9376 = _source405.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10157___mcc_h9377 = _source405.dtor_arguments;
                } else if (_source405.is_Select) {
                  RAST._IExpr _10158___mcc_h9380 = _source405.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10159___mcc_h9381 = _source405.dtor_name;
                } else if (_source405.is_MemberSelect) {
                  RAST._IExpr _10160___mcc_h9384 = _source405.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10161___mcc_h9385 = _source405.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10162___mcc_h9388 = _source405.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10163___mcc_h9389 = _source405.dtor_retType;
                  RAST._IExpr _10164___mcc_h9390 = _source405.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10048_field));
              if (_10047_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2116;
              DCOMP._IOwnership _out2117;
              (this).FromOwned(r, expectedOwnership, out _out2116, out _out2117);
              r = _out2116;
              resultingOwnership = _out2117;
              readIdents = _10056_recIdents;
            }
            return ;
          }
        } else if (_source322.is_IntRange) {
          DAST._IExpression _10165___mcc_h255 = _source322.dtor_lo;
          DAST._IExpression _10166___mcc_h256 = _source322.dtor_hi;
          bool _10167___mcc_h257 = _source322.dtor_up;
          DAST._IType _10168_fieldType = _5017___mcc_h58;
          bool _10169_isDatatype = _5016___mcc_h57;
          bool _10170_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _10171_field = _5014___mcc_h55;
          DAST._IExpression _10172_on = _5013___mcc_h54;
          {
            if (_10169_isDatatype) {
              RAST._IExpr _10173_onExpr;
              DCOMP._IOwnership _10174_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10175_recIdents;
              RAST._IExpr _out2118;
              DCOMP._IOwnership _out2119;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2120;
              (this).GenExpr(_10172_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2118, out _out2119, out _out2120);
              _10173_onExpr = _out2118;
              _10174_onOwned = _out2119;
              _10175_recIdents = _out2120;
              r = ((_10173_onExpr).Sel(DCOMP.__default.escapeName(_10171_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10176_typ;
              RAST._IType _out2121;
              _out2121 = (this).GenType(_10168_fieldType, DCOMP.GenTypeContext.@default());
              _10176_typ = _out2121;
              RAST._IExpr _out2122;
              DCOMP._IOwnership _out2123;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2122, out _out2123);
              r = _out2122;
              resultingOwnership = _out2123;
              readIdents = _10175_recIdents;
            } else {
              RAST._IExpr _10177_onExpr;
              DCOMP._IOwnership _10178_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10179_recIdents;
              RAST._IExpr _out2124;
              DCOMP._IOwnership _out2125;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2126;
              (this).GenExpr(_10172_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2124, out _out2125, out _out2126);
              _10177_onExpr = _out2124;
              _10178_onOwned = _out2125;
              _10179_recIdents = _out2126;
              r = _10177_onExpr;
              if (!object.Equals(_10177_onExpr, RAST.__default.self)) {
                RAST._IExpr _source407 = _10177_onExpr;
                if (_source407.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10180___mcc_h9394 = _source407.dtor_content;
                } else if (_source407.is_ExprFromType) {
                  RAST._IType _10181___mcc_h9396 = _source407.dtor_tpe;
                } else if (_source407.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10182___mcc_h9398 = _source407.dtor_name;
                } else if (_source407.is_Match) {
                  RAST._IExpr _10183___mcc_h9400 = _source407.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10184___mcc_h9401 = _source407.dtor_cases;
                } else if (_source407.is_StmtExpr) {
                  RAST._IExpr _10185___mcc_h9404 = _source407.dtor_stmt;
                  RAST._IExpr _10186___mcc_h9405 = _source407.dtor_rhs;
                } else if (_source407.is_Block) {
                  RAST._IExpr _10187___mcc_h9408 = _source407.dtor_underlying;
                } else if (_source407.is_StructBuild) {
                  RAST._IExpr _10188___mcc_h9410 = _source407.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10189___mcc_h9411 = _source407.dtor_assignments;
                } else if (_source407.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10190___mcc_h9414 = _source407.dtor_arguments;
                } else if (_source407.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10191___mcc_h9416 = _source407.dtor_op1;
                  RAST._IExpr _10192___mcc_h9417 = _source407.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10193___mcc_h9418 = _source407.dtor_format;
                  if (object.Equals(_10191___mcc_h9416, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source408 = _10192___mcc_h9417;
                    if (_source408.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10194___mcc_h9422 = _source408.dtor_content;
                    } else if (_source408.is_ExprFromType) {
                      RAST._IType _10195___mcc_h9424 = _source408.dtor_tpe;
                    } else if (_source408.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10196___mcc_h9426 = _source408.dtor_name;
                      if (object.Equals(_10196___mcc_h9426, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source408.is_Match) {
                      RAST._IExpr _10197___mcc_h9428 = _source408.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10198___mcc_h9429 = _source408.dtor_cases;
                    } else if (_source408.is_StmtExpr) {
                      RAST._IExpr _10199___mcc_h9432 = _source408.dtor_stmt;
                      RAST._IExpr _10200___mcc_h9433 = _source408.dtor_rhs;
                    } else if (_source408.is_Block) {
                      RAST._IExpr _10201___mcc_h9436 = _source408.dtor_underlying;
                    } else if (_source408.is_StructBuild) {
                      RAST._IExpr _10202___mcc_h9438 = _source408.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10203___mcc_h9439 = _source408.dtor_assignments;
                    } else if (_source408.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10204___mcc_h9442 = _source408.dtor_arguments;
                    } else if (_source408.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10205___mcc_h9444 = _source408.dtor_op1;
                      RAST._IExpr _10206___mcc_h9445 = _source408.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10207___mcc_h9446 = _source408.dtor_format;
                    } else if (_source408.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10208___mcc_h9450 = _source408.dtor_op2;
                      RAST._IExpr _10209___mcc_h9451 = _source408.dtor_left;
                      RAST._IExpr _10210___mcc_h9452 = _source408.dtor_right;
                      DAST.Format._IBinaryOpFormat _10211___mcc_h9453 = _source408.dtor_format2;
                    } else if (_source408.is_TypeAscription) {
                      RAST._IExpr _10212___mcc_h9458 = _source408.dtor_left;
                      RAST._IType _10213___mcc_h9459 = _source408.dtor_tpe;
                    } else if (_source408.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10214___mcc_h9462 = _source408.dtor_value;
                    } else if (_source408.is_LiteralBool) {
                      bool _10215___mcc_h9464 = _source408.dtor_bvalue;
                    } else if (_source408.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10216___mcc_h9466 = _source408.dtor_value;
                      bool _10217___mcc_h9467 = _source408.dtor_binary;
                    } else if (_source408.is_DeclareVar) {
                      RAST._IDeclareType _10218___mcc_h9470 = _source408.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10219___mcc_h9471 = _source408.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10220___mcc_h9472 = _source408.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10221___mcc_h9473 = _source408.dtor_optRhs;
                    } else if (_source408.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10222___mcc_h9478 = _source408.dtor_names;
                      RAST._IExpr _10223___mcc_h9479 = _source408.dtor_rhs;
                    } else if (_source408.is_IfExpr) {
                      RAST._IExpr _10224___mcc_h9482 = _source408.dtor_cond;
                      RAST._IExpr _10225___mcc_h9483 = _source408.dtor_thn;
                      RAST._IExpr _10226___mcc_h9484 = _source408.dtor_els;
                    } else if (_source408.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10227___mcc_h9488 = _source408.dtor_optCond;
                      RAST._IExpr _10228___mcc_h9489 = _source408.dtor_underlying;
                    } else if (_source408.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10229___mcc_h9492 = _source408.dtor_name;
                      RAST._IExpr _10230___mcc_h9493 = _source408.dtor_range;
                      RAST._IExpr _10231___mcc_h9494 = _source408.dtor_body;
                    } else if (_source408.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10232___mcc_h9498 = _source408.dtor_lbl;
                      RAST._IExpr _10233___mcc_h9499 = _source408.dtor_underlying;
                    } else if (_source408.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10234___mcc_h9502 = _source408.dtor_optLbl;
                    } else if (_source408.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10235___mcc_h9504 = _source408.dtor_optLbl;
                    } else if (_source408.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10236___mcc_h9506 = _source408.dtor_optExpr;
                    } else if (_source408.is_CallType) {
                      RAST._IExpr _10237___mcc_h9508 = _source408.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10238___mcc_h9509 = _source408.dtor_typeParameters;
                    } else if (_source408.is_Call) {
                      RAST._IExpr _10239___mcc_h9512 = _source408.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10240___mcc_h9513 = _source408.dtor_arguments;
                    } else if (_source408.is_Select) {
                      RAST._IExpr _10241___mcc_h9516 = _source408.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10242___mcc_h9517 = _source408.dtor_name;
                    } else if (_source408.is_MemberSelect) {
                      RAST._IExpr _10243___mcc_h9520 = _source408.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10244___mcc_h9521 = _source408.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10245___mcc_h9524 = _source408.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10246___mcc_h9525 = _source408.dtor_retType;
                      RAST._IExpr _10247___mcc_h9526 = _source408.dtor_body;
                    }
                  } else {
                  }
                } else if (_source407.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10248___mcc_h9530 = _source407.dtor_op2;
                  RAST._IExpr _10249___mcc_h9531 = _source407.dtor_left;
                  RAST._IExpr _10250___mcc_h9532 = _source407.dtor_right;
                  DAST.Format._IBinaryOpFormat _10251___mcc_h9533 = _source407.dtor_format2;
                } else if (_source407.is_TypeAscription) {
                  RAST._IExpr _10252___mcc_h9538 = _source407.dtor_left;
                  RAST._IType _10253___mcc_h9539 = _source407.dtor_tpe;
                } else if (_source407.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10254___mcc_h9542 = _source407.dtor_value;
                } else if (_source407.is_LiteralBool) {
                  bool _10255___mcc_h9544 = _source407.dtor_bvalue;
                } else if (_source407.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10256___mcc_h9546 = _source407.dtor_value;
                  bool _10257___mcc_h9547 = _source407.dtor_binary;
                } else if (_source407.is_DeclareVar) {
                  RAST._IDeclareType _10258___mcc_h9550 = _source407.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10259___mcc_h9551 = _source407.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10260___mcc_h9552 = _source407.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10261___mcc_h9553 = _source407.dtor_optRhs;
                } else if (_source407.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10262___mcc_h9558 = _source407.dtor_names;
                  RAST._IExpr _10263___mcc_h9559 = _source407.dtor_rhs;
                } else if (_source407.is_IfExpr) {
                  RAST._IExpr _10264___mcc_h9562 = _source407.dtor_cond;
                  RAST._IExpr _10265___mcc_h9563 = _source407.dtor_thn;
                  RAST._IExpr _10266___mcc_h9564 = _source407.dtor_els;
                } else if (_source407.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10267___mcc_h9568 = _source407.dtor_optCond;
                  RAST._IExpr _10268___mcc_h9569 = _source407.dtor_underlying;
                } else if (_source407.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10269___mcc_h9572 = _source407.dtor_name;
                  RAST._IExpr _10270___mcc_h9573 = _source407.dtor_range;
                  RAST._IExpr _10271___mcc_h9574 = _source407.dtor_body;
                } else if (_source407.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10272___mcc_h9578 = _source407.dtor_lbl;
                  RAST._IExpr _10273___mcc_h9579 = _source407.dtor_underlying;
                } else if (_source407.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10274___mcc_h9582 = _source407.dtor_optLbl;
                } else if (_source407.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10275___mcc_h9584 = _source407.dtor_optLbl;
                } else if (_source407.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10276___mcc_h9586 = _source407.dtor_optExpr;
                } else if (_source407.is_CallType) {
                  RAST._IExpr _10277___mcc_h9588 = _source407.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10278___mcc_h9589 = _source407.dtor_typeParameters;
                } else if (_source407.is_Call) {
                  RAST._IExpr _10279___mcc_h9592 = _source407.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10280___mcc_h9593 = _source407.dtor_arguments;
                } else if (_source407.is_Select) {
                  RAST._IExpr _10281___mcc_h9596 = _source407.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10282___mcc_h9597 = _source407.dtor_name;
                } else if (_source407.is_MemberSelect) {
                  RAST._IExpr _10283___mcc_h9600 = _source407.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10284___mcc_h9601 = _source407.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10285___mcc_h9604 = _source407.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10286___mcc_h9605 = _source407.dtor_retType;
                  RAST._IExpr _10287___mcc_h9606 = _source407.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10171_field));
              if (_10170_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2127;
              DCOMP._IOwnership _out2128;
              (this).FromOwned(r, expectedOwnership, out _out2127, out _out2128);
              r = _out2127;
              resultingOwnership = _out2128;
              readIdents = _10179_recIdents;
            }
            return ;
          }
        } else if (_source322.is_UnboundedIntRange) {
          DAST._IExpression _10288___mcc_h261 = _source322.dtor_start;
          bool _10289___mcc_h262 = _source322.dtor_up;
          DAST._IType _10290_fieldType = _5017___mcc_h58;
          bool _10291_isDatatype = _5016___mcc_h57;
          bool _10292_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _10293_field = _5014___mcc_h55;
          DAST._IExpression _10294_on = _5013___mcc_h54;
          {
            if (_10291_isDatatype) {
              RAST._IExpr _10295_onExpr;
              DCOMP._IOwnership _10296_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10297_recIdents;
              RAST._IExpr _out2129;
              DCOMP._IOwnership _out2130;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2131;
              (this).GenExpr(_10294_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2129, out _out2130, out _out2131);
              _10295_onExpr = _out2129;
              _10296_onOwned = _out2130;
              _10297_recIdents = _out2131;
              r = ((_10295_onExpr).Sel(DCOMP.__default.escapeName(_10293_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10298_typ;
              RAST._IType _out2132;
              _out2132 = (this).GenType(_10290_fieldType, DCOMP.GenTypeContext.@default());
              _10298_typ = _out2132;
              RAST._IExpr _out2133;
              DCOMP._IOwnership _out2134;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2133, out _out2134);
              r = _out2133;
              resultingOwnership = _out2134;
              readIdents = _10297_recIdents;
            } else {
              RAST._IExpr _10299_onExpr;
              DCOMP._IOwnership _10300_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10301_recIdents;
              RAST._IExpr _out2135;
              DCOMP._IOwnership _out2136;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2137;
              (this).GenExpr(_10294_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2135, out _out2136, out _out2137);
              _10299_onExpr = _out2135;
              _10300_onOwned = _out2136;
              _10301_recIdents = _out2137;
              r = _10299_onExpr;
              if (!object.Equals(_10299_onExpr, RAST.__default.self)) {
                RAST._IExpr _source409 = _10299_onExpr;
                if (_source409.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10302___mcc_h9610 = _source409.dtor_content;
                } else if (_source409.is_ExprFromType) {
                  RAST._IType _10303___mcc_h9612 = _source409.dtor_tpe;
                } else if (_source409.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10304___mcc_h9614 = _source409.dtor_name;
                } else if (_source409.is_Match) {
                  RAST._IExpr _10305___mcc_h9616 = _source409.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10306___mcc_h9617 = _source409.dtor_cases;
                } else if (_source409.is_StmtExpr) {
                  RAST._IExpr _10307___mcc_h9620 = _source409.dtor_stmt;
                  RAST._IExpr _10308___mcc_h9621 = _source409.dtor_rhs;
                } else if (_source409.is_Block) {
                  RAST._IExpr _10309___mcc_h9624 = _source409.dtor_underlying;
                } else if (_source409.is_StructBuild) {
                  RAST._IExpr _10310___mcc_h9626 = _source409.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10311___mcc_h9627 = _source409.dtor_assignments;
                } else if (_source409.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10312___mcc_h9630 = _source409.dtor_arguments;
                } else if (_source409.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10313___mcc_h9632 = _source409.dtor_op1;
                  RAST._IExpr _10314___mcc_h9633 = _source409.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10315___mcc_h9634 = _source409.dtor_format;
                  if (object.Equals(_10313___mcc_h9632, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source410 = _10314___mcc_h9633;
                    if (_source410.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10316___mcc_h9638 = _source410.dtor_content;
                    } else if (_source410.is_ExprFromType) {
                      RAST._IType _10317___mcc_h9640 = _source410.dtor_tpe;
                    } else if (_source410.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10318___mcc_h9642 = _source410.dtor_name;
                      if (object.Equals(_10318___mcc_h9642, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source410.is_Match) {
                      RAST._IExpr _10319___mcc_h9644 = _source410.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10320___mcc_h9645 = _source410.dtor_cases;
                    } else if (_source410.is_StmtExpr) {
                      RAST._IExpr _10321___mcc_h9648 = _source410.dtor_stmt;
                      RAST._IExpr _10322___mcc_h9649 = _source410.dtor_rhs;
                    } else if (_source410.is_Block) {
                      RAST._IExpr _10323___mcc_h9652 = _source410.dtor_underlying;
                    } else if (_source410.is_StructBuild) {
                      RAST._IExpr _10324___mcc_h9654 = _source410.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10325___mcc_h9655 = _source410.dtor_assignments;
                    } else if (_source410.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10326___mcc_h9658 = _source410.dtor_arguments;
                    } else if (_source410.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10327___mcc_h9660 = _source410.dtor_op1;
                      RAST._IExpr _10328___mcc_h9661 = _source410.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10329___mcc_h9662 = _source410.dtor_format;
                    } else if (_source410.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10330___mcc_h9666 = _source410.dtor_op2;
                      RAST._IExpr _10331___mcc_h9667 = _source410.dtor_left;
                      RAST._IExpr _10332___mcc_h9668 = _source410.dtor_right;
                      DAST.Format._IBinaryOpFormat _10333___mcc_h9669 = _source410.dtor_format2;
                    } else if (_source410.is_TypeAscription) {
                      RAST._IExpr _10334___mcc_h9674 = _source410.dtor_left;
                      RAST._IType _10335___mcc_h9675 = _source410.dtor_tpe;
                    } else if (_source410.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10336___mcc_h9678 = _source410.dtor_value;
                    } else if (_source410.is_LiteralBool) {
                      bool _10337___mcc_h9680 = _source410.dtor_bvalue;
                    } else if (_source410.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10338___mcc_h9682 = _source410.dtor_value;
                      bool _10339___mcc_h9683 = _source410.dtor_binary;
                    } else if (_source410.is_DeclareVar) {
                      RAST._IDeclareType _10340___mcc_h9686 = _source410.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10341___mcc_h9687 = _source410.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10342___mcc_h9688 = _source410.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10343___mcc_h9689 = _source410.dtor_optRhs;
                    } else if (_source410.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10344___mcc_h9694 = _source410.dtor_names;
                      RAST._IExpr _10345___mcc_h9695 = _source410.dtor_rhs;
                    } else if (_source410.is_IfExpr) {
                      RAST._IExpr _10346___mcc_h9698 = _source410.dtor_cond;
                      RAST._IExpr _10347___mcc_h9699 = _source410.dtor_thn;
                      RAST._IExpr _10348___mcc_h9700 = _source410.dtor_els;
                    } else if (_source410.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10349___mcc_h9704 = _source410.dtor_optCond;
                      RAST._IExpr _10350___mcc_h9705 = _source410.dtor_underlying;
                    } else if (_source410.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10351___mcc_h9708 = _source410.dtor_name;
                      RAST._IExpr _10352___mcc_h9709 = _source410.dtor_range;
                      RAST._IExpr _10353___mcc_h9710 = _source410.dtor_body;
                    } else if (_source410.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10354___mcc_h9714 = _source410.dtor_lbl;
                      RAST._IExpr _10355___mcc_h9715 = _source410.dtor_underlying;
                    } else if (_source410.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10356___mcc_h9718 = _source410.dtor_optLbl;
                    } else if (_source410.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10357___mcc_h9720 = _source410.dtor_optLbl;
                    } else if (_source410.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10358___mcc_h9722 = _source410.dtor_optExpr;
                    } else if (_source410.is_CallType) {
                      RAST._IExpr _10359___mcc_h9724 = _source410.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10360___mcc_h9725 = _source410.dtor_typeParameters;
                    } else if (_source410.is_Call) {
                      RAST._IExpr _10361___mcc_h9728 = _source410.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10362___mcc_h9729 = _source410.dtor_arguments;
                    } else if (_source410.is_Select) {
                      RAST._IExpr _10363___mcc_h9732 = _source410.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10364___mcc_h9733 = _source410.dtor_name;
                    } else if (_source410.is_MemberSelect) {
                      RAST._IExpr _10365___mcc_h9736 = _source410.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10366___mcc_h9737 = _source410.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10367___mcc_h9740 = _source410.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10368___mcc_h9741 = _source410.dtor_retType;
                      RAST._IExpr _10369___mcc_h9742 = _source410.dtor_body;
                    }
                  } else {
                  }
                } else if (_source409.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10370___mcc_h9746 = _source409.dtor_op2;
                  RAST._IExpr _10371___mcc_h9747 = _source409.dtor_left;
                  RAST._IExpr _10372___mcc_h9748 = _source409.dtor_right;
                  DAST.Format._IBinaryOpFormat _10373___mcc_h9749 = _source409.dtor_format2;
                } else if (_source409.is_TypeAscription) {
                  RAST._IExpr _10374___mcc_h9754 = _source409.dtor_left;
                  RAST._IType _10375___mcc_h9755 = _source409.dtor_tpe;
                } else if (_source409.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10376___mcc_h9758 = _source409.dtor_value;
                } else if (_source409.is_LiteralBool) {
                  bool _10377___mcc_h9760 = _source409.dtor_bvalue;
                } else if (_source409.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10378___mcc_h9762 = _source409.dtor_value;
                  bool _10379___mcc_h9763 = _source409.dtor_binary;
                } else if (_source409.is_DeclareVar) {
                  RAST._IDeclareType _10380___mcc_h9766 = _source409.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10381___mcc_h9767 = _source409.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10382___mcc_h9768 = _source409.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10383___mcc_h9769 = _source409.dtor_optRhs;
                } else if (_source409.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10384___mcc_h9774 = _source409.dtor_names;
                  RAST._IExpr _10385___mcc_h9775 = _source409.dtor_rhs;
                } else if (_source409.is_IfExpr) {
                  RAST._IExpr _10386___mcc_h9778 = _source409.dtor_cond;
                  RAST._IExpr _10387___mcc_h9779 = _source409.dtor_thn;
                  RAST._IExpr _10388___mcc_h9780 = _source409.dtor_els;
                } else if (_source409.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10389___mcc_h9784 = _source409.dtor_optCond;
                  RAST._IExpr _10390___mcc_h9785 = _source409.dtor_underlying;
                } else if (_source409.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10391___mcc_h9788 = _source409.dtor_name;
                  RAST._IExpr _10392___mcc_h9789 = _source409.dtor_range;
                  RAST._IExpr _10393___mcc_h9790 = _source409.dtor_body;
                } else if (_source409.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10394___mcc_h9794 = _source409.dtor_lbl;
                  RAST._IExpr _10395___mcc_h9795 = _source409.dtor_underlying;
                } else if (_source409.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10396___mcc_h9798 = _source409.dtor_optLbl;
                } else if (_source409.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10397___mcc_h9800 = _source409.dtor_optLbl;
                } else if (_source409.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10398___mcc_h9802 = _source409.dtor_optExpr;
                } else if (_source409.is_CallType) {
                  RAST._IExpr _10399___mcc_h9804 = _source409.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10400___mcc_h9805 = _source409.dtor_typeParameters;
                } else if (_source409.is_Call) {
                  RAST._IExpr _10401___mcc_h9808 = _source409.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10402___mcc_h9809 = _source409.dtor_arguments;
                } else if (_source409.is_Select) {
                  RAST._IExpr _10403___mcc_h9812 = _source409.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10404___mcc_h9813 = _source409.dtor_name;
                } else if (_source409.is_MemberSelect) {
                  RAST._IExpr _10405___mcc_h9816 = _source409.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10406___mcc_h9817 = _source409.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10407___mcc_h9820 = _source409.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10408___mcc_h9821 = _source409.dtor_retType;
                  RAST._IExpr _10409___mcc_h9822 = _source409.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10293_field));
              if (_10292_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2138;
              DCOMP._IOwnership _out2139;
              (this).FromOwned(r, expectedOwnership, out _out2138, out _out2139);
              r = _out2138;
              resultingOwnership = _out2139;
              readIdents = _10301_recIdents;
            }
            return ;
          }
        } else {
          DAST._IType _10410___mcc_h265 = _source322.dtor_elemType;
          DAST._IExpression _10411___mcc_h266 = _source322.dtor_collection;
          bool _10412___mcc_h267 = _source322.dtor_is__forall;
          DAST._IExpression _10413___mcc_h268 = _source322.dtor_lambda;
          DAST._IType _10414_fieldType = _5017___mcc_h58;
          bool _10415_isDatatype = _5016___mcc_h57;
          bool _10416_isConstant = _5015___mcc_h56;
          Dafny.ISequence<Dafny.Rune> _10417_field = _5014___mcc_h55;
          DAST._IExpression _10418_on = _5013___mcc_h54;
          {
            if (_10415_isDatatype) {
              RAST._IExpr _10419_onExpr;
              DCOMP._IOwnership _10420_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10421_recIdents;
              RAST._IExpr _out2140;
              DCOMP._IOwnership _out2141;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2142;
              (this).GenExpr(_10418_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2140, out _out2141, out _out2142);
              _10419_onExpr = _out2140;
              _10420_onOwned = _out2141;
              _10421_recIdents = _out2142;
              r = ((_10419_onExpr).Sel(DCOMP.__default.escapeName(_10417_field))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              RAST._IType _10422_typ;
              RAST._IType _out2143;
              _out2143 = (this).GenType(_10414_fieldType, DCOMP.GenTypeContext.@default());
              _10422_typ = _out2143;
              RAST._IExpr _out2144;
              DCOMP._IOwnership _out2145;
              (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipBorrowed(), expectedOwnership, out _out2144, out _out2145);
              r = _out2144;
              resultingOwnership = _out2145;
              readIdents = _10421_recIdents;
            } else {
              RAST._IExpr _10423_onExpr;
              DCOMP._IOwnership _10424_onOwned;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10425_recIdents;
              RAST._IExpr _out2146;
              DCOMP._IOwnership _out2147;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2148;
              (this).GenExpr(_10418_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2146, out _out2147, out _out2148);
              _10423_onExpr = _out2146;
              _10424_onOwned = _out2147;
              _10425_recIdents = _out2148;
              r = _10423_onExpr;
              if (!object.Equals(_10423_onExpr, RAST.__default.self)) {
                RAST._IExpr _source411 = _10423_onExpr;
                if (_source411.is_RawExpr) {
                  Dafny.ISequence<Dafny.Rune> _10426___mcc_h9826 = _source411.dtor_content;
                } else if (_source411.is_ExprFromType) {
                  RAST._IType _10427___mcc_h9828 = _source411.dtor_tpe;
                } else if (_source411.is_Identifier) {
                  Dafny.ISequence<Dafny.Rune> _10428___mcc_h9830 = _source411.dtor_name;
                } else if (_source411.is_Match) {
                  RAST._IExpr _10429___mcc_h9832 = _source411.dtor_matchee;
                  Dafny.ISequence<RAST._IMatchCase> _10430___mcc_h9833 = _source411.dtor_cases;
                } else if (_source411.is_StmtExpr) {
                  RAST._IExpr _10431___mcc_h9836 = _source411.dtor_stmt;
                  RAST._IExpr _10432___mcc_h9837 = _source411.dtor_rhs;
                } else if (_source411.is_Block) {
                  RAST._IExpr _10433___mcc_h9840 = _source411.dtor_underlying;
                } else if (_source411.is_StructBuild) {
                  RAST._IExpr _10434___mcc_h9842 = _source411.dtor_underlying;
                  Dafny.ISequence<RAST._IAssignIdentifier> _10435___mcc_h9843 = _source411.dtor_assignments;
                } else if (_source411.is_Tuple) {
                  Dafny.ISequence<RAST._IExpr> _10436___mcc_h9846 = _source411.dtor_arguments;
                } else if (_source411.is_UnaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10437___mcc_h9848 = _source411.dtor_op1;
                  RAST._IExpr _10438___mcc_h9849 = _source411.dtor_underlying;
                  DAST.Format._IUnaryOpFormat _10439___mcc_h9850 = _source411.dtor_format;
                  if (object.Equals(_10437___mcc_h9848, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&"))) {
                    RAST._IExpr _source412 = _10438___mcc_h9849;
                    if (_source412.is_RawExpr) {
                      Dafny.ISequence<Dafny.Rune> _10440___mcc_h9854 = _source412.dtor_content;
                    } else if (_source412.is_ExprFromType) {
                      RAST._IType _10441___mcc_h9856 = _source412.dtor_tpe;
                    } else if (_source412.is_Identifier) {
                      Dafny.ISequence<Dafny.Rune> _10442___mcc_h9858 = _source412.dtor_name;
                      if (object.Equals(_10442___mcc_h9858, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))) {
                        r = RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
                      } else {
                      }
                    } else if (_source412.is_Match) {
                      RAST._IExpr _10443___mcc_h9860 = _source412.dtor_matchee;
                      Dafny.ISequence<RAST._IMatchCase> _10444___mcc_h9861 = _source412.dtor_cases;
                    } else if (_source412.is_StmtExpr) {
                      RAST._IExpr _10445___mcc_h9864 = _source412.dtor_stmt;
                      RAST._IExpr _10446___mcc_h9865 = _source412.dtor_rhs;
                    } else if (_source412.is_Block) {
                      RAST._IExpr _10447___mcc_h9868 = _source412.dtor_underlying;
                    } else if (_source412.is_StructBuild) {
                      RAST._IExpr _10448___mcc_h9870 = _source412.dtor_underlying;
                      Dafny.ISequence<RAST._IAssignIdentifier> _10449___mcc_h9871 = _source412.dtor_assignments;
                    } else if (_source412.is_Tuple) {
                      Dafny.ISequence<RAST._IExpr> _10450___mcc_h9874 = _source412.dtor_arguments;
                    } else if (_source412.is_UnaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10451___mcc_h9876 = _source412.dtor_op1;
                      RAST._IExpr _10452___mcc_h9877 = _source412.dtor_underlying;
                      DAST.Format._IUnaryOpFormat _10453___mcc_h9878 = _source412.dtor_format;
                    } else if (_source412.is_BinaryOp) {
                      Dafny.ISequence<Dafny.Rune> _10454___mcc_h9882 = _source412.dtor_op2;
                      RAST._IExpr _10455___mcc_h9883 = _source412.dtor_left;
                      RAST._IExpr _10456___mcc_h9884 = _source412.dtor_right;
                      DAST.Format._IBinaryOpFormat _10457___mcc_h9885 = _source412.dtor_format2;
                    } else if (_source412.is_TypeAscription) {
                      RAST._IExpr _10458___mcc_h9890 = _source412.dtor_left;
                      RAST._IType _10459___mcc_h9891 = _source412.dtor_tpe;
                    } else if (_source412.is_LiteralInt) {
                      Dafny.ISequence<Dafny.Rune> _10460___mcc_h9894 = _source412.dtor_value;
                    } else if (_source412.is_LiteralBool) {
                      bool _10461___mcc_h9896 = _source412.dtor_bvalue;
                    } else if (_source412.is_LiteralString) {
                      Dafny.ISequence<Dafny.Rune> _10462___mcc_h9898 = _source412.dtor_value;
                      bool _10463___mcc_h9899 = _source412.dtor_binary;
                    } else if (_source412.is_DeclareVar) {
                      RAST._IDeclareType _10464___mcc_h9902 = _source412.dtor_declareType;
                      Dafny.ISequence<Dafny.Rune> _10465___mcc_h9903 = _source412.dtor_name;
                      Std.Wrappers._IOption<RAST._IType> _10466___mcc_h9904 = _source412.dtor_optType;
                      Std.Wrappers._IOption<RAST._IExpr> _10467___mcc_h9905 = _source412.dtor_optRhs;
                    } else if (_source412.is_Assign) {
                      Std.Wrappers._IOption<RAST._IAssignLhs> _10468___mcc_h9910 = _source412.dtor_names;
                      RAST._IExpr _10469___mcc_h9911 = _source412.dtor_rhs;
                    } else if (_source412.is_IfExpr) {
                      RAST._IExpr _10470___mcc_h9914 = _source412.dtor_cond;
                      RAST._IExpr _10471___mcc_h9915 = _source412.dtor_thn;
                      RAST._IExpr _10472___mcc_h9916 = _source412.dtor_els;
                    } else if (_source412.is_Loop) {
                      Std.Wrappers._IOption<RAST._IExpr> _10473___mcc_h9920 = _source412.dtor_optCond;
                      RAST._IExpr _10474___mcc_h9921 = _source412.dtor_underlying;
                    } else if (_source412.is_For) {
                      Dafny.ISequence<Dafny.Rune> _10475___mcc_h9924 = _source412.dtor_name;
                      RAST._IExpr _10476___mcc_h9925 = _source412.dtor_range;
                      RAST._IExpr _10477___mcc_h9926 = _source412.dtor_body;
                    } else if (_source412.is_Labelled) {
                      Dafny.ISequence<Dafny.Rune> _10478___mcc_h9930 = _source412.dtor_lbl;
                      RAST._IExpr _10479___mcc_h9931 = _source412.dtor_underlying;
                    } else if (_source412.is_Break) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10480___mcc_h9934 = _source412.dtor_optLbl;
                    } else if (_source412.is_Continue) {
                      Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10481___mcc_h9936 = _source412.dtor_optLbl;
                    } else if (_source412.is_Return) {
                      Std.Wrappers._IOption<RAST._IExpr> _10482___mcc_h9938 = _source412.dtor_optExpr;
                    } else if (_source412.is_CallType) {
                      RAST._IExpr _10483___mcc_h9940 = _source412.dtor_obj;
                      Dafny.ISequence<RAST._IType> _10484___mcc_h9941 = _source412.dtor_typeParameters;
                    } else if (_source412.is_Call) {
                      RAST._IExpr _10485___mcc_h9944 = _source412.dtor_obj;
                      Dafny.ISequence<RAST._IExpr> _10486___mcc_h9945 = _source412.dtor_arguments;
                    } else if (_source412.is_Select) {
                      RAST._IExpr _10487___mcc_h9948 = _source412.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10488___mcc_h9949 = _source412.dtor_name;
                    } else if (_source412.is_MemberSelect) {
                      RAST._IExpr _10489___mcc_h9952 = _source412.dtor_obj;
                      Dafny.ISequence<Dafny.Rune> _10490___mcc_h9953 = _source412.dtor_name;
                    } else {
                      Dafny.ISequence<RAST._IFormal> _10491___mcc_h9956 = _source412.dtor_params;
                      Std.Wrappers._IOption<RAST._IType> _10492___mcc_h9957 = _source412.dtor_retType;
                      RAST._IExpr _10493___mcc_h9958 = _source412.dtor_body;
                    }
                  } else {
                  }
                } else if (_source411.is_BinaryOp) {
                  Dafny.ISequence<Dafny.Rune> _10494___mcc_h9962 = _source411.dtor_op2;
                  RAST._IExpr _10495___mcc_h9963 = _source411.dtor_left;
                  RAST._IExpr _10496___mcc_h9964 = _source411.dtor_right;
                  DAST.Format._IBinaryOpFormat _10497___mcc_h9965 = _source411.dtor_format2;
                } else if (_source411.is_TypeAscription) {
                  RAST._IExpr _10498___mcc_h9970 = _source411.dtor_left;
                  RAST._IType _10499___mcc_h9971 = _source411.dtor_tpe;
                } else if (_source411.is_LiteralInt) {
                  Dafny.ISequence<Dafny.Rune> _10500___mcc_h9974 = _source411.dtor_value;
                } else if (_source411.is_LiteralBool) {
                  bool _10501___mcc_h9976 = _source411.dtor_bvalue;
                } else if (_source411.is_LiteralString) {
                  Dafny.ISequence<Dafny.Rune> _10502___mcc_h9978 = _source411.dtor_value;
                  bool _10503___mcc_h9979 = _source411.dtor_binary;
                } else if (_source411.is_DeclareVar) {
                  RAST._IDeclareType _10504___mcc_h9982 = _source411.dtor_declareType;
                  Dafny.ISequence<Dafny.Rune> _10505___mcc_h9983 = _source411.dtor_name;
                  Std.Wrappers._IOption<RAST._IType> _10506___mcc_h9984 = _source411.dtor_optType;
                  Std.Wrappers._IOption<RAST._IExpr> _10507___mcc_h9985 = _source411.dtor_optRhs;
                } else if (_source411.is_Assign) {
                  Std.Wrappers._IOption<RAST._IAssignLhs> _10508___mcc_h9990 = _source411.dtor_names;
                  RAST._IExpr _10509___mcc_h9991 = _source411.dtor_rhs;
                } else if (_source411.is_IfExpr) {
                  RAST._IExpr _10510___mcc_h9994 = _source411.dtor_cond;
                  RAST._IExpr _10511___mcc_h9995 = _source411.dtor_thn;
                  RAST._IExpr _10512___mcc_h9996 = _source411.dtor_els;
                } else if (_source411.is_Loop) {
                  Std.Wrappers._IOption<RAST._IExpr> _10513___mcc_h10000 = _source411.dtor_optCond;
                  RAST._IExpr _10514___mcc_h10001 = _source411.dtor_underlying;
                } else if (_source411.is_For) {
                  Dafny.ISequence<Dafny.Rune> _10515___mcc_h10004 = _source411.dtor_name;
                  RAST._IExpr _10516___mcc_h10005 = _source411.dtor_range;
                  RAST._IExpr _10517___mcc_h10006 = _source411.dtor_body;
                } else if (_source411.is_Labelled) {
                  Dafny.ISequence<Dafny.Rune> _10518___mcc_h10010 = _source411.dtor_lbl;
                  RAST._IExpr _10519___mcc_h10011 = _source411.dtor_underlying;
                } else if (_source411.is_Break) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10520___mcc_h10014 = _source411.dtor_optLbl;
                } else if (_source411.is_Continue) {
                  Std.Wrappers._IOption<Dafny.ISequence<Dafny.Rune>> _10521___mcc_h10016 = _source411.dtor_optLbl;
                } else if (_source411.is_Return) {
                  Std.Wrappers._IOption<RAST._IExpr> _10522___mcc_h10018 = _source411.dtor_optExpr;
                } else if (_source411.is_CallType) {
                  RAST._IExpr _10523___mcc_h10020 = _source411.dtor_obj;
                  Dafny.ISequence<RAST._IType> _10524___mcc_h10021 = _source411.dtor_typeParameters;
                } else if (_source411.is_Call) {
                  RAST._IExpr _10525___mcc_h10024 = _source411.dtor_obj;
                  Dafny.ISequence<RAST._IExpr> _10526___mcc_h10025 = _source411.dtor_arguments;
                } else if (_source411.is_Select) {
                  RAST._IExpr _10527___mcc_h10028 = _source411.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10528___mcc_h10029 = _source411.dtor_name;
                } else if (_source411.is_MemberSelect) {
                  RAST._IExpr _10529___mcc_h10032 = _source411.dtor_obj;
                  Dafny.ISequence<Dafny.Rune> _10530___mcc_h10033 = _source411.dtor_name;
                } else {
                  Dafny.ISequence<RAST._IFormal> _10531___mcc_h10036 = _source411.dtor_params;
                  Std.Wrappers._IOption<RAST._IType> _10532___mcc_h10037 = _source411.dtor_retType;
                  RAST._IExpr _10533___mcc_h10038 = _source411.dtor_body;
                }
                if (((this).ObjectType).is_RcMut) {
                  r = (r).Clone();
                }
                r = ((this).read__macro).Apply1(r);
              }
              r = (r).Sel(DCOMP.__default.escapeName(_10417_field));
              if (_10416_isConstant) {
                r = (r).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
              }
              r = (r).Clone();
              RAST._IExpr _out2149;
              DCOMP._IOwnership _out2150;
              (this).FromOwned(r, expectedOwnership, out _out2149, out _out2150);
              r = _out2149;
              resultingOwnership = _out2150;
              readIdents = _10425_recIdents;
            }
            return ;
          }
        }
      } else if (_source319.is_SelectFn) {
        DAST._IExpression _10534___mcc_h273 = _source319.dtor_expr;
        Dafny.ISequence<Dafny.Rune> _10535___mcc_h274 = _source319.dtor_field;
        bool _10536___mcc_h275 = _source319.dtor_onDatatype;
        bool _10537___mcc_h276 = _source319.dtor_isStatic;
        BigInteger _10538___mcc_h277 = _source319.dtor_arity;
        BigInteger _10539_arity = _10538___mcc_h277;
        bool _10540_isStatic = _10537___mcc_h276;
        bool _10541_isDatatype = _10536___mcc_h275;
        Dafny.ISequence<Dafny.Rune> _10542_field = _10535___mcc_h274;
        DAST._IExpression _10543_on = _10534___mcc_h273;
        {
          RAST._IExpr _10544_onExpr;
          DCOMP._IOwnership _10545_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10546_recIdents;
          RAST._IExpr _out2151;
          DCOMP._IOwnership _out2152;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2153;
          (this).GenExpr(_10543_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2151, out _out2152, out _out2153);
          _10544_onExpr = _out2151;
          _10545_onOwned = _out2152;
          _10546_recIdents = _out2153;
          Dafny.ISequence<Dafny.Rune> _10547_s = Dafny.Sequence<Dafny.Rune>.Empty;
          Dafny.ISequence<Dafny.Rune> _10548_onString;
          _10548_onString = (_10544_onExpr)._ToString(DCOMP.__default.IND);
          if (_10540_isStatic) {
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10548_onString, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::")), DCOMP.__default.escapeName(_10542_field));
          } else {
            _10547_s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{\n");
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10547_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("let callTarget = (")), _10548_onString), ((object.Equals(_10545_onOwned, DCOMP.Ownership.create_OwnershipOwned())) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString(").clone()")))), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(";\n"));
            Dafny.ISequence<Dafny.Rune> _10549_args;
            _10549_args = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("");
            BigInteger _10550_i;
            _10550_i = BigInteger.Zero;
            while ((_10550_i) < (_10539_arity)) {
              if ((_10550_i).Sign == 1) {
                _10549_args = Dafny.Sequence<Dafny.Rune>.Concat(_10549_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
              }
              _10549_args = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10549_args, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("arg")), Std.Strings.__default.OfNat(_10550_i));
              _10550_i = (_10550_i) + (BigInteger.One);
            }
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10547_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("move |")), _10549_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("| {\n"));
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(_10547_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("callTarget.")), DCOMP.__default.escapeName(_10542_field)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("(")), _10549_args), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(")\n"));
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(_10547_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}\n"));
            _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(_10547_s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("}"));
          }
          Dafny.ISequence<Dafny.Rune> _10551_typeShape;
          _10551_typeShape = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("dyn ::std::ops::Fn(");
          BigInteger _10552_i;
          _10552_i = BigInteger.Zero;
          while ((_10552_i) < (_10539_arity)) {
            if ((_10552_i).Sign == 1) {
              _10551_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10551_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(", "));
            }
            _10551_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10551_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&_"));
            _10552_i = (_10552_i) + (BigInteger.One);
          }
          _10551_typeShape = Dafny.Sequence<Dafny.Rune>.Concat(_10551_typeShape, Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") -> _"));
          _10547_s = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::std::rc::Rc::new("), _10547_s), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(") as ::std::rc::Rc<")), _10551_typeShape), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">"));
          r = RAST.Expr.create_RawExpr(_10547_s);
          RAST._IExpr _out2154;
          DCOMP._IOwnership _out2155;
          (this).FromOwned(r, expectedOwnership, out _out2154, out _out2155);
          r = _out2154;
          resultingOwnership = _out2155;
          readIdents = _10546_recIdents;
          return ;
        }
      } else if (_source319.is_Index) {
        DAST._IExpression _10553___mcc_h278 = _source319.dtor_expr;
        DAST._ICollKind _10554___mcc_h279 = _source319.dtor_collKind;
        Dafny.ISequence<DAST._IExpression> _10555___mcc_h280 = _source319.dtor_indices;
        Dafny.ISequence<DAST._IExpression> _10556_indices = _10555___mcc_h280;
        DAST._ICollKind _10557_collKind = _10554___mcc_h279;
        DAST._IExpression _10558_on = _10553___mcc_h278;
        {
          RAST._IExpr _10559_onExpr;
          DCOMP._IOwnership _10560_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10561_recIdents;
          RAST._IExpr _out2156;
          DCOMP._IOwnership _out2157;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2158;
          (this).GenExpr(_10558_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2156, out _out2157, out _out2158);
          _10559_onExpr = _out2156;
          _10560_onOwned = _out2157;
          _10561_recIdents = _out2158;
          readIdents = _10561_recIdents;
          r = _10559_onExpr;
          BigInteger _10562_i;
          _10562_i = BigInteger.Zero;
          while ((_10562_i) < (new BigInteger((_10556_indices).Count))) {
            if (object.Equals(_10557_collKind, DAST.CollKind.create_Array())) {
              r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("borrow"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
            }
            RAST._IExpr _10563_idx;
            DCOMP._IOwnership _10564_idxOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10565_recIdentsIdx;
            RAST._IExpr _out2159;
            DCOMP._IOwnership _out2160;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2161;
            (this).GenExpr((_10556_indices).Select(_10562_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2159, out _out2160, out _out2161);
            _10563_idx = _out2159;
            _10564_idxOwned = _out2160;
            _10565_recIdentsIdx = _out2161;
            r = ((r).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("get"))).Apply1(_10563_idx);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10565_recIdentsIdx);
            _10562_i = (_10562_i) + (BigInteger.One);
          }
          RAST._IExpr _out2162;
          DCOMP._IOwnership _out2163;
          (this).FromOwned(r, expectedOwnership, out _out2162, out _out2163);
          r = _out2162;
          resultingOwnership = _out2163;
          return ;
        }
      } else if (_source319.is_IndexRange) {
        DAST._IExpression _10566___mcc_h281 = _source319.dtor_expr;
        bool _10567___mcc_h282 = _source319.dtor_isArray;
        Std.Wrappers._IOption<DAST._IExpression> _10568___mcc_h283 = _source319.dtor_low;
        Std.Wrappers._IOption<DAST._IExpression> _10569___mcc_h284 = _source319.dtor_high;
        Std.Wrappers._IOption<DAST._IExpression> _10570_high = _10569___mcc_h284;
        Std.Wrappers._IOption<DAST._IExpression> _10571_low = _10568___mcc_h283;
        bool _10572_isArray = _10567___mcc_h282;
        DAST._IExpression _10573_on = _10566___mcc_h281;
        {
          RAST._IExpr _10574_onExpr;
          DCOMP._IOwnership _10575_onOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10576_recIdents;
          RAST._IExpr _out2164;
          DCOMP._IOwnership _out2165;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2166;
          (this).GenExpr(_10573_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2164, out _out2165, out _out2166);
          _10574_onExpr = _out2164;
          _10575_onOwned = _out2165;
          _10576_recIdents = _out2166;
          readIdents = _10576_recIdents;
          Dafny.ISequence<Dafny.Rune> _10577_methodName;
          _10577_methodName = (((_10571_low).is_Some) ? ((((_10570_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("slice")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("drop")))) : ((((_10570_high).is_Some) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("take")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")))));
          Dafny.ISequence<RAST._IExpr> _10578_arguments;
          _10578_arguments = Dafny.Sequence<RAST._IExpr>.FromElements();
          Std.Wrappers._IOption<DAST._IExpression> _source413 = _10571_low;
          if (_source413.is_None) {
          } else {
            DAST._IExpression _10579___mcc_h10042 = _source413.dtor_value;
            DAST._IExpression _10580_l = _10579___mcc_h10042;
            {
              RAST._IExpr _10581_lExpr;
              DCOMP._IOwnership _10582___v172;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10583_recIdentsL;
              RAST._IExpr _out2167;
              DCOMP._IOwnership _out2168;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2169;
              (this).GenExpr(_10580_l, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2167, out _out2168, out _out2169);
              _10581_lExpr = _out2167;
              _10582___v172 = _out2168;
              _10583_recIdentsL = _out2169;
              _10578_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_10578_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_10581_lExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10583_recIdentsL);
            }
          }
          Std.Wrappers._IOption<DAST._IExpression> _source414 = _10570_high;
          if (_source414.is_None) {
          } else {
            DAST._IExpression _10584___mcc_h10043 = _source414.dtor_value;
            DAST._IExpression _10585_h = _10584___mcc_h10043;
            {
              RAST._IExpr _10586_hExpr;
              DCOMP._IOwnership _10587___v173;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10588_recIdentsH;
              RAST._IExpr _out2170;
              DCOMP._IOwnership _out2171;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2172;
              (this).GenExpr(_10585_h, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2170, out _out2171, out _out2172);
              _10586_hExpr = _out2170;
              _10587___v173 = _out2171;
              _10588_recIdentsH = _out2172;
              _10578_arguments = Dafny.Sequence<RAST._IExpr>.Concat(_10578_arguments, Dafny.Sequence<RAST._IExpr>.FromElements(_10586_hExpr));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10588_recIdentsH);
            }
          }
          r = _10574_onExpr;
          if (_10572_isArray) {
            if (!(_10577_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              _10577_methodName = Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), _10577_methodName);
            }
            r = ((RAST.__default.dafny__runtime__Sequence).MSel(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("from_array"), _10577_methodName))).Apply(_10578_arguments);
          } else {
            if (!(_10577_methodName).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""))) {
              r = ((r).Sel(_10577_methodName)).Apply(_10578_arguments);
            }
          }
          RAST._IExpr _out2173;
          DCOMP._IOwnership _out2174;
          (this).FromOwned(r, expectedOwnership, out _out2173, out _out2174);
          r = _out2173;
          resultingOwnership = _out2174;
          return ;
        }
      } else if (_source319.is_TupleSelect) {
        DAST._IExpression _10589___mcc_h285 = _source319.dtor_expr;
        BigInteger _10590___mcc_h286 = _source319.dtor_index;
        DAST._IType _10591___mcc_h287 = _source319.dtor_fieldType;
        DAST._IType _10592_fieldType = _10591___mcc_h287;
        BigInteger _10593_idx = _10590___mcc_h286;
        DAST._IExpression _10594_on = _10589___mcc_h285;
        {
          RAST._IExpr _10595_onExpr;
          DCOMP._IOwnership _10596_onOwnership;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10597_recIdents;
          RAST._IExpr _out2175;
          DCOMP._IOwnership _out2176;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2177;
          (this).GenExpr(_10594_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2175, out _out2176, out _out2177);
          _10595_onExpr = _out2175;
          _10596_onOwnership = _out2176;
          _10597_recIdents = _out2177;
          r = (_10595_onExpr).Sel(Std.Strings.__default.OfNat(_10593_idx));
          RAST._IExpr _out2178;
          DCOMP._IOwnership _out2179;
          (this).FromOwnership(r, DCOMP.Ownership.create_OwnershipOwned(), expectedOwnership, out _out2178, out _out2179);
          r = _out2178;
          resultingOwnership = _out2179;
          readIdents = _10597_recIdents;
          return ;
        }
      } else if (_source319.is_Call) {
        DAST._IExpression _10598___mcc_h288 = _source319.dtor_on;
        DAST._ICallName _10599___mcc_h289 = _source319.dtor_callName;
        Dafny.ISequence<DAST._IType> _10600___mcc_h290 = _source319.dtor_typeArgs;
        Dafny.ISequence<DAST._IExpression> _10601___mcc_h291 = _source319.dtor_args;
        Dafny.ISequence<DAST._IExpression> _10602_args = _10601___mcc_h291;
        Dafny.ISequence<DAST._IType> _10603_typeArgs = _10600___mcc_h290;
        DAST._ICallName _10604_name = _10599___mcc_h289;
        DAST._IExpression _10605_on = _10598___mcc_h288;
        {
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          RAST._IExpr _10606_onExpr;
          DCOMP._IOwnership _10607___v174;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10608_recIdents;
          RAST._IExpr _out2180;
          DCOMP._IOwnership _out2181;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2182;
          (this).GenExpr(_10605_on, selfIdent, env, DCOMP.Ownership.create_OwnershipAutoBorrowed(), out _out2180, out _out2181, out _out2182);
          _10606_onExpr = _out2180;
          _10607___v174 = _out2181;
          _10608_recIdents = _out2182;
          Dafny.ISequence<RAST._IType> _10609_typeExprs;
          _10609_typeExprs = Dafny.Sequence<RAST._IType>.FromElements();
          if ((new BigInteger((_10603_typeArgs).Count)) >= (BigInteger.One)) {
            BigInteger _hi42 = new BigInteger((_10603_typeArgs).Count);
            for (BigInteger _10610_typeI = BigInteger.Zero; _10610_typeI < _hi42; _10610_typeI++) {
              RAST._IType _10611_typeExpr;
              RAST._IType _out2183;
              _out2183 = (this).GenType((_10603_typeArgs).Select(_10610_typeI), DCOMP.GenTypeContext.@default());
              _10611_typeExpr = _out2183;
              _10609_typeExprs = Dafny.Sequence<RAST._IType>.Concat(_10609_typeExprs, Dafny.Sequence<RAST._IType>.FromElements(_10611_typeExpr));
            }
          }
          Dafny.ISequence<RAST._IExpr> _10612_argExprs;
          _10612_argExprs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi43 = new BigInteger((_10602_args).Count);
          for (BigInteger _10613_i = BigInteger.Zero; _10613_i < _hi43; _10613_i++) {
            DCOMP._IOwnership _10614_argOwnership;
            _10614_argOwnership = DCOMP.Ownership.create_OwnershipBorrowed();
            if (((_10604_name).is_CallName) && ((_10613_i) < (new BigInteger((((_10604_name).dtor_signature)).Count)))) {
              RAST._IType _10615_tpe;
              RAST._IType _out2184;
              _out2184 = (this).GenType(((((_10604_name).dtor_signature)).Select(_10613_i)).dtor_typ, DCOMP.GenTypeContext.@default());
              _10615_tpe = _out2184;
              if ((_10615_tpe).CanReadWithoutClone()) {
                _10614_argOwnership = DCOMP.Ownership.create_OwnershipOwned();
              }
            }
            RAST._IExpr _10616_argExpr;
            DCOMP._IOwnership _10617___v175;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _10618_argIdents;
            RAST._IExpr _out2185;
            DCOMP._IOwnership _out2186;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2187;
            (this).GenExpr((_10602_args).Select(_10613_i), selfIdent, env, _10614_argOwnership, out _out2185, out _out2186, out _out2187);
            _10616_argExpr = _out2185;
            _10617___v175 = _out2186;
            _10618_argIdents = _out2187;
            _10612_argExprs = Dafny.Sequence<RAST._IExpr>.Concat(_10612_argExprs, Dafny.Sequence<RAST._IExpr>.FromElements(_10616_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10618_argIdents);
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _10608_recIdents);
          Dafny.ISequence<Dafny.Rune> _10619_renderedName;
          _10619_renderedName = ((System.Func<DAST._ICallName, Dafny.ISequence<Dafny.Rune>>)((_source415) => {
            if (_source415.is_CallName) {
              Dafny.ISequence<Dafny.Rune> _10620___mcc_h10044 = _source415.dtor_name;
              Std.Wrappers._IOption<DAST._IType> _10621___mcc_h10045 = _source415.dtor_onType;
              Std.Wrappers._IOption<DAST._IFormal> _10622___mcc_h10046 = _source415.dtor_receiverArgs;
              Dafny.ISequence<DAST._IFormal> _10623___mcc_h10047 = _source415.dtor_signature;
              Dafny.ISequence<Dafny.Rune> _10624_ident = _10620___mcc_h10044;
              return DCOMP.__default.escapeName(_10624_ident);
            } else if (_source415.is_MapBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else if (_source415.is_MapBuilderBuild) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            } else if (_source415.is_SetBuilderAdd) {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("add");
            } else {
              return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("build");
            }
          }))(_10604_name);
          DAST._IExpression _source416 = _10605_on;
          if (_source416.is_Literal) {
            DAST._ILiteral _10625___mcc_h10048 = _source416.dtor_Literal_i_a0;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source417 = _10604_name;
                if (_source417.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10626___mcc_h10262 = _source417.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10627___mcc_h10263 = _source417.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10628___mcc_h10264 = _source417.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10629___mcc_h10265 = _source417.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source418 = _10627___mcc_h10263;
                  if (_source418.is_None) {
                  } else {
                    DAST._IType _10630___mcc_h10270 = _source418.dtor_value;
                    DAST._IType _10631_tpe = _10630___mcc_h10270;
                    RAST._IType _10632_typ;
                    RAST._IType _out2188;
                    _out2188 = (this).GenType(_10631_tpe, DCOMP.GenTypeContext.@default());
                    _10632_typ = _out2188;
                    if ((_10632_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source417.is_MapBuilderAdd) {
                } else if (_source417.is_MapBuilderBuild) {
                } else if (_source417.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Ident) {
            Dafny.ISequence<Dafny.Rune> _10633___mcc_h10050 = _source416.dtor_Ident_i_a0;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source419 = _10604_name;
                if (_source419.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10634___mcc_h10272 = _source419.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10635___mcc_h10273 = _source419.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10636___mcc_h10274 = _source419.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10637___mcc_h10275 = _source419.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source420 = _10635___mcc_h10273;
                  if (_source420.is_None) {
                  } else {
                    DAST._IType _10638___mcc_h10280 = _source420.dtor_value;
                    DAST._IType _10639_tpe = _10638___mcc_h10280;
                    RAST._IType _10640_typ;
                    RAST._IType _out2189;
                    _out2189 = (this).GenType(_10639_tpe, DCOMP.GenTypeContext.@default());
                    _10640_typ = _out2189;
                    if ((_10640_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source419.is_MapBuilderAdd) {
                } else if (_source419.is_MapBuilderBuild) {
                } else if (_source419.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Companion) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10641___mcc_h10052 = _source416.dtor_Companion_i_a0;
            Dafny.ISequence<DAST._IType> _10642___mcc_h10053 = _source416.dtor_typeArgs;
            {
              _10606_onExpr = (_10606_onExpr).MSel(_10619_renderedName);
            }
          } else if (_source416.is_Tuple) {
            Dafny.ISequence<DAST._IExpression> _10643___mcc_h10056 = _source416.dtor_Tuple_i_a0;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source421 = _10604_name;
                if (_source421.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10644___mcc_h10282 = _source421.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10645___mcc_h10283 = _source421.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10646___mcc_h10284 = _source421.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10647___mcc_h10285 = _source421.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source422 = _10645___mcc_h10283;
                  if (_source422.is_None) {
                  } else {
                    DAST._IType _10648___mcc_h10290 = _source422.dtor_value;
                    DAST._IType _10649_tpe = _10648___mcc_h10290;
                    RAST._IType _10650_typ;
                    RAST._IType _out2190;
                    _out2190 = (this).GenType(_10649_tpe, DCOMP.GenTypeContext.@default());
                    _10650_typ = _out2190;
                    if ((_10650_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source421.is_MapBuilderAdd) {
                } else if (_source421.is_MapBuilderBuild) {
                } else if (_source421.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_New) {
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10651___mcc_h10058 = _source416.dtor_path;
            Dafny.ISequence<DAST._IType> _10652___mcc_h10059 = _source416.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _10653___mcc_h10060 = _source416.dtor_args;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source423 = _10604_name;
                if (_source423.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10654___mcc_h10292 = _source423.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10655___mcc_h10293 = _source423.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10656___mcc_h10294 = _source423.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10657___mcc_h10295 = _source423.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source424 = _10655___mcc_h10293;
                  if (_source424.is_None) {
                  } else {
                    DAST._IType _10658___mcc_h10300 = _source424.dtor_value;
                    DAST._IType _10659_tpe = _10658___mcc_h10300;
                    RAST._IType _10660_typ;
                    RAST._IType _out2191;
                    _out2191 = (this).GenType(_10659_tpe, DCOMP.GenTypeContext.@default());
                    _10660_typ = _out2191;
                    if ((_10660_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source423.is_MapBuilderAdd) {
                } else if (_source423.is_MapBuilderBuild) {
                } else if (_source423.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_NewUninitArray) {
            Dafny.ISequence<DAST._IExpression> _10661___mcc_h10064 = _source416.dtor_dims;
            DAST._IType _10662___mcc_h10065 = _source416.dtor_typ;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source425 = _10604_name;
                if (_source425.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10663___mcc_h10302 = _source425.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10664___mcc_h10303 = _source425.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10665___mcc_h10304 = _source425.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10666___mcc_h10305 = _source425.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source426 = _10664___mcc_h10303;
                  if (_source426.is_None) {
                  } else {
                    DAST._IType _10667___mcc_h10310 = _source426.dtor_value;
                    DAST._IType _10668_tpe = _10667___mcc_h10310;
                    RAST._IType _10669_typ;
                    RAST._IType _out2192;
                    _out2192 = (this).GenType(_10668_tpe, DCOMP.GenTypeContext.@default());
                    _10669_typ = _out2192;
                    if ((_10669_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source425.is_MapBuilderAdd) {
                } else if (_source425.is_MapBuilderBuild) {
                } else if (_source425.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_ArrayIndexToInt) {
            DAST._IExpression _10670___mcc_h10068 = _source416.dtor_value;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source427 = _10604_name;
                if (_source427.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10671___mcc_h10312 = _source427.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10672___mcc_h10313 = _source427.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10673___mcc_h10314 = _source427.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10674___mcc_h10315 = _source427.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source428 = _10672___mcc_h10313;
                  if (_source428.is_None) {
                  } else {
                    DAST._IType _10675___mcc_h10320 = _source428.dtor_value;
                    DAST._IType _10676_tpe = _10675___mcc_h10320;
                    RAST._IType _10677_typ;
                    RAST._IType _out2193;
                    _out2193 = (this).GenType(_10676_tpe, DCOMP.GenTypeContext.@default());
                    _10677_typ = _out2193;
                    if ((_10677_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source427.is_MapBuilderAdd) {
                } else if (_source427.is_MapBuilderBuild) {
                } else if (_source427.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_FinalizeNewArray) {
            DAST._IExpression _10678___mcc_h10070 = _source416.dtor_value;
            DAST._IType _10679___mcc_h10071 = _source416.dtor_typ;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source429 = _10604_name;
                if (_source429.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10680___mcc_h10322 = _source429.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10681___mcc_h10323 = _source429.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10682___mcc_h10324 = _source429.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10683___mcc_h10325 = _source429.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source430 = _10681___mcc_h10323;
                  if (_source430.is_None) {
                  } else {
                    DAST._IType _10684___mcc_h10330 = _source430.dtor_value;
                    DAST._IType _10685_tpe = _10684___mcc_h10330;
                    RAST._IType _10686_typ;
                    RAST._IType _out2194;
                    _out2194 = (this).GenType(_10685_tpe, DCOMP.GenTypeContext.@default());
                    _10686_typ = _out2194;
                    if ((_10686_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source429.is_MapBuilderAdd) {
                } else if (_source429.is_MapBuilderBuild) {
                } else if (_source429.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_DatatypeValue) {
            DAST._IResolvedType _10687___mcc_h10074 = _source416.dtor_datatypeType;
            Dafny.ISequence<DAST._IType> _10688___mcc_h10075 = _source416.dtor_typeArgs;
            Dafny.ISequence<Dafny.Rune> _10689___mcc_h10076 = _source416.dtor_variant;
            bool _10690___mcc_h10077 = _source416.dtor_isCo;
            Dafny.ISequence<_System._ITuple2<Dafny.ISequence<Dafny.Rune>, DAST._IExpression>> _10691___mcc_h10078 = _source416.dtor_contents;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source431 = _10604_name;
                if (_source431.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10692___mcc_h10332 = _source431.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10693___mcc_h10333 = _source431.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10694___mcc_h10334 = _source431.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10695___mcc_h10335 = _source431.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source432 = _10693___mcc_h10333;
                  if (_source432.is_None) {
                  } else {
                    DAST._IType _10696___mcc_h10340 = _source432.dtor_value;
                    DAST._IType _10697_tpe = _10696___mcc_h10340;
                    RAST._IType _10698_typ;
                    RAST._IType _out2195;
                    _out2195 = (this).GenType(_10697_tpe, DCOMP.GenTypeContext.@default());
                    _10698_typ = _out2195;
                    if ((_10698_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source431.is_MapBuilderAdd) {
                } else if (_source431.is_MapBuilderBuild) {
                } else if (_source431.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Convert) {
            DAST._IExpression _10699___mcc_h10084 = _source416.dtor_value;
            DAST._IType _10700___mcc_h10085 = _source416.dtor_from;
            DAST._IType _10701___mcc_h10086 = _source416.dtor_typ;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source433 = _10604_name;
                if (_source433.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10702___mcc_h10342 = _source433.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10703___mcc_h10343 = _source433.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10704___mcc_h10344 = _source433.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10705___mcc_h10345 = _source433.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source434 = _10703___mcc_h10343;
                  if (_source434.is_None) {
                  } else {
                    DAST._IType _10706___mcc_h10350 = _source434.dtor_value;
                    DAST._IType _10707_tpe = _10706___mcc_h10350;
                    RAST._IType _10708_typ;
                    RAST._IType _out2196;
                    _out2196 = (this).GenType(_10707_tpe, DCOMP.GenTypeContext.@default());
                    _10708_typ = _out2196;
                    if ((_10708_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source433.is_MapBuilderAdd) {
                } else if (_source433.is_MapBuilderBuild) {
                } else if (_source433.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SeqConstruct) {
            DAST._IExpression _10709___mcc_h10090 = _source416.dtor_length;
            DAST._IExpression _10710___mcc_h10091 = _source416.dtor_elem;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source435 = _10604_name;
                if (_source435.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10711___mcc_h10352 = _source435.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10712___mcc_h10353 = _source435.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10713___mcc_h10354 = _source435.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10714___mcc_h10355 = _source435.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source436 = _10712___mcc_h10353;
                  if (_source436.is_None) {
                  } else {
                    DAST._IType _10715___mcc_h10360 = _source436.dtor_value;
                    DAST._IType _10716_tpe = _10715___mcc_h10360;
                    RAST._IType _10717_typ;
                    RAST._IType _out2197;
                    _out2197 = (this).GenType(_10716_tpe, DCOMP.GenTypeContext.@default());
                    _10717_typ = _out2197;
                    if ((_10717_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source435.is_MapBuilderAdd) {
                } else if (_source435.is_MapBuilderBuild) {
                } else if (_source435.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SeqValue) {
            Dafny.ISequence<DAST._IExpression> _10718___mcc_h10094 = _source416.dtor_elements;
            DAST._IType _10719___mcc_h10095 = _source416.dtor_typ;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source437 = _10604_name;
                if (_source437.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10720___mcc_h10362 = _source437.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10721___mcc_h10363 = _source437.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10722___mcc_h10364 = _source437.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10723___mcc_h10365 = _source437.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source438 = _10721___mcc_h10363;
                  if (_source438.is_None) {
                  } else {
                    DAST._IType _10724___mcc_h10370 = _source438.dtor_value;
                    DAST._IType _10725_tpe = _10724___mcc_h10370;
                    RAST._IType _10726_typ;
                    RAST._IType _out2198;
                    _out2198 = (this).GenType(_10725_tpe, DCOMP.GenTypeContext.@default());
                    _10726_typ = _out2198;
                    if ((_10726_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source437.is_MapBuilderAdd) {
                } else if (_source437.is_MapBuilderBuild) {
                } else if (_source437.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SetValue) {
            Dafny.ISequence<DAST._IExpression> _10727___mcc_h10098 = _source416.dtor_elements;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source439 = _10604_name;
                if (_source439.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10728___mcc_h10372 = _source439.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10729___mcc_h10373 = _source439.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10730___mcc_h10374 = _source439.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10731___mcc_h10375 = _source439.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source440 = _10729___mcc_h10373;
                  if (_source440.is_None) {
                  } else {
                    DAST._IType _10732___mcc_h10380 = _source440.dtor_value;
                    DAST._IType _10733_tpe = _10732___mcc_h10380;
                    RAST._IType _10734_typ;
                    RAST._IType _out2199;
                    _out2199 = (this).GenType(_10733_tpe, DCOMP.GenTypeContext.@default());
                    _10734_typ = _out2199;
                    if ((_10734_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source439.is_MapBuilderAdd) {
                } else if (_source439.is_MapBuilderBuild) {
                } else if (_source439.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MultisetValue) {
            Dafny.ISequence<DAST._IExpression> _10735___mcc_h10100 = _source416.dtor_elements;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source441 = _10604_name;
                if (_source441.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10736___mcc_h10382 = _source441.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10737___mcc_h10383 = _source441.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10738___mcc_h10384 = _source441.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10739___mcc_h10385 = _source441.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source442 = _10737___mcc_h10383;
                  if (_source442.is_None) {
                  } else {
                    DAST._IType _10740___mcc_h10390 = _source442.dtor_value;
                    DAST._IType _10741_tpe = _10740___mcc_h10390;
                    RAST._IType _10742_typ;
                    RAST._IType _out2200;
                    _out2200 = (this).GenType(_10741_tpe, DCOMP.GenTypeContext.@default());
                    _10742_typ = _out2200;
                    if ((_10742_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source441.is_MapBuilderAdd) {
                } else if (_source441.is_MapBuilderBuild) {
                } else if (_source441.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapValue) {
            Dafny.ISequence<_System._ITuple2<DAST._IExpression, DAST._IExpression>> _10743___mcc_h10102 = _source416.dtor_mapElems;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source443 = _10604_name;
                if (_source443.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10744___mcc_h10392 = _source443.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10745___mcc_h10393 = _source443.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10746___mcc_h10394 = _source443.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10747___mcc_h10395 = _source443.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source444 = _10745___mcc_h10393;
                  if (_source444.is_None) {
                  } else {
                    DAST._IType _10748___mcc_h10400 = _source444.dtor_value;
                    DAST._IType _10749_tpe = _10748___mcc_h10400;
                    RAST._IType _10750_typ;
                    RAST._IType _out2201;
                    _out2201 = (this).GenType(_10749_tpe, DCOMP.GenTypeContext.@default());
                    _10750_typ = _out2201;
                    if ((_10750_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source443.is_MapBuilderAdd) {
                } else if (_source443.is_MapBuilderBuild) {
                } else if (_source443.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapBuilder) {
            DAST._IType _10751___mcc_h10104 = _source416.dtor_keyType;
            DAST._IType _10752___mcc_h10105 = _source416.dtor_valueType;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source445 = _10604_name;
                if (_source445.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10753___mcc_h10402 = _source445.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10754___mcc_h10403 = _source445.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10755___mcc_h10404 = _source445.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10756___mcc_h10405 = _source445.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source446 = _10754___mcc_h10403;
                  if (_source446.is_None) {
                  } else {
                    DAST._IType _10757___mcc_h10410 = _source446.dtor_value;
                    DAST._IType _10758_tpe = _10757___mcc_h10410;
                    RAST._IType _10759_typ;
                    RAST._IType _out2202;
                    _out2202 = (this).GenType(_10758_tpe, DCOMP.GenTypeContext.@default());
                    _10759_typ = _out2202;
                    if ((_10759_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source445.is_MapBuilderAdd) {
                } else if (_source445.is_MapBuilderBuild) {
                } else if (_source445.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SeqUpdate) {
            DAST._IExpression _10760___mcc_h10108 = _source416.dtor_expr;
            DAST._IExpression _10761___mcc_h10109 = _source416.dtor_indexExpr;
            DAST._IExpression _10762___mcc_h10110 = _source416.dtor_value;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source447 = _10604_name;
                if (_source447.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10763___mcc_h10412 = _source447.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10764___mcc_h10413 = _source447.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10765___mcc_h10414 = _source447.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10766___mcc_h10415 = _source447.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source448 = _10764___mcc_h10413;
                  if (_source448.is_None) {
                  } else {
                    DAST._IType _10767___mcc_h10420 = _source448.dtor_value;
                    DAST._IType _10768_tpe = _10767___mcc_h10420;
                    RAST._IType _10769_typ;
                    RAST._IType _out2203;
                    _out2203 = (this).GenType(_10768_tpe, DCOMP.GenTypeContext.@default());
                    _10769_typ = _out2203;
                    if ((_10769_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source447.is_MapBuilderAdd) {
                } else if (_source447.is_MapBuilderBuild) {
                } else if (_source447.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapUpdate) {
            DAST._IExpression _10770___mcc_h10114 = _source416.dtor_expr;
            DAST._IExpression _10771___mcc_h10115 = _source416.dtor_indexExpr;
            DAST._IExpression _10772___mcc_h10116 = _source416.dtor_value;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source449 = _10604_name;
                if (_source449.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10773___mcc_h10422 = _source449.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10774___mcc_h10423 = _source449.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10775___mcc_h10424 = _source449.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10776___mcc_h10425 = _source449.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source450 = _10774___mcc_h10423;
                  if (_source450.is_None) {
                  } else {
                    DAST._IType _10777___mcc_h10430 = _source450.dtor_value;
                    DAST._IType _10778_tpe = _10777___mcc_h10430;
                    RAST._IType _10779_typ;
                    RAST._IType _out2204;
                    _out2204 = (this).GenType(_10778_tpe, DCOMP.GenTypeContext.@default());
                    _10779_typ = _out2204;
                    if ((_10779_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source449.is_MapBuilderAdd) {
                } else if (_source449.is_MapBuilderBuild) {
                } else if (_source449.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SetBuilder) {
            DAST._IType _10780___mcc_h10120 = _source416.dtor_elemType;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source451 = _10604_name;
                if (_source451.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10781___mcc_h10432 = _source451.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10782___mcc_h10433 = _source451.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10783___mcc_h10434 = _source451.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10784___mcc_h10435 = _source451.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source452 = _10782___mcc_h10433;
                  if (_source452.is_None) {
                  } else {
                    DAST._IType _10785___mcc_h10440 = _source452.dtor_value;
                    DAST._IType _10786_tpe = _10785___mcc_h10440;
                    RAST._IType _10787_typ;
                    RAST._IType _out2205;
                    _out2205 = (this).GenType(_10786_tpe, DCOMP.GenTypeContext.@default());
                    _10787_typ = _out2205;
                    if ((_10787_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source451.is_MapBuilderAdd) {
                } else if (_source451.is_MapBuilderBuild) {
                } else if (_source451.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_ToMultiset) {
            DAST._IExpression _10788___mcc_h10122 = _source416.dtor_ToMultiset_i_a0;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source453 = _10604_name;
                if (_source453.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10789___mcc_h10442 = _source453.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10790___mcc_h10443 = _source453.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10791___mcc_h10444 = _source453.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10792___mcc_h10445 = _source453.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source454 = _10790___mcc_h10443;
                  if (_source454.is_None) {
                  } else {
                    DAST._IType _10793___mcc_h10450 = _source454.dtor_value;
                    DAST._IType _10794_tpe = _10793___mcc_h10450;
                    RAST._IType _10795_typ;
                    RAST._IType _out2206;
                    _out2206 = (this).GenType(_10794_tpe, DCOMP.GenTypeContext.@default());
                    _10795_typ = _out2206;
                    if ((_10795_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source453.is_MapBuilderAdd) {
                } else if (_source453.is_MapBuilderBuild) {
                } else if (_source453.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_This) {
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source455 = _10604_name;
                if (_source455.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10796___mcc_h10452 = _source455.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10797___mcc_h10453 = _source455.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10798___mcc_h10454 = _source455.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10799___mcc_h10455 = _source455.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source456 = _10797___mcc_h10453;
                  if (_source456.is_None) {
                  } else {
                    DAST._IType _10800___mcc_h10460 = _source456.dtor_value;
                    DAST._IType _10801_tpe = _10800___mcc_h10460;
                    RAST._IType _10802_typ;
                    RAST._IType _out2207;
                    _out2207 = (this).GenType(_10801_tpe, DCOMP.GenTypeContext.@default());
                    _10802_typ = _out2207;
                    if ((_10802_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source455.is_MapBuilderAdd) {
                } else if (_source455.is_MapBuilderBuild) {
                } else if (_source455.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Ite) {
            DAST._IExpression _10803___mcc_h10124 = _source416.dtor_cond;
            DAST._IExpression _10804___mcc_h10125 = _source416.dtor_thn;
            DAST._IExpression _10805___mcc_h10126 = _source416.dtor_els;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source457 = _10604_name;
                if (_source457.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10806___mcc_h10462 = _source457.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10807___mcc_h10463 = _source457.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10808___mcc_h10464 = _source457.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10809___mcc_h10465 = _source457.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source458 = _10807___mcc_h10463;
                  if (_source458.is_None) {
                  } else {
                    DAST._IType _10810___mcc_h10470 = _source458.dtor_value;
                    DAST._IType _10811_tpe = _10810___mcc_h10470;
                    RAST._IType _10812_typ;
                    RAST._IType _out2208;
                    _out2208 = (this).GenType(_10811_tpe, DCOMP.GenTypeContext.@default());
                    _10812_typ = _out2208;
                    if ((_10812_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source457.is_MapBuilderAdd) {
                } else if (_source457.is_MapBuilderBuild) {
                } else if (_source457.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_UnOp) {
            DAST._IUnaryOp _10813___mcc_h10130 = _source416.dtor_unOp;
            DAST._IExpression _10814___mcc_h10131 = _source416.dtor_expr;
            DAST.Format._IUnaryOpFormat _10815___mcc_h10132 = _source416.dtor_format1;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source459 = _10604_name;
                if (_source459.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10816___mcc_h10472 = _source459.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10817___mcc_h10473 = _source459.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10818___mcc_h10474 = _source459.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10819___mcc_h10475 = _source459.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source460 = _10817___mcc_h10473;
                  if (_source460.is_None) {
                  } else {
                    DAST._IType _10820___mcc_h10480 = _source460.dtor_value;
                    DAST._IType _10821_tpe = _10820___mcc_h10480;
                    RAST._IType _10822_typ;
                    RAST._IType _out2209;
                    _out2209 = (this).GenType(_10821_tpe, DCOMP.GenTypeContext.@default());
                    _10822_typ = _out2209;
                    if ((_10822_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source459.is_MapBuilderAdd) {
                } else if (_source459.is_MapBuilderBuild) {
                } else if (_source459.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_BinOp) {
            DAST._IBinOp _10823___mcc_h10136 = _source416.dtor_op;
            DAST._IExpression _10824___mcc_h10137 = _source416.dtor_left;
            DAST._IExpression _10825___mcc_h10138 = _source416.dtor_right;
            DAST.Format._IBinaryOpFormat _10826___mcc_h10139 = _source416.dtor_format2;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source461 = _10604_name;
                if (_source461.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10827___mcc_h10482 = _source461.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10828___mcc_h10483 = _source461.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10829___mcc_h10484 = _source461.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10830___mcc_h10485 = _source461.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source462 = _10828___mcc_h10483;
                  if (_source462.is_None) {
                  } else {
                    DAST._IType _10831___mcc_h10490 = _source462.dtor_value;
                    DAST._IType _10832_tpe = _10831___mcc_h10490;
                    RAST._IType _10833_typ;
                    RAST._IType _out2210;
                    _out2210 = (this).GenType(_10832_tpe, DCOMP.GenTypeContext.@default());
                    _10833_typ = _out2210;
                    if ((_10833_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source461.is_MapBuilderAdd) {
                } else if (_source461.is_MapBuilderBuild) {
                } else if (_source461.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_ArrayLen) {
            DAST._IExpression _10834___mcc_h10144 = _source416.dtor_expr;
            DAST._IType _10835___mcc_h10145 = _source416.dtor_exprType;
            BigInteger _10836___mcc_h10146 = _source416.dtor_dim;
            bool _10837___mcc_h10147 = _source416.dtor_native;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source463 = _10604_name;
                if (_source463.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10838___mcc_h10492 = _source463.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10839___mcc_h10493 = _source463.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10840___mcc_h10494 = _source463.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10841___mcc_h10495 = _source463.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source464 = _10839___mcc_h10493;
                  if (_source464.is_None) {
                  } else {
                    DAST._IType _10842___mcc_h10500 = _source464.dtor_value;
                    DAST._IType _10843_tpe = _10842___mcc_h10500;
                    RAST._IType _10844_typ;
                    RAST._IType _out2211;
                    _out2211 = (this).GenType(_10843_tpe, DCOMP.GenTypeContext.@default());
                    _10844_typ = _out2211;
                    if ((_10844_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source463.is_MapBuilderAdd) {
                } else if (_source463.is_MapBuilderBuild) {
                } else if (_source463.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapKeys) {
            DAST._IExpression _10845___mcc_h10152 = _source416.dtor_expr;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source465 = _10604_name;
                if (_source465.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10846___mcc_h10502 = _source465.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10847___mcc_h10503 = _source465.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10848___mcc_h10504 = _source465.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10849___mcc_h10505 = _source465.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source466 = _10847___mcc_h10503;
                  if (_source466.is_None) {
                  } else {
                    DAST._IType _10850___mcc_h10510 = _source466.dtor_value;
                    DAST._IType _10851_tpe = _10850___mcc_h10510;
                    RAST._IType _10852_typ;
                    RAST._IType _out2212;
                    _out2212 = (this).GenType(_10851_tpe, DCOMP.GenTypeContext.@default());
                    _10852_typ = _out2212;
                    if ((_10852_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source465.is_MapBuilderAdd) {
                } else if (_source465.is_MapBuilderBuild) {
                } else if (_source465.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapValues) {
            DAST._IExpression _10853___mcc_h10154 = _source416.dtor_expr;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source467 = _10604_name;
                if (_source467.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10854___mcc_h10512 = _source467.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10855___mcc_h10513 = _source467.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10856___mcc_h10514 = _source467.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10857___mcc_h10515 = _source467.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source468 = _10855___mcc_h10513;
                  if (_source468.is_None) {
                  } else {
                    DAST._IType _10858___mcc_h10520 = _source468.dtor_value;
                    DAST._IType _10859_tpe = _10858___mcc_h10520;
                    RAST._IType _10860_typ;
                    RAST._IType _out2213;
                    _out2213 = (this).GenType(_10859_tpe, DCOMP.GenTypeContext.@default());
                    _10860_typ = _out2213;
                    if ((_10860_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source467.is_MapBuilderAdd) {
                } else if (_source467.is_MapBuilderBuild) {
                } else if (_source467.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Select) {
            DAST._IExpression _10861___mcc_h10156 = _source416.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _10862___mcc_h10157 = _source416.dtor_field;
            bool _10863___mcc_h10158 = _source416.dtor_isConstant;
            bool _10864___mcc_h10159 = _source416.dtor_onDatatype;
            DAST._IType _10865___mcc_h10160 = _source416.dtor_fieldType;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source469 = _10604_name;
                if (_source469.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10866___mcc_h10522 = _source469.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10867___mcc_h10523 = _source469.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10868___mcc_h10524 = _source469.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10869___mcc_h10525 = _source469.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source470 = _10867___mcc_h10523;
                  if (_source470.is_None) {
                  } else {
                    DAST._IType _10870___mcc_h10530 = _source470.dtor_value;
                    DAST._IType _10871_tpe = _10870___mcc_h10530;
                    RAST._IType _10872_typ;
                    RAST._IType _out2214;
                    _out2214 = (this).GenType(_10871_tpe, DCOMP.GenTypeContext.@default());
                    _10872_typ = _out2214;
                    if ((_10872_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source469.is_MapBuilderAdd) {
                } else if (_source469.is_MapBuilderBuild) {
                } else if (_source469.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SelectFn) {
            DAST._IExpression _10873___mcc_h10166 = _source416.dtor_expr;
            Dafny.ISequence<Dafny.Rune> _10874___mcc_h10167 = _source416.dtor_field;
            bool _10875___mcc_h10168 = _source416.dtor_onDatatype;
            bool _10876___mcc_h10169 = _source416.dtor_isStatic;
            BigInteger _10877___mcc_h10170 = _source416.dtor_arity;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source471 = _10604_name;
                if (_source471.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10878___mcc_h10532 = _source471.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10879___mcc_h10533 = _source471.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10880___mcc_h10534 = _source471.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10881___mcc_h10535 = _source471.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source472 = _10879___mcc_h10533;
                  if (_source472.is_None) {
                  } else {
                    DAST._IType _10882___mcc_h10540 = _source472.dtor_value;
                    DAST._IType _10883_tpe = _10882___mcc_h10540;
                    RAST._IType _10884_typ;
                    RAST._IType _out2215;
                    _out2215 = (this).GenType(_10883_tpe, DCOMP.GenTypeContext.@default());
                    _10884_typ = _out2215;
                    if ((_10884_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source471.is_MapBuilderAdd) {
                } else if (_source471.is_MapBuilderBuild) {
                } else if (_source471.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Index) {
            DAST._IExpression _10885___mcc_h10176 = _source416.dtor_expr;
            DAST._ICollKind _10886___mcc_h10177 = _source416.dtor_collKind;
            Dafny.ISequence<DAST._IExpression> _10887___mcc_h10178 = _source416.dtor_indices;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source473 = _10604_name;
                if (_source473.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10888___mcc_h10542 = _source473.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10889___mcc_h10543 = _source473.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10890___mcc_h10544 = _source473.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10891___mcc_h10545 = _source473.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source474 = _10889___mcc_h10543;
                  if (_source474.is_None) {
                  } else {
                    DAST._IType _10892___mcc_h10550 = _source474.dtor_value;
                    DAST._IType _10893_tpe = _10892___mcc_h10550;
                    RAST._IType _10894_typ;
                    RAST._IType _out2216;
                    _out2216 = (this).GenType(_10893_tpe, DCOMP.GenTypeContext.@default());
                    _10894_typ = _out2216;
                    if ((_10894_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source473.is_MapBuilderAdd) {
                } else if (_source473.is_MapBuilderBuild) {
                } else if (_source473.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_IndexRange) {
            DAST._IExpression _10895___mcc_h10182 = _source416.dtor_expr;
            bool _10896___mcc_h10183 = _source416.dtor_isArray;
            Std.Wrappers._IOption<DAST._IExpression> _10897___mcc_h10184 = _source416.dtor_low;
            Std.Wrappers._IOption<DAST._IExpression> _10898___mcc_h10185 = _source416.dtor_high;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source475 = _10604_name;
                if (_source475.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10899___mcc_h10552 = _source475.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10900___mcc_h10553 = _source475.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10901___mcc_h10554 = _source475.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10902___mcc_h10555 = _source475.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source476 = _10900___mcc_h10553;
                  if (_source476.is_None) {
                  } else {
                    DAST._IType _10903___mcc_h10560 = _source476.dtor_value;
                    DAST._IType _10904_tpe = _10903___mcc_h10560;
                    RAST._IType _10905_typ;
                    RAST._IType _out2217;
                    _out2217 = (this).GenType(_10904_tpe, DCOMP.GenTypeContext.@default());
                    _10905_typ = _out2217;
                    if ((_10905_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source475.is_MapBuilderAdd) {
                } else if (_source475.is_MapBuilderBuild) {
                } else if (_source475.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_TupleSelect) {
            DAST._IExpression _10906___mcc_h10190 = _source416.dtor_expr;
            BigInteger _10907___mcc_h10191 = _source416.dtor_index;
            DAST._IType _10908___mcc_h10192 = _source416.dtor_fieldType;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source477 = _10604_name;
                if (_source477.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10909___mcc_h10562 = _source477.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10910___mcc_h10563 = _source477.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10911___mcc_h10564 = _source477.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10912___mcc_h10565 = _source477.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source478 = _10910___mcc_h10563;
                  if (_source478.is_None) {
                  } else {
                    DAST._IType _10913___mcc_h10570 = _source478.dtor_value;
                    DAST._IType _10914_tpe = _10913___mcc_h10570;
                    RAST._IType _10915_typ;
                    RAST._IType _out2218;
                    _out2218 = (this).GenType(_10914_tpe, DCOMP.GenTypeContext.@default());
                    _10915_typ = _out2218;
                    if ((_10915_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source477.is_MapBuilderAdd) {
                } else if (_source477.is_MapBuilderBuild) {
                } else if (_source477.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Call) {
            DAST._IExpression _10916___mcc_h10196 = _source416.dtor_on;
            DAST._ICallName _10917___mcc_h10197 = _source416.dtor_callName;
            Dafny.ISequence<DAST._IType> _10918___mcc_h10198 = _source416.dtor_typeArgs;
            Dafny.ISequence<DAST._IExpression> _10919___mcc_h10199 = _source416.dtor_args;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source479 = _10604_name;
                if (_source479.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10920___mcc_h10572 = _source479.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10921___mcc_h10573 = _source479.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10922___mcc_h10574 = _source479.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10923___mcc_h10575 = _source479.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source480 = _10921___mcc_h10573;
                  if (_source480.is_None) {
                  } else {
                    DAST._IType _10924___mcc_h10580 = _source480.dtor_value;
                    DAST._IType _10925_tpe = _10924___mcc_h10580;
                    RAST._IType _10926_typ;
                    RAST._IType _out2219;
                    _out2219 = (this).GenType(_10925_tpe, DCOMP.GenTypeContext.@default());
                    _10926_typ = _out2219;
                    if ((_10926_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source479.is_MapBuilderAdd) {
                } else if (_source479.is_MapBuilderBuild) {
                } else if (_source479.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _10927___mcc_h10204 = _source416.dtor_params;
            DAST._IType _10928___mcc_h10205 = _source416.dtor_retType;
            Dafny.ISequence<DAST._IStatement> _10929___mcc_h10206 = _source416.dtor_body;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source481 = _10604_name;
                if (_source481.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10930___mcc_h10582 = _source481.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10931___mcc_h10583 = _source481.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10932___mcc_h10584 = _source481.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10933___mcc_h10585 = _source481.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source482 = _10931___mcc_h10583;
                  if (_source482.is_None) {
                  } else {
                    DAST._IType _10934___mcc_h10590 = _source482.dtor_value;
                    DAST._IType _10935_tpe = _10934___mcc_h10590;
                    RAST._IType _10936_typ;
                    RAST._IType _out2220;
                    _out2220 = (this).GenType(_10935_tpe, DCOMP.GenTypeContext.@default());
                    _10936_typ = _out2220;
                    if ((_10936_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source481.is_MapBuilderAdd) {
                } else if (_source481.is_MapBuilderBuild) {
                } else if (_source481.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_BetaRedex) {
            Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _10937___mcc_h10210 = _source416.dtor_values;
            DAST._IType _10938___mcc_h10211 = _source416.dtor_retType;
            DAST._IExpression _10939___mcc_h10212 = _source416.dtor_expr;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source483 = _10604_name;
                if (_source483.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10940___mcc_h10592 = _source483.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10941___mcc_h10593 = _source483.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10942___mcc_h10594 = _source483.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10943___mcc_h10595 = _source483.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source484 = _10941___mcc_h10593;
                  if (_source484.is_None) {
                  } else {
                    DAST._IType _10944___mcc_h10600 = _source484.dtor_value;
                    DAST._IType _10945_tpe = _10944___mcc_h10600;
                    RAST._IType _10946_typ;
                    RAST._IType _out2221;
                    _out2221 = (this).GenType(_10945_tpe, DCOMP.GenTypeContext.@default());
                    _10946_typ = _out2221;
                    if ((_10946_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source483.is_MapBuilderAdd) {
                } else if (_source483.is_MapBuilderBuild) {
                } else if (_source483.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_IIFE) {
            Dafny.ISequence<Dafny.Rune> _10947___mcc_h10216 = _source416.dtor_name;
            DAST._IType _10948___mcc_h10217 = _source416.dtor_typ;
            DAST._IExpression _10949___mcc_h10218 = _source416.dtor_value;
            DAST._IExpression _10950___mcc_h10219 = _source416.dtor_iifeBody;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source485 = _10604_name;
                if (_source485.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10951___mcc_h10602 = _source485.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10952___mcc_h10603 = _source485.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10953___mcc_h10604 = _source485.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10954___mcc_h10605 = _source485.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source486 = _10952___mcc_h10603;
                  if (_source486.is_None) {
                  } else {
                    DAST._IType _10955___mcc_h10610 = _source486.dtor_value;
                    DAST._IType _10956_tpe = _10955___mcc_h10610;
                    RAST._IType _10957_typ;
                    RAST._IType _out2222;
                    _out2222 = (this).GenType(_10956_tpe, DCOMP.GenTypeContext.@default());
                    _10957_typ = _out2222;
                    if ((_10957_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source485.is_MapBuilderAdd) {
                } else if (_source485.is_MapBuilderBuild) {
                } else if (_source485.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_Apply) {
            DAST._IExpression _10958___mcc_h10224 = _source416.dtor_expr;
            Dafny.ISequence<DAST._IExpression> _10959___mcc_h10225 = _source416.dtor_args;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source487 = _10604_name;
                if (_source487.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10960___mcc_h10612 = _source487.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10961___mcc_h10613 = _source487.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10962___mcc_h10614 = _source487.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10963___mcc_h10615 = _source487.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source488 = _10961___mcc_h10613;
                  if (_source488.is_None) {
                  } else {
                    DAST._IType _10964___mcc_h10620 = _source488.dtor_value;
                    DAST._IType _10965_tpe = _10964___mcc_h10620;
                    RAST._IType _10966_typ;
                    RAST._IType _out2223;
                    _out2223 = (this).GenType(_10965_tpe, DCOMP.GenTypeContext.@default());
                    _10966_typ = _out2223;
                    if ((_10966_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source487.is_MapBuilderAdd) {
                } else if (_source487.is_MapBuilderBuild) {
                } else if (_source487.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_TypeTest) {
            DAST._IExpression _10967___mcc_h10228 = _source416.dtor_on;
            Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _10968___mcc_h10229 = _source416.dtor_dType;
            Dafny.ISequence<Dafny.Rune> _10969___mcc_h10230 = _source416.dtor_variant;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source489 = _10604_name;
                if (_source489.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10970___mcc_h10622 = _source489.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10971___mcc_h10623 = _source489.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10972___mcc_h10624 = _source489.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10973___mcc_h10625 = _source489.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source490 = _10971___mcc_h10623;
                  if (_source490.is_None) {
                  } else {
                    DAST._IType _10974___mcc_h10630 = _source490.dtor_value;
                    DAST._IType _10975_tpe = _10974___mcc_h10630;
                    RAST._IType _10976_typ;
                    RAST._IType _out2224;
                    _out2224 = (this).GenType(_10975_tpe, DCOMP.GenTypeContext.@default());
                    _10976_typ = _out2224;
                    if ((_10976_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source489.is_MapBuilderAdd) {
                } else if (_source489.is_MapBuilderBuild) {
                } else if (_source489.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_InitializationValue) {
            DAST._IType _10977___mcc_h10234 = _source416.dtor_typ;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source491 = _10604_name;
                if (_source491.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10978___mcc_h10632 = _source491.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10979___mcc_h10633 = _source491.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10980___mcc_h10634 = _source491.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10981___mcc_h10635 = _source491.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source492 = _10979___mcc_h10633;
                  if (_source492.is_None) {
                  } else {
                    DAST._IType _10982___mcc_h10640 = _source492.dtor_value;
                    DAST._IType _10983_tpe = _10982___mcc_h10640;
                    RAST._IType _10984_typ;
                    RAST._IType _out2225;
                    _out2225 = (this).GenType(_10983_tpe, DCOMP.GenTypeContext.@default());
                    _10984_typ = _out2225;
                    if ((_10984_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source491.is_MapBuilderAdd) {
                } else if (_source491.is_MapBuilderBuild) {
                } else if (_source491.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_BoolBoundedPool) {
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source493 = _10604_name;
                if (_source493.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10985___mcc_h10642 = _source493.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10986___mcc_h10643 = _source493.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10987___mcc_h10644 = _source493.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10988___mcc_h10645 = _source493.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source494 = _10986___mcc_h10643;
                  if (_source494.is_None) {
                  } else {
                    DAST._IType _10989___mcc_h10650 = _source494.dtor_value;
                    DAST._IType _10990_tpe = _10989___mcc_h10650;
                    RAST._IType _10991_typ;
                    RAST._IType _out2226;
                    _out2226 = (this).GenType(_10990_tpe, DCOMP.GenTypeContext.@default());
                    _10991_typ = _out2226;
                    if ((_10991_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source493.is_MapBuilderAdd) {
                } else if (_source493.is_MapBuilderBuild) {
                } else if (_source493.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SetBoundedPool) {
            DAST._IExpression _10992___mcc_h10236 = _source416.dtor_of;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source495 = _10604_name;
                if (_source495.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _10993___mcc_h10652 = _source495.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _10994___mcc_h10653 = _source495.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _10995___mcc_h10654 = _source495.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _10996___mcc_h10655 = _source495.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source496 = _10994___mcc_h10653;
                  if (_source496.is_None) {
                  } else {
                    DAST._IType _10997___mcc_h10660 = _source496.dtor_value;
                    DAST._IType _10998_tpe = _10997___mcc_h10660;
                    RAST._IType _10999_typ;
                    RAST._IType _out2227;
                    _out2227 = (this).GenType(_10998_tpe, DCOMP.GenTypeContext.@default());
                    _10999_typ = _out2227;
                    if ((_10999_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source495.is_MapBuilderAdd) {
                } else if (_source495.is_MapBuilderBuild) {
                } else if (_source495.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_MapBoundedPool) {
            DAST._IExpression _11000___mcc_h10238 = _source416.dtor_of;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source497 = _10604_name;
                if (_source497.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _11001___mcc_h10662 = _source497.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _11002___mcc_h10663 = _source497.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _11003___mcc_h10664 = _source497.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _11004___mcc_h10665 = _source497.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source498 = _11002___mcc_h10663;
                  if (_source498.is_None) {
                  } else {
                    DAST._IType _11005___mcc_h10670 = _source498.dtor_value;
                    DAST._IType _11006_tpe = _11005___mcc_h10670;
                    RAST._IType _11007_typ;
                    RAST._IType _out2228;
                    _out2228 = (this).GenType(_11006_tpe, DCOMP.GenTypeContext.@default());
                    _11007_typ = _out2228;
                    if ((_11007_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source497.is_MapBuilderAdd) {
                } else if (_source497.is_MapBuilderBuild) {
                } else if (_source497.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_SeqBoundedPool) {
            DAST._IExpression _11008___mcc_h10240 = _source416.dtor_of;
            bool _11009___mcc_h10241 = _source416.dtor_includeDuplicates;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source499 = _10604_name;
                if (_source499.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _11010___mcc_h10672 = _source499.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _11011___mcc_h10673 = _source499.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _11012___mcc_h10674 = _source499.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _11013___mcc_h10675 = _source499.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source500 = _11011___mcc_h10673;
                  if (_source500.is_None) {
                  } else {
                    DAST._IType _11014___mcc_h10680 = _source500.dtor_value;
                    DAST._IType _11015_tpe = _11014___mcc_h10680;
                    RAST._IType _11016_typ;
                    RAST._IType _out2229;
                    _out2229 = (this).GenType(_11015_tpe, DCOMP.GenTypeContext.@default());
                    _11016_typ = _out2229;
                    if ((_11016_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source499.is_MapBuilderAdd) {
                } else if (_source499.is_MapBuilderBuild) {
                } else if (_source499.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_IntRange) {
            DAST._IExpression _11017___mcc_h10244 = _source416.dtor_lo;
            DAST._IExpression _11018___mcc_h10245 = _source416.dtor_hi;
            bool _11019___mcc_h10246 = _source416.dtor_up;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source501 = _10604_name;
                if (_source501.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _11020___mcc_h10682 = _source501.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _11021___mcc_h10683 = _source501.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _11022___mcc_h10684 = _source501.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _11023___mcc_h10685 = _source501.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source502 = _11021___mcc_h10683;
                  if (_source502.is_None) {
                  } else {
                    DAST._IType _11024___mcc_h10690 = _source502.dtor_value;
                    DAST._IType _11025_tpe = _11024___mcc_h10690;
                    RAST._IType _11026_typ;
                    RAST._IType _out2230;
                    _out2230 = (this).GenType(_11025_tpe, DCOMP.GenTypeContext.@default());
                    _11026_typ = _out2230;
                    if ((_11026_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source501.is_MapBuilderAdd) {
                } else if (_source501.is_MapBuilderBuild) {
                } else if (_source501.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else if (_source416.is_UnboundedIntRange) {
            DAST._IExpression _11027___mcc_h10250 = _source416.dtor_start;
            bool _11028___mcc_h10251 = _source416.dtor_up;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source503 = _10604_name;
                if (_source503.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _11029___mcc_h10692 = _source503.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _11030___mcc_h10693 = _source503.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _11031___mcc_h10694 = _source503.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _11032___mcc_h10695 = _source503.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source504 = _11030___mcc_h10693;
                  if (_source504.is_None) {
                  } else {
                    DAST._IType _11033___mcc_h10700 = _source504.dtor_value;
                    DAST._IType _11034_tpe = _11033___mcc_h10700;
                    RAST._IType _11035_typ;
                    RAST._IType _out2231;
                    _out2231 = (this).GenType(_11034_tpe, DCOMP.GenTypeContext.@default());
                    _11035_typ = _out2231;
                    if ((_11035_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source503.is_MapBuilderAdd) {
                } else if (_source503.is_MapBuilderBuild) {
                } else if (_source503.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          } else {
            DAST._IType _11036___mcc_h10254 = _source416.dtor_elemType;
            DAST._IExpression _11037___mcc_h10255 = _source416.dtor_collection;
            bool _11038___mcc_h10256 = _source416.dtor_is__forall;
            DAST._IExpression _11039___mcc_h10257 = _source416.dtor_lambda;
            {
              if (!object.Equals(_10606_onExpr, RAST.__default.self)) {
                DAST._ICallName _source505 = _10604_name;
                if (_source505.is_CallName) {
                  Dafny.ISequence<Dafny.Rune> _11040___mcc_h10702 = _source505.dtor_name;
                  Std.Wrappers._IOption<DAST._IType> _11041___mcc_h10703 = _source505.dtor_onType;
                  Std.Wrappers._IOption<DAST._IFormal> _11042___mcc_h10704 = _source505.dtor_receiverArgs;
                  Dafny.ISequence<DAST._IFormal> _11043___mcc_h10705 = _source505.dtor_signature;
                  Std.Wrappers._IOption<DAST._IType> _source506 = _11041___mcc_h10703;
                  if (_source506.is_None) {
                  } else {
                    DAST._IType _11044___mcc_h10710 = _source506.dtor_value;
                    DAST._IType _11045_tpe = _11044___mcc_h10710;
                    RAST._IType _11046_typ;
                    RAST._IType _out2232;
                    _out2232 = (this).GenType(_11045_tpe, DCOMP.GenTypeContext.@default());
                    _11046_typ = _out2232;
                    if ((_11046_typ).IsObjectOrPointer()) {
                      _10606_onExpr = ((this).read__macro).Apply1(_10606_onExpr);
                    }
                  }
                } else if (_source505.is_MapBuilderAdd) {
                } else if (_source505.is_MapBuilderBuild) {
                } else if (_source505.is_SetBuilderAdd) {
                } else {
                }
              }
              _10606_onExpr = (_10606_onExpr).Sel(_10619_renderedName);
            }
          }
          r = _10606_onExpr;
          if ((new BigInteger((_10609_typeExprs).Count)).Sign == 1) {
            r = (r).ApplyType(_10609_typeExprs);
          }
          r = (r).Apply(_10612_argExprs);
          RAST._IExpr _out2233;
          DCOMP._IOwnership _out2234;
          (this).FromOwned(r, expectedOwnership, out _out2233, out _out2234);
          r = _out2233;
          resultingOwnership = _out2234;
          return ;
        }
      } else if (_source319.is_Lambda) {
        Dafny.ISequence<DAST._IFormal> _11047___mcc_h292 = _source319.dtor_params;
        DAST._IType _11048___mcc_h293 = _source319.dtor_retType;
        Dafny.ISequence<DAST._IStatement> _11049___mcc_h294 = _source319.dtor_body;
        Dafny.ISequence<DAST._IStatement> _11050_body = _11049___mcc_h294;
        DAST._IType _11051_retType = _11048___mcc_h293;
        Dafny.ISequence<DAST._IFormal> _11052_paramsDafny = _11047___mcc_h292;
        {
          Dafny.ISequence<RAST._IFormal> _11053_params;
          Dafny.ISequence<RAST._IFormal> _out2235;
          _out2235 = (this).GenParams(_11052_paramsDafny);
          _11053_params = _out2235;
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11054_paramNames;
          _11054_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _11055_paramTypesMap;
          _11055_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          BigInteger _hi44 = new BigInteger((_11053_params).Count);
          for (BigInteger _11056_i = BigInteger.Zero; _11056_i < _hi44; _11056_i++) {
            Dafny.ISequence<Dafny.Rune> _11057_name;
            _11057_name = ((_11053_params).Select(_11056_i)).dtor_name;
            _11054_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_11054_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_11057_name));
            _11055_paramTypesMap = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_11055_paramTypesMap, _11057_name, ((_11053_params).Select(_11056_i)).dtor_tpe);
          }
          DCOMP._IEnvironment _11058_subEnv;
          _11058_subEnv = (env).merge(DCOMP.Environment.create(_11054_paramNames, _11055_paramTypesMap));
          RAST._IExpr _11059_recursiveGen;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11060_recIdents;
          DCOMP._IEnvironment _11061___v186;
          RAST._IExpr _out2236;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2237;
          DCOMP._IEnvironment _out2238;
          (this).GenStmts(_11050_body, ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) ? (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"))) : (Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())), _11058_subEnv, true, RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("")), out _out2236, out _out2237, out _out2238);
          _11059_recursiveGen = _out2236;
          _11060_recIdents = _out2237;
          _11061___v186 = _out2238;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          _11060_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_11060_recIdents, Dafny.Helpers.Id<Func<Dafny.ISequence<Dafny.ISequence<Dafny.Rune>>, Dafny.ISet<Dafny.ISequence<Dafny.Rune>>>>((_11062_paramNames) => ((System.Func<Dafny.ISet<Dafny.ISequence<Dafny.Rune>>>)(() => {
            var _coll6 = new System.Collections.Generic.List<Dafny.ISequence<Dafny.Rune>>();
            foreach (Dafny.ISequence<Dafny.Rune> _compr_6 in (_11062_paramNames).CloneAsArray()) {
              Dafny.ISequence<Dafny.Rune> _11063_name = (Dafny.ISequence<Dafny.Rune>)_compr_6;
              if ((_11062_paramNames).Contains(_11063_name)) {
                _coll6.Add(_11063_name);
              }
            }
            return Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromCollection(_coll6);
          }))())(_11054_paramNames));
          RAST._IExpr _11064_allReadCloned;
          _11064_allReadCloned = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          while (!(_11060_recIdents).Equals(Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements())) {
            Dafny.ISequence<Dafny.Rune> _11065_next;
            foreach (Dafny.ISequence<Dafny.Rune> _assign_such_that_3 in (_11060_recIdents).Elements) {
              _11065_next = (Dafny.ISequence<Dafny.Rune>)_assign_such_that_3;
              if ((_11060_recIdents).Contains(_11065_next)) {
                goto after__ASSIGN_SUCH_THAT_3;
              }
            }
            throw new System.Exception("assign-such-that search produced no value (line 4257)");
          after__ASSIGN_SUCH_THAT_3: ;
            if ((!object.Equals(selfIdent, Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None())) && ((_11065_next).Equals(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this")))) {
              RAST._IExpr _11066_selfCloned;
              DCOMP._IOwnership _11067___v187;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11068___v188;
              RAST._IExpr _out2239;
              DCOMP._IOwnership _out2240;
              Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2241;
              (this).GenIdent(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("self"), Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_None(), DCOMP.Environment.Empty(), DCOMP.Ownership.create_OwnershipOwned(), out _out2239, out _out2240, out _out2241);
              _11066_selfCloned = _out2239;
              _11067___v187 = _out2240;
              _11068___v188 = _out2241;
              _11064_allReadCloned = (_11064_allReadCloned).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_this"), Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_11066_selfCloned)));
            } else if (!((_11054_paramNames).Contains(_11065_next))) {
              RAST._IExpr _11069_copy;
              _11069_copy = (RAST.Expr.create_Identifier(_11065_next)).Clone();
              _11064_allReadCloned = (_11064_allReadCloned).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_MUT(), _11065_next, Std.Wrappers.Option<RAST._IType>.create_None(), Std.Wrappers.Option<RAST._IExpr>.create_Some(_11069_copy)));
              readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11065_next));
            }
            _11060_recIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_11060_recIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11065_next));
          }
          RAST._IType _11070_retTypeGen;
          RAST._IType _out2242;
          _out2242 = (this).GenType(_11051_retType, DCOMP.GenTypeContext.InFn());
          _11070_retTypeGen = _out2242;
          r = RAST.Expr.create_Block((_11064_allReadCloned).Then(RAST.__default.RcNew(RAST.Expr.create_Lambda(_11053_params, Std.Wrappers.Option<RAST._IType>.create_Some(_11070_retTypeGen), RAST.Expr.create_Block(_11059_recursiveGen)))));
          RAST._IExpr _out2243;
          DCOMP._IOwnership _out2244;
          (this).FromOwned(r, expectedOwnership, out _out2243, out _out2244);
          r = _out2243;
          resultingOwnership = _out2244;
          return ;
        }
      } else if (_source319.is_BetaRedex) {
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _11071___mcc_h295 = _source319.dtor_values;
        DAST._IType _11072___mcc_h296 = _source319.dtor_retType;
        DAST._IExpression _11073___mcc_h297 = _source319.dtor_expr;
        DAST._IExpression _11074_expr = _11073___mcc_h297;
        DAST._IType _11075_retType = _11072___mcc_h296;
        Dafny.ISequence<_System._ITuple2<DAST._IFormal, DAST._IExpression>> _11076_values = _11071___mcc_h295;
        {
          Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11077_paramNames;
          _11077_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements();
          Dafny.ISequence<RAST._IFormal> _11078_paramFormals;
          Dafny.ISequence<RAST._IFormal> _out2245;
          _out2245 = (this).GenParams(Std.Collections.Seq.__default.Map<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>(((System.Func<_System._ITuple2<DAST._IFormal, DAST._IExpression>, DAST._IFormal>)((_11079_value) => {
            return (_11079_value).dtor__0;
          })), _11076_values));
          _11078_paramFormals = _out2245;
          Dafny.IMap<Dafny.ISequence<Dafny.Rune>,RAST._IType> _11080_paramTypes;
          _11080_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.FromElements();
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11081_paramNamesSet;
          _11081_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          BigInteger _hi45 = new BigInteger((_11076_values).Count);
          for (BigInteger _11082_i = BigInteger.Zero; _11082_i < _hi45; _11082_i++) {
            Dafny.ISequence<Dafny.Rune> _11083_name;
            _11083_name = (((_11076_values).Select(_11082_i)).dtor__0).dtor_name;
            Dafny.ISequence<Dafny.Rune> _11084_rName;
            _11084_rName = DCOMP.__default.escapeName(_11083_name);
            _11077_paramNames = Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.Concat(_11077_paramNames, Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements(_11084_rName));
            _11080_paramTypes = Dafny.Map<Dafny.ISequence<Dafny.Rune>, RAST._IType>.Update(_11080_paramTypes, _11084_rName, ((_11078_paramFormals).Select(_11082_i)).dtor_tpe);
            _11081_paramNamesSet = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11081_paramNamesSet, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(_11084_rName));
          }
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
          BigInteger _hi46 = new BigInteger((_11076_values).Count);
          for (BigInteger _11085_i = BigInteger.Zero; _11085_i < _hi46; _11085_i++) {
            RAST._IType _11086_typeGen;
            RAST._IType _out2246;
            _out2246 = (this).GenType((((_11076_values).Select(_11085_i)).dtor__0).dtor_typ, DCOMP.GenTypeContext.InFn());
            _11086_typeGen = _out2246;
            RAST._IExpr _11087_valueGen;
            DCOMP._IOwnership _11088___v189;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11089_recIdents;
            RAST._IExpr _out2247;
            DCOMP._IOwnership _out2248;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2249;
            (this).GenExpr(((_11076_values).Select(_11085_i)).dtor__1, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2247, out _out2248, out _out2249);
            _11087_valueGen = _out2247;
            _11088___v189 = _out2248;
            _11089_recIdents = _out2249;
            r = (r).Then(RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), DCOMP.__default.escapeName((((_11076_values).Select(_11085_i)).dtor__0).dtor_name), Std.Wrappers.Option<RAST._IType>.create_Some(_11086_typeGen), Std.Wrappers.Option<RAST._IExpr>.create_Some(_11087_valueGen)));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11089_recIdents);
          }
          DCOMP._IEnvironment _11090_newEnv;
          _11090_newEnv = DCOMP.Environment.create(_11077_paramNames, _11080_paramTypes);
          RAST._IExpr _11091_recGen;
          DCOMP._IOwnership _11092_recOwned;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11093_recIdents;
          RAST._IExpr _out2250;
          DCOMP._IOwnership _out2251;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2252;
          (this).GenExpr(_11074_expr, selfIdent, _11090_newEnv, expectedOwnership, out _out2250, out _out2251, out _out2252);
          _11091_recGen = _out2250;
          _11092_recOwned = _out2251;
          _11093_recIdents = _out2252;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_11093_recIdents, _11081_paramNamesSet);
          r = RAST.Expr.create_Block((r).Then(_11091_recGen));
          RAST._IExpr _out2253;
          DCOMP._IOwnership _out2254;
          (this).FromOwnership(r, _11092_recOwned, expectedOwnership, out _out2253, out _out2254);
          r = _out2253;
          resultingOwnership = _out2254;
          return ;
        }
      } else if (_source319.is_IIFE) {
        Dafny.ISequence<Dafny.Rune> _11094___mcc_h298 = _source319.dtor_name;
        DAST._IType _11095___mcc_h299 = _source319.dtor_typ;
        DAST._IExpression _11096___mcc_h300 = _source319.dtor_value;
        DAST._IExpression _11097___mcc_h301 = _source319.dtor_iifeBody;
        DAST._IExpression _11098_iifeBody = _11097___mcc_h301;
        DAST._IExpression _11099_value = _11096___mcc_h300;
        DAST._IType _11100_tpe = _11095___mcc_h299;
        Dafny.ISequence<Dafny.Rune> _11101_name = _11094___mcc_h298;
        {
          RAST._IExpr _11102_valueGen;
          DCOMP._IOwnership _11103___v190;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11104_recIdents;
          RAST._IExpr _out2255;
          DCOMP._IOwnership _out2256;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2257;
          (this).GenExpr(_11099_value, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2255, out _out2256, out _out2257);
          _11102_valueGen = _out2255;
          _11103___v190 = _out2256;
          _11104_recIdents = _out2257;
          readIdents = _11104_recIdents;
          RAST._IType _11105_valueTypeGen;
          RAST._IType _out2258;
          _out2258 = (this).GenType(_11100_tpe, DCOMP.GenTypeContext.InFn());
          _11105_valueTypeGen = _out2258;
          RAST._IExpr _11106_bodyGen;
          DCOMP._IOwnership _11107___v191;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11108_bodyIdents;
          RAST._IExpr _out2259;
          DCOMP._IOwnership _out2260;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2261;
          (this).GenExpr(_11098_iifeBody, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2259, out _out2260, out _out2261);
          _11106_bodyGen = _out2259;
          _11107___v191 = _out2260;
          _11108_bodyIdents = _out2261;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Difference(_11108_bodyIdents, Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements(DCOMP.__default.escapeName((_11101_name)))));
          r = RAST.Expr.create_Block((RAST.Expr.create_DeclareVar(RAST.DeclareType.create_CONST(), DCOMP.__default.escapeName((_11101_name)), Std.Wrappers.Option<RAST._IType>.create_Some(_11105_valueTypeGen), Std.Wrappers.Option<RAST._IExpr>.create_Some(_11102_valueGen))).Then(_11106_bodyGen));
          RAST._IExpr _out2262;
          DCOMP._IOwnership _out2263;
          (this).FromOwned(r, expectedOwnership, out _out2262, out _out2263);
          r = _out2262;
          resultingOwnership = _out2263;
          return ;
        }
      } else if (_source319.is_Apply) {
        DAST._IExpression _11109___mcc_h302 = _source319.dtor_expr;
        Dafny.ISequence<DAST._IExpression> _11110___mcc_h303 = _source319.dtor_args;
        Dafny.ISequence<DAST._IExpression> _11111_args = _11110___mcc_h303;
        DAST._IExpression _11112_func = _11109___mcc_h302;
        {
          RAST._IExpr _11113_funcExpr;
          DCOMP._IOwnership _11114___v192;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11115_recIdents;
          RAST._IExpr _out2264;
          DCOMP._IOwnership _out2265;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2266;
          (this).GenExpr(_11112_func, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2264, out _out2265, out _out2266);
          _11113_funcExpr = _out2264;
          _11114___v192 = _out2265;
          _11115_recIdents = _out2266;
          readIdents = _11115_recIdents;
          Dafny.ISequence<RAST._IExpr> _11116_rArgs;
          _11116_rArgs = Dafny.Sequence<RAST._IExpr>.FromElements();
          BigInteger _hi47 = new BigInteger((_11111_args).Count);
          for (BigInteger _11117_i = BigInteger.Zero; _11117_i < _hi47; _11117_i++) {
            RAST._IExpr _11118_argExpr;
            DCOMP._IOwnership _11119_argOwned;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11120_argIdents;
            RAST._IExpr _out2267;
            DCOMP._IOwnership _out2268;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2269;
            (this).GenExpr((_11111_args).Select(_11117_i), selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2267, out _out2268, out _out2269);
            _11118_argExpr = _out2267;
            _11119_argOwned = _out2268;
            _11120_argIdents = _out2269;
            _11116_rArgs = Dafny.Sequence<RAST._IExpr>.Concat(_11116_rArgs, Dafny.Sequence<RAST._IExpr>.FromElements(_11118_argExpr));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(readIdents, _11120_argIdents);
          }
          r = (_11113_funcExpr).Apply(_11116_rArgs);
          RAST._IExpr _out2270;
          DCOMP._IOwnership _out2271;
          (this).FromOwned(r, expectedOwnership, out _out2270, out _out2271);
          r = _out2270;
          resultingOwnership = _out2271;
          return ;
        }
      } else if (_source319.is_TypeTest) {
        DAST._IExpression _11121___mcc_h304 = _source319.dtor_on;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11122___mcc_h305 = _source319.dtor_dType;
        Dafny.ISequence<Dafny.Rune> _11123___mcc_h306 = _source319.dtor_variant;
        Dafny.ISequence<Dafny.Rune> _11124_variant = _11123___mcc_h306;
        Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> _11125_dType = _11122___mcc_h305;
        DAST._IExpression _11126_on = _11121___mcc_h304;
        {
          RAST._IExpr _11127_exprGen;
          DCOMP._IOwnership _11128___v193;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11129_recIdents;
          RAST._IExpr _out2272;
          DCOMP._IOwnership _out2273;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2274;
          (this).GenExpr(_11126_on, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2272, out _out2273, out _out2274);
          _11127_exprGen = _out2272;
          _11128___v193 = _out2273;
          _11129_recIdents = _out2274;
          RAST._IType _11130_dTypePath;
          RAST._IType _out2275;
          _out2275 = DCOMP.COMP.GenPath(_11125_dType);
          _11130_dTypePath = _out2275;
          r = (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("matches!"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(((_11127_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()), RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(((_11130_dTypePath).MSel(DCOMP.__default.escapeName(_11124_variant)))._ToString(DCOMP.__default.IND), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("{ .. }")))));
          RAST._IExpr _out2276;
          DCOMP._IOwnership _out2277;
          (this).FromOwned(r, expectedOwnership, out _out2276, out _out2277);
          r = _out2276;
          resultingOwnership = _out2277;
          readIdents = _11129_recIdents;
          return ;
        }
      } else if (_source319.is_InitializationValue) {
        DAST._IType _11131___mcc_h307 = _source319.dtor_typ;
        DAST._IType _11132_typ = _11131___mcc_h307;
        {
          RAST._IType _11133_typExpr;
          RAST._IType _out2278;
          _out2278 = (this).GenType(_11132_typ, DCOMP.GenTypeContext.@default());
          _11133_typExpr = _out2278;
          if ((_11133_typExpr).IsObjectOrPointer()) {
            r = (_11133_typExpr).ToNullExpr();
          } else {
            r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<"), (_11133_typExpr)._ToString(DCOMP.__default.IND)), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(" as std::default::Default>::default()")));
          }
          RAST._IExpr _out2279;
          DCOMP._IOwnership _out2280;
          (this).FromOwned(r, expectedOwnership, out _out2279, out _out2280);
          r = _out2279;
          resultingOwnership = _out2280;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source319.is_BoolBoundedPool) {
        {
          r = RAST.Expr.create_RawExpr(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("[false, true]"));
          RAST._IExpr _out2281;
          DCOMP._IOwnership _out2282;
          (this).FromOwned(r, expectedOwnership, out _out2281, out _out2282);
          r = _out2281;
          resultingOwnership = _out2282;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          return ;
        }
      } else if (_source319.is_SetBoundedPool) {
        DAST._IExpression _11134___mcc_h308 = _source319.dtor_of;
        DAST._IExpression _11135_of = _11134___mcc_h308;
        {
          RAST._IExpr _11136_exprGen;
          DCOMP._IOwnership _11137___v194;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11138_recIdents;
          RAST._IExpr _out2283;
          DCOMP._IOwnership _out2284;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2285;
          (this).GenExpr(_11135_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2283, out _out2284, out _out2285);
          _11136_exprGen = _out2283;
          _11137___v194 = _out2284;
          _11138_recIdents = _out2285;
          r = ((_11136_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("iter"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          RAST._IExpr _out2286;
          DCOMP._IOwnership _out2287;
          (this).FromOwned(r, expectedOwnership, out _out2286, out _out2287);
          r = _out2286;
          resultingOwnership = _out2287;
          readIdents = _11138_recIdents;
          return ;
        }
      } else if (_source319.is_MapBoundedPool) {
        DAST._IExpression _11139___mcc_h309 = _source319.dtor_of;
        DAST._IExpression _11140_of = _11139___mcc_h309;
        {
          RAST._IExpr _11141_exprGen;
          DCOMP._IOwnership _11142___v196;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11143_recIdents;
          RAST._IExpr _out2288;
          DCOMP._IOwnership _out2289;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2290;
          (this).GenExpr(_11140_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2288, out _out2289, out _out2290);
          _11141_exprGen = _out2288;
          _11142___v196 = _out2289;
          _11143_recIdents = _out2290;
          r = ((((_11141_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("keys"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements())).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("iter"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          readIdents = _11143_recIdents;
          RAST._IExpr _out2291;
          DCOMP._IOwnership _out2292;
          (this).FromOwned(r, expectedOwnership, out _out2291, out _out2292);
          r = _out2291;
          resultingOwnership = _out2292;
        }
      } else if (_source319.is_SeqBoundedPool) {
        DAST._IExpression _11144___mcc_h310 = _source319.dtor_of;
        bool _11145___mcc_h311 = _source319.dtor_includeDuplicates;
        bool _11146_includeDuplicates = _11145___mcc_h311;
        DAST._IExpression _11147_of = _11144___mcc_h310;
        {
          RAST._IExpr _11148_exprGen;
          DCOMP._IOwnership _11149___v195;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11150_recIdents;
          RAST._IExpr _out2293;
          DCOMP._IOwnership _out2294;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2295;
          (this).GenExpr(_11147_of, selfIdent, env, DCOMP.Ownership.create_OwnershipBorrowed(), out _out2293, out _out2294, out _out2295);
          _11148_exprGen = _out2293;
          _11149___v195 = _out2294;
          _11150_recIdents = _out2295;
          r = ((_11148_exprGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("iter"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements());
          if (!(_11146_includeDuplicates)) {
            r = ((((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("itertools"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Itertools"))).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("unique"))).Apply1(r);
          }
          RAST._IExpr _out2296;
          DCOMP._IOwnership _out2297;
          (this).FromOwned(r, expectedOwnership, out _out2296, out _out2297);
          r = _out2296;
          resultingOwnership = _out2297;
          readIdents = _11150_recIdents;
          return ;
        }
      } else if (_source319.is_IntRange) {
        DAST._IExpression _11151___mcc_h312 = _source319.dtor_lo;
        DAST._IExpression _11152___mcc_h313 = _source319.dtor_hi;
        bool _11153___mcc_h314 = _source319.dtor_up;
        bool _11154_up = _11153___mcc_h314;
        DAST._IExpression _11155_hi = _11152___mcc_h313;
        DAST._IExpression _11156_lo = _11151___mcc_h312;
        {
          RAST._IExpr _11157_lo;
          DCOMP._IOwnership _11158___v197;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11159_recIdentsLo;
          RAST._IExpr _out2298;
          DCOMP._IOwnership _out2299;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2300;
          (this).GenExpr(_11156_lo, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2298, out _out2299, out _out2300);
          _11157_lo = _out2298;
          _11158___v197 = _out2299;
          _11159_recIdentsLo = _out2300;
          RAST._IExpr _11160_hi;
          DCOMP._IOwnership _11161___v198;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11162_recIdentsHi;
          RAST._IExpr _out2301;
          DCOMP._IOwnership _out2302;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2303;
          (this).GenExpr(_11155_hi, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2301, out _out2302, out _out2303);
          _11160_hi = _out2301;
          _11161___v198 = _out2302;
          _11162_recIdentsHi = _out2303;
          if (_11154_up) {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11157_lo, _11160_hi));
          } else {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_down"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements(_11160_hi, _11157_lo));
          }
          RAST._IExpr _out2304;
          DCOMP._IOwnership _out2305;
          (this).FromOwned(r, expectedOwnership, out _out2304, out _out2305);
          r = _out2304;
          resultingOwnership = _out2305;
          readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11159_recIdentsLo, _11162_recIdentsHi);
          return ;
        }
      } else if (_source319.is_UnboundedIntRange) {
        DAST._IExpression _11163___mcc_h315 = _source319.dtor_start;
        bool _11164___mcc_h316 = _source319.dtor_up;
        bool _11165_up = _11164___mcc_h316;
        DAST._IExpression _11166_start = _11163___mcc_h315;
        {
          RAST._IExpr _11167_start;
          DCOMP._IOwnership _11168___v199;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11169_recIdentStart;
          RAST._IExpr _out2306;
          DCOMP._IOwnership _out2307;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2308;
          (this).GenExpr(_11166_start, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2306, out _out2307, out _out2308);
          _11167_start = _out2306;
          _11168___v199 = _out2307;
          _11169_recIdentStart = _out2308;
          if (_11165_up) {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_unbounded"))).Apply1(_11167_start);
          } else {
            r = ((RAST.__default.dafny__runtime).MSel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("integer_range_down_unbounded"))).Apply1(_11167_start);
          }
          RAST._IExpr _out2309;
          DCOMP._IOwnership _out2310;
          (this).FromOwned(r, expectedOwnership, out _out2309, out _out2310);
          r = _out2309;
          resultingOwnership = _out2310;
          readIdents = _11169_recIdentStart;
          return ;
        }
      } else {
        DAST._IType _11170___mcc_h317 = _source319.dtor_elemType;
        DAST._IExpression _11171___mcc_h318 = _source319.dtor_collection;
        bool _11172___mcc_h319 = _source319.dtor_is__forall;
        DAST._IExpression _11173___mcc_h320 = _source319.dtor_lambda;
        DAST._IExpression _11174_lambda = _11173___mcc_h320;
        bool _11175_is__forall = _11172___mcc_h319;
        DAST._IExpression _11176_collection = _11171___mcc_h318;
        DAST._IType _11177_elemType = _11170___mcc_h317;
        {
          RAST._IType _11178_tpe;
          RAST._IType _out2311;
          _out2311 = (this).GenType(_11177_elemType, DCOMP.GenTypeContext.@default());
          _11178_tpe = _out2311;
          RAST._IExpr _11179_collectionGen;
          DCOMP._IOwnership _11180___v200;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11181_recIdents;
          RAST._IExpr _out2312;
          DCOMP._IOwnership _out2313;
          Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2314;
          (this).GenExpr(_11176_collection, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2312, out _out2313, out _out2314);
          _11179_collectionGen = _out2312;
          _11180___v200 = _out2313;
          _11181_recIdents = _out2314;
          Dafny.ISequence<DAST._IAttribute> _11182_extraAttributes;
          _11182_extraAttributes = Dafny.Sequence<DAST._IAttribute>.FromElements();
          if ((((_11176_collection).is_IntRange) || ((_11176_collection).is_UnboundedIntRange)) || ((_11176_collection).is_SeqBoundedPool)) {
            _11182_extraAttributes = Dafny.Sequence<DAST._IAttribute>.FromElements(DCOMP.__default.AttributeOwned);
          }
          if ((_11174_lambda).is_Lambda) {
            Dafny.ISequence<DAST._IFormal> _11183_formals;
            _11183_formals = (_11174_lambda).dtor_params;
            Dafny.ISequence<DAST._IFormal> _11184_newFormals;
            _11184_newFormals = Dafny.Sequence<DAST._IFormal>.FromElements();
            BigInteger _hi48 = new BigInteger((_11183_formals).Count);
            for (BigInteger _11185_i = BigInteger.Zero; _11185_i < _hi48; _11185_i++) {
              var _pat_let_tv28 = _11182_extraAttributes;
              var _pat_let_tv29 = _11183_formals;
              _11184_newFormals = Dafny.Sequence<DAST._IFormal>.Concat(_11184_newFormals, Dafny.Sequence<DAST._IFormal>.FromElements(Dafny.Helpers.Let<DAST._IFormal, DAST._IFormal>((_11183_formals).Select(_11185_i), _pat_let35_0 => Dafny.Helpers.Let<DAST._IFormal, DAST._IFormal>(_pat_let35_0, _11186_dt__update__tmp_h0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IAttribute>, DAST._IFormal>(Dafny.Sequence<DAST._IAttribute>.Concat(_pat_let_tv28, ((_pat_let_tv29).Select(_11185_i)).dtor_attributes), _pat_let36_0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IAttribute>, DAST._IFormal>(_pat_let36_0, _11187_dt__update_hattributes_h0 => DAST.Formal.create((_11186_dt__update__tmp_h0).dtor_name, (_11186_dt__update__tmp_h0).dtor_typ, _11187_dt__update_hattributes_h0)))))));
            }
            var _pat_let_tv30 = _11184_newFormals;
            DAST._IExpression _11188_newLambda;
            _11188_newLambda = Dafny.Helpers.Let<DAST._IExpression, DAST._IExpression>(_11174_lambda, _pat_let37_0 => Dafny.Helpers.Let<DAST._IExpression, DAST._IExpression>(_pat_let37_0, _11189_dt__update__tmp_h1 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IFormal>, DAST._IExpression>(_pat_let_tv30, _pat_let38_0 => Dafny.Helpers.Let<Dafny.ISequence<DAST._IFormal>, DAST._IExpression>(_pat_let38_0, _11190_dt__update_hparams_h0 => DAST.Expression.create_Lambda(_11190_dt__update_hparams_h0, (_11189_dt__update__tmp_h1).dtor_retType, (_11189_dt__update__tmp_h1).dtor_body)))));
            RAST._IExpr _11191_lambdaGen;
            DCOMP._IOwnership _11192___v201;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _11193_recLambdaIdents;
            RAST._IExpr _out2315;
            DCOMP._IOwnership _out2316;
            Dafny.ISet<Dafny.ISequence<Dafny.Rune>> _out2317;
            (this).GenExpr(_11188_newLambda, selfIdent, env, DCOMP.Ownership.create_OwnershipOwned(), out _out2315, out _out2316, out _out2317);
            _11191_lambdaGen = _out2315;
            _11192___v201 = _out2316;
            _11193_recLambdaIdents = _out2317;
            Dafny.ISequence<Dafny.Rune> _11194_fn;
            _11194_fn = ((_11175_is__forall) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("all")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("any")));
            r = ((_11179_collectionGen).Sel(_11194_fn)).Apply1(((_11191_lambdaGen).Sel(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("as_ref"))).Apply(Dafny.Sequence<RAST._IExpr>.FromElements()));
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.Union(_11181_recIdents, _11193_recLambdaIdents);
          } else {
            (this).error = Std.Wrappers.Option<Dafny.ISequence<Dafny.Rune>>.create_Some(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("Quantifier without an inline lambda"));
            r = RAST.Expr.create_RawExpr((this.error).dtor_value);
            readIdents = Dafny.Set<Dafny.ISequence<Dafny.Rune>>.FromElements();
          }
          RAST._IExpr _out2318;
          DCOMP._IOwnership _out2319;
          (this).FromOwned(r, expectedOwnership, out _out2318, out _out2319);
          r = _out2318;
          resultingOwnership = _out2319;
        }
      }
    }
    public Dafny.ISequence<Dafny.Rune> Compile(Dafny.ISequence<DAST._IModule> p)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(warnings, unconditional_panic)]\n");
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("#![allow(nonstandard_style)]\n"));
      BigInteger _11195_i;
      _11195_i = BigInteger.Zero;
      while ((_11195_i) < (new BigInteger((p).Count))) {
        Dafny.ISequence<Dafny.Rune> _11196_generated = Dafny.Sequence<Dafny.Rune>.Empty;
        RAST._IMod _11197_m;
        RAST._IMod _out2320;
        _out2320 = (this).GenModule((p).Select(_11195_i), Dafny.Sequence<Dafny.ISequence<Dafny.Rune>>.FromElements());
        _11197_m = _out2320;
        _11196_generated = (_11197_m)._ToString(Dafny.Sequence<Dafny.Rune>.UnicodeFromString(""));
        if ((_11195_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\n"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, _11196_generated);
        _11195_i = (_11195_i) + (BigInteger.One);
      }
      return s;
    }
    public static Dafny.ISequence<Dafny.Rune> EmitCallToMain(Dafny.ISequence<Dafny.ISequence<Dafny.Rune>> fullName)
    {
      Dafny.ISequence<Dafny.Rune> s = Dafny.Sequence<Dafny.Rune>.Empty;
      s = Dafny.Sequence<Dafny.Rune>.UnicodeFromString("\nfn main() {\n");
      BigInteger _11198_i;
      _11198_i = BigInteger.Zero;
      while ((_11198_i) < (new BigInteger((fullName).Count))) {
        if ((_11198_i).Sign == 1) {
          s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("::"));
        }
        s = Dafny.Sequence<Dafny.Rune>.Concat(s, DCOMP.__default.escapeName((fullName).Select(_11198_i)));
        _11198_i = (_11198_i) + (BigInteger.One);
      }
      s = Dafny.Sequence<Dafny.Rune>.Concat(s, Dafny.Sequence<Dafny.Rune>.UnicodeFromString("();\n}"));
      return s;
    }
    public bool _i_UnicodeChars {get; set;}
    public bool UnicodeChars { get {
      return this._i_UnicodeChars;
    } }
    public Dafny.ISequence<Dafny.Rune> DafnyChar { get {
      if ((this).UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyChar");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("DafnyCharUTF16");
      }
    } }
    public RAST._IType DafnyCharUnderlying { get {
      if ((this).UnicodeChars) {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("char"));
      } else {
        return RAST.__default.RawType(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("u16"));
      }
    } }
    public Dafny.ISequence<Dafny.Rune> string__of { get {
      if ((this).UnicodeChars) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_of");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("string_utf16_of");
      }
    } }
    public DCOMP._IObjectType _i_ObjectType {get; set;}
    public DCOMP._IObjectType ObjectType { get {
      return this._i_ObjectType;
    } }
    public Dafny.ISequence<Dafny.Rune> allocate { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("allocate_rcmut");
      }
    } }
    public Dafny.ISequence<Dafny.Rune> allocate__fn { get {
      return Dafny.Sequence<Dafny.Rune>.Concat(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("_"), (this).allocate);
    } }
    public Dafny.ISequence<Dafny.Rune> update__field__uninit__macro { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit!");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_uninit_rcmut!");
      }
    } }
    public RAST._IExpr thisInConstructor { get {
      if (((this).ObjectType).is_RawPointers) {
        return RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"));
      } else {
        return (RAST.Expr.create_Identifier(Dafny.Sequence<Dafny.Rune>.UnicodeFromString("this"))).Clone();
      }
    } }
    public Dafny.ISequence<Dafny.Rune> array__construct { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("construct");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("construct_rcmut");
      }
    } }
    public RAST._IExpr modify__macro { get {
      return (RAST.__default.dafny__runtime).MSel(((((this).ObjectType).is_RawPointers) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("modify!")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("md!"))));
    } }
    public RAST._IExpr read__macro { get {
      return (RAST.__default.dafny__runtime).MSel(((((this).ObjectType).is_RawPointers) ? (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("read!")) : (Dafny.Sequence<Dafny.Rune>.UnicodeFromString("rd!"))));
    } }
    public Dafny.ISequence<Dafny.Rune> placebos__usize { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("placebos_usize");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("placebos_usize_rcmut");
      }
    } }
    public Dafny.ISequence<Dafny.Rune> update__field__if__uninit__macro { get {
      if (((this).ObjectType).is_RawPointers) {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_if_uninit!");
      } else {
        return Dafny.Sequence<Dafny.Rune>.UnicodeFromString("update_field_if_uninit_rcmut!");
      }
    } }
    public static Dafny.IMap<DAST._IBinOp,Dafny.ISequence<Dafny.Rune>> OpTable { get {
      return Dafny.Map<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>.FromElements(new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Mod(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("%")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_And(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Or(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("||")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Div(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("/")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Lt(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_LtChar(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Plus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("+")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Minus(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("-")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_Times(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("*")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseAnd(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("&")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseOr(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("|")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseXor(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("^")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftRight(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString(">>")), new Dafny.Pair<DAST._IBinOp, Dafny.ISequence<Dafny.Rune>>(DAST.BinOp.create_BitwiseShiftLeft(), Dafny.Sequence<Dafny.Rune>.UnicodeFromString("<<")));
    } }
  }
} // end of namespace DCOMP